/*

*************************** Creadores - Créditos *******************************

                            GameWorld Stars - Roleplay
		Este gamemode no puede ser liberado por nadie.
            Cualquier publicación no autorizada debe ser eliminada.

		Principales de GameWorld Stars

        CoYoTe (Maxi_West)



|*************************** Creadores - Créditos *******************************
Agradecemos grandemente a CoYoTe y Dexter por su gran creación, Labarca por su
buen diseño. Dexter por sus includes útiles, Anthony, Sus grandes Mapeos Útiles
y Demas Zeex por su buen include ZCMD el cual es muy útil y simple de usar.
A los creadores de Rol Infinity, y Creadores de StarCity.
*************************** Creadores - Créditos *******************************
				HUMILDES GRACIAS A TODOS POR HACER ESTO POSIBLE
*/

#include <a_samp>
#include <core>
#include <float>
#include <time>
#include <file>
#include <morphinc>
#include <streamer>
#include <seif_walk>
#include <sscanf2>
#include <zcmd>
#include <ProgressBar>
#include "../include/gl_common.inc"
#include <dini>
#include <dudb>
// -=====================================- //
AntiDeAMX()
{
 new a[][] =
  {
   "Unarmed (Fist)",
   "Brass K"
  };
  #pragma unused a
}
// -=====================================- //
#define VERDE 0x33ff33ff
#define \
		cmd:(%1) \
				if(strcmtp(cmd, %1, true) == 0) {
#define \
		Params>	\
				if(!strlen(tmp))
#define \
		Connect \
				if(IsPlayerConnected(playerid)) {
#define \
		endif	\
					}
#define \
		no_autorized    \
		        		else Message(playerid, COLOR_GRAD1, "No estás autorizado para usar este comando.");
#define \
			Loop(%0,%1) \
						for(new %0; %0 != %1; %0++)
#define \
			function%0(%1) \
							forward %0(%1); public %0(%1)
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

/////toys
#define TOYS        		10131
//
//
#define DELETETOY       	10132
#define DIALOG_LICENSE_BUY  3213
#define WEARTOY         	10133
#define BUYTOYS         	10134
#define BUYTOYS2       		10135
#define BUYTOYS3        	10136
#define BUYTOYSGOLD     	10137
#define BUYTOYSGOLD2    	10138
#define BUYTOYSGOLD3    	10139
#define EDITTOYS        	10140
#define EDITTOYS2       	10141
#define EDITTOYSBONE    	10142
#define EDITTOYSPX      	10143
#define EDITTOYSPY      	10144
#define EDITTOYSPZ      	10145
#define EDITTOYSRX      	10146
#define EDITTOYSRY      	10147
#define EDITTOYSRZ      	10148
#define BUYTOYSCOP      	10149
#define BUYTOYSCOP2     	10150
#define BUYTOYSCOP3     	10151
#define EDITTOYSIZX     	10199
#define EDITTOYSIZY      	10200
#define EDITTOYSIZZ      	10201
//
#define C_NEON_DIAL_1 							8543
#define C_NEON_DIAL_2 							8544
#define C_NEON_DIAL_3 							8545
#define C_NEON_DIAL_4 							8546
///===Control de la GM===
#define VV  329//299
#define VEH 1330 //1424
#undef MAX_PLAYERS
#define MAX_PLAYERS 260
#undef MAX_VEHICLES
#define MAX_VEHICLES 4000
#define MAX_FACTION  29
#define MAX_NPCS 27
#define MAX_STRING 255
#define CHECKPOINT_NONE 0
///===Control de la GM===
// -= Negocios =- //
#define QUIT_EXTORTION  962
// -= Impuestos Casa =- //
#define HOUSE_IMPUESTOS 966
#define HOUSE_IMPUESTOS2 1389
//----------------
//MATRIMONIO//
#define MATRIMONIO_CONFIRM  9433
#define MATRIMONIO_CONFIRM2 9454
////
#define TOTAL_ITEMS         300
#define SELECTION_ITEMS 	21
#define ITEMS_PER_LINE  	7

#define HEADER_TEXT "Compra tu nueva Ropa"
#define NEXT_TEXT   "Siguiente"
#define PREV_TEXT   "Atras"

#define DIALOG_BASE_X   	75.0
#define DIALOG_BASE_Y   	130.0
#define DIALOG_WIDTH    	550.0
#define DIALOG_HEIGHT   	180.0
#define SPRITE_DIM_X    	60.0
#define SPRITE_DIM_Y    	70.0
// -========== COLORS ===========-
#define NEGATIVO    0xFF0000FF
#define POSITIVO    0x00FF00FF
#define CHATNEW 0x7DAEFFFF
#define COLOR_TITLE 	0xFCCA03FF
#define COLOR_TEORY     0xFFFF91FF
#define COLOR_QUESTION  0xFFB18CFF
#define COLOR_YES       0x00CC00FF
#define COLOR_NO        0xFF8080FF
#define COLOR_MAGENTA 0xFF00FFFF
#define COLOR_ASKQ 0xFF0000FF
#define COLOR_DUTY 0x00CA00FF
#define COLOR_NEGATIVE 0xFF6A6AFF
#define WANTED_COLOR 0xBF6000FF
#define COLOR_MEGAPHONE 0xFF9B6AFF
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x9EC73DAA
#define COLOR_GROVE 0x00FF00FF
#define COLOR_RED 0xAA3333AA
#define COLOR_RED2 0xFF6F6FFF
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xDABB3EAA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_ORANGE 0xFF7F00FF
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE 0xE6E6E6E6
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0x458E1DAA
#define COLOR_OOC 0x66FFFFFF
#define TEAM_CYAN 1
#define TEAM_BLUE 2
#define TEAM_GREEN 3
#define TEAM_ORANGE 4
#define TEAM_COR 5
#define TEAM_BAR 6
#define TEAM_TAT 7
#define TEAM_CUN 8
#define TEAM_STR 9
#define TEAM_HIT 10
#define TEAM_ADMIN 11
#define OBJECTIVE_COLOR 0x64000064
#define TEAM_GREEN_COLOR 0xFFFFFFAA
#define TEAM_JOB_COLOR 0xFFB6C1AA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define TEAM_RADIO_COLOR2 0xF2D068FF // Yellow
#define TEAM_RADIO_COLOR 0x9B9BFFFF // Blue
#define COLOR_ADD 0x63FF60AA
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define TEAM_BALLAS_COLOR 0xD900D3C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_CYAN_COLOR 0xFF8282AA
#define TEAM_ORANGE_COLOR 0xFF830000
#define TEAM_COR_COLOR 0x39393900
#define TEAM_BAR_COLOR 0x00D90000
#define TEAM_TAT_COLOR 0xBDCB9200
#define TEAM_CUN_COLOR 0xD900D300
#define TEAM_STR_COLOR 0x01FCFF00
#define TEAM_ADMIN_COLOR 0x00808000
#define COLOR_INVIS 0xAFAFAF00
#define COLOR_SPEC 0xBFC0C200
#define COLOR_BLUE 0x2641FEAA
#define COLOR_DARKNICERED 0x9D000096
#define COLOR_LIGHT_BLUE 0x9FB1EEAA
#define TRY_GREEN   0x00BF60FF
#define TRY_RED     0xB90000FF
// Cmd Color - Admin by Keenan
#define ROJO_ADMIN 0xDC092FFF
#define VERDE_ADMIN 0x41FF2FFF
#define CELESTE_ADMIN 0x41FFECFF
#define AMARILLO_ADMIN 0xFFFF00FF
#define CREMA_ADMIN 0xFFFFD4D4
#define ROSADO_ADMIN 0xFF4FD4D4
#define MORADO_ADMIN 0x9600FF2E
#define ORANGE_ADMIN 0xFF7617FF
#define PLAYER_COLOR 0xFFFFFFFD
#define VERDE_PREMIUM 0x0B6138FF
// Maximo de Ping
#define MAX_PING 500
//DCMD//
#define dcmd(%1,%2,%3) \
if ((strcmp((%3)[1], #%1, true, (%2)) == 0) && ((((%3)[(%2) + 1] == 0) && \
(dcmd_%1(playerid, "")))||(((%3)[(%2) + 1] == 32) && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) \
return 1
// ==== PRAGMA ==== //
#pragma unused ret_memcpy
#pragma semicolon 0
#pragma tabsize 0
#pragma dynamic 10000
////===Checkpoint de cargar camion
#define Checkpoint1 2063.5254,-2143.0103,13.2200
// =============== //
#define MAX_TRUNK_SLOTS		(5) // Is actually 4.
#define MAX_VEHICLE_MODELS	(70)
#define MAX_PLYVEH_RATIO	(20) // per player.
#define MAX_VEHICLE_PLATE	(7)

#define MAX_BIZZ    130
#define MAX_SBIZZ   130
#define MAX_HOUSES  646

#define MAX_CANCER  		(100)
#define MAX_EPILEPSIA   	(75)

// SBIZZ - Defines
#define LSPD   	0
#define SAMUR   1
#define YCAB    2
#define CRMO    3
#define U7      4
#define DGT     5
#define CNN     6

/*      Dialogs!      */
#define EQUIPO_MECANICO 8512
#define DP 985
#define UMBRELLA7_DIALOG 1
#define UMBRELLA7_DIALOG2 2
#define EQUIPO_DIALOG 	3
#define EQUIPO_DIALOG2 	4
#define EQUIPO_DIALOG3  5
#define EQUIPO_DIALOG4  6
#define EQUIPO_DIALOG5  7
#define EQUIPO_DIALOG9  8
#define EQUIPO_DIALOG10  9
#define EQUIPO_DIALOG11  10
#define AYUDA_DIALOG   15
#define EQUIPO_PIZZA   16
#define COLOR_ADM      17
#define CELDAS         18
#define CELDASAL        5813
#define CPRISION       19
#define CELDA1         20
#define CELDA2         21
#define CELDA3         22
#define EQUIPO_NG      23
#define SEL_CITY       24
#define DIALOG_HIT     25
#define EQUIPO_HITMAN  26
#define TEST_0         27
#define TEST_1         28
#define TEST_2         29
#define TEST_3         30
#define TEST_4         31
#define TEST_5         32
#define TEST_6         33
#define TEST_7         34
#define TEST_8         35
#define TEST_9         36
#define EQUIPO_FBI     37
#define DIALOG_SO      38
#define SEL_SKIN       39
#define EQUIPO_YAKUZA 41
#define EQUIPO_ITALIANO 42
#define EQUIPO_TRIADAS 43
#define TRABAJA_DIALOG 44
#define EQUIPO_RUSO 45
#define EQUIPO_GOB 46
#define MENU_ADMIN_1 47
#define EQUIPO_CAPONE 48
#define EQUIPO_TRAFICANTES 1391
#define EQUIPO_ALQAEDA 49
#define EQUIPO_ALEMAN 2416
#define EQUIPO_ESPANOL 50
#define MAX_PLAYERTOYS 10
#define DIALOGO_RADIO 1000
#define DIA_RENTA     1267
#define RENT_BIKE 	  1441
#define DIALOGO_PLAYLIST 1001
#define DIALOGO_MP3 1100
#define DIALOGO_Camara 1543
enum Player
{
	GloboPlayer
}
enum ptInfo
{
ptModelID,
ptBone,
Float:ptPosX,
Float:ptPosY,
Float:ptPosZ,
Float:ptRotX,
Float:ptRotY,
Float:ptRotZ,
Float:ftscaleX,
Float:ftscaleY,
Float:ftscaleZ
};

new PlayerToyInfo[MAX_PLAYERS+1][MAX_PLAYERTOYS][ptInfo];
//*********************//
new Message_Random[4][700] =
{
" [FORO] {FFFFFF} http://gameworldrp.com/ Entra y regístrate!",
" [GrupoFace] {FFFFFF}https://www.facebook.com/groups/GameWorld StarsRP/",
" [Info] {FFFFFF}¿Te han hecho algún tipo de antirol? Reportalo vía foro",
" [Gracias] {FFFFFF}GameWorld RP gracias a ustedes crecemos día a día!"
};
//------------------------
new gItemList[TOTAL_ITEMS] = {
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,
97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,
132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,
167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,
202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,
237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,
272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299
};
/////////////////////////// Paint Ball ///////////////////////////////////////

//Puntos de spawns paintball
new Float:PaintballDMSpawns[4][3] = {
{-1487.1887,1641.8083,1060.6719},
{-1361.2830,1631.6606,1053.5317},
{-1453.2238,1578.0221,1052.7500},
{-1456.6083,1635.8208,1052.5313}
};

new Float:PaintPvPSpawns[3][3] = {
{1948.7115,1653.6857,-11.8821},
{1975.8000,1619.4677,-11.8929},
{2003.1938,1598.9515,-11.8828}
};

///////////////////////////////////////////////////////////////////////////////

	enum HoldingEnum
	{
		holdingmodelid,
		holdingprice,
		holdingmodelname[24]
	}
    new HoldingObjectsCop[13][HoldingEnum] =
{
{18642,1000,"Taser"},
{19141,2500,"Casco SWAT"},
{19142,2500,"Chaleco SWAT"},
{18636,1000,"Gorro Policía"},
{19099,1000,"Gorro Policía 2"},
{19100,1000,"Gorro Policía 3"},
{18637,1000,"Escudo Policía"},
{19161,1000,"Sombrero Policía"},
{19162,1000,"Sombrero Policía 2"},
{19200,1000,"Casco Policía"},
{19138,1000,"Lentes"},
{19139,1000,"Lentes 2"},
{19140,1000,"Lentes 3"}
};
new HoldingObjects[212][HoldingEnum] = {
{18632,100,"Caña Pesca"},
{18633,25,"L. Inglesa"},
{18634,70,"Palanca"},
{18635,30,"Martillo"},
{18638,35,"Casco Amarillo"},
{19093,45,"Casco 1"},
{19160,45,"Casco 2"},
{18639,45,"Sombrero N."},
{18640,25,"Cabello"},
{18975,25,"Cabello 2"},
{19136,25,"Cabello 3"},
{19274,25,"Cabello 4"},
{18641,40,"Linterna"},
{18644,60,"Desarmador"},
{18865,340,"Telefono1"},
{18866,340,"Telefono2"},
{18867,340,"Telefono3"},
{18868,340,"Telefono4"},
{18869,340,"Telefono5"},
{18870,340,"Telefono6"},
{18871,340,"Telefono7"},
{18872,340,"Telefono8"},
{18873,340,"Telefono9"},
{18874,340,"Telefono10"},
{18875,750,"B.Personas"},
{18890,300,"Rastrillo"},
{18891,15,"Bandana1"},
{18892,15,"Bandana2"},
{18893,15,"Bandana3"},
{18894,15,"Bandana4"},
{18895,15,"Bandana5"},
{18896,15,"Bandana6"},
{18897,15,"Bandana7"},
{18898,15,"Bandana8"},
{18899,15,"Bandana9"},
{18900,15,"Bandana10"},
{18901,15,"Bandana11"},
{18902,15,"Bandana12"},
{18903,15,"Bandana13"},
{18904,15,"Bandana14"},
{18905,15,"Bandana15"},
{18906,15,"Bandana16"},
{18907,15,"Bandana17"},
{18908,15,"Bandana18"},
{18909,15,"Bandana19"},
{18910,15,"Bandana20"},
{18911,20,"Mask1"},
{18912,20,"Mask2"},
{18913,20,"Mask3"},
{18914,20,"Mask4"},
{18915,20,"Mask5"},
{18916,20,"Mask6"},
{18917,20,"Mask7"},
{18918,20,"Mask8"},
{18919,20,"Mask9"},
{18920,20,"Mask10"},
{18921,15,"Boina1"},
{18922,15,"Boina1"},
{18923,15,"Boina3"},
{18924,15,"Boina4"},
{18925,15,"Boina5"},
{18926,28,"Sombrero1"},
{18927,28,"Sombrero12"},
{18928,28,"Sombrero13"},
{18929,28,"Sombrero14"},
{18930,28,"Sombrero15"},
{18931,28,"Sombrero16"},
{18932,28,"Sombrero17"},
{18933,28,"Sombrero18"},
{18934,28,"Sombrero19"},
{18935,28,"Sombrero20"},
{18936,250,"Casco1"},
{18937,250,"Casco2"},
{18938,250,"Casco3"},
{18939,45,"Gorra 1"},
{18940,45,"Gorra 2"},
{18941,45,"Gorra 3"},
{18942,45,"Gorra 4"},
{18943,45,"Gorra 5"},
{18944,35,"GorraBoater1"},
{18945,35,"GorraBoater2"},
{18946,35,"GorraBoater3"},
{18947,30,"GorraBoater4"},
{18948,30,"GorraBoater5"},
{18949,30,"GorraBoater6"},
{18950,30,"GorraBoater7"},
{18951,30,"GorraBoater8"},
{18952,45,"Casco Box"},
{18953,30,"GorraLana1"},
{18954,30,"GorraLana2"},
{18955,30,"GorraIncl1"},
{18956,30,"GorraIncl2"},
{18957,30,"GorraIncl3"},
{18958,30,"GorraIncl4"},
{18959,30,"GorraIncl5"},
{18960,30,"GorraIncl6"},
{18961,10,"GorraCamionero"},
{18962,45,"Sombrero Vaquero"},
{18964,45,"Casquete1"},
{18965,45,"Casquete2"},
{18966,45,"Casquete3"},
{18967,45,"Sombrero"},
{18968,45,"Sombrero2"},
{18969,45,"Sombrero3"},
{18970,70,"Sombrero Tigre"},
{18971,25,"GorroCool"},
{18972,25,"GorroCool2"},
{18973,25,"GorroCool3"},
{18974,69,"MaskZorro"},
{18645,40,"Casco Moto"},
{18976,40,"Casco Moto 2"},
{18977,40,"Casco Moto 3"},
{18978,40,"Casco Moto 4"},
{18979,40,"Casco Moto 5"},
{19006,70,"Lentes 1"},
{19007,70,"Lentes 2"},
{19008,70,"Lentes 3"},
{19009,70,"Lentes 4"},
{19010,70,"Lentes 4"},
{19011,70,"Lentes 6"},
{19012,70,"Lentes 7"},
{19013,70,"Lentes 8"},
{19014,70,"Lentes 9"},
{19015,70,"Lentes 10"},
{19016,70,"Lentes 11"},
{19017,70,"Lentes 12"},
{19018,70,"Lentes 13"},
{19019,70,"Lentes 14"},
{19020,70,"Lentes 15"},
{19021,70,"Lentes 16"},
{19022,70,"Lentes 17"},
{19023,70,"Lentes 18"},
{19024,70,"Lentes 19"},
{19025,70,"Lentes 20"},
{19026,70,"Lentes 21"},
{19027,70,"Lentes 22"},
{19028,70,"Lentes 23"},
{19029,70,"Lentes 24"},
{19030,70,"Lentes 25"},
{19031,70,"Lentes 26"},
{19032,70,"Lentes 27"},
{19033,70,"Lentes 28"},
{19034,70,"Lentes 29"},
{19035,70,"Lentes 30"},
{19036,120,"HockeyMask1"},
{19037,120,"HockeyMask2"},
{19038,120,"HockeyMask3"},
{19039,60,"Reloj 1"},
{19040,60,"Reloj 2"},
{19041,60,"Reloj 3"},
{19042,60,"Reloj 4"},
{19043,60,"Reloj 5"},
{19044,60,"Reloj 6"},
{19045,60,"Reloj 7"},
{19046,60,"Reloj 8"},
{19047,60,"Reloj 9"},
{19048,60,"Reloj 10"},
{19049,60,"Reloj 11"},
{19050,60,"Reloj 12"},
{19051,60,"Reloj 13"},
{19052,60,"Reloj 14"},
{19053,60,"Reloj 15"},
{19064,45, "GorraSanta1"},
{19065,45, "GorraSanta2"},
{19066,45, "GorraSanta3"},
{19067,60, "HoodyHat1"},
{19068,60, "HoodyHat2"},
{19069,60, "HoodyHat3"},
{19078,700, "Loro1"},
{19079,700, "Loro2"},
{19085,35, "Parche Ojo"},
{19090,30, "PomPomAzul"},
{19091,45, "PomPomRejo"},
{19092,60, "PomPomVerde"},
{19094,100, "GorroBurgerShot"},
{19095,100, "Sombrero Vaquero 2"},
{19096,100, "Sombrero Vaquero 3"},
{19097,100, "Sombrero Vaquero 4"},
{19098,100, "Sombrero Vaquero 5"},
{19101,10, "Casco Militar1"},
{19102,10, "Casco Militar2"},
{19103,10, "Casco Militar3"},
{19104,10, "Casco Militar4"},
{19105,10, "Casco Militar5"},
{19106,10, "Casco Militar6"},
{19107,10, "Casco Militar7"},
{19108,10, "Casco Militar8"},
{19109,10, "Casco Militar9"},
{19110,10, "Casco Militar10"},
{19111,10, "Casco Militar11"},
{19112,10, "Casco Militar12"},
{19113,40, "Casco Tonto1"},
{19114,40, "Casco Tonto2"},
{19115,40, "Casco Tonto3"},
{19116,40, "Casco Aereo1"},
{19117,30, "Casco A. 2"},
{19118,30, "Casco A. 3"},
{19119,30, "Casco A. 4"},
{19120,30, "Casco A. 5"},
{19137,60, "GorraCluckinBell"},
{19163,70, "Mascara"},
{19330,40, "Casco Bomb"},
{19331,40, "Casco Bomb2"},
{19317,1000, "Guitarra"},
{19318,1000, "GuitarraX"},
{19319,1000, "XFireGuitarra"},
{1210,45, "Maleta"},
{3044,20,"Cigarro"},
{19421,140,"Headphone 1"},
{19422,140,"Headphone 2"},
{19423,140,"Headphone 3"},
{19424,140,"Headphone 4"}
};
new HoldingObjectsGold[28][HoldingEnum] = {
{18643,10000,"Laser Rojo"},
{19080,10000,"Laser Azul"},
{19081,10000,"Laser Rosado"},
{19082,10000,"Laser Naranja"},
{19083,10000,"Laser Verde"},
{19084,10000,"Laser Amarillo"},
{19086,5000,"Dildo Grande"},
{18675,10000,"SmokePuff"},
{18698,10000,"Insectos"},
{19138,1000,"Lentes"},
{18861,1000,"Signo ?"},
{18646,1000,"Luz Azul&Roja"},
{19346,50,"HotDog"},
{19139,1000,"Lentes 2"},
{19140,1000,"Lentes 3"},
{19101,2000, "Casco Militar1"},
{19102,2000, "Casco Militar2"},
{19103,2000, "Casco Militar3"},
{19104,2000, "Casco Militar4"},
{19105,2000, "Casco Militar5"},
{19106,2000, "Casco Militar6"},
{19107,4000, "Casco Militar7"},
{19108,4000, "Casco Militar8"},
{19109,4000, "Casco Militar9"},
{19110,4000, "Casco Militar10"},
{19111,4000, "Casco Militar11"},
{19112,4000, "Casco Militar12"},
{19472,3000, "Máscara de Gas"}
};

	new HoldingObjectsAll[220][HoldingEnum] = {
	{18643,10000,"Laser-1"},
	{19080,10000,"Laser-2"},
	{19081,10000,"Laser-3"},
	{19082,10000,"Laser-4"},
	{19083,10000,"Laser-5"},
	{19084,10000,"Laser-6"},
	{19086,5000,"DildoMotosierra"},
	{18675,10000,"Humo"},
	{18693,10000,"FuegoLargo"},
	{18698,10000,"Insectos"},
	{18636,1000,"GorroPolicia-1"},
	{19099,1000,"GorroPolicia-2"},
	{19100,1000,"GorroPolicia-3"},
	{18637,1000,"EscudoPolicia"},
	{19161,1000,"SombreroPolicia-1"},
	{19162,1000,"SombreroPolicia-2"},
	{19200,1000,"CascoPolicia-1"},
	{19138,1000,"LenterPolicia1"},
	{19139,1000,"LenterPolicia2"},
	{19140,1000,"LenterPolicia3"},
	{18632,1000,"CañaPesca"},
	{18633,1500,"Llave"},
	{18635,1000,"Martillo"},
	{18634,1000,"Palanca"},
	{18638,500,"Sombrero-1"},
	{19093,500,"Sombrero-2"},
	{19160,500,"Sombrero-3"},
	{18639,500,"SombreroNegro"},
	{18640,700,"Peluca"},
	{18975,700,"Peluca-2"},
	{19136,700,"Peluca-3"},
	{19274,700,"Peluca-4"},
	{18641,1000,"Linterna"},
	{18644,5000,"Desarmador"},
	{18865,500,"Teléfono-1"},
	{18866,500,"Teléfono-2"},
	{18867,500,"Teléfono-3"},
	{18868,500,"Teléfono-4"},
	{18869,500,"Teléfono-5"},
	{18870,1000,"Teléfono-6"},
	{18871,1000,"Teléfono-7"},
	{18872,1000,"Teléfono-8"},
	{18873,1000,"Teléfono-9"},
	{18874,1000,"Teléfono-10"},
	{18875,750,"Pager"},
	{18890,500,"Rastrillo"},
	{18891,500,"Bandana1"},
	{18892,500,"Bandana2"},
	{18893,500,"Bandana3"},
	{18894,500,"Bandana4"},
	{18895,500,"Bandana5"},
	{18896,500,"Bandana6"},
	{18897,500,"Bandana7"},
	{18898,500,"Bandana8"},
	{18899,500,"Bandana9"},
	{18900,500,"Bandana10"},
	{18901,750,"Bandana11"},
	{18902,750,"Bandana12"},
	{18903,750,"Bandana13"},
	{18904,750,"Bandana14"},
	{18905,750,"Bandana15"},
	{18906,750,"Bandana16"},
	{18907,750,"Bandana17"},
	{18908,750,"Bandana18"},
	{18909,750,"Bandana19"},
	{18910,750,"Bandana20"},
	{18911,1000,"Mask1"},
	{18912,1000,"Mask2"},
	{18913,1000,"Mask3"},
	{18914,1000,"Mask4"},
	{18915,1000,"Mask5"},
	{18916,1000,"Mask6"},
	{18917,1000,"Mask7"},
	{18918,1000,"Mask8"},
	{18919,1000,"Mask9"},
	{18920,1000,"Mask10"},
	{18921,500,"Beret1"},
	{18922,500,"Beret2"},
	{18923,750,"Beret3"},
	{18924,1000,"Beret4"},
	{18925,1000,"Beret5"},
	{18926,500,"Sombrero1"},
	{18927,500,"Sombrero2"},
	{18928,500,"Sombrero3"},
	{18929,500,"Sombrero4"},
	{18930,500,"Sombrero5"},
	{18931,1000,"Sombrero6"},
	{18932,1000,"Sombrero7"},
	{18933,1000,"Sombrero8"},
	{18934,1000,"Sombrero9"},
	{18935,1000,"Sombrero10"},
	{18936,500,"Chaleco1"},
	{18937,750,"Chaleco2"},
	{18938,1000,"Chaleco3"},
	{18939,750,"Gorra1"},
	{18940,750,"Gorra2"},
	{18941,750,"Gorra3"},
	{18942,1000,"Gorra4"},
	{18943,1000,"Gorra5"},
	{18944,1000,"Sombrero1"},
	{18945,1250,"Sombrero2"},
	{18946,1500,"Sombrero3"},
	{18947,1000,"Sombrero1"},
	{18948,1000,"Sombrero2"},
	{18949,1000,"Sombrero3"},
	{18950,1000,"Sombrero4"},
	{18951,1000,"Sombrero5"},
	{18952,1500,"CascoBox"},
	{18953,500,"Gorra1"},
	{18954,750,"Gorra2"},
	{18955,750,"Gorra3"},
	{18956,750,"Gorra4"},
	{18957,750,"Gorra5"},
	{18958,750,"Gorra6"},
	{18959,750,"Gorra7"},
	{18960,1000,"Gorra8"},
	{18961,750,"Gorra9"},
	{18962,750,"Sombrero"},
	{18964,1000,"SkullyGorra"},
	{18965,1250,"SkullyGorra2"},
	{18966,1500,"SkullyGorra3"},
	{18967,1000,"HatMan1"},
	{18968,1000,"HatMan2"},
	{18969,1000,"HatMan3"},
	{18970,2000,"HatTiger"},
	{18971,1000,"HatCool1"},
	{18972,1250,"HatCool2"},
	{18973,1500,"HatCool3"},
	{18974,10000,"MaskZorro"},
	{18976,1000,"CascoMoto-1"},
	{18977,1000,"CascoMoto-2"},
	{18978,1250,"CascoMoto-3"},
	{18979,1500,"CascoMoto-4"},
	{19006,500,"Lentes1"},
	{19007,500,"Lentes2"},
	{19008,500,"Lentes3"},
	{19009,500,"Lentes4"},
	{19010,500,"Lentes5"},
	{19011,500,"Lentes6"},
	{19012,500,"Lentes7"},
	{19013,500,"Lentes8"},
	{19014,500,"Lentes9"},
	{19015,500,"Lentes10"},
	{19016,1000,"Lentes11"},
	{19017,1000,"Lentes12"},
	{19018,1000,"Lentes13"},
	{19019,1000,"Lentes14"},
	{19020,1000,"Lentes15"},
	{19021,1000,"Lentes16"},
	{19022,1000,"Lentes17"},
	{19023,1000,"Lentes18"},
	{19024,1000,"Lentes19"},
	{19025,1000,"Lentes20"},
	{19026,1500,"Lentes21"},
	{19027,1500,"Lentes22"},
	{19028,1500,"Lentes23"},
	{19029,1500,"Lentes24"},
	{19030,1500,"Lentes25"},
	{19031,1500,"Lentes26"},
	{19032,1500,"Lentes27"},
	{19033,1500,"Lentes28"},
	{19034,1500,"Lentes29"},
	{19035,1500,"Lentes30"},
	{19036,2000,"HockeyMask1"},
	{19037,2000,"HockeyMask2"},
	{19038,2000,"HockeyMask3"},
	{19039,500,"Reloj1"},
	{19040,500,"Reloj2"},
	{19041,500,"Reloj3"},
	{19042,500,"Reloj4"},
	{19043,500,"Reloj5"},
	{19044,500,"Reloj6"},
	{19045,500,"Reloj7"},
	{19046,1000,"Reloj8"},
	{19047,1000,"Reloj9"},
	{19048,1000,"Reloj10"},
	{19049,1000,"Reloj11"},
	{19050,1000,"Reloj12"},
	{19051,1000,"Reloj13"},
	{19052,1000,"Reloj14"},
	{19053,1000,"Reloj15"},
	{19064,10000, "Santa-1"},
	{19065,20000, "Santa-2"},
	{19066,30000, "Santa-3"},
	{19067,1000, "HoodyHat1"},
	{19068,1000, "HoodyHat2"},
	{19069,1000, "HoodyHat3"},
	{19078,7500, "Loro-1"},
	{19079,7500, "Loro-2"},
	{19085,5000, "ParcheOjo"},
	{19090,1500, "PomPomAzul"},
	{19091,1500, "PomPomRojo"},
	{19092,1500, "PomPomVerde"},
	{19094,2000, "BurgerShotHat"},
	{19095,500, "CowboyHat1"},
	{19096,500, "CowboyHat3"},
	{19097,1000, "CowboyHat4"},
	{19098,1000, "CowboyHat5"},
	{19101,2000, "ArmyHelmet1"},
	{19102,2000, "ArmyHelmet2"},
	{19103,2000, "ArmyHelmet3"},
	{19104,2000, "ArmyHelmet4"},
	{19105,2000, "ArmyHelmet5"},
	{19106,2000, "ArmyHelmet6"},
	{19107,4000, "ArmyHelmet7"},
	{19108,4000, "ArmyHelmet8"},
	{19109,4000, "ArmyHelmet9"},
	{19110,4000, "ArmyHelmet10"},
	{19111,4000, "ArmyHelmet11"},
	{19112,4000, "ArmyHelmet12"},
	{19113,1000, "SillyHelmet1"},
	{19114,2000, "SillyHelmet2"},
	{19115,3000, "SillyHelmet3"},
	{19116,500, "PlainHelmet1"},
	{19117,500, "PlainHelmet2"},
	{19118,750, "PlainHelmet3"},
	{19119,1000, "PlainHelmet4"},
	{19120,1000, "PlainHelmet5"},
	{19137,5000, "CluckinBellHat"},
	{19163,1000, "GimpMask"}
	};
	new HoldingBones[][] = {
		"Nada",
		"Columna",
		"Cabeza",
		"Brazo Izq Sup",
		"Brazo Der Sup",
		"Mano Izq",
		"Mano Derecha",
		"Muslo Izq",
		"Muslo Der",
		"Pie Izq",
		"Pie Der",
		"Right calf",
		"Left calf",
		"AnteBrazo Izq",
		"AnteBrazo Der",
		"Clavicula Izq",
		"Clavicula Der",
		"Cuello",
		"Quijada"
	};
	new slotselection[MAX_PLAYERS];
// -==============================
#define GText   						GameTextForPlayer
#define PlayerToPoint(%1,%2,%3,%4,%5)  	IsPlayerInRangeOfPoint(%2,%1,%3,%4,%5)
#define TDStr    						TextDrawSetString
#define Skin        					SetPlayerSkin
#define GlobalMsg   					SendClientMessageToAll
#define Message 						SendClientMessage
// -==============================
//Sistema de auto Dinamicos
/*enum c2Info
{
	vModel,
	vVeh,
	vLocked,
	vC1,
	vC2,
	Float:vvX,
	Float:vvY,
	Float:vvZ,
	Float:vvA,
	vPJ,
	vVehMod[14]
	};
new CarInfo2[MAX_PLAYERS][c2Info];*/
enum pInfo
{
	pKey[24],
	pLevel,
	pLoggedIn,
	pJDS,
	pFacciones,
	pAyudante,
	pConnectTime,
	pReg,
	pSex,
	pAge,
	pOrigin,
	pWalk,
	pExp,
	pCash,
	pAccount,
	pKills,
	pDeaths,
	pROBO,
	pArrested,
	pLottoNr,
	pJob,
	pContract,
	pJailed,
	pJailTime,
	pMats,
	pDrugs,
	pSpeed,
	pEctasy,
	pRitalin,
	pHeroina,
	pMarihuana,
	pLeader,
	pMember,
	pGSocial,
	pRank,
	pChar,
	Float:pHealth,
	Float:pArmour,
	pInt,
	pTeam,
	pModel,
	pPnumber,
	pPhousekey,
	pPhousekey2,
	pPcarkey,
	pBizz,
	pPcarkey2,
	pPbiskey,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pGunLic,
	pGafas,
	pTut,
	pVirWorld,
	pAntecedente1[64],
	pAntecedente2[64],
	pAntecedente3[64],
	pNote1[64],
	pNote1s,
	pNote2[64],
	pNote2s,
	pNote3[64],
	pNote3s,
	pSMS_1[128],
	pSMS_2[128],
	pSMS_3[128],
	pSMS_4[128],
	pSMS_5[128],
	pInvWeapon,
	pInvAmmo,
	pLighter,
	pCigarettes,
	pHachis,
	pPapel,
	pMask,
	pMaskuse,
	pAsaltoB,
	pCamaraV,
	pHideNumber,
	pSpeaker,
	pLocked,
	pDNI,
	pMSN[64],
	pWeapon,
	pWeapon2,
	pWeapon3,
	pWeapon4,
	pWeapon5,
	pWeapon6,
	pWeapon7,
	pWeapon8,
	pWeapon9,
	pWeapon10,
	pWeapon11,
	pWeapon12,
	pAmmo,
	pAmmo2,
	pAmmo3,
	pAmmo4,
	pAmmo5,
	pAmmo6,
	pAmmo7,
	pAmmo8,
	pAmmo9,
	pAmmo10,
	pAmmo11,
 	pAmmo12,
 	pGPS,
 	pMaleta,
 	pMochila,
 	pCasco,
 	pRequestingBackup,
 	pSIDA,
 	pCancer,
 	pEpilepsia,
 	pDengue,
 	pDEagle,
 	pShotgun,
 	pMP5,
 	pAK47,
 	pM4,
 	pSniper,
 	pFStyle,
 	pPainkiller,
 	pLeccion,
 	pBusqueda,
 	pAntiSIDA,
 	pAntiCancer,
 	pAntiEpilepsia,
 	pRent,
 	p_Pr_Money,
 	p_Pr_Time,
 	p_Pr_Pay,
 	pRob,
 	pClothes1,
 	pClothes2,
 	pClothes3,
 	pClothes4,
 	pClothes5,
 	pDonateT,
 	pCarPremium,
 	pBanDuda,
 	pPasaporte,
 	pSeguro,
	pSuciedad,
 	pWalkie,
 	pEntered,
 	pHizo,
 	pHead,
 	pCarPremium2,
 	pDarpremium,
 	pYoutuber,
 	pWRestricted,
 	pCheat,
 	pBanTemporal,
 	pResetAdmin,
 	pDudasAtendidas,
 	pReportesAtendidos,
 	pSolicitudes
};

/*  AttachedObject Info

	Index:
	0. We will use it for attach on hands.
	1. We will use it for attach on spin.
	2. We will use it for attach on head.
	3. We will use it for attach on eyes.
	4. We will use it for attach on Optional.
*/

// AttachedInfo

	new	Att_Obj_Slot_0[MAX_PLAYERS][20],
		Att_Obj_Slot_1[MAX_PLAYERS][20],
		Att_Obj_Slot_2[MAX_PLAYERS][20],
		Att_Obj_Slot_3[MAX_PLAYERS][20],
		Att_Obj_Slot_4[MAX_PLAYERS][20];

	new
		Muted   		[MAX_PLAYERS],
		Flood   		[MAX_PLAYERS],
		ChatBan 		[MAX_PLAYERS],
		ChatBanTimer    [MAX_PLAYERS];


new PlayerInfo[MAX_PLAYERS][pInfo];
new v_Mode_Colores_Alzar[] =
{
0x0000FFAB
};

/////GanZones Con Avisos
new Groove,gs_Area,Surenos,s_Area,lking,lk_Area,bloods,b_Area;
/////
new QuitExtortion[MAX_PLAYERS], ExtortionID[MAX_PLAYERS];
//Sistema "Rent Bike"
new RentTime[MAX_PLAYERS];
new IsaRent[MAX_PLAYERS];
new HireKey2[MAX_PLAYERS];
///
//MUSICA
new Activandomusica[MAX_PLAYERS];
//
new Editing[MAX_PLAYERS];
//sistema de luces interminten
new PLuces[MAX_PLAYERS];
new TLI, TLI2;
new activado;
new TiempoEx;
new JoyasEx;
new VJoyasEx;
new Joyas[MAX_PLAYERS];
new Matrimonio[MAX_PLAYERS];
new bool:ConEstado[MAX_PLAYERS];
new Text3D:estado[MAX_PLAYERS];
new gTotalItems = TOTAL_ITEMS;
new PlayerText:gCurrentPageTextDrawId[MAX_PLAYERS];
new PlayerText:gHeaderTextDrawId[MAX_PLAYERS];
new PlayerText:gBackgroundTextDrawId[MAX_PLAYERS];
new PlayerText:gNextButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gPrevButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gSelectionItems[MAX_PLAYERS][SELECTION_ITEMS];
new gSelectionItemsTag[MAX_PLAYERS][SELECTION_ITEMS];
new gItemAt[MAX_PLAYERS];
new mec;
new QFA[MAX_PLAYERS][24];
// Evento
new EventoOn = 0;
new AutoPeaje = 0;
new samur;
new HasArmor			[MAX_PLAYERS];
new Float:ScriptArmor	[MAX_PLAYERS];
new ScriptMoney			[MAX_PLAYERS];
new PizzaCall = 999;
new JobDuty             [MAX_PLAYERS];
new PizzaCallTime[MAX_PLAYERS];
new sPizza[MAX_PLAYERS];
new AFK[MAX_PLAYERS];
new AFKTime[MAX_PLAYERS];
new bPizza[MAX_PLAYERS];
new PingKickLevel[MAX_PLAYERS];
new PuedeP[MAX_PLAYERS];
new Helado[MAX_PLAYERS];
new BuscaEmpleo[MAX_PLAYERS];
new ComidaParaLlevar[MAX_PLAYERS];
forward GiveArmorToPlayer(playerid, Float:armour);
public GiveArmorToPlayer(playerid, Float:armour)
{
	SetPlayerArmour(playerid, Float:armour);
	HasArmor[playerid] = 1;
	ScriptArmor[playerid] = armour;
	if(Team_LSPD(playerid) || Team_LVPD(playerid)){SetPlayerAttachedObject(playerid,1,19142,1,0.099258,0.031748,-0.015871,360.000000,358.979064,357.476074,1.072590,1.239796,-1.046599);}
	else{SetPlayerAttachedObject(playerid, 1, 373, 1, 0.300327, -0.004779, -0.178271, 73.442504, 25.958881, 32.691726);}
	Att_Obj_Slot_1[playerid] = "Chaleco";
	return 1;
}
forward MoneyGiveToPlayer(playerid,amount);
public MoneyGiveToPlayer(playerid,amount)
{
	if(IsPlayerConnected(playerid))
	{
	    GivePlayerMoney(playerid,amount);
	    ScriptMoney[playerid] += amount;
	    return 1;
	}
	return 0;
}
forward MoneyResetToPlayer(playerid);
public MoneyResetToPlayer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerMoney(playerid);
	    ScriptMoney[playerid] = 0;
	    return 1;
	}
	return 0;
}
forward PingCheck ();
public PingCheck ()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
  		if(GetPlayerPing(i) > MAX_PING)
  		{
            new string[220];
			PingKickLevel[i] += 1;
			format(string, sizeof(string), "{FFFFFF}* Su ping está muy alto trate de bajarlo por favor {FF1000}[%d de 3 Advertencias] ", PingKickLevel);
			SendClientMessage(i, -1, string);
			if(PingKickLevel[i] == 3)
			{
				new sendername[MAX_PLAYER_NAME];
                GetPlayerName(i, sendername, sizeof(sendername));
                format(string, sizeof(string), "GameWorld RP: %s ha sido kikeado del servidor Razón: Max Ping 1000", sendername);
				A_Info(string);
				PingKickLevel[i] = 0;
			    SendClientMessage(i, -1, "{FFFFFF}* Usted fue {FF3400}kickeado, {FFFFFF}su ping es muy alto, trate de bajarlo y vuelva.");
                SendClientMessage(i, -1, "{FFFFFF}* Cierre programas que le dan uso a us conexión de Internet. Gracias");
				Kick(i);
				return 1;
			}
		}
		if(GetPlayerPing(i) < MAX_PING)
  		{
  		    PingKickLevel[i] = 0;
  		    return 1;
		}
	}
	return 1;
}

forward GetScriptMoney(playerid);
public GetScriptMoney(playerid)
{
	new amount;
	if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerMoney(playerid)<ScriptMoney[playerid]) amount=GetPlayerMoney(playerid);
     	else amount=ScriptMoney[playerid];
	}
	return amount;
}
forward SetMoneyToPlayer(playerid,amount);
public SetMoneyToPlayer(playerid,amount)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerMoney(playerid);
	    GivePlayerMoney(playerid,amount);
	    ScriptMoney[playerid] = amount;
	    return 1;
	}
	return 0;
}
forward SetHP(playerid, Float:hp)
public SetHP(playerid, Float:hp)
{
    PlayerInfo[playerid][pHealth] =hp;
    SetPlayerHealth(playerid, hp);
    return 1;
}

#define DLOGIN             501
#define DREGISTER 504
#define SendRequest(%1,%2)  ShowPlayerDialog(%1, PETITION_DIALOG, DIALOG_STYLE_MSGBOX, "Petición", %2, "Aceptar", "Rechazar")
// -==================-
#define DMV_Question(%1,%2,%3)  ShowPlayerDialog(%1, DMV_DIALOG, DIALOG_STYLE_LIST, %2, %3, "Aceptar", "Cancelar")
// -==================-
#define TERMS_OF_USE 522
// -=========REGISTER~~TUTORIAL=========-
#define DIALOG_REG_AGE 			505
#define DIALOG_REG_SEX 			506
#define DIALOG_REG_NAC		 		510
#define DIALOG_REG_MSN 		507
#define DIALOG_REG_MSNC 	508
#define DIALOG_REG_TUT 		509
// -====================-
#define DINFO   		530
#define DINFO_CREDITS 	531
// -=========24/7\SHOPS===========-
#define D247_BUY 		550
#define LOTTO_BUY       559
// -==================== MP3 System ======================- // Courtesy of Incognito
#define AUDIO_PLUGIN 	560
#define MP3_DIALOG      561
// -================== NARCO & MAFIA ======================-
#define CREATE_WEAPON     	2201
// -=================== u7 OPENDOOR ================- //
#define U7_OPEN         562
// -================= FSTYLE =================-
#define FSTYLE_DIALOG   563
#define FSTYLET_DIALOG 2351
// -================= AMMUNATION ================-
#define AMMUNATION_MENU     566
#define AMMUNATION_MENU_DEF 567
#define AMMUNATION_MENU_PIS 568
#define AMMUNATION_MENU_AME 569
#define AMMUNATION_MENU_ESC 570
#define AMMUNATION_MENU_PRO 572
#define AMMUNATION_MENU_LEC 573
// -==================== AMMUNATION MANAGER =====================-
#define DIALOG_LECCION 574
#define DIALOG_AMMU_MANAGER 575
// -==================== LSPD =========================-
#define DIALOG_LSPD_ELEVATOR   576
// -=================== Transports ======================-
#define DIALOG_TAXI_RADAR 577
// -================== DIALOG BAR =======================- //
#define BAR_MENU 			578
#define BAR_MENU_TAPAS 		579
#define BAR_MENU_BEBIDAS    580
#define BAR_MENU_LLEVAR     6030
// -================= DIALOG FARMACIA ===================- //
#define DIALOG_FARMACIA 581
// -================= DIALOG Dildo ===================- //
#define DIALOG_DILDO 6857
// -=================== DIALOG BMBUY ===================- //
#define DIALOG_BMBUY    583
// -=======------======== MECÁNICO MENÚ ========---------=========- //
#define MECANICO_QUITAR 9251
#define MECANICO_MENU   584
#define MECANICO_MENU_REPARACION    585
#define MECANICO_MENU_GASOLINA      586
#define MECANICO_MENU_TUNING        587
#define MECANICO_MENU_TUNING_global 592
#define MECANICO_MENU_NEON  6974
#define MECANICO_MENU_TUNING_global_suspensionystereo 593
#define MECANICO_MENU_TUNING_SPECIAL    603
#define TUNING_WAA  610
#define TUNING_LOC  605
#define MECANICO_MENU_TUNING_color  594
#define MECANICO_MENU_TUNING_color_1  595
#define MECANICO_MENU_TUNING_color_2  596
#define MECANICO_MENU_TUNING_name  597
#define MECANICO_MENU_TUNING_motor 598
#define MECANICO_MENU_TUNING_bateria 599
#define TUNING_MENU_NITRO   600
#define TUNING_MENU_RUEDAS 604
#define MECANICO_MENU_EMBARGAR      588
#define MECANICO_MENU_DESEMBARGAR   589
#define MECANICO_MENU_MULTAR        590
#define MECANICO_MENU_REMOLCAR      591
#define MECANICO_MENU_OTROS         601
#define MECANICO_MENU_OTROS_matricula  602
///////// Ropa PaintBall ///////////////
#define DIALOG_PAINTBALL    	950
#define DIALOG_PAINTBALL_TVT	960
////////////////////////////////////////

// -= OnPlayerClickPlayer =- //
#define DIALOG_ADMIN_MENU   909
// -= Contrato =- //
#define REQF_ACCEPT 909
#define REQ_SOCIAL 910
// -= Petition / Trade =- //
#define PETITION_DIALOG 911
// -= DMV Exam =-  //
#define DMV_DIALOG 912
// -= Gafas =- //
#define BRILLO_GAFAS 915
// -= LSTV =- //
#define ENTER_LSTV 916

// -= Gasolina =- //
#define GASOLINA_DIALOG 917
// -= Importar =- //
#define IMPORTAR_MOTOR  918
// -= GOOGLE =- //
#define GOOGLE  919
// -= Mapas =- //
#define MAPAS  888
#define TRABAJOS 1021
// -= CCOMIDA =- //
#define CCOMIDA 826
// -= Drugs =- //
#define DRUGS_DIALOG 920
#define CONFIRM_DRUGS_DIALOG    921
#define MATERIALES_DIALOG 5319
// -= Telephone =- //
#define TEL_INPUT   	923
#define TEL_MSGBOX  	924
#define IPHONE_OPTIONS  925
#define IPHONE_IPOD     926
// -= Ropa =- //
#define CLOTHES_CHOOSE_DIALOG   927
#define CLOTHES_BUY_DIALOG      928

#define IsNull(%1) \
((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))

forward RefreshMenuHeader(playerid,Menu:menu,text[]);

//////
forward TeleportPlayer(playerid);
forward CheckForOpenDoor(playerid);
forward CheckForCloseDoor(playerid);
forward IsATrain(carid);
forward IsAHelado(carid);
forward portonmaf(playerid);
forward IsACamion(carid);
forward IsASweeper(carid);
forward IsABike(carid);
forward IsAPizzabike(carid);
forward IsAtBowling(playerid);
forward GateClose(playerid);
forward GateClose2();
forward GateClose3();
forward GateClose5();
forward lvpdgates();
forward LoadProperty();
forward LoadBizz();
forward LoadStuff();
forward SaveStuff();
forward LoadCar();
forward OnPropUpdate(update);
forward IsAtClothShop(playerid);
forward IsAtATM(playerid);
forward LugaresMapas(playerid);
forward Comprarrapida(playerid);
forward IsAt247(playerid);
forward IsAtCasino(playerid);
forward IsAtGasStation(playerid);
forward IsAtBankPC(playerid);
forward IsAtTaller(playerid);
forward IsAtBar(playerid);
forward Cerrar();
forward DollahScoreUpdate();
forward SetPlayerSpawn(playerid);
//forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz);
forward ABroadCast(color,const string[],level);
forward LSPDFBI(color,const string[],level);
forward SOLOLSPD(color,const string[],level);
forward A_Info(string[]);
forward A_PREMIUM(string[]);
forward GetClosestPlayer(p1);
forward SetPlayerUnjail();
forward OtherTimer();
forward IsATowcar(carid);
forward IsAnAmbulance(carid);
forward LSPD_IsACopCar(carid);
forward FBI_Vehicle(carid);
forward Taxi_Vehicle(carid);
forward Carrorenta(carid);
forward ALQAEDA_Vehicle(carid);
forward Espanol_Vehicle(carid);
forward Bus_Vehicle(carid);
forward SAEM_Vehicle(carid);
forward SAMD_Vehicle(carid);
forward GSocial_Vehicle(carid);
//forward LVMD_Vehicle(carid);
forward LH_Vehicle(carid);
forward GS_Vehicle(carid);
forward LK_Vehicle(carid);
forward Blood_Vehicle(carid);
forward Mecanico_Vehicle(carid);
forward Gobierno_Vehicle(carid);
forward U7_Vehicle(carid);
forward Ita_Vehicle(carid);
forward Yak_Vehicle(carid);
forward Rus_Vehicle(carid);
forward CNN_Vehicle(carid);
forward Bank_Vehicle(carid);
forward Narco_Vehicle(carid);
forward Harvest_Vehicle(carid);
forward Romero_Vehicle(carid);
forward CARGAR(playerid);
forward Hire_Vehicle(carid);
forward IsARentCar(carid);
forward IsARentCar2(carid);
forward IsAnOwnableCar(vehicleid);
forward IsAtDealership(playerid);
forward IsAtCarrental(playerid);
forward IsAPlane(carid);
forward Team_LSPD(playerid);
forward Team_LVPD(playerid);
forward Team_NG(playerid);
forward Team_FBI(playerid);
forward Team_Taxi(playerid);
forward Team_Mecanicos(playerid);
forward Team_SAMUR(playerid);
forward Team_LVMD(playerid);
forward Team_Groove(playerid);
forward Team_Hermandad(playerid);
forward Team_LK(playerid);
forward Team_Blood(playerid);
forward Team_Cripz(playerid);
forward Mafia_Italiana(playerid);
forward Mafia_Capone(playerid);
forward Mafia_Alemana(playerid);
forward Hitman(playerid);
forward Mafia_Yakuza(playerid);
forward Mafia_Alqaeda(playerid);
forward Mafia_Espanola(playerid);
forward Mafia_Rusa(playerid);
forward Pandilleros(playerid);
forward Journalist(playerid);
forward TriadasTeam(playerid);
forward Gobierno(playerid);
forward IsACop(playerid);
forward IsAMedic(playerid);
forward Umbrella7(playerid);
forward IsAnInstructor(playerid);
forward GameModeExitFunc();
forward SetPlayerWeapons(playerid);
forward ShowStats(playerid,targetid);
forward ShowDNI(playerid, targetid);
forward SetPlayerToTeamColor(playerid);
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid,password[]);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(color,const string[]);
forward OOCOff(color,const string[]);
forward OOCNews(color,const string[]);
forward SendFamilyMessage(family, color, string[]);
forward Sendmensajepremium(nivelpremium, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward SendAdminMessage(color, string[]);
forward SendAdminMessaged(color, string[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward Lotto(number);
forward CarCheck();
forward CheckGas();
forward SyncTime();
forward SyncUp();
forward SaveAccounts();
forward PayDay();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward CustomPickups();
forward FixHour(hour);
forward AddsOn();
forward ClearChatbox(playerid, lines);
forward CheckCarHealth();
forward StartingTheVehicle(playerid);
forward StartingPuente(playerid);
forward LoadHQLocks();
forward SaveHQLocks();
forward ClearKnock(playerid);
forward RemovePlayerWeapon(playerid, weaponid);
forward Float:GetDistance(playerid, Float:x, Float:y);
forward TraceLastCall();
forward ReportReset(playerid);
forward ReduceTimer(playerid);
forward FreezePlayer(playerid);
forward UnfreezePlayer(playerid);
forward Heal(playerid);
forward OnPlayerCheckStat(playerid);
forward CleanPlayer(playerid);
forward SaveAllGuns();
forward SaveGuns(playerid);
forward ShowBuyMenu(playerid);
forward ShowAmmunation(playerid);
forward CartelGateClose();
forward LCNclose();
forward YakuzaClose();
forward Puertacapone1();	// Puertas Capone//
forward Puertacapone2();	// Puertas Capone//
forward Saem1();			// Puertas Saem //
forward Saem2();    		// Puertas Saem //
forward Saem3();    		// Puertas Saem //
forward Saem4();    		// Puertas Saem //
forward CTriada1();    		// Puertas Triadas
forward CTriada2();    		// Puertas Triadas
forward CTriada3();
forward RusaClose();
forward RusaClose2();
forward RusaClose3();
forward ShootAgain(playerid);
//·| << Ascensor >> ===================|·
forward Puerta1Cerrada();
forward Puerta2Cerrada();
forward Puerta1Abierta();
forward Puerta2Abierta();
forward Earriba();
forward Eabajo();
// -====================- //
new pMatI, pMatII, pMatIII;
// -= Petition =-
new Petition_ID[MAX_PLAYERS];
/////////////
new globaltimer;
// ==============--.
new PlayerGotSpottedRecently[MAX_PLAYERS];
new ScriptWeaponsUpdated[MAX_PLAYERS];
new ScriptWeapons[MAX_PLAYERS][13];
new Checked[MAX_PLAYERS];
new NumBuy[MAX_PLAYERS], NumSeller[MAX_PLAYERS], NumPrice[MAX_PLAYERS];
new See_MP[MAX_PLAYERS];
new PayDayLeft = 60;
// Trunk system
new vehTrunkCounter[MAX_VEHICLES] = 1;
new vehTrunk[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new vehTrunkAmmo[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new Float:vehTrunkArmour[MAX_VEHICLES];
new
ClothesID		[MAX_PLAYERS],
ClothesPrice    [MAX_PLAYERS];
new TEL_INPUT_ID[MAX_PLAYERS];
new TEL_NUMBER[MAX_PLAYERS];
new Skate[MAX_PLAYERS];
new BuyNarco[MAX_PLAYERS],
NarcoSellPrice[MAX_PLAYERS],
NarcoSellArm[MAX_PLAYERS],
NarcoSellAmmo[MAX_PLAYERS];
new Smuggling[MAX_PLAYERS],SmugglingType[MAX_PLAYERS];
new Blinded[MAX_PLAYERS], Tied[MAX_PLAYERS];
new Rope[MAX_PLAYERS];
new AdminChat[MAX_PLAYERS];
new HireKey[MAX_PLAYERS];
new DrugFarming[MAX_PLAYERS];
new Train_Route[MAX_PLAYERS];
new Plane_Route[MAX_PLAYERS];
new Intentar[MAX_PLAYERS];
new nod = 0;
new PFrecuencia[MAX_PLAYERS];
new MyKillContracted[MAX_PLAYERS][32];
new MyKillContract[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new WhoFind[MAX_PLAYERS];
new buscameca[MAX_PLAYERS];
new buscaauto[MAX_PLAYERS];
new Bodyguard_Contracted[MAX_PLAYERS] = 500;
new Bodyguard_ContractedTime[MAX_PLAYERS];
new Bodyguard_Client[MAX_PLAYERS] = 500;
new GuardOffer[MAX_PLAYERS];
new GuardTime[MAX_PLAYERS];
new RequestingBackup[MAX_PLAYERS];
new ReqF_Faction[MAX_PLAYERS];
new ReqG_Social[MAX_PLAYERS];
new ReqF_Name[MAX_PLAYERS][32];
new UsingBelt[MAX_PLAYERS];
new Freezed[MAX_PLAYERS];
new EquipoMeca[MAX_PLAYERS];
new FreezeLast[MAX_PLAYERS];
new bool:PuedePresionar[MAX_PLAYERS];
new bool:ClothesMenu[MAX_PLAYERS];
new Accesory[MAX_PLAYERS];
new FailTuto[MAX_PLAYERS];
new DressRoom[MAX_PLAYERS];
new Bowling[MAX_PLAYERS];
new BowlingMoney[MAX_PLAYERS];
new Revisado[MAX_PLAYERS];
new Misile_Launcher;
new pdgate1;
new tvp;
new tvp2;
new lspddoor1;
new lspddoor2;
new armygate1;
new armygate2;
new fbigate;
new puertayakuza1,puertayakuza2,puertayakuza3;
new portonalqaeda, portonalqaeda1, portonalqaeda2;
new pitalina, puertabomba;
new pitalina2;
new portonespanol,puertaespanola, portonespanol2, portonespanol3;
new lspdo,lspd2,lspdg,lspdk,cell,lspdg1,lspdg2,lspdg3,lspdg4,lspdg5, pdgate2;
new ayunta, ayunta1, ayunta2;
new gabipuerta, valentinap;
new lisanp;
new frankpuerta;
new frankpuerta1;
new lautaro;
new lvpddoor1, lvpddoor2, lvpddoor3, lvpdg1, lvpdg2, lvpdgate; // LVPD
new alqaedap1, alqaedap2, alqaedap3;
new prison1, prison2, prison3;//Prision Militar
new capon1, capon2; //mafia2;
new pea1, pea2, pea3, pea4, pea5, pea6, pea7, pea8;
new PuertaFBI, Portontaller, reja1, reja2, reja3;
new hitmanreja;
new u7d1, u7d2, u7d3;
new crgate, crgate1, rusg, rusg2, rusg3, tria; // Mafia's gates
///
new Text:KeyHelp[MAX_PLAYERS];
new Text:Textdrawinicio;
// Gafas
new Text:SunGlasses;
///Cargando
new Text:Cargando, Text:Textdrawinicio2;
////////GameWorld StarsCity Roleplay Textdraw
new Text:UCRP;
new Text:UCRPP;
new
Text:Film_1,
Text:Film_2;

new
Text:Gasolina[MAX_PLAYERS],
Text:Motor[MAX_PLAYERS],
Text:Velocidadvv[MAX_PLAYERS],
Text:Nivelyexp[MAX_PLAYERS];

new ClothShop[MAX_PLAYERS];
new ClickedPlayer[MAX_PLAYERS];
new
	gGas95_Cost 	= 	1,  gGas95_Full=100,
	gGas98_Cost 	= 	1,  gGas98_Full=120,
	gGasoil_Cost    =   2,  gGasoil_Full=160,
	gBiogas_Cost    =   3,  gBiogas_Full=230;
////////////////////////// Paint Ball ///////////////////////////////

new	InPaintballDM[MAX_PLAYERS], PaintballDMKills[MAX_PLAYERS];
new InPaintballTvT[MAX_PLAYERS];
new InTvTNaranja[MAX_PLAYERS], TvTNaranjaKills = 0;
new InTvTVerde[MAX_PLAYERS], TvTVerdeKills = 0;
new InPaintPvP[MAX_PLAYERS], PaintPvPKills[MAX_PLAYERS];

//////////////////////////////////////////////////////////////////////

// -========================- //
new PuertaH1;
new PuertaH2;
new HaciaArriba = 0;
new HaciaAbajo = 0;
// -===============
new Ganzuas[MAX_PLAYERS];
new AdminTemp[MAX_PLAYERS];
new Interview = 0;
new Interviewer[32] = "Nadie";
new CreatedCars[100];
new Tax = 0;
new TaxValue = 0;
new TaxRenta = 0;
new TaxPasaporte = 0;
new Samd_Impuesto = 0;
new Samd_Fondos = 0;
new Samd_Asistencia= 0;
new Samd_CompraSeguro = 0;
new Jackpot = 0;
new Blood = 1000;
new Fuel = 5000;
new FMB = 100000;
new Bank_Interest = 2;
new Max_Prestamo = 10000;
new FMP = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new Hotdog[MAX_PLAYERS];
new Hamburguesa[MAX_PLAYERS];
new TaxiCalled[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new Neon[MAX_VEHICLES];
new CNeon[MAX_VEHICLES];
new VehiclesMod[MAX_VEHICLES][16];
new TransportDriver[MAX_PLAYERS];
new RStep[MAX_PLAYERS];
new MapIconsShown[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new PlayersChannel[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new Delivery[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new Situacion[MAX_PLAYERS];
new DeathPlayer[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerTazeado[MAX_PLAYERS];
new Tazer[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gOoc[MAX_PLAYERS];
new gpre[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new puertacapone1, puertacapone2; // Puertas Capone
new saem1, saem2, saem3, saem4; //saem5; // Puertas Saem //
new triada1, triada2, triada3; // Puertas Triadas //
//new gSpentCash[MAX_PLAYERS];
new First_Spawn[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerAccount[MAX_PLAYERS];
new noac = 0;
new nopre = 0;
new noooc = 0;
new nobancoc = 0;
new DobleOn = 0;
new adds = 0;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new numplayers = 0;
new dollah = 0; // Amount player recieves on spawn.
new realtime = 1;
new wtime = 23;
new callcost = 2; //20 seconds
new realchat = 1;
new timeshift = 0;
new shifthour;
new othtimer;
new actimer;
new synctimer;
new mmtimer;
new LifeTimer;
new KeysTimer;
new unjailtimer;
new pickuptimer;
new accountstimer;
new checkgastimer;
new stoppedvehtimer;
new cartimer;
new levelexp = 4;
new cchargetime = 60;
new txtcost = 1;
new Security;
// Pos
new Float:AFKLoc[MAX_PLAYERS][3];
new Float:InceptionPos[MAX_PLAYERS][3];
// ---- Vehicle Control
new
	engineOn[MAX_VEHICLES],
	LightsOn[MAX_VEHICLES],
	BootOpen[MAX_VEHICLES],
	BonnetOpen[MAX_VEHICLES],
	gEngine[MAX_PLAYERS],
	NoWheels[MAX_VEHICLES],
	Alarm[MAX_VEHICLES];

// -==================
new JustDied[MAX_PLAYERS];
new KnockedDown[MAX_PLAYERS];
new UnidentifedCall[MAX_PLAYERS];
new LicenseOffer[MAX_PLAYERS];
new LicensePrice[MAX_PLAYERS];
new LicenseType[MAX_PLAYERS];
new DefaultWeather = 10;
new UsingDrugs[MAX_PLAYERS];
new AfterTutorial[MAX_PLAYERS];
new OwnableCarOffer[MAX_PLAYERS];
new OwnableCarID[MAX_PLAYERS];
new OwnableCarPrice[MAX_PLAYERS];
new BlindFold[MAX_PLAYERS];
new PlayerIsSweeping[MAX_PLAYERS];
new PlayerIsRuta[MAX_PLAYERS];
// Drugs System
new UsingSpeed[MAX_PLAYERS];
new SpeedEffect[MAX_PLAYERS];
new UsingEctasy[MAX_PLAYERS];
new EctasyEffect[MAX_PLAYERS];
new UsingRitalin[MAX_PLAYERS];
new RitalinEffect[MAX_PLAYERS];
new UsingHeroina[MAX_PLAYERS];
new HeroinaEffect[MAX_PLAYERS];
new HeroinaBeat[MAX_PLAYERS];
new UsingMarihuana[MAX_PLAYERS];
new MarihuanaEffect[MAX_PLAYERS];
new MarihuanaBeat[MAX_PLAYERS];
// Illnes Sys.
new CancerEffect[MAX_PLAYERS];
new EpilepsiaCrack[MAX_PLAYERS];
new SIDA[MAX_PLAYERS];
new DengueRand[MAX_PLAYERS];
new Dengue[MAX_PLAYERS];
new Ibuprofeno[MAX_PLAYERS];
new Nicotina[MAX_PLAYERS];
new Energysil[MAX_PLAYERS];
new cNicotina[MAX_PLAYERS];
new cEnergysil[MAX_PLAYERS];
new cSIDA[MAX_PLAYERS];
new cCancer[MAX_PLAYERS];
new cEpilepsia[MAX_PLAYERS];
// Rob Sys.
new TelfRob[MAX_PLAYERS];
new PickLock[MAX_PLAYERS];
new Alambre[MAX_PLAYERS];
// ------------
new UsingRayBan[MAX_PLAYERS];
new UsingCasco[MAX_PLAYERS];
new VehicleWindows[MAX_VEHICLES] = 0;
new AdminDuty[MAX_PLAYERS];
new Proponerma[MAX_PLAYERS];
new Premiumcolor[MAX_PLAYERS];
new pdtrace = 0;
new Float:pdtrace_x;
new Float:pdtrace_y;
new Float:pdtrace_z;
new emdtrace = 0;
new Float:emdtrace_x;
new Float:emdtrace_y;
new Float:emdtrace_z;
new tracetimer;
new JustReported[MAX_PLAYERS];
new PlayerNeedsHelp[MAX_PLAYERS];
new Llamadas[MAX_PLAYERS];
new PlayerDuda[MAX_PLAYERS], Mochila[MAX_PLAYERS][2], SmokeTimer[MAX_PLAYERS];
new PlayerSol[MAX_PLAYERS];
new ComproBoleto[MAX_PLAYERS];
new AdminSpec[MAX_PLAYERS];
new IsSmoking[MAX_PLAYERS];
new IsSmokingPorro[MAX_PLAYERS];
new UsingSmokeAnim[MAX_PLAYERS];
new ReduceTime[MAX_PLAYERS];
new RegText[MAX_PLAYERS];
new RegConfig[MAX_PLAYERS];
new pTest[MAX_PLAYERS];
new ePoints[MAX_PLAYERS];
new RadioOn[MAX_PLAYERS];
new Saludo_ID[MAX_PLAYERS];
// Vida Sys.
new MensajeMuriendo[MAX_PLAYERS];
new ForbidHandsUp[MAX_PLAYERS];
new Left4Life[MAX_PLAYERS];
new Rescued[MAX_PLAYERS];
new MsgL4L[MAX_PLAYERS];
// Factura
new Facturing[MAX_PLAYERS];
new fPay[MAX_PLAYERS];
new fDest[MAX_PLAYERS];
new fFacturer[MAX_PLAYERS];
// Transport Variables
new
	TaxiSlot1[32] = "Vacio", Slot1 = 0, SlotZone1[64] = "Sin Localizar", SlotCity1[4] = "No", TiempoSlot1 = 0,
	TaxiSlot2[32] = "Vacío", Slot2 = 0, SlotZone2[64] = "Sin localizar", SlotCity2[4] = "No", TiempoSlot2 = 0,
	TaxiSlot3[32] = "Vacío", Slot3 = 0, SlotZone3[64] = "Sin localizar", SlotCity3[4] = "No", TiempoSlot3 = 0,
	TaxiSlot4[32] = "Vacío", Slot4 = 0, SlotZone4[64] = "Sin localizar", SlotCity4[4] = "No", TiempoSlot4 = 0,
	TaxiSlot5[32] = "Vacío", Slot5 = 0, SlotZone5[64] = "Sin localizar", SlotCity5[4] = "No", TiempoSlot5 = 0,
	TaxiSlot6[32] = "Vacío", Slot6 = 0, SlotZone6[64] = "Sin localizar", SlotCity6[4] = "No", TiempoSlot6 = 0,
	TaxiSlot7[32] = "Vacío", Slot7 = 0, SlotZone7[64] = "Sin localizar", SlotCity7[4] = "No", TiempoSlot7 = 0,
	TaxiSlot8[32] = "Vacío", Slot8 = 0, SlotZone8[64] = "Sin localizar", SlotCity8[4] = "No", TiempoSlot8 = 0;

new TarifaTaxi = 5;

new dm[] = "      \n {45F86C}DeathMatch {FFFFFF} - Muy simple, es matar a una persona sin razón alguna o sin ningún tipo de ROL.\n {FFFFFF}No olvide que el DM es una falta muy grave, usted puede ser {FF150E}baneado{FFFFFF}.";
new mg[] = "      \n {45F86C}MetaGaming {FFFFFF} - Es Confundir canales IC u OOC, para asi tomar ventaja usando informacion externa \n {5CFFCD}El MetaGaming {FFFFFF}es uno de los terminos mas importantes en Role Play.\n {FFFFFF}Deben estudiar bien este termino si desea sobrevivir en este modo de juego.";
new pg[] = "      \n {45F86C}PowerGaming {FFFFFF} - Se llama a las acciones ficticias o irreales que usted puede llegar a hacer.\n {FFFFFF}Tambien se llama PG, cuando usted obliga a alguien a hacer un {FF150E}Rol.\n {FFFFFF}Recuerde que esta falta es sancionada con {FF150E}Jail Administrativa.\n {54F288}Ejemplos de PowerGaming - {FFFFFF}Usando /me: \n\n {A615E0}* Juan Carlos le roba todo su dinero y se corre.";
new bpc[] ="      \n {45F86C}Badly Parked Car {FFFFFF} - Esta regla se caracteriza cuando un usuario estaciona incorrectamente su vehiculo en las calles,\n como sancion tiene la venta del vehiculo y un envio a prisión administrativa.";
new bd[] ="      \n {45F86C}Bad Driving {FFFFFF} - Manejar incorrectamente un vehiculo, causando desastres y desorden entre otros vehiculos. Recuerda manejar como en la vida real.";
new cj[] ="       \n {45F86C}CarJack {FFFFFF} - Esta es una de las reglas muy importantes, es cuando usted roba un auto sin un rol previo \n cometer esta falta es {DEDC44}Anti-RolePlay {FFFFFF}y si usted hace esto puede ser {FF150E}sancionado{FFFFFF}.";
new rk[] ="       \n {45F86C}RevengeKill {FFFFFF} - Es la acción de cobrar vengaza despues de que usted haya {DEDC44}'muerto' \n {FFFFFF}Verdaderamente usted no muere, usted logra salvarse y aparece en el hospital. \n Lo que usted no debe hacer es volver al rol en el cual usted {DEDC44}'murio'.";
new na[] ="       \n {45F86C}Noob Abuser {FFFFFF} - Hacer NA se considera abusar de un usuario nuevo {0096E5}(Novato - Noob). \n\n {54F288}Por Ejemplo: \n\n {45F86C}> {FFFFFF}Confundirlo para aprovecharse de su inexperiencia en RolePlay.\n {45F86C}> {FFFFFF}Obligarlo a que te de dinero o que siga un rol de secuestro. \n\n {F4E3D5}* Recuerde nunca Abusar de un novato. {FFFFFF}Usted puede resultar {FF150E}baneado {FFFFFF}del servidor.";

// AutoEscuela
new IsPractising[MAX_PLAYERS];
new Text:RegInfo;
new Text:RegDraw[MAX_PLAYERS];
new Text:FuelSpeedo[MAX_PLAYERS];
new Text:Taximeter[MAX_PLAYERS];
new Text3D:Bizz3DText[MAX_BIZZ];
new Text3D:House3DText[MAX_HOUSES];
new HousePickup[MAX_HOUSES];
new BizzPickup[MAX_BIZZ];

new Text3D:AdminDutyy[MAX_PLAYERS];
KillTimerEx(timerid) {
    KillTimer(timerid); //aki toavia KillTimer sigue sindo KillTimer normal
    if(timerid == othtimer) {
        printf("EL TIMER SE HA DETENIDO CON KILLTIMER:");
        new temp_array_[1],pos= 1;
        temp_array_[pos] = 1;
    }
}
#define KillTimer KillTimerEx
// DMV Defines
#define YELLOW 0xFFFF00FF
#define ORANGE 0xF97804FF
#define GRAY 0xCECECEFF
#define LIGHTBLUE 0x00C2ECFF

#define GasMax 100
#define RunOutTime 50000
#define RefuelWait 10000

#define CAR_AMOUNT VEH //Change to Your Vehicle Amount
new Gas[CAR_AMOUNT];

new Refueling[MAX_PLAYERS];
stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
stock SacarVelocidad(playerid)
{
        new Float:vX, Float:vY, Float:vZ, Float:Velocidad;
        GetVehicleVelocity(GetPlayerVehicleID(playerid), vX, vY, vZ);
        Velocidad = floatmul(floatsqroot(floatadd(floatadd(floatpower(vX, 2), floatpower(vY, 2)),  floatpower(vZ, 2))), 100.0);
        return floatround(floatdiv(Velocidad, 0.75), floatround_floor);
}
#define MAX_ROADBLOCKS 35

enum rInfo
{
    sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};

new Roadblocks[MAX_ROADBLOCKS][rInfo];

new duda[MAX_PLAYERS];
new NewUsed = 0;

enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum hInfo
{
    hOwned,
    hOwner[MAX_PLAYER_NAME],
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hInt,
    hLevel,
	hValue,
	hLock,
	hRooms,
	hRent,
	hRentabil,
	hWep,
	hAmmo,
    hMats,
    hDrugs,
    hSpeed,
    hEctasy,
    hRitalin,
    hHeroina,
    hMarihuana,
	hWorld,
	hTime,
	hprecioentrada,
};

new HouseInfo[MAX_HOUSES][hInfo];

//0,330.9976,131.7719,1007.9657,185.8918,6,1,Libre,Bullet,300000,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
enum cInfo
{
	cModel,
	Float:cLocationx,
	Float:cLocationy,
	Float:cLocationz,
	Float:cAngle,
	cColorOne,
	cColorTwo,
	cOwner[MAX_PLAYER_NAME],
	cName[MAX_PLAYER_NAME],
	cValue,
	cOwned,
	cLock,
	cBattery,
	cSpoiler, 	// Aleron
	cHood,      // Capó
	cRoof,      // Techo
	cSideskirt, // Faldones
	cNitro,     // N20
	cLamps,     // Luces Delanteras
	cExhaust,   // Tubo Escape
	cWheel,     // Llantas
	cHydraulics,    // Hidráulica
	cPaintjob,    // Stereo
	cNeon,   // ???
	cFrontBumper,    // Par. Delantero
	cRearBumper,    // Par. Trasero
	cVents,     // Respiraderos
	cEmbargo,
	cMulta,
	cPlate[16],
	cGas,
	cAlarm,
	cGPS,
	cRastreo,
};

new CarInfo[VEH][cInfo];

enum Info
{
xenonazulb,
xenonrojob,
xenonverdeb,
};
new bites[MAX_PLAYERS][Info];

enum bInfo //By Texter
{
	bOwned,
	bOwner[24],
	bName[32],
    bExtortion[MAX_PLAYER_NAME],
	Float:bEntrancex,
	Float:bEntrancey,
	Float:bEntrancez,
	bLevelNeeded,
	bBuyPrice,
	bTill,
	bTillEx
};

new BizzInfo[MAX_BIZZ][bInfo];

enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMaxProducts,
	sbPriceProd,
};
new SBizzInfo[MAX_SBIZZ][sbInfo];

enum iInfo
{
	iAdmin[64],
	iMOTD[64],
	iPassword[16],
	iNeedPass,
	iLock,
	iPlayers,
};

enum hqLocks
{
	GS,
	LH,
	LK,
	ITA,
	RUS,
	MEC,
	HIT,
	YAK,
	TRI,
	CAP,
	ALQ,
	ESP,
	BLO,
	ALE

};
new hqlock[hqLocks];

new Float:gDrugFarmVar[26][3] = {
{-259.6562,-57.9561,2.8377},
{-254.5291,-33.8827,2.8385},
{-238.1613,44.3417,2.2078},
{-209.5157,80.1700,2.7024},
{-175.4233,66.8039,2.8388},
{-142.6084,45.4895,2.8388},
{-160.0594,5.8592,2.8385},
{-175.1070,-39.3283,2.8386},
{-215.7219,-41.6478,2.8370},
{-203.8972,139.3158,3.6730},
{-182.4831,163.9266,7.1622},
{-165.0118,147.7440,4.7341},
{-135.8543,116.6793,2.9278},
{-114.0200,134.7971,2.8386},
{22.7234,32.2417,2.8387},
{48.4623,24.3225,1.6563},
{62.2001,4.4411,0.9688},
{62.1774,-20.8292,1.0529},
{48.4535,-91.2610,0.3311},
{32.1094,-110.5129,0.3384},
{12.0121,-110.4428,0.5447},
{-17.0480,-107.2493,2.8238},
{-38.7793,-95.6601,2.8387},
{-23.5426,-60.4188,2.8392},
{-0.5058,-57.3535,2.8387},
{18.0054,-81.7280,1.5868}
};
new Float:AFKZone[5][3] = {
	{-1753.7677,885.5895,295.8750},
	{-1942.7980,537.1266,209.6516},
	{-1807.5276,523.5158,234.8906},
	{-1837.2823,574.0678,234.8874},
	{-1774.7689,573.7373,234.8906}
};
new Float:gSweeperPoints[61][3] = {
{351.8791,-1542.9525,32.8241},
{528.3840,-1421.4326,15.5214},
{540.4012,-1581.2511,15.5786},
{717.4601,-1588.2983,13.7824},
{641.3878,-1290.5045,14.7365},
{697.1915,-1154.5682,15.0319},
{624.9969,-1500.6953,14.2819},
{657.1359,-1754.1011,12.9295},
{807.3387,-1786.8031,12.9919},
{855.5547,-1599.3353,12.9575},
{920.0758,-1435.9244,12.9004},
{829.3325,-1318.7393,12.9412},
{800.4104,-1153.3473,23.5362},
{919.1944,-983.7144,37.6564},
{960.5366,-1125.8149,23.2350},
{1027.4044,-1222.7533,16.3308},
{1055.6002,-1347.0660,12.9492},
{1035.0167,-1661.7706,12.9492},
{1135.6582,-1714.5726,13.2095},
{1199.2737,-1449.2653,12.9445},
{1166.7722,-1279.0509,13.1084},
{1175.7271,-1139.5891,23.2408},
{1165.6539,-996.5869,36.7975},
{1003.9905,-956.1555,41.1873},
{1259.8721,-1006.3247,33.8007},
{1328.4585,-1282.8423,12.9490},
{1367.6403,-1077.8971,24.8246},
{1479.8086,-1109.1764,23.2225},
{1452.0596,-1320.6748,12.9491},
{1427.4011,-1576.5649,12.9273},
{1425.8943,-1669.9651,12.9492},
{1487.8964,-1734.6465,12.9490},
{1510.6815,-1735.1931,12.9490},
{1532.3123,-1674.5083,12.9493},
{1532.5154,-1663.3816,12.9490},
{1566.7845,-1823.5012,12.9490},
{1443.2334,-1869.8840,12.9569},
{1691.9636,-1775.9987,12.9493},
{1692.5615,-1628.3645,12.9492},
{1848.1118,-1512.0933,12.9324},
{1852.4690,-1359.8696,12.9649},
{1869.1888,-1079.5444,23.2335},
{1968.1589,-1195.7958,25.2591},
{2020.4669,-1264.0336,23.3865},
{2118.3831,-1222.1611,23.3709},
{2178.0645,-1160.1169,24.2061},
{2329.2275,-1156.1409,26.3632},
{2269.0276,-1248.3162,23.3730},
{2164.4541,-1366.1935,23.3944},
{2109.7114,-1488.5392,23.3842},
{2079.1208,-1842.4808,12.9491},
{2185.7046,-1897.3514,12.9632},
{2218.7041,-1798.5983,12.7617},
{2349.9788,-1750.7246,12.9493},
{2432.4709,-1653.3844,26.1642},
{2453.5630,-1373.6967,23.4024},
{2565.4963,-1260.5342,45.5413},
{2640.2383,-1369.0193,30.8336},
{2674.0586,-1448.9202,29.9459},
{2719.6277,-1570.2716,18.7877},
{2513.8059,-1599.9224,17.1046}
};

new Float:gTrunkPoints[14][3] = {
{1975.3779,-1927.2281,13.5557},
{1585.7305,-1416.3727,13.6827},
{1361.2401,-1277.2262,13.4762},
{784.0610,-807.4492,65.4089},
{555.0391,-1254.6552,17.1372},
{455.0098,-1501.4110,31.0467},
{271.2330,-1604.7446,33.3134},
{640.4678,-1354.2227,13.4831},
{922.6360,-1353.6182,13.3758},
{1293.1399,-1653.6362,13.5570},
{1350.9391,-1753.9152,13.4850},
{1477.2731,-1844.6471,13.6397},
{1735.4250,-1784.2798,13.8610},
{1845.9844,-1793.8119,13.6406}
};
RespawnNearbyVehicles(playerid, Float:radi)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    for(new i=1; i<MAX_VEHICLES; i++)
    {
        if(GetVehicleModel(i))
        {
            new Float:posx, Float:posy, Float:posz;
            new Float:tempposx, Float:tempposy, Float:tempposz;
            GetVehiclePos(i, posx, posy, posz);
            tempposx = (posx - x);
            tempposy = (posy - y);
            tempposz = (posz - z);
            if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
            {
                SetVehicleToRespawn(i);
            }
        }
    }
}
  zcmd(cnnn, playerid, params[])
{
    if(sscanf(params, "s[128]", params[0]))return SendClientMessage(playerid, -1, "USO: /cnnn [texto]");
    if(PlayerInfo[playerid][pJDS] >= 8)
    {
        GameTextForAll(params[0], 6000, 5);
    } else Message(playerid, COLOR_GRAD2, "No autorizado");
    return 1;
}
zcmd(clicencias, playerid, params[])
{
	if(!PlayerToPoint(4.0,playerid,2069.1609,-2217.1582,2664.6157))
	{
	Message(playerid, COLOR_WHITE, "Vé al centro de licencias para comprarlas");
	return 1;
	}
	if (PlayerInfo[playerid][pBusqueda] > 0)
	{
		Message(playerid, COLOR_WHITE, "Por orden del juez,al ser buscado por la policía, no puedes adquirir licencias.");
		return 1;
	}
	ShowPlayerDialog(playerid, DIALOG_LICENSE_BUY, DIALOG_STYLE_LIST, "Selecciona el tipo de licencia que deseas.", "Licencia de conducir ($90)\nLicencia de Navegación ($210)\nLicencia de Vuelo ($500)\nLicencia de Armas ($400)", "Comprar", "Cancelar");
	return 1;
}
//MATRIMONIO
zcmd(proponer, playerid, params[])
{
	if(GetPlayerMoney(playerid) < 50000) return Message(playerid, COLOR_GREY, "   El matrimonio y recepción cuesta 50000");
	new string[128];
	if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood, puedes usar el comando cada 1 minuto");
	if(sscanf(params, "d", params[0])) return Message(playerid, COLOR_WHITE, "USA: /proponer [ID]");
	if(IsPlayerConnected(params[0]))
	{
	    if(params[0] == playerid) return Message(playerid, COLOR_GREY, "No te puedes proponer a tí mismo!");
		if (ProxDetectorS(8.0, playerid, params[0]))
		{
			format(string, sizeof(string), "* Propusiste matrimonio a %s.", PlayerName(params[0]));
			Message(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s te propuso matrimonio.", PlayerName(playerid));
			Message(params[0], COLOR_LIGHTBLUE, string);
			Matrimonio[params[0]] = playerid;
			Proponerma[playerid] = 1;
			SetTimerEx("proponerflood",60000,0,"i",playerid);
			ShowPlayerDialog(params[0], MATRIMONIO_CONFIRM, DIALOG_STYLE_MSGBOX,"{018CFE}Iglesia", "{FFFFFF}Por favor selecione su respuesta","SI Acepto","NO Acepto");
		}
		else return Message(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
	}
	else Message(playerid, COLOR_GREY, "Jugador especificado no está conectado.");
	return 1;
}
//NAVIDAD
zcmd(psanta, playerid, params[]){
if(IsPlayerConnected(playerid))	{
SetPlayerAttachedObject(playerid, 3, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4, 1.4);
SendClientMessage(playerid, COLOR_GRAD2, "Gorro navideño colocado!");
}
return 1;
}

zcmd(qsanta, playerid, params[]){
if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
SendClientMessage(playerid, COLOR_GRAD2, "Gorro navideño quitado.");
return 1;
}
/// REGALO///
zcmd(premiumregalo, playerid, params[])  // By JunkBuster
{
	new string[128];
	if(PlayerToPoint(10,playerid, 673.7500,-1460.0553,497.9464))
	{
		if(PlayerInfo[playerid][pDonateT] >= 1)
		{
	        if(PlayerInfo[playerid][pBanDuda] != 0){
                new horass = PlayerInfo[playerid][pBanDuda]/60/60;
				new minutoss = PlayerInfo[playerid][pBanDuda]/60 - horass*60 ;
				format(string, sizeof(string), "* Para recibir tu regalo debes esperar %i horas con %d minutos .", horass, minutoss);
				return Message(playerid, COLOR_GRAD2, string);
	        }
            PlayerInfo[playerid][pBanDuda] = 80000;
            SetTimerEx("regalitopapa",5000,0,"i",playerid);
			Message(playerid, COLOR_GRAD2, "Estás abriendo los regalos, a ver qué es..");
		} else Message(playerid, COLOR_GRAD2, "Comando solo para premiums");
		} else Message(playerid, COLOR_GRAD2, "Aquí no puedes recoger el regalo");
	return 1;
}
forward regalitopapa(playerid);
public regalitopapa(playerid) {
    if(IsPlayerConnected(playerid))
    {
			new string[128];
			format(string, sizeof(string), "* %s [ Se lo puede ver rompiendo el envoltorio ] ", PlayerName(playerid));
			ProxDetector(10.0, playerid, string, COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN);
            format(string, sizeof(string), "* %s Rompe el envoltorio y mira el regalo", PlayerName(playerid));
            ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiftPlayer(playerid);
			}
			return 1;
			}
stock GiftPlayer(playerid) // playerid = gift receiver
{
		new string[128];
		new gift = RandomEx(1, 19);
		switch(gift)
		{
		    case 1:
		    {
		    	SafeGivePlayerWeapon(playerid, 4, 1);
		    	SafeGivePlayerWeapon(playerid, 24, 999);
		    	SafeGivePlayerWeapon(playerid, 31, 999);
		    	SafeGivePlayerWeapon(playerid, 25, 999);
		    	SafeGivePlayerWeapon(playerid, 29, 999);
	        	Message(playerid, -1, "Recibistes un set de armas!");
	        	format(string, sizeof(string), "* %s recibió un equipo de armas!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 2:
		    {
				PlayerInfo[playerid][pLevel]+= 2;
	        	Message(playerid, -1, "Recibistes 2 niveles!");
	        	format(string, sizeof(string), "* %s recibió 2 niveles más!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 3:
		    {
	        	PlayerInfo[playerid][pMats] += 100;
	        	Message(playerid, -1, " Recibistes 100 materiales!");
	        	format(string, sizeof(string), "* %s recibió 100 materiales!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 4:
		    {
				return GiftPlayer(playerid);
		    }
		    case 5:
		    {
	        	Earn(playerid, 400);
				Message(playerid, -1, "Recibistes $400 dólares!");
				format(string, sizeof(string), "* %s recibió $400 !", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 6:
		    {
	        	Earn(playerid, 20);
				Message(playerid, -1, "Recibistes $20 dólares!");
				format(string, sizeof(string), "* %s recibió $200 dólares!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 7:
		    {
	        	Earn(playerid, 100);
				Message(playerid, -1, " Recibistes $100 dólares!");
				format(string, sizeof(string), "* %s recibió $100 dólares!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 8:
		    {
		    	Earn(playerid, 150);
				Message(playerid, -1, "Recibistes $150 dólares!");
				format(string, sizeof(string), "*%s recibió $150 dólares!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 9:
		    {
		    	PlayerInfo[playerid][pMats] += 15000;
				Message(playerid, -1, " Recibistes 15mil materiales!");
				format(string, sizeof(string), "* %s recibió 15,000 materiales!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 10:
		    {
			    PlayerInfo[playerid][pExp] += 10;
				Message(playerid, -1, "Recibistes 10 puntos de experiencia!");
				format(string, sizeof(string), "* %s recibió 10 puntos de experiencia!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 11:
		    {
			    PlayerInfo[playerid][pExp] += 15;
				Message(playerid, -1, "Recibistes 15 puntos de experiencia!");
				format(string, sizeof(string), "* %s recibió 15 puntos de experiencia!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 13:
		    {
				PlayerInfo[playerid][pLevel]+= 1;
	        	Message(playerid, -1, " Recibistes 1 nivel!");
	        	format(string, sizeof(string), "* %s recibió 1 nivel más!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
           case 14:
		    {
				PlayerInfo[playerid][pLevel]+= 3;
	        	Message(playerid, -1, "Recibistes 3 niveles!");
	        	format(string, sizeof(string), "* %s recibió 3 niveles más!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    case 15:
		    {
			    PlayerInfo[playerid][pExp] += 5;
				Message(playerid, -1, "Recibistes 5 puntos de experiencia!");
				format(string, sizeof(string), "* %s recibió 5 puntos de experiencia!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
           case 16:
		    {
			    PlayerInfo[playerid][pGPS] += 2;
				Message(playerid, -1, "Recibistes 2 puntos de rol, te servirá en el futuro!");
				format(string, sizeof(string), "* %s recibió 2 puntos de experiencia!", PlayerName(playerid));
				Log("logs/regalos.log", string);
		    }
		    default: return GiftPlayer(playerid);
		    }
	    return 1;
}
zcmd(rpremnuevo,playerid, params[]){
	new string[128];
	if(sscanf(params, "d", params[0])) return Message(playerid, COLOR_WHITE, "USA: /rpremnuevo [ID]");
    if(PlayerInfo[playerid][pJDS] >= 1024){
		if(params[0] != INVALID_PLAYER_ID)
		{
		    format(string, sizeof(string), "%s borro la espera de regalo a %s", PlayerName(playerid), PlayerName(params[0]));
			ABroadCast(COLOR_RED, string, 2);
		    PlayerInfo[params[0]][pBanDuda] = 0;
		}
		else Message(playerid, COLOR_GRAD2, "Ese jugador no está conectado.");
	}
	return 1;
}
////// FIN DE REGALO
zcmd(puente, playerid, params[ ]) {
	    if( !IsPlayerConnected( playerid ) ) return 0;
        if( !Ganzuas[ playerid ] ) return Message( playerid, COLOR_GRAD2, "Primero necesitas una ganzua para hacer el puente" );
        new idcar = GetPlayerVehicleID(playerid);
        if(CarInfo[idcar][cOwned] == 0) return Message(playerid, COLOR_RED2, "No puedes usar ganzúas en coches a la venta.");
	    new engine, lights, alarm, doors, bonnet, boot, objective, car = GetPlayerVehicleID( playerid );
		GetVehicleParamsEx( car, engine, lights, alarm, doors, bonnet, boot, objective );
		new string[124];
		format(string, sizeof(string), "* %s utiliza unas ganzúas y cruza los cables.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    	SetTimerEx("StartingTheVehicle",2500,0,"i",playerid);
		GameTextForPlayer(playerid, "~w~Encendiendo motor.",2500,3);
		engineOn[ car ] = 1;
	    SetVehicleParamsEx( car, 1, lights, alarm, doors, bonnet, boot, objective );
	    return 1;
	}

zcmd(amotor, playerid, params[ ]) {
	    if (PlayerInfo[playerid][pJDS] < 2) return Message(playerid, COLOR_GREY, "¡No autorizado!");

	    new engine, lights, alarm, doors, bonnet, boot, objective, car = GetPlayerVehicleID( playerid );
		GetVehicleParamsEx( car, engine, lights, alarm, doors, bonnet, boot, objective );
		SetTimerEx("StartingTheVehicle",2500,0,"i",playerid);
		GameTextForPlayer(playerid, "~w~Encendiendo motor.",2500,3);
		engineOn[ car ] = 1;
	    SetVehicleParamsEx( car, 1, lights, alarm, doors, bonnet, boot, objective );
	    return 1;
	}

zcmd(aabrir, playerid, params[ ]) {
        if (PlayerInfo[playerid][pJDS] < 7) return Message(playerid, COLOR_GREY, "¡No autorizado!");
        new engine, lights, alarm, bonnet, boot, objective, car = IsPlayerInVehicleRadio(playerid, 5);
		SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
		Message(playerid, COLOR_GREEN, "Vehículo abierto");
		CarInfo[car][cLock] = 0;
        return 1;
     }
//------------------------------------------------------------------------------------------------------

main()
{
	print("-============= **GameWorld StarsCity RP** ================-");
	print("     |::|  GameWorld StarsCity |::| Tu Eliges Que Hacer  ");
	print("        	      - GM Empezada por Dexter -             ");
	print("-===================== *** ============================-");
	print("			All Rigth Reserverd 2013 - 2014					");
}

// -=========== AntiCheat ========-
function AntiCheat()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
     		new string[128];
	        new weaponid, ammo;
	        new plname[64];
	        new y, m, d;
	        new h,mi,s;
	        getdate(y,m,d);
	        gettime(h,mi,s);
	        GetPlayerName(i, plname, sizeof(plname));
	        if(PlayerInfo[i][pLevel] < 3)
	        {
			if (PlayerGotSpottedRecently[i] == 0)
				{
					if(ScriptWeaponsUpdated[i] == 0)
				    {
						for (new c = 2; c < 13; c++)
						{
							GetPlayerWeaponData(i, c, weaponid, ammo);
							if (weaponid != 0 && ammo != 0)
							{
								if (ScriptWeapons[i][c] != weaponid)
								{
								    new weapon[24]; GetWeaponName(weaponid, weapon, 24);
									format(string, sizeof(string),">> {FFFFFF}Sacaste un arma Cheat %s: Una %s (%d)",PlayerName(i),weapon,weaponid);
                                    SendClientMessage(i,COLOR_RED, string);
                                    SetTimerEx("Cheatweapn", 500, 0, "i", i);
								}
							}
						}
					}
				}
				}
   			if(PlayerInfo[i][pConnectTime] < 3 || PlayerInfo[i][pWRestricted] > 0)
			{
			ResetPlayerWeapons(i);
			}
			if(GetPlayerMoney(i) > ScriptMoney[i])
			{
			    new playerid;
			    if(!PlayerToPoint(90,playerid,2234.0159,1604.5325,1006.1797)){
			    SetMoneyToPlayer(i,ScriptMoney[i]);
			    return 1;}
			    else if(!PlayerToPoint(90,playerid,1951.9210,1018.4822,992.4688)){
			    SetMoneyToPlayer(i,ScriptMoney[i]);
			    return 1;}
			    else if(!PlayerToPoint(90,playerid,1129.2412,-2.9208,1000.6797)){
			    SetMoneyToPlayer(i,ScriptMoney[i]);
			    return 1;}
			}
			//·| Simple anti-cheat Armas >> =================|·
   if(GetPlayerWeapon(i) == 9) ResetPlayerWeapons(i);  // Motosierra
            //if(GetPlayerWeapon(i) == 16) ResetPlayerWeapons(i); // Granadas
            //if(GetPlayerWeapon(i) == 18) ResetPlayerWeapons(i); // Cocteles
   if(GetPlayerWeapon(i) == 26) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 28) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 32) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 35) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 36) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 37) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 38) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 39) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 40) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 44) ResetPlayerWeapons(i);
			if(GetPlayerWeapon(i) == 45) ResetPlayerWeapons(i);
            //·|=============================================|·
   	        new Float:health, Float:armor;
	        GetPlayerHealth(i, health);
	        GetPlayerArmour(i, armor);
   			if(health > PlayerInfo[i][pHealth])
	  		{
			    SetPlayerHealth(i, PlayerInfo[i][pHealth]);
	  		}
	  		if(armor > ScriptArmor[i])
			{
				GiveArmorToPlayer(i, ScriptArmor[i]);
			}
		}
	}
	return 1;
}

// -=========================-
/*  AntiCheat*/
#define GetPlayerMoney GetScriptMoney
#define ResetPlayerMoney MoneyResetToPlayer
#define GivePlayerMoney MoneyGiveToPlayer
#define SetPlayerMoney SetMoneyToPlayer
#define SetPlayerArmour GiveArmorToPlayer
// -=========================-


public DollahScoreUpdate()
{
	new LevScore;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
   			LevScore = PlayerInfo[i][pLevel];
			SetPlayerScore(i, LevScore);
		}
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new
		Float:cx, Float:cy, Float:cz;
		new newcar = GetPlayerVehicleID(playerid);

	///Auto en renta
	if(HireKey2[playerid] != 9999)
	{
	Message(playerid, COLOR_GREY, "Recuerda que tienes una bicicleta en renta, si no lo usaras mas usa /desrentarbici");
	return 1;
 	}
	if(HireKey[playerid] != 9999)
	{
	Message(playerid, COLOR_GREY, "Recuerda que tienes un auto en renta, si no lo usaras mas usa /desrentarveh");
	return 1;
 	}
	// -=========== Tuning Parts Load ===========- //
	if(IsAnOwnableCar(vehicleid))
	{
		AddCarTuning(vehicleid);
	}
	// ---=========== Embargo & Multa ============--- //
	if(IsAnOwnableCar(newcar))
	{
		if(CarInfo[vehicleid][cEmbargo] > 2)
		{
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPos(playerid, cx,  cy, cz);
			Message(playerid, COLOR_GRAD2, "Este vehículo esta embargado! No puede ser conducido.");
			return 1;
		}
	}
	// ---- //
	if (LSPD_IsACopCar(vehicleid) && !ispassenger)
	{
		if(Team_LSPD(playerid) || Team_LVPD(playerid)) return 1;
  		else GetPlayerPos(playerid, cx, cy, cz);	SetPlayerPos(playerid, cx,  cy, cz);
	}
	return 1;
}
public IsAnInstructor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==15)
		{
		    return 1;
		}
		if(leader==15)
		{
		    return 1;
		}
	}
	return 0;
}
public Team_LSPD(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	1)
		{
		    return 1;
		}
		else if(leader	==	1)
		{
		    return 1;
		}
	}
	return 0;
}
public Team_LVPD(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	2)
		{
		    return 1;
		}
		else if(leader	==	2)
		{
		    return 1;
		}
	}
	return 0;
}
public Team_NG(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	3)
		{
		    return 1;
		}
		else if(leader	==	3)
		{
		    return 1;
		}
	}
	return 0;
}
public Team_FBI(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	24)
		{
		    return 1;
		}
		else if(leader	==	24)
		{
		    return 1;
		}
	}
	return 0;
}
public Team_Taxi(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	6)
		{
		    return 1;
		}
		else if(leader	==	6)
		{
		    return 1;
		}
	}
	return 0;
}


public Team_Mecanicos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	7)
		{
		    return 1;
		}
		else if(leader	==	7)
		{
		    return 1;
		}
	}
	return 0;
}

public Team_SAMUR(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	4)
		{
		    return 1;
		}
		else if(leader	==	4)
		{
		    return 1;
		}
	}
	return 0;
}

public Team_LVMD(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	5)
		{
		    return 1;
		}
		else if(leader	==	5)
		{
		    return 1;
		}
	}
	return 0;
}

public Team_Groove(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	9)
		{
		    return 1;
		}
		else if(leader	==	9)
		{
		    return 1;
		}
	}
	return 0;
}

public Team_Hermandad(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	10)
		{
		    return 1;
		}
		else if(leader	==	10)
		{
		    return 1;
		}
	}
	return 0;
}

public Team_LK(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	11)
		{
		    return 1;
		}
		else if(leader	==	11)
		{
		    return 1;
		}
	}
	return 0;
}

public Team_Cripz(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	26)
		{
		    return 1;
		}
		else if(leader	==	26)
		{
		    return 1;
		}
	}
	return 0;
}

public Team_Blood(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	25)
		{
		    return 1;
		}
		else if(leader	==	25)
		{
		    return 1;
		}
	}
	return 0;
}

public Mafia_Italiana(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	12)
		{
		    return 1;
		}
		else if(leader	==	12)
		{
		    return 1;
		}
	}
	return 0;
}

public Mafia_Capone(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	22)
		{
		    return 1;
		}
		else if(leader	==	22)
		{
		    return 1;
		}
	}
	return 0;
}

public Mafia_Alemana(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	29)
		{
		    return 1;
		}
		else if(leader	==	29)
		{
		    return 1;
		}
	}
	return 0;
}

public Hitman(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	23)
		{
		    return 1;
		}
		else if(leader	==	23)
		{
		    return 1;
		}
	}
	return 0;
}
public CARGAR(playerid)
{
    new string[MAX_PLAYERS];
	SendClientMessage(playerid, COLOR_WHITE, "¡Listo Sal Corriendo!");
	Freezed[playerid] = 0;
	TogglePlayerControllable(playerid, 1);
    format(string, sizeof(string), " %s Deja De Meter El Dinero En El Bolso Y Sale Corriendo", PlayerName(playerid));
    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}
public Mafia_Yakuza(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	13)
		{
		    return 1;
		}
		else if(leader	==	13)
		{
		    return 1;
		}
	}
	return 0;
}

public Mafia_Alqaeda(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	27)
		{
		    return 1;
		}
		else if(leader	==	27)
		{
		    return 1;
		}
	}
	return 0;
}

public Mafia_Espanola(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	28)
		{
		    return 1;
		}
		else if(leader	==	28)
		{
		    return 1;
		}
	}
	return 0;
}

public Mafia_Rusa(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	14)
		{
		    return 1;
		}
		else if(leader	==	14)
		{
		    return 1;
		}
	}
	return 0;
}
forward Mafioso(playerid);
public Mafioso(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	12 || member	==	13 || member	==	14 || member	==	22)
		{
		    return 1;
		}
		else if(leader	==	12 || leader	==	13 || leader	==	14 || leader	==	22)
		{
		    return 1;
		}
	}
	return 0;
}

public Pandilleros(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	9 || member	==	10 || member	==	11 || member	==	25 || member	==	26)
		{
		    return 1;
		}
		else if(leader	==	9 || leader	==	10 || leader	==	11 || leader	==	25 || leader	==	26)
		{
		    return 1;
		}
	}
	return 0;
}

public TriadasTeam(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	20)
		{
		    return 1;
		}
		else if(leader == 20)
		{
		    return 1;
		}
	}
	return 0;
}
forward TraficantesTeam(playerid);
public TraficantesTeam(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	19)
		{
		    return 1;
		}
		else if(leader == 19)
		{
		    return 1;
		}
	}
	return 0;
}

public Journalist(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	17)
		{
		    return 1;
		}
		else if(leader == 17)
		{
		    return 1;
		}
	}
	return 0;
}
public Gobierno(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pMember]==16)
		{
		    return 1;
		}
		else if(PlayerInfo[playerid][pLeader]==16)
		{
		    return 1;
		}
	}
	return 0;
}

forward IsANarco(playerid);
public IsANarco(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	19)
		{
		    return 1;
		}
		else if(leader == 19)
		{
		    return 1;
		}
	}
	return 0;
}
forward AutosGPS(carid);
public AutosGPS(carid)
{
if((carid >= 1) && (carid <= 232) || (carid >= 241) && (carid <= 257))
{
return 1;
}
return 0;
}
forward Rastreo(carid);
public Rastreo(carid)
{
if((carid >= 1) && (carid <= 232) || (carid >= 241) && (carid <= 257))
{
return 1;
}
return 0;
}
public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	1 || member	==	2 || member	==	3 || leader	==	24 || leader == 16)
		{
		    return 1;
		}
		else if(leader	==	1 || leader	==	2 || leader	==	3 || member	==	24 || leader == 16)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAMedic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==4 || member==24)
		{
		    return 1;
		}
		else if(leader==4 || leader==24)
		{
		    return 1;
		}
	}
	return 0;
}

public Umbrella7(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==8)
		{
		    return 1;
		}
		else if(leader==8)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAnOwnableCar(vehicleid)
{
	if(vehicleid >= VV && vehicleid < VEH) { return 1; }
	return 0;
}
public IsAtDealership(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(30.0,playerid,544.5143,-1280.5714,17.2482)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,1045.3408,-905.2751,42.6273)) { return 1; }
	    else if(PlayerToPoint(20.0,playerid,2127.8521,-1136.7180,25.4998)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,2154.8784,-1168.1487,23.8213)) { return 1; }
	}
	return 0;
}

public IsAtClothShop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(30.0,playerid,207.7432,-135.1565,1002.8672)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,211.7609,-7.6523,1001.2109)) { return 1; }
	    else if(PlayerToPoint(20.0,playerid,207.7558,-103.3743,1005.2578)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,204.3302,-163.6257,1000.5234)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,203.8821,-43.6424,1001.8047)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,-1828.5704,55.5554,1055.1891)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,205.1405,-159.3510,1000.5234)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,203.2634,-159.3801,1000.5234)) { return 1; }
	}
	return 0;
}

public IsAt247(playerid){
    if(IsPlayerConnected(playerid)){
		if(PlayerToPoint(5.0,playerid,-1833.8270,62.3936,1055.1891)) { return 1; } //intaero
		else if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-28.7605,-185.1333,1003.5469)) { return 1; } //LV 1er 24-7
		else if(PlayerToPoint(5.0,playerid,-10.3085,-178.2465,1003.5469)) { return 1; } // LV 1er 24-7 >
		else if(PlayerToPoint(5.0,playerid,2.3437,-29.0118,1003.5494)) { return 1; } //LV 2do 24-7
		else if(PlayerToPoint(5.0,playerid,-28.0818,-89.9434,1003.5469)) { return 1; } //LV 3er 24-7
	}
	return 0;
}

public LugaresMapas(playerid){
    if(IsPlayerConnected(playerid)){
		if(PlayerToPoint(5.0,playerid,1505.15, -1740.25, 13.39)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1757.51, -1865.24, 13.39)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,204.64, -1457.91, 12.86)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1006.72, -952.08, 42.03)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1413.72, -1025.69, 23.64)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1924.68, -1759.70, 13.36)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1953.42, -2093.50, 13.37)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1673.36, -2242.31, 13.36)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1608.49, -1878.95, 13.36)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1180.13, -1387.50, 13.34)) { return 1; }
	}
	return 0;
}
public Comprarrapida(playerid){
    if(IsPlayerConnected(playerid)){
		if(PlayerToPoint(5.0,playerid,389.2946,-2072.7144,7.8359)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1479.58, -1677.91, 14.08)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1474.32, -1692.75, 14.02)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1474.96, -1704.05, 14.11)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1359.35, -1748.55, 13.35)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1358.74, -1755.30, 13.55)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1359.95, -1752.11, 13.37)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,379.07, -2075.11, 7.98)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,384.87, -2058.28, 7.98)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,376.78, -2043.83, 7.95)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,364.91, -2040.62, 8.24)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,374.96, -2022.04, 8.24)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,354.50, -1360.15, 14.45)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,344.80, -1365.06, 14.45)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1100.3676,-1383.1899,13.7813)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1101.1132,-1380.3010,13.7813)) { return 1; }
	}
	return 0;
}
public IsAtATM(playerid){
    if(IsPlayerConnected(playerid)){
		if(PlayerToPoint(2.0,playerid,1144.09912109,-1766.47509766,13.42406273)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1269.66125488,-1323.76599121,13.40214443)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2823.22656250,-1593.80871582,11.00387192)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1589.39196777,-2295.21191406,13.46932220)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1591.40454102,-2295.21191406,13.46932220)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1593.41723633,-2295.21191406,13.46932220)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,450.53472900,-1794.50781250,5.43714857)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1415.19128418,-1020.33685303,23.73026848)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1417.67700195,-1020.33593750,23.73026848)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1834.3936,-1852.0573,13.3897)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1498.6565,-1749.2366,15.4453)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1832.2637,-1851.1232,13.5781)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1187.0133,-1372.0013,13.5532)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,-1836.5343,63.8226,1055.1891)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2389.5063,2463.1174,-18.9097)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2194.9548,1987.3466,11.9397)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2102.2839,2232.3730,10.6729)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2241.4885,2396.2126,10.4632)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2366.1027,2390.7961,10.4632)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1586.7575,2282.1516,10.4382)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1656.7951,1736.2521,10.4531)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1595.3283,1819.4301,10.4632)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2548.7937,1972.6666,10.4632)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1986.31164551,1032.39318848,994.11163330)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1985.16857910,1032.44360352,994.11163330)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1984.10278320,1032.45483398,994.11163330)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2243.82958984,1635.48583984,1008.00225830)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2243.13256836,1636.34326172,1008.00225830)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2244.51977539,1634.61279297,1008.00915527)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1141.86743164,12.01311207,1000.32257080)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1141.03833008,12.01311016,1000.32257080)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1140.20922852,12.01310825,1000.32257080)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1456.9540,-1754.8099,13.5469)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1505.2412,-1754.8859,13.5469)) { return 1; }
	}
	return 0;
}

forward IsAtBank(playerid);
public IsAtBank(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(8.0,playerid,344.5987,134.3012,1007.9657)) { return 1; }
		else if(PlayerToPoint(8.0,playerid,347.0113,133.3898,1007.9657)) { return 1; }
		else if(PlayerToPoint(8.0,playerid,358.8446,-1627.3136,39.2349)) { return 1; }
		else if(PlayerToPoint(8.0,playerid,349.0368,132.7026,1007.9657)) { return 1; }
        else if(PlayerToPoint(8.0,playerid,2397.2546,2474.4248,-18.9097)) { return 1; }
		else if(PlayerToPoint(8.0,playerid,2397.2546,2474.4248,-18.9097)) { return 1; } // pc int lv
		else if(PlayerToPoint(8.0,playerid,2389.5063,2463.1174,-18.9097)) { return 1; } //atm int lv
		else if(PlayerToPoint(8.0,playerid,-2184.4404,887.8708,96.9397)) { return 1; } //atm Hitman
		else if(PlayerToPoint(8.0,playerid,1475.5171,-1781.6884,15.3578)) { return 1; } //atm Hitman
		else if(PlayerToPoint(8.0,playerid,2395.6118,2474.4248,-18.9096)) { return 1; } //atm Hitman
	}
	return 0;
}

public IsAtBowling(playerid){
	if(IsPlayerConnected(playerid)){
	    if(PlayerToPoint(1.0,playerid, -2355.6067,920.6121,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.7280,914.9425,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.5491,910.4331,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.8269,905.1210,93.8007)) return 1;
	}
	return 0;
}

public IsAtCasino(playerid){
	if(IsPlayerConnected(playerid)){
	    if(PlayerToPoint(1.0,playerid, -2355.6067,920.6121,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.7280,914.9425,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.5491,910.4331,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.8269,905.1210,93.8007)) return 1;
	}
	return 0;
	}

public IsAtGasStation(playerid){
    if(IsPlayerConnected(playerid)){
  	if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,2114.5444,920.1169,10.8203) || PlayerToPoint(8.0,playerid,2640.6272,1106.5349,10.8203))
		{//SF
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,1625.0463,-2167.6428,13.4402) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,1637.0149,2331.5129,10.8722) || PlayerToPoint(6.0,playerid,1636.6686,2325.8711,10.8722))
		{
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,1636.6140,2320.6423,10.8722) || PlayerToPoint(6.0,playerid,1595.5337,2198.9404,10.8203))
		{
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,656.4265,-559.8610,16.5015) || PlayerToPoint(6.0,playerid,656.3797,-570.4138,16.5015))
		{//Dillimore
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,1002.3484,1148.2969,10.7812) || PlayerToPoint(8.0,playerid,-1670.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,283.9060,1820.8003,17.6406) || PlayerToPoint(8.0,playerid,-1678.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2664.1377,-286.2357,7.0391) || PlayerToPoint(8.0,playerid,-2652.1101,-296.5107,7.0391))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2963.2998,469.7753,4.9141) || PlayerToPoint(8.0,playerid,-2964.1790,458.7191,4.9141))
		{//tony
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,1609.3833,714.6309,10.8203) || PlayerToPoint(8.0,playerid,1500.3833,714.6309,10.8203))
		{//tony
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2615.3562,2264.6477,8.2024) || PlayerToPoint(8.0,playerid,-2614.7432,2249.6785,8.1908))
		{//tony
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,1909.6431,745.2621,10.8203) || PlayerToPoint(8.0,playerid,-2619.7432,2258.6785,8.1908))
		{//tony
		    return 1;
		}
	}
	return 0;
}

public IsAtBankPC(playerid)
{
    if(IsPlayerConnected(playerid))
	{
  		if(PlayerToPoint(2.0,playerid,345.1723,112.4987,1008.1844))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,332.2355,131.8926,1007.9657))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,328.6550,133.1282,1007.9657))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,325.3320,134.3175,1007.9657))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,319.2887,129.9121,1007.9657))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,318.6598,139.2090,1007.9730))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,319.9251,143.0148,1007.9657))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,327.4160,140.7461,1007.9657))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,363.4494,-1621.0732,39.2349))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,358.7278,-1621.1254,39.2427))
		{
		    return 1;
		}


	}
	return 0;
}

public IsAtTaller(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(80.0,playerid,2646.5554,-2022.9615,13.5469))
		{// Hermandad
		    return 1;
		}
		if(PlayerToPoint(50.0,playerid,1624.8302,-2154.9270,13.5547))
		{// LS
		    return 1;
		}
		else if(PlayerToPoint(20.0,playerid,-1528.1193,301.4527,53.1754))
		{// LV
		    return 1;
		}
		else if(PlayerToPoint(20.0,playerid,613.0524,-124.2267,997.9922))
		{// LV
		    return 1;
		}
		else if(PlayerToPoint(20.0,playerid,1603.8342,2376.0271,10.8203) || PlayerToPoint(20.0,playerid,1615.6462,2376.8767,10.8203))
		{// LV
		    return 1;
		}
		else if(PlayerToPoint(20.0,playerid,1629.5187,2376.5425,10.8203))
		{
		    return 1;
		}
		else if(PlayerToPoint(20.0,playerid,1392.4761,-1620.5406,13.5469) || PlayerToPoint(20.0,playerid,1409.2815,-1617.8781,13.5395))
		{// LV
		    return 1;
		}
		else if(PlayerToPoint(60.0,playerid,2947.8955,-342.8568,4.9817))
		{// Puerto
		    return 1;
		}
		else if(PlayerToPoint(60.0,playerid,1618.1917,713.4023,10.8203))
		{// Puerto
		    return 1;
		}
    }
	return 0;
 }

public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(10.0,playerid,496.3752,-76.0410,998.7578))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,1394.5117,-1886.7684,17.5459))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,499.9703,-20.3358,1000.6797))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,1779.2051,-1556.7195,-49.6550))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,1215.9480,-13.3519,1000.9219))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,1259.2834,-791.0306,1084.0078))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,681.2731,-453.8256,-25.6172))
		{
		    return 1;
		}
		if(PlayerToPoint(10.0,playerid,2195.4297,1605.2683,1005.0625))
		{
		    return 1;
		}
		if(PlayerToPoint(10.0,playerid,1141.1832,-4.9137,1000.6719))
		{
		    return 1;
		}
		if(PlayerToPoint(10.0,playerid,1952.2130,1017.5355,992.4688))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,1156.4934,1148.2697,10.8203))
		{
		    return 1;
		}
			else if(PlayerToPoint(10.0,playerid,1351.9426,-658.4673,114.0349))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,-2874.7839,495.3918,4.9933))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,436.8553,-1912.8513,1.4026))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,-2619.1152,-248.1632,18.8695))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,678.5450,-1466.0713,497.9464))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,-86.3768,-1599.4509,2.7094))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,-3138.8752,497.8488,4.7136))
		{
		    return 1;
		}
		else if(PlayerToPoint(10.0,playerid,199.0615,1353.5216,10.6525))
		{
		    return 1;
		}
			else if(PlayerToPoint(10.0,playerid,379.1582,-186.6152,1000.6328))
		{
		    return 1;
		}
//////////////////////////// Comer Donuts ////////////////////

		if(PlayerToPoint(10.0,playerid,379.2213,-186.7347,1000.6328))
		{
		    return 1;

        }
//////////////////////////// Comer Uniti ////////////////////

		if(PlayerToPoint(10.0,playerid,-1827.6118,136.9740,15.3300))
		{
		    return 1;

        }
//////////////////////////// Comer Motion ////////////////////

		if(PlayerToPoint(10.0,playerid,-224.7805,1404.5708,27.7734))
		{
		    return 1;

        }
//////////////////////////// Comer Bar Grove ////////////////////

		if(PlayerToPoint(10.0,playerid,497.3301,-76.0386,998.7578))
		{
		    return 1;

        }
//////////////////////////// Comer Kenta ////////////////////

		if(PlayerToPoint(10.0,playerid,-785.7248,500.2136,1371.7490))
		{
		    return 1;

        }
//////////////////////////// Fin Comer ////////////////////
	}
	return 0;
}


public IsAPlane(carid)
{
	if(carid == 150 || carid == 151 || carid == 168 || carid == 169 || carid == 170 || (carid >= 118) && (carid <= 124))
	{
		return 1;
	}
	return 0;
}

public LSPD_IsACopCar(carid)
{
	if((carid >= 1) && (carid <= 19) || (carid >= 187) && (carid <= 188) || carid == 254 || carid == 255 || (carid >= 301) && (carid <= 304))
	{
		return 1;
	}
	return 0;
}

public FBI_Vehicle(carid)
{
	if((carid >= 242) && (carid <= 245) || (carid >= 28) && (carid <= 31)|| (carid >= 248) && (carid <= 250))
	{
		return 1;
	}
	return 0;
}

public Taxi_Vehicle(carid)
{
	if((carid >= 20) && (carid <= 23) || carid == 26 || carid == 27)
	{
		return 1;
	}
	return 0;
}
public Carrorenta(carid)
{
	if((carid >= 132) && (carid <= 138)|| (carid >= 164) && (carid <=167) || (carid >= 174) && (carid <=181) || (carid >= 292) && (carid <=297))
	{
		return 1;
	}
	return 0;
}
public Bus_Vehicle(carid)
{
	if((carid >= 34) && (carid <= 35))
	{
		return 1;
	}
	return 0;
}

public SAMD_Vehicle(carid)
{
	if((carid >= 36) && (carid <= 44))
	{
		return 1;
	}
	return 0;
}


public GSocial_Vehicle(carid)
{
	if((carid >= 36) && (carid <= 44))
	{
		return 1;
	}
	return 0;
}

public ALQAEDA_Vehicle(carid)
{
	if((carid >= 139) && (carid <= 141) || (carid >= 257) && (carid <= 261) || carid == 196 || carid == 197)
	{
		return 1;
	}
	return 0;
}

public Espanol_Vehicle(carid)
{
	if((carid >= 200) && (carid <= 207) || carid == 107)
	{
		return 1;
	}
	return 0;
}

/*
public LVMD_Vehicle(carid)
{
	if((carid >= 212) && (carid <= 219))
	{
		return 1;
	}
	return 0;
}
*/

public SAEM_Vehicle(carid) // Coches Saem //
{
	if((carid >= 220) && (carid <= 241)||(carid >= 229) && (carid <= 244) || carid == 299 || carid == 300)
	{
		return 1;
	}
	return 0;
}
public Gobierno_Vehicle(carid)
{
    if((carid >= 102) && (carid <= 106) || carid == 142 || carid == 305)
	{
		return 1;
	}
	return 0;
}

public LH_Vehicle(carid)
{
	if((carid >= 45) && (carid <= 51))
	{
		return 1;
	}
	return 0;
}

public GS_Vehicle(carid)
{
	if((carid >= 52) && (carid <= 57))
	{
		return 1;
	}
	return 0;
}

public LK_Vehicle(carid)
{
	if((carid >= 58) && (carid <= 63))
	{
		return 1;
	}
	return 0;
}

public Blood_Vehicle(carid)
{
	if((carid >= 262) && (carid <= 269))
	{
		return 1;
	}
	return 0;
}

forward Cripz_Vehicle(carid);
public Cripz_Vehicle(carid)
{
	if((carid >= 270) && (carid <= 275))
	{
		return 1;
	}
	return 0;
}

forward Hitman_Vehicle(carid);
public Hitman_Vehicle(carid)
{
	if((carid >= 276) && (carid <= 281) || carid == 306)
	{
		return 1;
	}
	return 0;
}

public Mecanico_Vehicle(carid)
{
	if((carid >= 64) && (carid <= 67))
	{
		return 1;
	}
	return 0;
}

public U7_Vehicle(carid)
{
	if((carid >= 80) && (carid <= 83) || carid == 75 || carid == 77 || carid == 78)
	{
		return 1;
	}
	return 0;
}

forward Triadas_Veh(carid);
public Triadas_Veh(carid)
{
	if((carid >= 182) && (carid <= 186) || (carid >= 70) && (carid <= 74))
	{
		return 1;
	}
	return 0;
}

public Ita_Vehicle(carid)
{
	if((carid >= 84) && (carid <= 89) || (carid >= 216) && (carid <= 219) || (carid >= 259) && (carid <= 260))
	{
		return 1;
	}
	return 0;
}

public Yak_Vehicle(carid)
{
	if((carid >= 90) && (carid <= 93) || (carid >=208) && (carid <= 215))
	{
		return 1;
	}
	return 0;
}

public Rus_Vehicle(carid)
{
	if((carid >= 94) && (carid <= 101))
	{
		return 1;
	}
	return 0;
}

public CNN_Vehicle(carid)
{
	if((carid >= 111) && (carid <=117) || (carid >= 125) && (carid <=127))
	{
		return 1;
	}
	return 0;
}
/*
public Bank_Vehicle(carid)
{
	if((carid >= 125) && (carid <=127))
	{
		return 1;
	}
	return 0;
}
*/
public Narco_Vehicle(carid)
{
	if((carid >= 152) && (carid <=163))
	{
		return 1;
	}
	return 0;
}

public Harvest_Vehicle(carid)
{
	if((carid >= 152) && (carid <=154))
	{
		return 1;
	}
	return 0;
}

public Romero_Vehicle(carid)
{
	if((carid >= 155) && (carid <=157))
	{
		return 1;
	}
	return 0;
}

public Hire_Vehicle(carid)
{
	if((carid >= 132) && (carid <=138)|| (carid >= 164) && (carid <=167) /*|| (carid >= 174) && (carid <=181)*/ || (carid >= 292) && (carid <=297))
	{
		return 1;
	}
	return 0;
}
forward Capone_Veh(carid);
public Capone_Veh(carid)
{
	if((carid >= 128) && (carid <= 131) || (carid >= 108 && carid <= 110) ||(carid >= 198) && (carid <= 199) || (carid >= 68) && (carid <= 69) || (carid >= 246) && (carid <= 247))
	{
		return 1;
	}
	return 0;
}
forward Alemana_Veh(carid);
public Alemana_Veh(carid)
{
	if((carid >= 32) && (carid <= 33) || (carid >= 24 && carid <= 25) ||(carid >= 251) && (carid <= 252) || carid == 76 || carid == 79 || carid == 256)
	{
		return 1;
	}
	return 0;
}
public IsARentCar(carid)
{
	if((carid >= 151) && (carid <= 185))
	{
	    return 1;
	}
	return 0;
}
public IsARentCar2(carid)
{
	if((carid >= 174) && (carid <= 181))
	{
	    return 1;
	}
	return 0;
}

public IsAnAmbulance(carid)
{
	if((carid >= 52) && (carid <= 55))
	{
		return 1;
	}
	return 0;
}

public IsABike(carid)
{
 if(GetVehicleModel(carid) == 509 || GetVehicleModel(carid) ==  481|| GetVehicleModel(carid) == 510)
	{
		return 1;
	}
	return 0;
}


public IsAPizzabike(carid)
{
	if(carid >= 189 && carid <= 195)
	{
		return 1;
	}
	return 0;
}

public IsATrain(carid)
{
	if(carid == 143)
	{
		return 1;
	}
	return 0;
}

public IsAHelado(carid)
{
	if(carid >= 282 && carid <= 286)
	{
		return 1;
	}
	return 0;
}

public IsACamion(carid)
{
	if(carid >= 287 && carid <= 291)
	{
		return 1;
	}
	return 0;
}

public IsASweeper(carid)
{
	if(carid == 147 || carid == 148 || carid == 149 || carid == 171 || carid == 172 || carid == 173)
	{
		return 1;
	}
	return 0;
}

forward UnusedCar(carid)
public UnusedCar(carid)
{
	return 0;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerConnect(playerid)
{
	////
	// Init all of the textdraw related globals
    gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;

    for(new x=0; x < SELECTION_ITEMS; x++) {
        gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;
	}

	gItemAt[playerid] = 0;
	////Autos Dinamicos
    //ClearChar(playerid);

	////textdrawinicio
	PlayAudioStreamForPlayer(playerid,"http://tegos.kz/new/mp3_full/Avicii_feat_Aloe_Blacc_-_Wake_Me_Up.mp3"); // Reproduce la música
	TextDrawShowForPlayer(playerid, Textdrawinicio);
    /////////////////////////////////////////////
	new ipstring[128];
	new PlayerIP[128];
	new year, month,day;
	new hour, minute;
	GetPlayerIp(playerid,PlayerIP, sizeof(PlayerIP));
	getdate(year, month, day);
	gettime(hour,minute);
	format(ipstring, sizeof(ipstring), "NOMBRE: %s IP: %s DATOS ( %d/%d/%d - HORA: %d:%d )\r\n", PlayerName(playerid),PlayerIP, day, month, year,hour, minute);
    IPLog(ipstring);

	RemoveObjetos(playerid);
	SendClientMessage(playerid, COLOR_GREY, "Cargando datos...");
	new string[500];
    new plname[MAX_PLAYER_NAME];
    PLuces[playerid] = 0;
    bites[playerid][xenonazulb] = 0;
	bites[playerid][xenonrojob] = 0;
	bites[playerid][xenonverdeb] = 0;
    GetPlayerName(playerid, plname, sizeof(plname));
    new namestring = strfind(plname, "_", true);
 	if(namestring == -1)
	{
		SendClientMessage(playerid, COLOR_YELLOW2, "=== GameWorld RP ===-");
		SendClientMessage(playerid, COLOR_YELLOW2, "Su nombre debe ser en el formato Nombre_Apellido - Ejemplo: Lucia_Villa");
		Kick(playerid);
		return 1;
	}
	gActivePlayers[playerid]++;
	numplayers++;
    InPaintballDM[playerid] = 0; 	PaintballDMKills[playerid] = 0;	InPaintballTvT[playerid] = 0; InTvTNaranja[playerid] = 0;
    MensajeMuriendo[playerid] = 0; ForbidHandsUp[playerid]=0; Left4Life[playerid]=0; MsgL4L[playerid]=0; Rescued[playerid] = 0;
 	RegText[playerid] = 0;	RegConfig[playerid] = 0; PuedePresionar[playerid] = true; ClothesMenu[playerid] = false; Accesory[playerid] = 0;
	HidePM[playerid] = 0; PhoneOnline[playerid] = 0;UsedFind[playerid] = 0;Freezed[playerid] = 0; FreezeLast[playerid] = 0;Condom[playerid] = 0;TalkingLive[playerid] = 0; LiveOffer[playerid] = 999; TakingLesson[playerid] = 0;
	MapIconsShown[playerid] = 1; IsPractising[playerid] = 0;PlayerCuffed[playerid] = 0;	PlayerTazeado[playerid] = 0;Tazer[playerid] = 0;	RStep[playerid] = 0;
	OnDuty[playerid] = 0; Muted[playerid] = 0; Saludo_ID[playerid] = 999; EquipoMeca[playerid] = 0;
	Train_Route[playerid] = 0; 	Plane_Route[playerid] = 0;	PlayerIsSweeping[playerid] = 0; PlayerIsRuta[playerid] = 0; AFK[playerid] = 0; AFKTime[playerid] = 0; Matrimonio[playerid] = 999;
	TransportDuty[playerid] = 0;	MechanicCallTime[playerid] = 0;	Mobile[playerid] = 255; duda[playerid] = 3;
	Spectate[playerid] = 255; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	Unspec[playerid][sLocal] = 255;	Blinded[playerid] = 0; Tied[playerid] = 0;	Revisado[playerid] = 0;    First_Spawn[playerid] = 1;
	gOoc[playerid] = 0; gNews[playerid] = 0; BigEar[playerid] = 0; gFam[playerid] = 0; FailTuto[playerid] = 0; gpre[playerid] = 0;
	MyKillContracted[playerid] = "Nadie"; MyKillContract[playerid] = 0;
	gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0; gPlayerAccount[playerid] = 0; See_MP[playerid] = 0;
	gPlayerSpawned[playerid] = 0;	PlayerTazeTime[playerid] = 0;	TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; 
	Delivery[playerid] = 0; TutTime[playerid] = 0; HireKey[playerid] = 9999; HireKey2[playerid] = 9999; Activandomusica[playerid] = 0;
	TaxiAccepted[playerid] = 999; BuyNarco[playerid] = 999;
	PlayerInfo[playerid][pCash] = dollah; NoFuel[playerid] = 0; DeathPlayer[playerid] = 0; Premiumcolor[playerid] = 0;
	PlayersChannel[playerid] = 999; Editing[playerid] = 0;
	TransportValue[playerid] = 0; TransportMoney[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = 999; Proponerma[playerid] = 0;
	GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	gEngine[playerid] = 0; JustDied[playerid] = 0; KnockedDown[playerid] = 0; UnidentifedCall[playerid] = 0;
	LicenseOffer[playerid] = 999; LicensePrice[playerid] = 0; LicenseType[playerid] = 0; UsingDrugs[playerid] = 0; UsingSpeed[playerid] = 0; SpeedEffect[playerid] = 0; UsingEctasy[playerid] = 0; EctasyEffect[playerid] = 0; UsingRitalin[playerid] = 0; RitalinEffect[playerid] = 0; UsingMarihuana[playerid] = 0; MarihuanaEffect[playerid] = 0; MarihuanaBeat[playerid] = 0; UsingHeroina[playerid] = 0; HeroinaEffect[playerid] = 0; HeroinaBeat[playerid] = 0; AfterTutorial[playerid] = 0;
	OwnableCarOffer[playerid] = 999; OwnableCarID[playerid] = 999; OwnableCarPrice[playerid] = 0; BlindFold[playerid] = 0; PlayerIsSweeping[playerid] = 0; AdminDuty[playerid] = 0; JustReported[playerid] = 0; PlayerNeedsHelp[playerid] = 0; Llamadas[playerid] = 0; AdminSpec[playerid] = 0; IsSmoking[playerid] = 0; IsSmokingPorro[playerid] = 0; UsingSmokeAnim[playerid] = 0; ReduceTime[playerid] = 0;
	CancerEffect[playerid] = 0;	//CarInfo2[playerid][vVeh] = 0; CarInfo2[playerid][vModel] = 0; CarInfo2[playerid][vvX] = 0; CarInfo2[playerid][vvY] = 0; CarInfo2[playerid][vvZ] = 0; CarInfo2[playerid][vvA] = 0; CarInfo2[playerid][vC1] = 0; CarInfo2[playerid][vC2] = 0; CarInfo2[playerid][vLocked] = 0;
	PlayerDuda[playerid] = 0
	PlayerSol[playerid] = 0
	RadioOn[playerid] = 0; Mochila[playerid][0] = 0; Mochila[playerid][1] = 0;
	ComproBoleto[playerid] = 0;
	EpilepsiaCrack[playerid] = 0;
	SIDA[playerid] = 0;
	Flood[playerid] = 0;
	DengueRand[playerid] = 0;
	Dengue[playerid] = 0;
	JobDuty[playerid] = 0;
	PizzaCallTime[playerid] = 0;
	sPizza[playerid] = 0;
	bPizza[playerid] = 0;
	Helado[playerid] = 0;
	duda[playerid] = 0;
	TaxiCalled[playerid] = 999;
	PuedeP[playerid] = 0; PFrecuencia[playerid] = 0;
	TelfRob[playerid] = 0; PickLock[playerid] = 0; Alambre[playerid] = 0;
	cEnergysil[playerid] = 0; cNicotina[playerid] = 0; cSIDA[playerid] = 0; cCancer[playerid] = 0; cEpilepsia[playerid] = 0;
	Facturing[playerid] = 0; fPay[playerid] = 0; fDest[playerid] = 0; fFacturer[playerid] = 0;
	RequestingBackup[playerid] = 0;
    Refueling[playerid] = -1;
    AdminTemp[playerid] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pJDS] = 0; PlayerInfo[playerid][pSuciedad] = 0; PlayerInfo[playerid][pFacciones] = 0;
	PlayerInfo[playerid][pResetAdmin] = 0;
	PlayerInfo[playerid][pDudasAtendidas] = 0;
	PlayerInfo[playerid][pReportesAtendidos] = 0;
	PlayerInfo[playerid][pSolicitudes] = 0;
    PlayerInfo[playerid][pDarpremium] = 0;
	PlayerInfo[playerid][pYoutuber] = 0; 
	PlayerInfo[playerid][pWRestricted] = 0;
	PlayerInfo[playerid][pAyudante] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pOrigin] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pAccount] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pROBO] = 0;
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pPapel] = 0;
	PlayerInfo[playerid][pContract] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pSpeed] = 0;
	PlayerInfo[playerid][pEctasy] = 0;
	PlayerInfo[playerid][pRitalin] = 0;
	PlayerInfo[playerid][pHeroina] = 0;
	PlayerInfo[playerid][pMarihuana] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pGSocial] = 0;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pChar] = 0;
	PlayerInfo[playerid][pHealth] = 50.0;
	PlayerInfo[playerid][pArmour] = 0.0;
    PlayerInfo[playerid][pPos_x] = 1612.3240;
	PlayerInfo[playerid][pPos_y] = -2330.1670;
	PlayerInfo[playerid][pPos_z] = 13.5469;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pModel] = 7;
	PlayerInfo[playerid][pPnumber] = 0;
	PlayerInfo[playerid][pPcarkey] = 9999;
	PlayerInfo[playerid][pBizz] = 255;
	PlayerInfo[playerid][pPcarkey2] = 9999;
	PlayerInfo[playerid][pPhousekey] = 9999;
	PlayerInfo[playerid][pPhousekey2] = 9999;
	PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pGafas] = 0;
	PlayerInfo[playerid][pTut] = 0;
	strmid(PlayerInfo[playerid][pAntecedente1], "None", 0, strlen("None"), 64);
	strmid(PlayerInfo[playerid][pAntecedente2], "None", 0, strlen("None"), 64);
	strmid(PlayerInfo[playerid][pAntecedente3], "None", 0, strlen("None"), 64);
	strmid(PlayerInfo[playerid][pNote1], "None", 0, strlen("None"), 64);
	PlayerInfo[playerid][pNote1s] = 0;
	strmid(PlayerInfo[playerid][pNote2], "None", 0, strlen("None"), 64);
	PlayerInfo[playerid][pNote2s] = 0;
	strmid(PlayerInfo[playerid][pNote3], "None", 0, strlen("None"), 64);
	PlayerInfo[playerid][pNote3s] = 0;
	strmid(PlayerInfo[playerid][pSMS_1], "Vacío", 0, strlen("Vacío"), 128);
    strmid(PlayerInfo[playerid][pSMS_2], "Vacío", 0, strlen("Vacío"), 128);
    strmid(PlayerInfo[playerid][pSMS_3], "Vacío", 0, strlen("Vacío"), 128);
    strmid(PlayerInfo[playerid][pSMS_4], "Vacío", 0, strlen("Vacío"), 128);
    strmid(PlayerInfo[playerid][pSMS_5], "Vacío", 0, strlen("Vacío"), 128);
	PlayerInfo[playerid][pInvWeapon] = 0;
	PlayerInfo[playerid][pInvAmmo] = 0;
	PlayerInfo[playerid][pLighter] = 0;
	PlayerInfo[playerid][pCigarettes] = 0;
	PlayerInfo[playerid][pHachis] = 0;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pMaskuse] = 0;
	PlayerInfo[playerid][pAsaltoB] = 0;
	PlayerInfo[playerid][pCamaraV] = 0;
	PlayerInfo[playerid][pHideNumber] = 0;
	PlayerInfo[playerid][pSpeaker] = 0;
	PlayerInfo[playerid][pLocked] = 0; 
	PlayerInfo[playerid][pLoggedIn] = 0;
	PlayerInfo[playerid][pCheat] = 0; 
	PlayerInfo[playerid][pBanTemporal] = 0;
	new dni = 100000 + random(899999);//minimum 1000  max 9999 //giving one at the start
	PlayerInfo[playerid][pDNI] = dni;
	strmid(PlayerInfo[playerid][pMSN], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pMSN] = 0;
	PlayerInfo[playerid][pWeapon] = 0;
	PlayerInfo[playerid][pAmmo] = 0;
	PlayerInfo[playerid][pWeapon2] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	PlayerInfo[playerid][pWeapon3] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pWeapon4] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pWeapon5] = 0;
	PlayerInfo[playerid][pAmmo5] = 0;
	PlayerInfo[playerid][pWeapon6] = 0;
	PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pWeapon7] = 0;
	PlayerInfo[playerid][pAmmo7] = 0;
	PlayerInfo[playerid][pWeapon8] = 0;
	PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pWeapon9] = 0;
	PlayerInfo[playerid][pAmmo9] = 0;
	PlayerInfo[playerid][pWeapon10] = 0;
	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pWeapon11] = 0;
	PlayerInfo[playerid][pAmmo11] = 0;
	PlayerInfo[playerid][pWeapon12] = 0;
	PlayerInfo[playerid][pAmmo12] = 0;
	PlayerInfo[playerid][pGPS] = 0;
	PlayerInfo[playerid][pMaleta] = 0;
	PlayerInfo[playerid][pMochila] = 0;
	PlayerInfo[playerid][pCasco] = 0;
	PlayerInfo[playerid][pRequestingBackup] = 0;
	PlayerInfo[playerid][pSIDA] = 0;
	PlayerInfo[playerid][pCancer] = 0;
	PlayerInfo[playerid][pEpilepsia] = 0;
	PlayerInfo[playerid][pDengue] = 0;
	PlayerInfo[playerid][pDEagle] = 100;
	PlayerInfo[playerid][pShotgun] = 100;
	PlayerInfo[playerid][pMP5] = 100;
	PlayerInfo[playerid][pAK47] = 100;
	PlayerInfo[playerid][pM4] = 100;
	PlayerInfo[playerid][pSniper] = 100;
	PlayerInfo[playerid][pFStyle] = 4;
	PlayerInfo[playerid][pPainkiller] = 0;
	PlayerInfo[playerid][pLeccion] = 0;
    PlayerInfo[playerid][pBusqueda] = 0;
    PlayerInfo[playerid][pAntiSIDA] = 0;
    PlayerInfo[playerid][pAntiCancer] = 0;
    PlayerInfo[playerid][pAntiEpilepsia] = 0;
    PlayerInfo[playerid][pRent] = 0;
	PlayerInfo[playerid][p_Pr_Money] = 0;
    PlayerInfo[playerid][p_Pr_Time] = 0;
    PlayerInfo[playerid][p_Pr_Pay] = 0;
    PlayerInfo[playerid][pRob] = 0;
    PlayerInfo[playerid][pClothes1] = 0;
    PlayerInfo[playerid][pClothes2] = 0;
    PlayerInfo[playerid][pClothes3] = 0;
    PlayerInfo[playerid][pClothes4] = 0;
    PlayerInfo[playerid][pClothes5] = 0;
    PlayerInfo[playerid][pDonateT] = 0;
    PlayerInfo[playerid][pCarPremium] = 9999;
    PlayerInfo[playerid][pCarPremium2] = 9999;
    PlayerInfo[playerid][pBanDuda] = 0;
    PlayerInfo[playerid][pPasaporte] = 0;
    PlayerInfo[playerid][pSeguro] = 0;
    PlayerInfo[playerid][pWalkie] = 0;
    PlayerInfo[playerid][pHizo] = 0;
    PlayerInfo[playerid][pHead] = 0;
    format(QFA[playerid],24,"Nadie");
	//PlayerInfo[playerid][pSQLID] = 0;

//***************************************************************************************************************************************//
	for(new v = 0; v < MAX_PLAYERTOYS; v++)
	{
	PlayerToyInfo[playerid][v][ptModelID] = 0;
	PlayerToyInfo[playerid][v][ptBone] = 0;
	PlayerToyInfo[playerid][v][ptPosX] = 0.0;
	PlayerToyInfo[playerid][v][ptPosY] = 0.0;
	PlayerToyInfo[playerid][v][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][v][ptRotX] = 0.0;
	PlayerToyInfo[playerid][v][ptRotY] = 0.0;
	PlayerToyInfo[playerid][v][ptRotZ] = 0.0;
	}
	PlayerGotSpottedRecently[playerid] = 1;
	Delete3DTextLabel(AdminDutyy[playerid]);
	Checked[playerid] = 1;
	for (new c=0; c<13; c++) ScriptWeapons[playerid][c] = 0;
	ScriptWeaponsUpdated[playerid] = 0;
	SetTimerEx("ResetAcWarn", 15000, 0, "i", playerid);
	SetPlayerColor(playerid,TEAM_HIT_COLOR);
	GetPlayerName(playerid, plname, sizeof(plname));
	format(string, sizeof(string), "users/%s.ini", plname);
	if(fexist(string))
	{
		gPlayerAccount[playerid] = 1;
	}
	else
	{
	    gPlayerAccount[playerid] = 0;

	}
	return 1;
}
public Lotto(number)
{
	new JackpotFallen = 0;
	new string[128];
	new winner[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Noticias de la Loteria: {FFFFFF}Hoy en dia el numero ganador ha recaido en: {FF0000}%d", number);
    OOCOff(COLOR_ORANGE, string);
    for(new i = 0; i < MAX_PLAYERS; i++){
		if(IsPlayerConnected(i)){
		    if(PlayerInfo[i][pLottoNr] > 0){
			    if(PlayerInfo[i][pLottoNr] == number){
			        JackpotFallen = 1;
			        GetPlayerName(i, winner, sizeof(winner));
					format(string, sizeof(string), "Noticias de la Loteria: %s ha ganado el acumulado de $%d .", winner, Jackpot);
					OOCOff(COLOR_DBLUE, string);
					format(string, sizeof(string), "* Usted ha ganado $%d con su billete de loteria.", Jackpot);
					SendClientMessage(i, COLOR_YELLOW, string);
					GivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, COLOR_WHITE, "* Usted no ha ganado con su billete de loteria este momento.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(300); rand += 300;
	    Jackpot = rand;
	    SaveStuff();
	    format(string, sizeof(string), "El nuevo Jackpot se ha iniciado con {9EC73D}$%d", Jackpot);
		OOCOff(0xFFFFFFFD, string);
	}
	else
	{
	    new rand = random(500); rand += 123;
	    Jackpot += rand;
	    SaveStuff();
	    format(string, sizeof(string), "El bote se ha aumentado a {9EC73D}$%d", Jackpot);
		OOCOff(0xFFFFFFFD, string);
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------
public OnPlayerDisconnect(playerid, reason)
{
//Autos Dinamicos
//if(IsPlayerLoggedIn(playerid)) {SaveChar(playerid);}
///////
    new string[200];
	new plname[MAX_PLAYER_NAME];
	gActivePlayers[playerid]--;
	numplayers--;
	SaveGuns(playerid);
	ReqF_Name[playerid] = "No-Fac";
	ReqF_Faction[playerid] = 0;
	ReqG_Social[playerid] = 0;
	RequestingBackup[playerid] = 0;
	Train_Route[playerid] = 0;
	Plane_Route[playerid] = 0;
	PlayerIsSweeping[playerid] = 0;
	PlayerIsRuta[playerid] = 0;
	TextDrawHideForPlayer(playerid, SunGlasses);
	Delete3DTextLabel(estado[playerid]);
	Delete3DTextLabel(AdminDutyy[playerid]);
	if(AdminTemp[playerid] == 1)
	{
	AdminTemp[playerid] = 0;
	PlayerInfo[playerid][pJDS] = 0;
	}
	if(PlayerInfo[playerid][pPcarkey] != 9999)
	{
	   SetVehicleVirtualWorld(PlayerInfo[playerid][pPcarkey], PlayerInfo[playerid][pPcarkey]);
	}
	if(PlayerInfo[playerid][pPcarkey2] != 9999)
	{
	   SetVehicleVirtualWorld(PlayerInfo[playerid][pPcarkey2], PlayerInfo[playerid][pPcarkey2]);
	}
	if(PlayerInfo[playerid][pCarPremium] != 9999)
	{
	   SetVehicleVirtualWorld(PlayerInfo[playerid][pCarPremium], PlayerInfo[playerid][pCarPremium]);
	}
	if(PlayerInfo[playerid][pCarPremium2] != 9999)
	{
	   SetVehicleVirtualWorld(PlayerInfo[playerid][pCarPremium2], PlayerInfo[playerid][pCarPremium2]);
	}
    KillTimer(ChatBanTimer[playerid]);
	if(HireKey[playerid] != 9999)
	{
	    SetVehicleToRespawn(HireKey[playerid]);
	}
    if(Interview != 0)
	{
	    GetPlayerName(playerid,plname,sizeof(plname));
		if(strcmp(Interviewer,plname,true) == 0 )
		{
		    Message(playerid, COLOR_WHITE, "Se canceló tu entrevista!");
		    Interviewer = "Nadie";
		    Interview = 0;
		}
	}
	if(Bodyguard_ContractedTime[playerid] > 0)
	{
		if(Bodyguard_Contracted[playerid] != 500)
		{
		    GetPlayerName(playerid,plname,sizeof(plname));
		    format(string, sizeof(string), "** %s ya no es tu cliente más! (Desconectado)", plname);
		    Message(Bodyguard_Contracted[playerid], COLOR_WHITE, string);
			Bodyguard_ContractedTime[playerid] = 0;
			Bodyguard_ContractedTime[Bodyguard_Contracted[playerid]] = 0;
			Bodyguard_Client[Bodyguard_Contracted[playerid]] = 500;
			Bodyguard_Contracted[playerid] = 500;
		}
		else if(Bodyguard_Client[playerid] != 500)
		{
		    GetPlayerName(playerid,plname,sizeof(plname));
		    format(string, sizeof(string), "** %s Ya No Es Mas Tu Guardaespaldas! (Desconectado)", plname);
		    Message(Bodyguard_Client[playerid], COLOR_WHITE, string);
			Bodyguard_ContractedTime[playerid] = 0;
			Bodyguard_ContractedTime[Bodyguard_Contracted[playerid]] = 0;
			Bodyguard_Client[playerid] = 500;
			Bodyguard_Contracted[Bodyguard_Client[playerid]] = 500;
			Bodyguard_Client[playerid] = 500;
		}
	}


	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string, sizeof(string), "~w~Pasajeros ~n~~g~Ganados $%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		}
	}
	OnPlayerUpdateTime(playerid);
}
public GateClose(playerid)
{
      MoveDynamicObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97);
      PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
      return 1;
}
public GateClose2()
{
      MoveDynamicObject(armygate1,2720.3772, -2409.7523, 12.6, 2.5);
      MoveDynamicObject(armygate2,2720.3772, -2508.3069, 12.6, 2.5);
      return 1;
}
public GateClose3()
{
      MoveDynamicObject(fbigate, 1534.9020,-1451.5979,14.4882, 1.5);
      return 1;
}
public lvpdgates()
{
      MoveDynamicObject(lvpdgate, 2334.91796875,2443.72534180,6.76478863, 2.5);
      return 1;
}
forward samur1(playerid);
public samur1(playerid)
{
if(IsPlayerConnected(playerid))
	{
	MoveDynamicObject(samur, 1140.82, -1295.21, 15.41,3.5);
	}
return 1;
}

//////////////////////////////////// Peajes /////////////////////////////////////////////////////

	forward peaje1();
	public peaje1()
	{
    	SetDynamicObjectRot(pea1, 0.00000000,91.00015259,341.50000000);
		return 1;
	}

	forward peaje2();
	public peaje2()
	{
    	SetDynamicObjectRot(pea2, 0.00546265,268.75024414,339.49902344);
      	return 1;
	}

	forward peaje3();
	public peaje3()
	{
    	SetDynamicObjectRot(pea3, 0.00000000,90.50006104,34.25000000);
    	return 1;
	}

	forward peaje4();
	public peaje4()
	{
    	SetDynamicObjectRot(pea4, 0.00000000,270.00000000,37.99621582);
      	return 1;
	}

	forward peaje5();
	public peaje5()
	{
    	SetDynamicObjectRot(pea5, 0.01754761,90.49975586,344.99993896);
      	return 1;
	}

	forward peaje6();
	public peaje6()
	{
    	SetDynamicObjectRot(pea6, 359.96047974,269.00064087,345.24826050);
      	return 1;
	}

	forward peaje7();
	public peaje7()
	{
    	SetDynamicObjectRot(pea7, 0.00000000,270.00000000,90.00000000);
      	return 1;
	}

	forward peaje8();
	public peaje8()
	{
    	SetDynamicObjectRot(pea8, 0.00000000,269.98901367,270.00000000);
      	return 1;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////

forward LVPDGATEC1();
public LVPDGATEC1()
{
	  MoveDynamicObject(lvpdg1, 200.02711487,160.48478699,1002.02343750, 3.0);
      return 1;
}

forward LVPDGATEC2();
public LVPDGATEC2()
{
	  MoveDynamicObject(lvpdg2, 200.15646362,185.94311523,1002.03552246, 3.0);
      return 1;
}
forward Alqaedapuerta1();
public Alqaedapuerta1()
{
	  MoveDynamicObject(alqaedap1, 273.21701, 1871.48132, 8.99440, 3.0);
      return 1;
}

forward Alqaedapuerta2();
public Alqaedapuerta2()
{
	  MoveDynamicObject(alqaedap2, 278.49698, 1871.48132, 8.99440, 3.0);
      return 1;
}

forward Alqaedapuerta3();
public Alqaedapuerta3()
{
	  MoveDynamicObject(alqaedap3, 277.61270, 1866.45154, 8.99440, 3.0);
      return 1;
}
public GateClose5()
{
	  MoveDynamicObject(pdgate2, 1545.7398681641, -1627.7280273438, 15.206203460693, 3.0);
      return 1;
}
function FaccionesLegales(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
        {
                if(IsPlayerConnected(i))
                {
                        if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pMember] == 2 ||PlayerInfo[i][pMember] == 3 ||PlayerInfo[i][pMember] == 7 || PlayerInfo[i][pMember] == 8 ||PlayerInfo[i][pMember] == 16 || PlayerInfo[i][pMember] == 17 || PlayerInfo[i][pLeader] == 1 ||
						    PlayerInfo[i][pLeader] == 2 ||PlayerInfo[i][pLeader] == 3 ||PlayerInfo[i][pLeader] == 7 || PlayerInfo[i][pLeader] == 8 ||PlayerInfo[i][pLeader] == 16 || PlayerInfo[i][pLeader] == 17)
                        {
                                SendClientMessage(i, 0xFF9562FF, string);
                        }
                }
        }
        return 1;
}
function FaccionesILegales(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
        {
                if(IsPlayerConnected(i))
                {
                        if (PlayerInfo[i][pMember] >= 9 && PlayerInfo[i][pMember] <=  14 ||PlayerInfo[i][pMember] == 19 || PlayerInfo[i][pMember] == 20 ||PlayerInfo[i][pMember] >= 25 && PlayerInfo[i][pMember] <=  29 || PlayerInfo[i][pMember] == 22 || PlayerInfo[i][pMember] == 23 ||
                            PlayerInfo[i][pLeader] >= 9 && PlayerInfo[i][pLeader] <=  14 ||PlayerInfo[i][pLeader] == 19 || PlayerInfo[i][pLeader] == 20 ||PlayerInfo[i][pLeader] >= 25 && PlayerInfo[i][pLeader] <=  29 || PlayerInfo[i][pLeader] == 22 || PlayerInfo[i][pLeader] == 23)

                        {
                                SendClientMessage(i, 0xFF9562FF, string);
                        }
                }
        }
        return 1;
}
function MissileLaunchEx(Float:x, Float:y, Float:z, Float:radius, type)
{
    CreateExplosion(x, y, z, type, radius);
    Misile_Launcher --;
    new string[128];
    format(string, sizeof(string), "** Lanzamiento detonado en %0.2f - %0.2f - %0.2f, radio %d",x,y,z,radius);
    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    return 1;
}

function MissileLaunch(vehicleid)
{
	new Float:x,Float:y,Float:z;
	GetVehiclePos(vehicleid, x, y, z);
    CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);
    Misile_Launcher --;
    new string[128];
    format(string, sizeof(string), "** Lanzamiento detonado en objetivo vehículo %d",vehicleid);
    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    return 1;
}

public SetPlayerSpawn(playerid)
{
	FixAnim(playerid);
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	    SetTimerEx("skinadmin",500,0,"i",playerid);
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
    		SetTimerEx("FreezePlayer", 300, false, "i", playerid);
	        ClearChatbox(playerid, 10);
			gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1; gpre[playerid] = 0;
  			SetPlayerInterior(playerid, 14);
			SetPlayerPos(playerid,-1832.3574,17.5752,1061.1436);
			SetPlayerCameraPos(playerid, -1832.4875, 12.6962, 1061.7435);
			SetPlayerCameraLookAt(playerid, -1831.9642, 22.6825, 1061.7435);
			SetPlayerFacingAngle(playerid,180.0);
			SetPlayerSkin(playerid, 26);
			RStep[playerid] = 1;
			RegText[playerid] = 1;
			RegConfig[playerid] = 1;
			PlayerInfo[playerid][pAge] = 30;
			PlayerInfo[playerid][pSex] = 1;
			ClearChatbox(playerid, 5);
			TextDrawShowForPlayer(playerid, RegInfo);
			TextDrawShowForPlayer(playerid, RegDraw[playerid]);
			TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Sin Sexo          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
			SendClientMessage(playerid, 0x0079FFFF, "");
			SendClientMessage(playerid, 0x0079FFFF, "");
			SendClientMessage(playerid, 0x0079FFFF, "     Binvenido A GameWorld RolePlay, Rellena los datos que se te piden a continuacón para tu Pasaporte");
			SendClientMessage(playerid, 0x0079FFFF, "");
			SendClientMessage(playerid, 0x0079FFFF, "");
			SendClientMessage(playerid, 0xFF0000FF, "      Ayuda: Pulsa las flechas para elegir Sexo, edad, origen y estilo, cuando termines pulsa Enter.");
			ClearChatbox(playerid, 5);
			ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
			return 1;
	    }
	    if(TutTime[playerid] == 0 && PlayerInfo[playerid][pTut] == 1 && DeathPlayer[playerid] == 0)
  		{
    		SetPosEx(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1, 0, PlayerInfo[playerid][pInt], PlayerInfo[playerid][pVirWorld]);
	    	SetHP(playerid, PlayerInfo[playerid][pHealth]);
			SetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
			SetPlayerWeapons(playerid);
		    return 1;
		}
	    if(AdminSpec[playerid] == 1)
		{
		    return 1;
		}
		//////////////////////////////////// Paint Ball //////////////////////////////////////////////////

		new rand;
		if(InPaintballDM[playerid] != 0)
		{
			ResetPlayerWeapons(playerid);
			ArmarPaintBall(playerid);
   			rand = random(sizeof(PaintballDMSpawns));
			SetPosEx(playerid, PaintballDMSpawns[rand][0], PaintballDMSpawns[rand][1], PaintballDMSpawns[rand][2],0,14,0);
			return 1;
		}
		if(InPaintballTvT[playerid] != 0)
		{
			if(InTvTNaranja[playerid] != 0)
			{
				ResetPlayerWeapons(playerid);
				ArmarPaintBall(playerid);
				SetPosEx(playerid, -973.1844,1061.3037,1345.6699,0,10,0);
                SetPlayerColor(playerid, ORANGE_ADMIN);
				return 1;
			}
			if(InTvTVerde[playerid] != 0)
			{
				ResetPlayerWeapons(playerid);
				ArmarPaintBall(playerid);
				SetPosEx(playerid, -1131.2336,1057.7888,1346.4170,0,10,0);
                SetPlayerColor(playerid, VERDE_ADMIN);
				return 1;
			}
		}
		if(InPaintPvP[playerid] !=0)
		{
			ResetPlayerWeapons(playerid);
			ArmarPaintBall(playerid);
   			rand = random(sizeof(PaintPvPSpawns));
			SetPosEx(playerid, PaintPvPSpawns[rand][0], PaintPvPSpawns[rand][1], PaintPvPSpawns[rand][2],0,0,0);
			return 1;
		}



		///////////////////////////////////////////////////////////////////////////////////////////////////
		//new rand;
		//new house = PlayerInfo[playerid][pPhousekey];
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			SetPosEx(playerid, 2767.8936,445.4332,3.7747,163.2555,1,0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "No has cumplido tu condena, estas denuevo en la carcel.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
		    SetPlayerInterior(playerid, 0);
		    PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid,268.5777,1857.9351,9.8133);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 3)
		{
			SetPosEx(playerid, 263.4922,77.0915,1001.0391,322.1463,6,0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Te hemos transladado a la ultima celda.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 4)
		{
			SetPosEx(playerid, 602.6583,860.0936,-90.2031,346.0309,0,0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Te hemos transladado de celda.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 5)
		{
			SetPosEx(playerid, 198.20,161.63,1003.03,273.6029,3,0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Te hemos transladado de celda.");
			return 1;
		}
			if(PlayerInfo[playerid][pJailed] == 6)
		{
			SetPosEx(playerid, 197.59,175.21,1003.02,273.6029,0,0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Te hemos transladado de celda.");
			return 1;
		}
		if(DeathPlayer[playerid] == 1 && PlayerInfo[playerid][pJailed] == 0)
		{
			DeathPlayer[playerid] = 0;
            new string[128];
			Message(playerid, TEAM_CYAN_COLOR, "Te has recuperado exitósamente de tu accidente.");
		    Message(playerid, TEAM_CYAN_COLOR, "Te hemos transladado al hospital.");
	      	Message(playerid, TEAM_CYAN_COLOR, "Desafortunadamente tienes amnesia, no recuerdas nada.");
	        if(PlayerInfo[playerid][pSeguro] == 0)
			{
				SetPosEx(playerid, 1600.1266,1790.0237,-59.3549,6.0524,0,0);
                Samd_Fondos += Samd_Asistencia;
                Bought(playerid, Samd_Asistencia)
				format(string, sizeof(string), "* Usted no tiene seguro médico, y te se descontará %d$ por su asistencia.", Samd_Asistencia);
				Message(playerid, 0xF0AB4FFF, string);
				SetTimerEx("Regresaras", 5000, false, "i", playerid);
			}
			if(PlayerInfo[playerid][pSeguro] == 1) { SetPosEx(playerid, 1600.1266,1790.0237,-59.3549,6.0524,0,0); SetTimerEx("Regresaras", 5000, false, "i", playerid); }
      		return 1;
		}
	}
	return 1;
}
public OnPlayerUpdate(playerid)
{
	new weaponid = GetPlayerWeapon(playerid);
	new Nam[MAX_PLAYER_NAME];
	new str[128];

	if(gPlayerLogged[playerid] == 1)
	{
	if(weaponid == 38)
	{
    ResetPlayerWeapons(playerid);
    PlayerInfo[playerid][pWeapon] = 0;
	PlayerInfo[playerid][pAmmo] = 0;
	PlayerInfo[playerid][pWeapon2] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	PlayerInfo[playerid][pWeapon3] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pWeapon4] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pWeapon5] = 0;
	PlayerInfo[playerid][pAmmo5] = 0;
	PlayerInfo[playerid][pWeapon6] = 0;
	PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pWeapon7] = 0;
	PlayerInfo[playerid][pAmmo7] = 0;
	PlayerInfo[playerid][pWeapon8] = 0;
	PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pWeapon9] = 0;
	PlayerInfo[playerid][pAmmo9] = 0;
	PlayerInfo[playerid][pWeapon10] = 0;
	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pWeapon11] = 0;
	PlayerInfo[playerid][pAmmo11] = 0;
	PlayerInfo[playerid][pWeapon12] = 0;
	PlayerInfo[playerid][pAmmo12] = 0;

	GetPlayerName(playerid,Nam,sizeof(Nam));
	ResetPlayerWeapons(playerid);
	format(str,sizeof(str),"{FFFFFF}Atención: {FF6E00}%s {FFFFFF}Ha sacado un arma de peligro (MINIGUN).",Nam);
	A_Info(str);
	return 1;
	}
    }
			return 1;
	}

//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
   if(IsPlayerConnected(killerid))
	{
        format(QFA[playerid],24,"%s",PlayerName(killerid));
	}
	new name[MAX_PLAYER_NAME];
	new killer[MAX_PLAYER_NAME];
	new string[128];
	//new dmessage[128];
	//new deathreason[20];
	new Float:px,Float:py,Float:pz;
	DeathPlayer[playerid] = 1;
	UsingDrugs[playerid] = 0;
	PLuces[playerid] = 0;
	EquipoMeca[playerid] = 0;
	UsingSpeed[playerid] = 0;
	SpeedEffect[playerid] = 0;
	UsingEctasy[playerid] = 0;
	EctasyEffect[playerid] = 0;
	UsingRitalin[playerid] = 0;
	RitalinEffect[playerid] = 0;
	UsingHeroina[playerid] = 0;
	HeroinaEffect[playerid] = 0;
	HeroinaBeat[playerid] = 0;
	UsingMarihuana[playerid] = 0;
	MarihuanaEffect[playerid] = 0;
	MarihuanaBeat[playerid] = 0;
	Left4Life[playerid] = 0;
	PlayerInfo[playerid][pPapel] = 0;
	PlayerInfo[playerid][pArmour] = 0;
	gPlayerSpawned[playerid] = 0;
	PlayerInfo[playerid][pInvWeapon] = 0;
 	PlayerInfo[playerid][pInvAmmo] = 0;
	GetPlayerName(playerid, name, sizeof(name));
	GetPlayerPos(playerid, px, py, pz);
	PlayerDrunk[playerid] = 0;
	PlayerDrunkTime[playerid] = 0;
	new drunk = GetPlayerDrunkLevel(playerid);
	if(drunk > 0) SetPlayerDrunkLevel(playerid, 0);
	Checked[playerid] = 1;
	PlayerGotSpottedRecently[playerid] = 1;
    SetTimerEx("ResetAcWarn",20000,false, "i", playerid);
    if(reason >= 0 && reason <= 46){
	PlayerInfo[killerid][pKills] += 1;
	}
	PlayerInfo[playerid][pDeaths] += 1;
	if(IsPlayerConnected(killerid))
	{
		if(GetPlayerWeapon(killerid) == 24)	{   PlayerInfo[killerid][pDEagle] += 3;   	}
		if(GetPlayerWeapon(killerid) == 25)	{   PlayerInfo[killerid][pShotgun] += 5;   	}
		if(GetPlayerWeapon(killerid) == 29)	{   PlayerInfo[killerid][pMP5] += 4;   		}
		if(GetPlayerWeapon(killerid) == 31)	{   PlayerInfo[killerid][pM4] += 4;   		}
		if(GetPlayerWeapon(killerid) == 30)	{   PlayerInfo[killerid][pAK47] += 4;    	}
		if(GetPlayerWeapon(killerid) == 34)	{   PlayerInfo[killerid][pSniper] += 30;   	}
	}
	if(Bodyguard_ContractedTime[playerid] > 0)
	{
		if(Bodyguard_Contracted[playerid] != 500)
		{
		    GetPlayerName(playerid,name,sizeof(name));
		    format(string, sizeof(string), "** %s ya no es tu cliente más! (Muerto)", name);
		    Message(Bodyguard_Contracted[playerid], COLOR_WHITE, string);
			Bodyguard_ContractedTime[playerid] = 0;
			Bodyguard_ContractedTime[Bodyguard_Contracted[playerid]] = 0;
			Bodyguard_Client[Bodyguard_Contracted[playerid]] = 500;
			Bodyguard_Contracted[playerid] = 500;
		}
		else if(Bodyguard_Client[playerid] != 500)
		{
		    GetPlayerName(playerid,name,sizeof(name));
		    format(string, sizeof(string), "** %s ya no es tu guardaespaldas más! (Muerto)", name);
		    Message(Bodyguard_Client[playerid], COLOR_WHITE, string);
			Bodyguard_ContractedTime[playerid] = 0;
			Bodyguard_ContractedTime[Bodyguard_Contracted[playerid]] = 0;
			Bodyguard_Client[playerid] = 500;
			Bodyguard_Contracted[Bodyguard_Client[playerid]] = 500;
			Bodyguard_Client[playerid] = 500;
		}
	}
	///////////////////////////////// Paint Ball //////////////////////////////////

	if(InPaintballDM[playerid] != 0)
	{
        PaintballDMKills[killerid] += 1;
     	for(new i = 0; i < MAX_PLAYERS; i++)
        {
        	if(InPaintballDM[i] != 0)
         	{
       			format(string, sizeof(string), "* [DM] %s hizo polvo a %s.[%d]", PlayerName(killerid), PlayerName(playerid), PaintballDMKills[killerid]);
				Message(i, COLOR_WHITE, string);
    		}
      	}
   	}
   	if(InPaintballTvT[playerid] != 0)
   	{
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
       		if(InPaintballTvT[i] != 0 && InTvTVerde[playerid] != 0)
         	{
				TvTNaranjaKills += 1;
				format(string, sizeof(string), "* [TvT] El equipo naranja tiene un puntaje de %d.", TvTNaranjaKills);
				Message(i, COLOR_WHITE, string);
			}
			if(InPaintballTvT[i] != 0 && InTvTNaranja[playerid] != 0)
			{
				TvTVerdeKills += 1;
				format(string, sizeof(string), "* [TvT] El equipo verde tiene un puntaje de %d.", TvTVerdeKills);
				Message(i, COLOR_WHITE, string);
			}
      	}
	}
	if(InPaintPvP[playerid] != 0)
	{
        PaintPvPKills[killerid] += 1;
     	for(new i = 0; i < MAX_PLAYERS; i++)
        {
        	if(InPaintPvP[i] != 0)
         	{
       			format(string, sizeof(string), "* [PvP] %s es el papá de %s.[%d]", PlayerName(killerid), PlayerName(playerid), PaintPvPKills[killerid]);
				Message(i, COLOR_WHITE, string);
    		}
      	}
   	}

	///////////////////////////////////////////////////////////////////////////////
	if(Pandilleros(killerid) && Pandilleros(playerid))
	{
		if(PlayerToPoint(30.0, playerid, 2491.8098,-1664.8685,13.3438) || PlayerToPoint(30.0, playerid, 1882.5814,-2027.3207,13.3906) || PlayerToPoint(30.0, playerid, 2819.5747,-1182.8378,25.2364))
		{
		    if(PlayerInfo[killerid][pMember] == PlayerInfo[playerid][pMember]) { Message(playerid, COLOR_GRAD2, "No mates a los de tu banda!"); }
		    if(PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember])
		    {
		        if(GetPlayerMoney(playerid) > 14)
		        {
		            GetPlayerName(killerid, killer, sizeof(killer));
					Message(playerid, COLOR_WHITE, "Te ha matado el de la banda enemiga, pierdes 15$ que van hacia el.");
					if(PlayerInfo[killerid][pMember] == 9) 	{ GText(playerid, "own~g~3~w~d", 5000, 1); }
					if(PlayerInfo[killerid][pMember] == 10) { GText(playerid, "own~b~3~w~d", 5000, 1); }
					if(PlayerInfo[killerid][pMember] == 11) { GText(playerid, "own~y~3~w~d", 5000, 1); }

					GText(killerid, "Muerte ~r~enemiga~n~~w~+15~g~$", 5000, 1);
					format(string, sizeof(string), "~w~Te ha ~r~matado~n~~r~%s", killer);
					GText(playerid, string, 5000, 1);

					GivePlayerMoney(playerid, -15); GivePlayerMoney(killerid, 15);
				}
				else
				{
				    Message(playerid, COLOR_WHITE, "Te ha matado el de la banda enemiga, pierdes 15$ que van hacia el.");
				    Message(killerid, COLOR_WHITE, "No recibes dinero ya que el enemigo no tiene 15$, pero el si los perdió!");
					if(PlayerInfo[killerid][pMember] == 9) 	{ GText(playerid, "own~g~3~w~d", 5000, 1); }
					if(PlayerInfo[killerid][pMember] == 10) { GText(playerid, "own~b~3~w~d", 5000, 1); }
					if(PlayerInfo[killerid][pMember] == 11) { GText(playerid, "own~y~3~w~d", 5000, 1); }

					GivePlayerMoney(playerid, -15);
				}
			}
		}
	}
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "La línea se perdió.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	if(PlayerInfo[playerid][pHead] > 0)
	{
	    if(IsPlayerConnected(killerid))
	    {
		    if(Hitman(killerid) && PlayerInfo[killerid][pRank] > 0)
		    {
		        GetPlayerName(killerid, killer, sizeof(killer));
		        GivePlayerMoney(killerid, PlayerInfo[playerid][pHead]);
		        format(string, sizeof(string), "** Central: %s mató a %s, y consiguió %d$", killer, name,PlayerInfo[playerid][pHead]);
		        SendRadioMessage(23, TEAM_RADIO_COLOR, string);
		        format(string, sizeof(string), "** Te mató un hitman. Tu cabeza tenía un valor de: %d$", PlayerInfo[playerid][pHead]);
		        Message(playerid, COLOR_WHITE, string);
		        PlayerInfo[playerid][pHead] = 0;
		        for(new i=0; i<MAX_PLAYERS; i++)
		        {
					if(MyKillContract[i] > 0)
					{
			            //if(MyKillContracted[i] == name)
			            if(strcmp(MyKillContracted[i],name,true) == 0 )
			            {
			                MyKillContracted[i] = "Nadie";
			                MyKillContract[i] = 0;
			                Message(i, COLOR_GREEN, "El hitman contratado ha hecho el trabajo con éxito!");
			            }
					}
		        }
			}
		}
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,TEAM_HIT_COLOR);
	return 1;
}

public OnPlayerSpawn(playerid)
{
    TextDrawHideForPlayer(playerid, Textdrawinicio);
    GangZoneShowForPlayer(playerid, bloods, -2147418167);
	GangZoneShowForPlayer(playerid, lking, -65332);
	GangZoneShowForPlayer(playerid, Surenos, 65477);
	GangZoneShowForPlayer(playerid, Groove, 16711888);
	TogglePlayerSpectating(playerid, 0);
	PlayerPlaySound(playerid, 1187, 0,0,0);
 	PlayerPlaySound(playerid, 1188, 0,0,0);
 	TextDrawShowForPlayer(playerid, UCRP);
 	TextDrawShowForPlayer(playerid, UCRPP);
 	TextDrawShowForPlayer(playerid, Nivelyexp[playerid]);
	SetPlayerStats(playerid);
	StopAudioStreamForPlayer(playerid);

	if(PlayerInfo[playerid][pPcarkey] != 9999)
	{
	    SetVehicleVirtualWorld(PlayerInfo[playerid][pPcarkey], 0);
	}
	if(PlayerInfo[playerid][pPcarkey2] != 9999)
	{
	    SetVehicleVirtualWorld(PlayerInfo[playerid][pPcarkey2], 0);
	}
	if(PlayerInfo[playerid][pCarPremium] != 9999)
    {
	    SetVehicleVirtualWorld(PlayerInfo[playerid][pCarPremium], 0);
	}
	if(PlayerInfo[playerid][pCarPremium2] != 9999)
    {
	    SetVehicleVirtualWorld(PlayerInfo[playerid][pCarPremium2], 0);
	}
    if(PlayerInfo[playerid][pHizo] == 1)
    {
        PlayerInfo[playerid][pCarPremium] = 9999;
        PlayerInfo[playerid][pCarPremium2] = 9999;
        PlayerInfo[playerid][pPcarkey] = 9999;
        PlayerInfo[playerid][pPcarkey2] = 9999;
        PlayerInfo[playerid][pHizo] = 2;
    }
    if(PlayerInfo[playerid][pConnectTime] < 3 || PlayerInfo[playerid][pWRestricted] > 0)
	{
	 ResetPlayerWeapons(playerid);
	 SendClientMessage(playerid, COLOR_LIGHTRED, "Tienes protección de armas por 3 horas");
	 }
	if(PlayerInfo[playerid][pJDS] > 10 && PlayerInfo[playerid][pJDS] < 1024 || PlayerInfo[playerid][pJDS] > 1024)
	{
	new string[528];
				    printf("[AntiCheat: Un tonto que se cree admin: %s]",PlayerName(playerid));
				    format(string, sizeof(string), "[AntiCheat: Un tonto que se cree admin %s (AdminHack)]",PlayerName(playerid));
				    A_Info(string);
				    PlayerInfo[playerid][pLocked] = 8;
				    Ban(playerid);
	}
	if(PlayerInfo[playerid][pCheat] == 1)
    	{
    	ResetPlayerWeapons(playerid);
    PlayerInfo[playerid][pWeapon] = 0;
	PlayerInfo[playerid][pAmmo] = 0;
	PlayerInfo[playerid][pWeapon2] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	PlayerInfo[playerid][pWeapon3] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pWeapon4] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pWeapon5] = 0;
	PlayerInfo[playerid][pAmmo5] = 0;
	PlayerInfo[playerid][pWeapon6] = 0;
	PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pWeapon7] = 0;
	PlayerInfo[playerid][pAmmo7] = 0;
	PlayerInfo[playerid][pWeapon8] = 0;
	PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pWeapon9] = 0;
	PlayerInfo[playerid][pAmmo9] = 0;
	PlayerInfo[playerid][pWeapon10] = 0;
	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pWeapon11] = 0;
	PlayerInfo[playerid][pAmmo11] = 0;
	  PlayerInfo[playerid][pWeapon12] = 0;
     	PlayerInfo[playerid][pAmmo12] = 0;
    	PlayerInfo[playerid][pCheat] = 0;
    	SendClientMessage(playerid, COLOR_LIGHTRED, "** Te sacamos las armas por cheat **");
		}
	if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "** Este servidor requiere una conexion antes de entrar (Kick) **");
        Kick(playerid);
 	}
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	return 1;
}
Log(sz_fileName[], sz_input[]) {

	new
		sz_logEntry[156],
		i_dateTime[2][3],
		File: fileHandle = fopen(sz_fileName, io_append);

	gettime(i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2]);
	getdate(i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2]);

	format(sz_logEntry, sizeof(sz_logEntry), "[%i/%i/%i - %i:%i:%i] %s\r\n", i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2], i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2], sz_input);
	fwrite(fileHandle, sz_logEntry);
	return fclose(fileHandle);
}

public OnVehicleDeath(vehicleid)
{
  if(IsAnOwnableCar(vehicleid))
   {
	    SetVehicleVirtualWorld(vehicleid, vehicleid);
	    SetTimerEx("MostrarVehiculo", 100000, false, "i", vehicleid);
   }
  	return 1;
}

function MostrarVehiculo(vehicleid)
{
    SetVehiclePos(vehicleid, CarInfo[vehicleid][cLocationx], CarInfo[vehicleid][cLocationy], CarInfo[vehicleid][cLocationz]);
	SetVehicleZAngle(vehicleid, CarInfo[vehicleid][cAngle]);
	SetVehicleParamsEx(vehicleid ,engineOn[vehicleid],0,0,CarInfo[vehicleid][cLock],0,0,0);
	Gas[vehicleid] = 100;
	SetVehicleVirtualWorld(vehicleid, 0);
}

public OnPlayerEnterCheckpoint(playerid)
{
    DisablePlayerCheckpoint(playerid);
    new carid = GetPlayerVehicleID(playerid), string[128];
	if(PlayerInfo[playerid][pJob] == 1 && Train_Route[playerid] > 0)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) { Message(playerid, COLOR_GRAD2, "No estás en un Tren!"); Train_Route[playerid] = 0; return 1; }

	    if(Train_Route[playerid] == 1)
	    {
	        SetPlayerCheckpoint(playerid, -1943.2317,159.9102,27.0006, 5.0);
	        GText(playerid, "~g~25$~n~~n~~w~Proxima estacion:~n~~r~SF", 5000, 1);
	        Train_Route[playerid] = 2;
	        GivePlayerMoney(playerid, 25);
	    }
	    else if(Train_Route[playerid] == 2)
	    {
	        SetPlayerCheckpoint(playerid, 1455.6279,2632.2500,12.1256, 5.0);
	        GText(playerid, "~g~25$~n~~n~~w~Proxima estacion:~n~~r~LV", 5000, 1);
	        Train_Route[playerid] = 3;
	        GivePlayerMoney(playerid, 25);
	    }
	    else if(Train_Route[playerid] == 3)
	    {
	        SetPlayerCheckpoint(playerid, 2864.7500,1274.8271,12.1256, 5.0);
	        GText(playerid, "~g~25$~n~~n~~w~Proxima estacion:~n~~r~LV", 5000, 1);
	        Train_Route[playerid] = 4;
	        GivePlayerMoney(playerid, 25);
	    }
	    else if(Train_Route[playerid] == 4)
	    {
	        SetPlayerCheckpoint(playerid, 1715.0220,-1953.7056,14.8756, 5.0);
	        GText(playerid, "~g~25$~n~~n~~w~Proxima estacion:~n~~r~LS", 5000, 1);
	        Train_Route[playerid] = 5;
	        GivePlayerMoney(playerid, 25);
	    }
	    else if(Train_Route[playerid] == 5)
	    {
	        GText(playerid, "~g~25$~n~~n~~w~Final recorrido", 5000, 1);
	        Train_Route[playerid] = 0;
	        GivePlayerMoney(playerid, 30);
	        Message(playerid, COLOR_YELLOW2, "Final del recorrido, obtenido: 30$");
	        RemovePlayerFromVehicle(playerid);
	    }
	}
	else if(PlayerInfo[playerid][pJob] == 2 && PlayerIsSweeping[playerid] == 1)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) { Message(playerid, COLOR_GRAD2, "No estás en un Sweeper!"); PlayerIsSweeping[playerid] = 0; return 1; }

			if(IsASweeper(carid))
	        {
	            new cashes= random(50);
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            format(string, sizeof(string), "~g~+%d$",cashes);
	            GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerMoney(playerid, cashes);
	            new randomss;
		        randomss = random(sizeof(gSweeperPoints));
		        SetPlayerCheckpoint(playerid, gSweeperPoints[randomss][0], gSweeperPoints[randomss][1], gSweeperPoints[randomss][2], 5.0);
	        }
	}
	else if(PlayerInfo[playerid][pJob] == 3 && Plane_Route[playerid] > 0)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) { Message(playerid, COLOR_GRAD2, "No estás en un avión!"); Train_Route[playerid] = 0; return 1; }

	    if(Plane_Route[playerid] == 1)
	    {
	        GText(playerid, "~w~proximo destino: ~n~~r~Verdant Meadows", 5000, 1);
	        Plane_Route[playerid] = 2;
	        SetPlayerCheckpoint(playerid, 211.2588,2502.7649,17.4063, 15.0);
	    }
	    else if(Plane_Route[playerid] == 2)
	    {
            GText(playerid, "~w~proximo destino: ~n~~r~san fierro", 5000, 1);
	        Plane_Route[playerid] = 3;
	        SetPlayerCheckpoint(playerid, -1378.8790,113.1982,15.0826, 15.0);
	    }
	    else if(Plane_Route[playerid] == 3)
	    {
            GText(playerid, "~w~proximo destino: ~n~~r~LAX airport", 5000, 1);
	        Plane_Route[playerid] = 4;
	        SetPlayerCheckpoint(playerid, 2004.8916,-2593.5776,14.4709, 15.0);
	    }
	    else if(Plane_Route[playerid] == 4)
	    {
            GText(playerid, "~w~estaciona la nave", 5000, 1);
	        Plane_Route[playerid] = 5;
	        SetPlayerCheckpoint(playerid, 1563.2407,-2458.6262,16.6014, 15.0);
	    }
	    else if(Plane_Route[playerid] == 5)
	    {
            GText(playerid, "~w~final del recorrido~n~~g~45$ ganados", 5000, 1);
	        Plane_Route[playerid] = 0;
	        GivePlayerMoney(playerid, 45);
			SetVehicleToRespawn(carid);
	    }
	}
	else if(PlayerInfo[playerid][pJob] == 8 && PlayerIsRuta[playerid] == 1)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) { Message(playerid, COLOR_GRAD2, "No estás en un Camión!"); PlayerIsRuta[playerid] = 0; return 1; }

			if(IsACamion(carid))
	        {
	            new cash= random(100);
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            format(string, sizeof(string), "~g~Mercancia Entregada~n~+%d$",cash);
	            GameTextForPlayer(playerid, string, 5000, 1);
	            GivePlayerMoney(playerid, cash);
	            new randomss;
	            randomss = random(sizeof(gTrunkPoints));
		        SetPlayerCheckpoint(playerid, gTrunkPoints[randomss][0], gTrunkPoints[randomss][1], gTrunkPoints[randomss][2], 5.0);
		    }
	}
	if (IsPlayerInRangeOfPoint(playerid, 7.0,Checkpoint1))
     {
           new randomss;
          SetPlayerCheckpoint(playerid, gTrunkPoints[randomss][0], gTrunkPoints[randomss][1], gTrunkPoints[randomss][2], 5.0);
          SendClientMessage(playerid, COLOR_GREY, "Recuerda que si te bajas del Camion, perderas la carga, eso significa que terminas de trabajar.");
          SetTimerEx("CargarObjetos", 2500, 0, "d", playerid);
	      GameTextForPlayer(playerid, "~w~Cargando Camion..Espere!", 20000, 5);

	      TogglePlayerControllable(playerid, 0);
     }
	else if(IsANarco(playerid))
	{
	    if(DrugFarming[playerid] > 0)
	    {
	        if( DrugFarming[playerid]   ==  10 )
	        {
	            new drugs = random(20);
	            ClearChatbox(playerid, 5);
	            format(string, sizeof(string), "¡ Has cosechado y has conseguido %d gramos de droga !", drugs+30);
				Message(playerid, COLOR_WHITE, string);
				Message(playerid, COLOR_WHITE, "Si deseas parar de cosechar, sal del vehículo");
				PlayerInfo[playerid][pDrugs] += drugs+30;
				format(string, sizeof(string), "INFO: Tienes %d gramos de droga en tu granja", PlayerInfo[playerid][pDrugs]);
				Message(playerid, COLOR_YELLOW, string);
				DrugFarming[playerid] = 1;
				new randomize = random(sizeof(gDrugFarmVar));
	      		SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
				return 1;
	        }
	        else
	        {
		        new randomize = random(sizeof(gDrugFarmVar));
	      		SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
	      		DrugFarming[playerid] += 1;
			}
	    }
	    else if(Smuggling[playerid] > 0)
	    {
	        if(SmugglingType[playerid] == 1)
	        {
				format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Speed",Smuggling[playerid]);
				Message(playerid, 0xF0AB4FFF, string);
				PlayerInfo[playerid][pSpeed] += Smuggling[playerid];
				Smuggling[playerid] = 0;
				SmugglingType[playerid] = 0;
	        }
	        else if(SmugglingType[playerid] == 2)
	        {
				format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Extasis",Smuggling[playerid]);
				Message(playerid, 0xF0AB4FFF, string);
				PlayerInfo[playerid][pEctasy] += Smuggling[playerid];
				Smuggling[playerid] = 0;
				SmugglingType[playerid] = 0;
	        }
	        else if(SmugglingType[playerid] == 3)
	        {
				format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Ritalin",Smuggling[playerid]);
				Message(playerid, 0xF0AB4FFF, string);
				PlayerInfo[playerid][pRitalin] += Smuggling[playerid];
				Smuggling[playerid] = 0;
				SmugglingType[playerid] = 0;
	        }
	        if(SmugglingType[playerid] == 4)
	        {
				format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Heroina",Smuggling[playerid]);
				Message(playerid, 0xF0AB4FFF, string);
				PlayerInfo[playerid][pHeroina] += Smuggling[playerid];
				Smuggling[playerid] = 0;
				SmugglingType[playerid] = 0;
	        }
	        if(SmugglingType[playerid] == 5)
	        {
				format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Marihuana",Smuggling[playerid]);
				Message(playerid, 0xF0AB4FFF, string);
				PlayerInfo[playerid][pMarihuana] += Smuggling[playerid];
				Smuggling[playerid] = 0;
				SmugglingType[playerid] = 0;
	        }
	    }
	}
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	new mats = random(10);
	if(pickupid == pMatI)
	{
	    if(!IsANarco(playerid)) return Message(playerid, COLOR_GRAD2, "No eres narcotraficante!");
	    if(Delivery[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
	    Delivery[playerid] = mats;
	    Message(playerid, COLOR_WHITE, "Has recogido un paquete, entrégaselo a su dueño");
	    GText(playerid, "paquete recogido", 5000, 1);
	}
	else if(pickupid == pMatII)
	{
	    if(!IsANarco(playerid)) return Message(playerid, COLOR_GRAD2, "No eres narcotraficante!");
	    if(Delivery[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
	    Delivery[playerid] = mats;
	    Message(playerid, COLOR_WHITE, "Has recogido un paquete, entrégaselo a su dueño");
	    GText(playerid, "paquete recogido", 5000, 1);
	}
	else if(pickupid == pMatIII)
	{
	    if(!IsANarco(playerid)) return Message(playerid, COLOR_GRAD2, "No eres narcotraficante!");
	    if(Delivery[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
	    Delivery[playerid] = mats+2;
	    Message(playerid, COLOR_WHITE, "Has recogido un paquete, entrégaselo a su dueño");
	    GText(playerid, "paquete recogido", 5000, 1);
	}
	return 1;
}

stock SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
		}
	}

}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new string[128];
	new engine,lights,alarm,doors,bonnet,boot,objective;
	if(newstate == PLAYER_STATE_ONFOOT)
	{
         TextDrawHideForPlayer(playerid, Velocidadvv[playerid]);
            TextDrawHideForPlayer(playerid, Gasolina[playerid]);
            TextDrawHideForPlayer(playerid, Motor[playerid]);
	    MsgL4L[playerid]=0; MensajeMuriendo[playerid] = 0;
        //HideFuel(playerid);
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				GivePlayerMoney(playerid, -TransportCost[playerid]);
				GivePlayerMoney(TransportDriver[playerid], TransportCost[playerid]);
				format(string, sizeof(string), "~w~Te costo ~r~%d$",TransportCost[playerid]);
			    GameTextForPlayer(playerid, string, 5000, 1);
			    format(string, sizeof(string), "~w~Has ganado ~g~%d$",TransportMoney[TransportDriver[playerid]]);
			    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
			    TextDrawHideForPlayer(playerid, Taximeter[playerid]);
				TextDrawHideForPlayer(TransportDriver[playerid], Taximeter[TransportDriver[playerid]]);
				TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		if(Train_Route[playerid] > 0)
		{
		    Train_Route[playerid] = 0;
		    Message(playerid, COLOR_WHITE, "Ruta tren finalizada");
		    if(IsATrain(GetPlayerVehicleID(playerid)))
			{
		 		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			}
		}
		if(PlayerIsSweeping[playerid] > 0)
		{
		    PlayerIsSweeping[playerid] = 0;
		    Message(playerid, COLOR_WHITE, "Dejaste de barrer las calles.");
		    DisablePlayerCheckpoint(playerid);
		    if(IsASweeper(GetPlayerVehicleID(playerid)))
			{
		 		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			}
		}
        if(PlayerIsRuta[playerid] > 0)
		{
		    PlayerIsRuta[playerid] = 0;
		    Message(playerid, COLOR_WHITE, "Dejaste de entregar mercancia.");
		    DisablePlayerCheckpoint(playerid);
		}
		if(DrugFarming[playerid] > 0)
	 	{
	 	    DisablePlayerCheckpoint(playerid);
	 	    DrugFarming[playerid] = 0;
	 	    Message(playerid, COLOR_WHITE, "¡ Dejaste de cosechar drogas !");
	 	}
		if(Plane_Route[playerid] > 0)
		{
		    Plane_Route[playerid] = 0;
		    Message(playerid, COLOR_WHITE, "Has abandonado el avión.");
		    DisablePlayerCheckpoint(playerid);
		    if(IsAPlane(GetPlayerVehicleID(playerid)))
			{
		 		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			}
		}
	}

new newcar = GetPlayerVehicleID(playerid);
     if(newcar == 123786)
     {
            if(PlayerInfo[playerid][pGSocial] == 1) {
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"   No tienes las llaves de este vehiculo!");
                RemovePlayerFromVehicle(playerid);
            }
}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    new vehicleid = GetPlayerVehicleID(playerid);
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
	            {
	                if(GetPlayerMoney(playerid) < TarifaTaxi)
	                {
	                    format(string, sizeof(string), "* Necesitas %d$ para pagar el taxi!", TarifaTaxi);
						SendClientMessage(playerid, COLOR_NEGATIVE, string);
						RemovePlayerFromVehicle(playerid);
	                }
	                else
	                {
	                    if(TransportDuty[i] == 1)
	                    {
							TransportTime[i] = 1;
	                    	TransportTime[playerid] = 1;
	                    	TransportCost[playerid] = TarifaTaxi;
	                    	TransportCost[i] = TarifaTaxi;
	                    	TransportDriver[playerid] = i;
	                    	format(string, sizeof(string), "* Has entrado al taxi. Tarifa: %d", TarifaTaxi);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s entró a su taxi.", name);
							SendClientMessage(i, COLOR_WHITE, string);
							TextDrawShowForPlayer(playerid, Taximeter[playerid]);
							TextDrawShowForPlayer(i, Taximeter[i]);
							format(string, sizeof(string), "   A pagar: ~g~%d$ ~w~- Tiempo: ~b~%d",TransportCost[playerid],TransportTime[playerid]);
						    TextDrawSetString(Taximeter[playerid], string);
						    format(string, sizeof(string), "   A pagar: ~g~%d$ ~w~- Tiempo: ~b~%d",TransportCost[i],TransportTime[playerid]);
						    TextDrawSetString(Taximeter[i], string);
	                    }
						TransportMoney[i] += TarifaTaxi;
	                }
	            }
	       		}
	    }
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{// 38 / 49 / 56 = SS
		/*new newcar = GetPlayerVehicleID(playerid);*/
		GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(newcar,engineOn[newcar],lights,alarm,doors,bonnet,boot,objective);
            TextDrawShowForPlayer(playerid, Velocidadvv[playerid]);
                TextDrawShowForPlayer(playerid, Gasolina[playerid]);
                TextDrawShowForPlayer(playerid, Motor[playerid]);
		// ---------------------------------------------------------------------------------- //
		//if(!IsABike(newcar)) { ShowFuel(playerid); }

		// ----------==========----------- [ CAR RENTAL ] ----------------============------------- //
		if(IsARentCar2(newcar))
		{
		    if(IsaRent[playerid] == 0)
		    {
				ShowPlayerDialog(playerid, RENT_BIKE, DIALOG_STYLE_MSGBOX, "{FF8000}BMX Rental","{FFFFFF}Modelo: Montañera Clasica\nTiempo de Renta: 15 Minutos\nPrecio: 20 Dolares", "Rentar", "Cancelar");
   				return 1;
   			}
   			else
   			{
   			    TogglePlayerControllable(playerid,1);
   			}
		}
		if(Hire_Vehicle(newcar))
		{
		    if(Carrorenta(newcar))
			{
			ShowPlayerDialog(playerid,DIA_RENTA,DIALOG_STYLE_MSGBOX, "Vehiculo de Renta","Este vehículo está en Renta\n\nPor lo tanto lo puedes rentar si deceas\n\n El costo es $40","Rentar","Salirse");
			}
   			return 1;
		}
				// ------============== Info Embargos & Multa ================----------- //
		if(PlayerInfo[playerid][pPcarkey] == newcar)
		{
			if(CarInfo[newcar][cEmbargo] > 0 || CarInfo[newcar][cMulta] > 0)
			{
			    Message(playerid, COLOR_YELLOW, "------------------------------");
			    format(string, sizeof(string), "  Embargos: %d <> Multa: %d$", CarInfo[newcar][cEmbargo], CarInfo[newcar][cMulta]);
			    Message(playerid, COLOR_WHITE, string);
				return 1;
			}
        }
        if(PlayerInfo[playerid][pPcarkey2] == newcar)
		{
			if(CarInfo[newcar][cEmbargo] > 0 || CarInfo[newcar][cMulta] > 0)
			{
			    Message(playerid, COLOR_YELLOW, "------------------------------");
			    format(string, sizeof(string), "  Embargos: %d <> Multa: %d$", CarInfo[newcar][cEmbargo], CarInfo[newcar][cMulta]);
			    Message(playerid, COLOR_WHITE, string);
				return 1;
			}
        }
		// -=========================== Vehículo en Venta =================================- //
		if(IsAnOwnableCar(newcar))

		    if(CarInfo[newcar][cOwned]==0)
		    {
		    	ClearChatbox(playerid, 10);
		    	Message(playerid,0x0080FFFF,"|---------------[ Vehículo en Venta ]---------------|");
		    	format(string, sizeof(string), "  Modelo: %s", GetVehicleFriendlyName(newcar));
		    	Message(playerid, COLOR_WHITE, string);
		    	format(string, sizeof(string), "  Precio: %d", CarInfo[newcar][cValue]);
		    	Message(playerid, COLOR_WHITE, string);
		    	if(GetPlayerMoney(playerid) > CarInfo[newcar][cValue])
		    	{
		    		Message(playerid, COLOR_GREEN, "  Usted puede comprar este vehículo.");
		    		Message(playerid, COLOR_GREEN, "  Utilize /cvehiculo o /cvehiculo2");
		    		if(PlayerInfo[playerid][pDonateT] == 1)
		    		{
		    		Message(playerid, 0xFFFF00FF, "  Usted es Premium, puede comprar un 3° vehículo.");
		    		Message(playerid, 0xFFFF00FF, "  Utilize /cvehiculo3 Para comprarlo");
		    		}
		    		if(PlayerInfo[playerid][pDonateT] >= 2)
		    		{
		    		Message(playerid, 0xFFFF00FF, "  Usted es Premium especial, puede comprar un 4° vehículo.");
		    		Message(playerid, 0xFFFF00FF, "  Utilize /cvehiculo4 Para comprarlo");
		    		}
				}
				else
				{
			    	Message(playerid, 0xD21515FF, "  No puede adquirir este vehículo.");
			    	format(string, sizeof(string), "  Le faltan: %d$", GetPlayerMoney(playerid)-CarInfo[newcar][cValue]);
		    		Message(playerid, 0xD21515FF, string);
				}
				Message(playerid,0x0080FFFF,"|---------------[ ----------------- ]---------------|");
			}
  		// -================================ [Faction Cars] ===============================- //
  		if(Taxi_Vehicle(newcar))
  		{
  		    if(Team_Taxi(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!"); return 1;
		}
		else if(Bus_Vehicle(newcar))
  		{
  		    if(Team_Taxi(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!"); return 1;
		}
		else if(FBI_Vehicle(newcar))
  		{
  		    if(Team_FBI(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!"); return 1;
		}
		else if(SAMD_Vehicle(newcar))
  		{
 		    if(Team_SAMUR(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(ALQAEDA_Vehicle(newcar))
  		{
  		    if(Mafia_Alqaeda(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Espanol_Vehicle(newcar))
  		{
  		    if(Mafia_Espanola(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(GSocial_Vehicle(newcar))
  		{
  		    if(GSocial_Vehicle(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(GS_Vehicle(newcar))
  		{
  		    if(Team_Groove(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Gobierno_Vehicle(newcar))
  		{
  		    if(Gobierno(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Capone_Veh(newcar))
  		{
  		    if(Mafia_Capone(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Alemana_Veh(newcar))
  		{
  		    if(Mafia_Alemana(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(LH_Vehicle(newcar))
  		{
  		    if(Team_Hermandad(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(LK_Vehicle(newcar))
  		{
  		    if(Team_LK(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Blood_Vehicle(newcar))
  		{
  		    if(Team_Blood(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
 	else if(Cripz_Vehicle(newcar))
		{
  		    if(Team_Cripz(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Hitman_Vehicle(newcar))
		{
  		    if(Hitman(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Mecanico_Vehicle(newcar))
  		{
  		    if(Team_Mecanicos(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(U7_Vehicle(newcar))
  		{
  		    if(Umbrella7(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Ita_Vehicle(newcar))
  		{
  		    if(Mafia_Italiana(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Yak_Vehicle(newcar))
  		{
  		    if(Mafia_Yakuza(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Rus_Vehicle(newcar))
  		{
  		    if(Mafia_Rusa(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(CNN_Vehicle(newcar))
  		{
  		    if(Journalist(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Narco_Vehicle(newcar))
  		{
  		    if(IsANarco(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(Triadas_Veh(newcar))
		{
  		    if(TriadasTeam(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
		else if(SAEM_Vehicle(newcar))
		{
  		    if(Team_NG(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "Este vehículo no es de tu facción!");return 1;
		}
  else if(UnusedCar(newcar))
  		{
  		    Message(playerid, COLOR_GRAD2, "Vehiculo sin Uso!");
		}
		// -=== Job ====- //
		else if(IsATrain(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 1) { SetVehicleParamsEx(newcar,1,1,alarm,doors,bonnet,boot,objective); return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "No eres conductor de tren!");return 1;
		}
		else if(IsASweeper(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 2) { SetVehicleParamsEx(newcar,1,1,alarm,doors,bonnet,boot,objective); return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "No eres barrendero!");return 1;
		}
		else if(IsAPizzabike(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 6) { SetVehicleParamsEx(newcar,1,1,alarm,doors,bonnet,boot,objective); return 1; }
            else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "No eres Pizzero!");return 1;
		}
		else if(IsAHelado(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 7) { SetVehicleParamsEx(newcar,1,1,alarm,doors,bonnet,boot,objective); return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "No eres Heladero!");return 1;
		}
		else if(IsACamion(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 8) { SetVehicleParamsEx(newcar,1,1,alarm,doors,bonnet,boot,objective); return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "No eres camionero!");return 1;
		}
		// ------- //
		else if(IsABike(newcar))
		{
		    SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
		}
		else if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 3 || PlayerInfo[playerid][pFlyLic] > 0 && PlayerInfo[playerid][pJob] == 0) { return 1; }
		    else
			{
			    RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		}

		if(IsAnOwnableCar(newcar)) format(string, 16, "%s", CarInfo[newcar][cName]);
		else format(string, 16, "%s", GetVehicleFriendlyName(newcar));
		GText(playerid, string, 5000, 1);
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		SetHP(playerid, 50.0);
		gPlayerSpawned[playerid] = 1;
	}
	return 1;
}

public CarCheck()
{
	new string[128];
    TraceLastCall();
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsPlayerConnected(j))
	    {
		    new Float:health;
		    GetPlayerHealth(j, health);
		    new sendername[MAX_PLAYER_NAME];
		    GetPlayerName(j, sendername, sizeof(sendername));
			// -============ Cancer ============- //
			if(PlayerInfo[j][pCancer] > 250 && PlayerInfo[j][pCancer] < 300)
			{
			    if(CancerEffect[j] > 30)
			    {
					SetHP(j, health-20);
					format(string, sizeof(string), "* %s tose.", sendername);
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CancerEffect[j] = 0;
					PlayerInfo[j][pCancer] += 3;
				}
				CancerEffect[j] += 1;
			}
			if(PlayerInfo[j][pCancer] > 300 && PlayerInfo[j][pCancer] < 400)
			{
			    if(CancerEffect[j] > 30)
			    {
					SetHP(j, health-30);
					format(string, sizeof(string), "* %s tose.", sendername);
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CancerEffect[j] = 0;
					PlayerInfo[j][pCancer] += 6;
				}
				CancerEffect[j] += 1;
			}
			if(PlayerInfo[j][pCancer] > 400 && PlayerInfo[j][pCancer] < 600)
			{
			    if(CancerEffect[j] > 30)
			    {
					SetHP(j, health-40);
					format(string, sizeof(string), "* %s tose.", sendername);
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CancerEffect[j] = 0;
					PlayerInfo[j][pCancer] += 10;
				}
				CancerEffect[j] += 1;
			}
			// -===================== Epilepsia =================- //
			if(cEpilepsia[j] == 0)
			{
				if(PlayerInfo[j][pEpilepsia] > 250 && PlayerInfo[j][pEpilepsia] < 350)
				{
				    if(EpilepsiaCrack[j] > 50)
				    {
	           			ApplyAnimation(j, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 1, 60000);
	           			ApplyAnimation(j, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 1, 60000);
				        format(string, sizeof(string), "* %s se cae y empieza a echar saliva.", sendername);
						ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						EpilepsiaCrack[j] = 0;
						PlayerInfo[j][pEpilepsia] += 10;
						SetHP(j, health-30);
						SetPlayerDrunkLevel(j, 30000);
					}
					EpilepsiaCrack[j] += 1;
				}
				if(PlayerInfo[j][pEpilepsia] > 350 && PlayerInfo[j][pEpilepsia] < 600)
				{
				    if(EpilepsiaCrack[j] > 50)
				    {
				        ApplyAnimation(j, "CRACK", "crckdeth1", 2.5, 0, 0, 0, 1, 90000);
				        ApplyAnimation(j, "CRACK", "crckdeth1", 2.5, 0, 0, 0, 1, 90000);
				        format(string, sizeof(string), "* %s se cae y empieza a echar saliva.", sendername);
						ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						EpilepsiaCrack[j] = 0;
						PlayerInfo[j][pEpilepsia] += 20;
						SetHP(j, health-40);
						SetPlayerDrunkLevel(j, 40000);
					}
					EpilepsiaCrack[j] += 1;
				}
				if(PlayerInfo[j][pEpilepsia] > 600)
				{
				    if(EpilepsiaCrack[j] > 50)
				    {
				        ApplyAnimation(j, "CRACK", "crckdeth3", 2.5, 0, 0, 0, 1, 120000);
				        ApplyAnimation(j, "CRACK", "crckdeth3", 2.5, 0, 0, 0, 1, 120000);
				        format(string, sizeof(string), "* %s se cae y empieza a echar saliva.", sendername);
						ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						EpilepsiaCrack[j] = 0;
						PlayerInfo[j][pEpilepsia] += 30;
						SetHP(j, health-60);
						SetPlayerDrunkLevel(j, 50000);
						//new death = random(10);
						//if(death == 2) { PlayerHasDeath(j, 2); }
					}
					EpilepsiaCrack[j] += 1;
				}
			}
			// -==================== SIDA ======================- //
			if(PlayerInfo[j][pSIDA] > 0 && PlayerInfo[j][pSIDA] < 2)
			{
			    if(SIDA[j] > 30)
			    {
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 5000);
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 5000);
			        format(string, sizeof(string), "* %s vomita.", sendername);
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					if(health > 15) { SetHP(j, health-50); }
				}
				SIDA[j] -= 1;
			}
			if(PlayerInfo[j][pSIDA] > 1 && PlayerInfo[j][pSIDA] < 3)
			{
			    if(SIDA[j] > 20)
			    {
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 10000);
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 10000);
			        format(string, sizeof(string), "* %s vomita.", sendername);
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					if(health > 15) { SetHP(j, health-76); }
				}
				SIDA[j] -= 1;
			}
			if(PlayerInfo[j][pSIDA] > 3)
			{
			    if(SIDA[j] > 10)
			    {
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 15000);
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 15000);
			        format(string, sizeof(string), "* %s vomita.", sendername);
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					if(health > 15) { SetHP(j, health-70); }
				}
				SIDA[j] -= 1;
			}
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    if(IsASweeper(vehicleid)) SetVehicleToRespawn(vehicleid);

    if(UsingBelt[playerid] == 1) UsingBelt[playerid] = 0;

 	if(NoFuel[playerid] == 1) TogglePlayerControllable(playerid, 1); NoFuel[playerid]= 0;

 	TogglePlayerControllable(playerid, 1);
 	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{


	if (RStep[playerid] == 0 && gPlayerLogged[playerid] != 1)
	{
		ClearChatbox(playerid, 10);
		new s[255];
        new loginname[MAX_PLAYER_NAME];
        GetPlayerName(playerid,loginname,MAX_PLAYER_NAME);
		if (gPlayerAccount[playerid] != 0)
        {
			format(s,sizeof(s),"{FFFFFF}GameWorld City.\n\nLa Cuenta con el nombre :{AA3333} '%s'\n{FFFFFF}Ya se encuentra registrada en el servidor.\n\nEscriba su contraseña en el siguiente espacio...\npara ingresar en su cuenta.",loginname);
            ShowPlayerDialog(playerid,DLOGIN,DIALOG_STYLE_PASSWORD,"{D15700}GameWorld City - Ingreso",s,"Conectar","Cancelar");
			return 1;
		}
		else
		{
			gPlayerAccount[playerid] = 0;
 			 format(s,sizeof(s),"{FFFFFF}GameWorld .\n\nLa Cuenta con el nombre :{AA3333} '%s'\n{FFFFFF}Aun no se encuentra registrada en el servidor.\n\nPorfavor Registrate en nuestro servidor.\n\nEscriba su contraseña en el siguiente espacio...\npara crear su contraseña.",loginname);
            ShowPlayerDialog(playerid,DREGISTER,DIALOG_STYLE_PASSWORD,"{D15700}GameWorld  - Registro",s,"Registrar","Cancelar");
		}
      		SetPlayerPos(playerid, 691.2798,-1649.8351,-0.7375);        SetPlayerCameraPos(playerid, 717.3179, -1876.3525, 140.8313);        SetPlayerCameraLookAt(playerid, 717.3309, -1875.3550, 140.2412);
	}
	else SpawnPlayer(playerid);
	return false;
}

//---------------------------------------------------------

public OtherTimer()
{
	new string[128];
	if(Slot1 > 0) { TiempoSlot1 += 1; }
	if(Slot2 > 0) { TiempoSlot2 += 1; }
	if(Slot3 > 0) { TiempoSlot3 += 1; }
	if(Slot4 > 0) { TiempoSlot4 += 1; }
	if(Slot5 > 0) { TiempoSlot5 += 1; }
	if(Slot6 > 0) { TiempoSlot6 += 1; }
	if(Slot7 > 0) { TiempoSlot7 += 1; }
	if(Slot8 > 0) { TiempoSlot8 += 1; }
	AddsOn();
	NewUs();

    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    OnPlayerCheckStat(i);
	   // CheckStatDraw(i);
	    if(IsPlayerConnected(i) && gPlayerLogged{i} == 1)
	    {
	        new vehicleid = GetPlayerVehicleID(i);
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				CheckFuel(i);
			}
			if(Tied[i] > 0)
			{
			    TogglePlayerControllable(i, 0);
			}
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						CallCost[i] = CallCost[i]+callcost;
					}
				}
                CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						format(string, sizeof(string), "* El teléfono de %s suena", PlayerName(Mobile[i]));
						ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(string, sizeof(string), "~w~La llamada cuesta~n~~r~$%d",CallCost[i]);
				GivePlayerMoney(i, -CallCost[i]);
				GameTextForPlayer(i, string, 5000, 1);
				CallCost[i] = 0;
			}
			if(engineOn[vehicleid] && Gas[vehicleid] == 0 && IsPlayerInAnyVehicle(i))
 			{
 			    new engine,lights,alarm,doors,bonnet,boot,objective;
 			    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(vehicleid,0,lights,alarm,doors,bonnet,boot,objective);
				engineOn[vehicleid] = false;
				GameTextForPlayer(i,"~w~vehiculo sin~n~~r~gasolina",1500,1);
			}
			if(TransportTime[i] > 0)
			{
			    if(TransportTime[i] >= 10)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
	      					TransportCost[i] += TarifaTaxi;
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(string, sizeof(string), "   A pagar: ~g~%d$ ~w~- Tiempo: ~b~%d",TransportCost[i], TransportTime[i]);
			    TextDrawSetString(Taximeter[i], string);
			}
				if(AFK[i] > 0){
				if(AFKTime[i] == gettime())
				{
	    			SetPlayerPos(i, AFKLoc[i][0],AFKLoc[i][1],AFKLoc[i][2]);
        			SetTimerEx("KickAFK", 1200, false, "i", i);
     			}
			}
	if(IsaRent[i] > 0){
				if(RentTime[i] > 0){
			       	RentTime[i]--;
			   	}
			   	if(RentTime[i] == 0)
				{
			       	RentTime[i] = 0;
			       	if(IsaRent[i] == 1)
					{
						IsaRent[i] = 0;
						new newcar = GetPlayerVehicleID(i);
						if(IsARentCar2(newcar))
						{
							SetVehicleToRespawn(HireKey2[i]);
							TogglePlayerControllable(i, 1);
						}
					}
				}
			}
		}
	}
	for(new h = VV; h < sizeof(CarInfo); h++)
	{
		if(CarInfo[h][cBattery] == 0)
		{
  			new engine,lights,alarm,doors,bonnet,boot,objective;
			GetVehicleParamsEx(h,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(h,0,lights,alarm,doors,bonnet,boot,objective);
			engineOn[h] = false;
			return 1;
		}
		if(NoWheels[h] > 0)
		{
	        new component = GetVehicleComponentInSlot(h, CARMODTYPE_WHEELS);
	        new panels, doors, lights, tires;
	        GetVehicleDamageStatus(h, panels, doors, lights, tires);
	        if (component == 1025)
	        {
				UpdateVehicleDamageStatus(h, panels, doors, lights, 15);
    			SetVehicleVelocity(h, 0.0, 0.0, 0.0);
	            return 1;
	        }
	        else
	        {
	            NoWheels[h] = 0;
                UpdateVehicleDamageStatus(h, panels, doors, lights, 0);
	        }
		}
	}
	return 1;
}
public SetPlayerUnjail()
{
//	new plname[MAX_PLAYER_NAME];
	new string[128], Float:armor;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 3)
					{
						SetPosEx(i,243.5500,71.0335,1003.6406,225.9520,6,0);
						PlayerInfo[i][pBusqueda] = 0;
						SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
					}
					if(PlayerInfo[i][pJailed] == 4)
					{
						SetPosEx(i, 2329.2937,-2353.9514,13.5469,44.3538,0,0);
						PlayerInfo[i][pBusqueda] = 0;
						SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
					}
					if(PlayerInfo[i][pJailed] == 5)
					{
						SetPosEx(i,918.69,-995.49,38.17,87.1910,0,0);
						PlayerInfo[i][pBusqueda] = 0;
						SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
					}
						if(PlayerInfo[i][pJailed] == 6)
					{
						SetPosEx(i,918.69,-995.49,38.17,87.1910,0,0);
						PlayerInfo[i][pBusqueda] = 0;
						SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
					}
					else if(PlayerInfo[i][pJailed] == 1)
					{
					    SetPlayerInterior(i, 0);
					    PlayerInfo[i][pInt] = 0;
					    SetPlayerPos(i, 1549.6013,-1681.5797,13.5563);
					}
					PlayerInfo[i][pJailed] = 0;
					EquipoMeca[i] = 0;
					PlayerInfo[i][pPapel] = 0;
					SendClientMessage(i, COLOR_GRAD1,"Warden: Usted ha sido dejado en libertad.");
					SendClientMessage(i, COLOR_GRAD1,"Warden: Piense un tiempo, antes de que usted cometa un crimen.");
					format(string, sizeof(string), "~g~Dejado En Libertad~n~~w~Trate de ser un mejor ciudadano");
					GameTextForPlayer(i, string, 5000, 1);
					SetPlayerToTeamColor(i);
				}
			}
			if(GetPlayerWeapon(i) > 0)
			{
			    if(GetPlayerWeapon(i) == 9 || GetPlayerWeapon(i) == 28 || GetPlayerWeapon(i) == 32 || GetPlayerWeapon(i) == 35 || GetPlayerWeapon(i) == 36 || GetPlayerWeapon(i) == 37 || GetPlayerWeapon(i) == 38 || GetPlayerWeapon(i) == 39 || GetPlayerWeapon(i) == 44|| GetPlayerWeapon(i) == 45)
			    {
			        ResetPlayerWeapons(i);
			    }
			}
			GetPlayerArmour(i,armor)
			if(HasArmor[i] == 1 && armor < 1)
			{
			    HasArmor[i] = 0;
			    RemovePlayerAttachedObject(i, 1);
				Att_Obj_Slot_1[i] = "Vacío";
			}
			if(PlayerInfo[i][pBusqueda] > 0)
			{
			    SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
			}
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] -= 1;
		    }
		    if(PlayerInfo[i][pBanDuda] != 0){
				PlayerInfo[i][pBanDuda]--;
			}
		    if(Bodyguard_ContractedTime[i] > 0)
		    {
		        Message(i, COLOR_GRAD2, "Tu contrato de guardaespaldas ha caducado!");
		        Bodyguard_ContractedTime[i] = 0;
		        Bodyguard_Contracted[i] = 500;
		        Bodyguard_Client[i] = 500;
		    }
			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(PlayerDrunk[i] > 9)
			{
			    if(PlayerDrunkTime[i] > 20)
			    {
			    	ApplyAnimation(i,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[i]*1000);
			    	ApplyAnimation(i,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[i]*1000);
			    	SetPlayerDrunkLevel(i, PlayerDrunk[i]*1000);
			    	PlayerDrunk[i] -= 1;
			    	PlayerDrunkTime[i] = 0;
				}
				PlayerDrunkTime[i] += 1;
			}
			if(PlayerDrunk[i] < 10 && PlayerDrunk[i] > 0)
			{
			    if(PlayerDrunkTime[i] > 30)
			    {
			        PlayerDrunk[i] -= 1;
                    PlayerDrunkTime[i] = 0;
				}
				PlayerDrunkTime[i] += 1;
			}
			if(UsingSpeed[i] > 0)
			{
			    UsingSpeed[i] -= 1;
			}
			if(UsingSpeed[i] == 0 && SpeedEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    SetPlayerStats(i);
			    GText(i, "~w~Efecto ~p~speed ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
			    UsingSpeed[i] = 0;
			    SpeedEffect[i] = 0;
			}
			if(UsingEctasy[i] > 0)
			{
			    new sendername[MAX_PLAYER_NAME];
			    GetPlayerName(i, sendername, sizeof(sendername));
			    new Float:cx, Float:cy, Float:cz;	GetPlayerPos(i, cx, cy, cz);
			    if(UsingEctasy[i] == 280) { format(string, sizeof(string),"%s dice: Vivo en un lugar paralelo a la realidad.", sendername);  Message(i, COLOR_FADE, string); GetPlayerPos(i, InceptionPos[i][0],InceptionPos[i][1],InceptionPos[i][2]);}
			    if(UsingEctasy[i] == 280) { format(string, sizeof(string),"Voz desconocida dice: ¿ Cuánto tiempo %s, verdad ?", sendername);  Message(i, COLOR_FADE, string); }
			    if(UsingEctasy[i] == 275) { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ No me recuerdas, soy yo ... ?"); }
			    if(UsingEctasy[i] == 270) { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ No me respondes ... que mal educado ... ?"); }
			    if(UsingEctasy[i] == 260) { Message(i, COLOR_FADE, "Voz desconocida dice: Veo, que ... has crecido ..."); }
			    if(UsingEctasy[i] == 250) { Message(i, COLOR_FADE, "Voz desconocida dice: Has aceptado pactar, conmigo. Verdad?"); }
			    if(UsingEctasy[i] == 240) { Message(i, COLOR_FADE, "Voz desconocida dice: Estás en lo cierto pero ... pactar conmigo tiene sus inconvenientes"); }
			    if(UsingEctasy[i] == 230) { Message(i, COLOR_FADE, "Voz desconocida dice: Pero ... veo que tu los has aceptado."); }
			    if(UsingEctasy[i] == 220) { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ No te gusta tu realidad, verdad ?"); }
			    if(UsingEctasy[i] == 210) { Message(i, COLOR_FADE, "Voz desconocida dice: Yo te ofrezco una, pero producto de tu imaginación."); }
			    if(UsingEctasy[i] == 200) { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ Aceptas ?"); }
			    if(UsingEctasy[i] == 190) { Message(i, COLOR_FADE, "Voz desconocida dice: Es normal tu miedo... lo tomaré como un Sí!"); }
			    if(UsingEctasy[i] == 195) { SetPlayerWeather(i, 250); }
                if(UsingEctasy[i] == 190) { Message(i, COLOR_FADE, "Voz desconocida dice: Muahahaha! Intenta salir del laberinto de tu subconciente amigo."); }
                if(UsingEctasy[i] == 170) { Message(i, COLOR_FADE, "Voz suave dice: No! No camines! No intentes salir de aquí! No podrás!"); }
                if(UsingEctasy[i] == 160) { Message(i, COLOR_FADE, "Voz suave dice: Solo puedes salir si consigues devolverme a la vida!"); }
                if(UsingEctasy[i] == 150) { Message(i, COLOR_FADE, "Voz suave dice: Para eso, necesitas mi alma! Encuentrala, porfavor!"); }
                if(UsingEctasy[i] == 140) { Message(i, COLOR_FADE, "Voz suave dice: Guíate por tu intuición, piensa en lo real!"); }
                if(UsingEctasy[i] == 130) { Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha! Nunca saldrás de aqui!"); }
                if(UsingEctasy[i] == 125) { SetPlayerWeather(i, 19); }
                if(UsingEctasy[i] == 110) { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha!");}
                if(UsingEctasy[i] == 108) { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha!");}
                if(UsingEctasy[i] == 106) { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Muahahahaahahahaaha!");}
                if(UsingEctasy[i] == 104) { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha!");}
                if(UsingEctasy[i] == 102) { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Atrapado en tu realidad ficticia!");}
                if(UsingEctasy[i] == 100) { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Moriraas!");}
                if(UsingEctasy[i] == 95) { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hhaahhahaa!");}
                if(UsingEctasy[i] == 94) { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hasta nunca ... !");}
			    if(UsingEctasy[i] == 93) { SetPlayerWeather(i, 2009); }
			    if(UsingEctasy[i] == 92) { SetPlayerPos(i, cx+100, cy+50, cz+3); }
			    if(UsingEctasy[i] == 93) { SetPlayerPos(i, cx+100, cy+50, cz+3); }
			    if(UsingEctasy[i] == 94) { SetPlayerPos(i, cx+100, cy+50, cz+3); }
			    if(UsingEctasy[i] == 95) { SetPlayerPos(i, cx+100, cy+50, cz+3); }
			    if(UsingEctasy[i] == 96) { SetPlayerPos(i, cx+100, cy+50, cz+3); }
			    if(UsingEctasy[i] == 60) { format(string, sizeof(string),"%s dice: He de volver a la realidad, ahora!", sendername);  Message(i, COLOR_FADE, string); }
			    if(UsingEctasy[i] == 10) { format(string, sizeof(string),"%s dice: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaahhhhh!", sendername);  Message(i, COLOR_FADE, string); }
			    if(UsingEctasy[i] == 9) { SetPlayerWeather(i, 150); }
			    UsingEctasy[i] -= 1;
			}
			if(UsingEctasy[i] == 0 && EctasyEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~y~extasis ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			SetPlayerWeather(i, DefaultWeather);
       			UsingEctasy[i] = 0;
			    EctasyEffect[i] = 0
			    SetPlayerPos(i, InceptionPos[i][0],InceptionPos[i][1],InceptionPos[i][2]);
			    SetPlayerVirtualWorld(i, 0);
			}
			if(UsingRitalin[i] > 0)
			{
			    if(UsingRitalin[i] == 200 && armor < 101) { SetPlayerArmour(i, armor+20); }
			    if(UsingRitalin[i] == 100 && armor < 101) { SetPlayerArmour(i, armor+20); }
			    UsingRitalin[i] -= 1;
			}
			if(UsingRitalin[i] == 0 &&RitalinEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~b~ritalin ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			SetPlayerWeather(i, DefaultWeather);
       			UsingRitalin[i] = 0;
			    RitalinEffect[i] = 0
			}
			if(UsingHeroina[i] > 0)
			{
			    new Float:PlayerHealth;
			    GetPlayerHealth(i, PlayerHealth);
			    new crack = random(10);
			    if(crack == 2) { ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 0, 5000); }
			    if(HeroinaBeat[i] == 1) { SetHP(i, PlayerHealth-1);}
			    UsingHeroina[i] -= 1;
			}
			if(UsingHeroina[i] == 0 &&HeroinaEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~g~heroina ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			UsingHeroina[i] = 0;
			    HeroinaEffect[i] = 0
			    HeroinaBeat[i] = 0;
			    SetHP(i, 25);
			}
			if(UsingMarihuana[i] > 0)
			{
			    new Float:PlayerHealth;
			    GetPlayerHealth(i, PlayerHealth);
			    new crack = random(10);
			    if(crack == 2) { ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 0, 5000); }
			    if(MarihuanaBeat[i] == 1) { SetHP(i, PlayerHealth-1);}
			    UsingMarihuana[i] -= 1;
			}
			if(UsingMarihuana[i] == 0 &&MarihuanaEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~g~marihuana ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			UsingMarihuana[i] = 0;
			    MarihuanaEffect[i] = 0
			    MarihuanaBeat[i] = 0;
			    SetHP(i, 25);
			}
			if(Left4Life[i] > 0)
			{
			    if(Left4Life[i] == 1)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s muere desangrado.", sendername);
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    SetHP(i, 0);
				    PlayerInfo[i][pEpilepsia] += 1;
				    PlayerInfo[i][pCancer] += 3;
					Left4Life[i] = 0;
				}
				if(Left4Life[i] == 30)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s agoniza lentamente.", sendername);
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        			new Float:PlayerHealth;
				    GetPlayerHealth(i, PlayerHealth)
                    SetHP(i, PlayerHealth-5);
                    if(Rescued[i] == 0)
                    {
                    	ApplyAnimation(i, "CRACK", "crckdeth4", 2.5, 1, 0, 1, 0, 0);
                    	ApplyAnimation(i, "CRACK", "crckdeth4", 2.5, 1, 0, 1, 0, 0);
				 	}
				}
				if(Left4Life[i] == 100)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s empieza a sangrar más.", sendername);
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    new Float:PlayerHealth;
				    GetPlayerHealth(i, PlayerHealth)
                    SetHP(i, PlayerHealth-3);
                    if(Rescued[i] == 0)
                    {
                    	ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
                    	ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
                    }
				}
				if(Left4Life[i] == 150)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s se encuentra incosciente y sangrando.", sendername);
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    new Float:PlayerHealth;
				    GetPlayerHealth(i, PlayerHealth)
                    SetHP(i, PlayerHealth-2);
                    if(Rescued[i] == 0)
                    {
                    	ApplyAnimation(i, "CRACK", "crckdeth1", 2.5, 1, 0, 1, 0, 0);
                    	ApplyAnimation(i, "CRACK", "crckdeth1", 2.5, 1, 0, 1, 0, 0);
				 	}
				}
				Left4Life[i] -= 1;
			}
			if(PizzaCallTime[i] > 0)
   			{
       			if(PizzaCallTime[i] == 90) { PizzaCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GText(i, "~r~CheckPoint~n~~w~Eliminado!", 2500, 1); }
       			else
    			{
        			format(string, sizeof(string), "%d", 90 - PizzaCallTime[i]);
     				GText(i, string, 1500, 6);
     				PizzaCallTime[i] += 1;
    			}
   			}
			if(IsSmokingPorro[i] > 0)
			{
			    if(IsSmokingPorro[i] == 1)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s acaba de fumarse el porro y lanza al suelo.", sendername);
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    new Float:PlayerHealth, DrunkLvl;
				    GetPlayerHealth(i, PlayerHealth)
        			if( PlayerHealth < 120)
					{
					 	SetHP(i, PlayerHealth+10);
					}
				    SetPlayerDrunkLevel(i, DrunkLvl+5000);
				    PlayerInfo[i][pEpilepsia] += 1;
				    PlayerInfo[i][pCancer] += 1;
				    SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
				    if(UsingSmokeAnim[i] == 1)
				    {
				        UsingSmokeAnim[i] = 0;
				        ClearAnimations(i);
				    }
			    }
			    if(IsSmokingPorro[i] == 40)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s tose y le hecha una calada al porro.", sendername);
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    new Float:PlayerHealth, DrunkLvl;
        			GetPlayerHealth(i, PlayerHealth)
        			if( PlayerHealth < 120)
					{
					 	SetHP(i, PlayerHealth+10);
					}
				    SetPlayerDrunkLevel(i, DrunkLvl+5000);
				    PlayerInfo[i][pEpilepsia] += 1;
				    PlayerInfo[i][pCancer] += 1;
			    }
			    if(IsSmokingPorro[i] == 80)
			    {
           			new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s disfruta fumándose un porro.", sendername);
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    new Float:PlayerHealth, DrunkLvl;
				    GetPlayerHealth(i, PlayerHealth)
        			if( PlayerHealth < 120)
					{
					 	SetHP(i, PlayerHealth+10);
					}
				    SetPlayerDrunkLevel(i, DrunkLvl+5000);
				    PlayerInfo[i][pEpilepsia] += 1;
				    PlayerInfo[i][pCancer] += 1;
			    }
			    if(IsSmokingPorro[i] == 120)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s cierra los ojos y fuma.", sendername);
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    new Float:PlayerHealth, DrunkLvl;
				    GetPlayerHealth(i, PlayerHealth)
        			if( PlayerHealth < 120)
					{
					 	SetHP(i, PlayerHealth+10);
					}
				    SetPlayerDrunkLevel(i, DrunkLvl+5000);
				    PlayerInfo[i][pEpilepsia] += 1;
				    PlayerInfo[i][pCancer] += 1;
			    }
			    if(IsSmokingPorro[i] == 150)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s absorbe el humo del porro.", sendername);
				    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    new Float:PlayerHealth, DrunkLvl;
				    GetPlayerHealth(i, PlayerHealth)
        			if( PlayerHealth < 120)
					{
					 	SetHP(i, PlayerHealth+10);
					}
				    SetPlayerDrunkLevel(i, DrunkLvl+5000);
				    PlayerInfo[i][pEpilepsia] += 1;
				    PlayerInfo[i][pCancer] += 1;
			    }
			    IsSmokingPorro[i] -= 1;
			}
		}
	}
}

public CheckGas()
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	for(new i=0;i<VEH;i++)
	{
		if(engineOn[i] == 1)
		{
			if(Gas[i] >= 1 && !IsAPlane(i) && !IsATrain(i))
			{
				Gas[i] --;
			}
			if(IsAnOwnableCar(i) && CarInfo[i][cOwned] == 1 && CarInfo[i][cBattery] > 0)
			{
				CarInfo[i][cBattery] -= 1;
				if(CarInfo[i][cBattery] < 40)
				{
					GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(i,0,lights,alarm,doors,bonnet,boot,objective);
					engineOn[i] = false;
				}
			}
		}
	}
	CheckCarHealth();
	return 1;
}

public SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pJailed] < 1)
	    {
   			if (PlayerInfo[playerid][pWeapon] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon], PlayerInfo[playerid][pAmmo]);
				PlayerInfo[playerid][pWeapon] = 0; PlayerInfo[playerid][pAmmo] = 0;
			}
			if (PlayerInfo[playerid][pWeapon2] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon2], PlayerInfo[playerid][pAmmo2]);
				PlayerInfo[playerid][pWeapon2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
			}
			if (PlayerInfo[playerid][pWeapon3] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon3], PlayerInfo[playerid][pAmmo3]);
				PlayerInfo[playerid][pWeapon3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
			}
			if (PlayerInfo[playerid][pWeapon4] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon4], PlayerInfo[playerid][pAmmo4]);
				PlayerInfo[playerid][pWeapon4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
			}
			if (PlayerInfo[playerid][pWeapon5] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon5], PlayerInfo[playerid][pAmmo5]);
				PlayerInfo[playerid][pWeapon5] = 0; PlayerInfo[playerid][pAmmo5] = 0;
			}
			if (PlayerInfo[playerid][pWeapon6] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon6], PlayerInfo[playerid][pAmmo6]);
				PlayerInfo[playerid][pWeapon6] = 0; PlayerInfo[playerid][pAmmo6] = 0;
			}
			if (PlayerInfo[playerid][pWeapon7] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon7], PlayerInfo[playerid][pAmmo7]);
				PlayerInfo[playerid][pWeapon7] = 0; PlayerInfo[playerid][pAmmo7] = 0;
			}
			if (PlayerInfo[playerid][pWeapon8] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon8], PlayerInfo[playerid][pAmmo8]);
				PlayerInfo[playerid][pWeapon8] = 0; PlayerInfo[playerid][pAmmo8] = 0;
			}
			if (PlayerInfo[playerid][pWeapon9] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon9], PlayerInfo[playerid][pAmmo9]);
				PlayerInfo[playerid][pWeapon9] = 0; PlayerInfo[playerid][pAmmo9] = 0;
			}
			if (PlayerInfo[playerid][pWeapon10] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon10], PlayerInfo[playerid][pAmmo10]);
				PlayerInfo[playerid][pWeapon10] = 0; PlayerInfo[playerid][pAmmo10] = 0;
			}
			if (PlayerInfo[playerid][pWeapon11] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon11], PlayerInfo[playerid][pAmmo11]);
				PlayerInfo[playerid][pWeapon11] = 0; PlayerInfo[playerid][pAmmo11] = 0;
			}
			if (PlayerInfo[playerid][pWeapon12] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon12], PlayerInfo[playerid][pAmmo12]);
				PlayerInfo[playerid][pWeapon12] = 0; PlayerInfo[playerid][pAmmo12] = 0;
			}
		}
	}
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Hombre"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Mujer"; }
  		// Premium
  		new dotext[20];
  		if(PlayerInfo[targetid][pDonateT] == 1) { dotext = "1"; }
  		else if(PlayerInfo[targetid][pDonateT] == 2) { dotext = "2"; }
  		else if(PlayerInfo[targetid][pDonateT] == 3) { dotext = "3"; }
  		else if(PlayerInfo[targetid][pDonateT] == 0) { dotext = "No"; }
  		// -=========== Orining ==============- //
	    new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 2) { otext = "Europa"; }
		else if(PlayerInfo[targetid][pOrigin] == 1) { otext = "América"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "Asia"; }
		else if(PlayerInfo[targetid][pOrigin] == 4) { otext = "África"; }
		else if(PlayerInfo[targetid][pOrigin] == 5) { otext = "Oceanía"; }
		// -=========== Seguro ==============- //
		new setext[6];
		if(PlayerInfo[targetid][pSeguro] == 0) { setext = "No"; }
		if(PlayerInfo[targetid][pSeguro] == 1) { setext = "en LS"; }
		// -=========== Jobs ===============- //
		new jtext[24];
		if(PlayerInfo[playerid][pJob] == 1) { jtext = "Chófer de Tren"; }
		else if(PlayerInfo[playerid][pJob] == 2) { jtext = "Barrendero"; }
		else if(PlayerInfo[playerid][pJob] == 3) { jtext = "Piloto"; }
		else if(PlayerInfo[playerid][pJob] == 4) { jtext = "Vendedor de móviles"; }
		else if(PlayerInfo[playerid][pJob] == 5) { jtext = "Ladrón"; }
		else if(PlayerInfo[playerid][pJob] == 6) { jtext = "Pizzero"; }
		else if(PlayerInfo[playerid][pJob] == 7) { jtext = "Heladero"; }
		else if(PlayerInfo[playerid][pJob] == 8) { jtext = "Camionero"; }
		// -============ Factions ===========- //
	    new ftext[31];
	    if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1)		{ ftext = "Policía Local LS"; }
	    else if(PlayerInfo[targetid][pMember] == 2|| PlayerInfo[targetid][pLeader] == 2)	{ ftext = "Policía Local LV"; }
	    else if(PlayerInfo[targetid][pMember] == 3|| PlayerInfo[targetid][pLeader] == 3)	{ ftext = "Guardia Nacional"; }
        else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4)	{ ftext = "LSMC"; }
        else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5)	{ ftext = "LVMC"; }
  		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)	{ ftext = "Taxi LS"; }
  		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7)	{ ftext = "Mecánicos LS"; }
  		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)	{ ftext = "Centro de Inteligencia"; }
  		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9)	{ ftext = "Groove Street"; }
  		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10)	{ ftext = "Sureños 13"; }
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11)	{ ftext = "Latin Kings"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)	{ ftext = "La Cosa Nostra"; }
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)	{ ftext = "Yakuza"; }
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)	{ ftext = "Família Korsakova"; }
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)	{ ftext = "Licencieros"; }
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)	{ ftext = "Gobierno"; }
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17)	{ ftext = "Radio-Television"; }
		else if(PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18)	{ ftext = "Mecánicos LV"; }
		else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19)	{ ftext = "Traficantes"; }
		else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20)	{ ftext = "Triadas"; }
		else if(PlayerInfo[targetid][pMember] == 22 || PlayerInfo[targetid][pLeader] == 22)	{ ftext = "Los 14 diamantes negros"; }
		else if(PlayerInfo[targetid][pMember] == 23 || PlayerInfo[targetid][pLeader] == 23)	{ ftext = "Hitman"; }
		else if(PlayerInfo[targetid][pMember] == 24 || PlayerInfo[targetid][pLeader] == 24)	{ ftext = "FBI"; }
		else if(PlayerInfo[targetid][pMember] == 25 || PlayerInfo[targetid][pLeader] == 25)	{ ftext = "Blood's"; }
		else if(PlayerInfo[targetid][pMember] == 26 || PlayerInfo[targetid][pLeader] == 26)	{ ftext = "Cripz"; }
		else if(PlayerInfo[targetid][pMember] == 27 || PlayerInfo[targetid][pLeader] == 27)	{ ftext = "Al Qaeda"; }
		else if(PlayerInfo[targetid][pMember] == 28 || PlayerInfo[targetid][pLeader] == 28)	{ ftext = "The Visage"; }
		else if(PlayerInfo[targetid][pMember] == 29 || PlayerInfo[targetid][pLeader] == 29)	{ ftext = "Alemana"; }
		else { ftext = "No"; }
		// -================ RanKs ===============- //
		new rtext[40];
		if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1 || PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2)//PD Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Cadete"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Oficial"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Investigador"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Teniente"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Capitán"; }
	        else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Inspector"; }
	        else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Comandante"; }
			else { rtext = "Cadete"; }
		}
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3)//GN Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Trooper"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Teniente"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Capitan"; }
	        else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Mayor"; }
	        else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Coronel"; }
			else { rtext = "Cabo"; }
		}
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4 || PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5)//SAMUR
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Práctico"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Paramédico"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Médico"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Supervisor"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Responsable Técnico"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
			else { rtext = "Práctico"; }
		}
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6 || PlayerInfo[targetid][pMember] == 21 || PlayerInfo[targetid][pLeader] == 21)
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Conductor de Bus"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Taxista"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Supervisor"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Instructor"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Subdirector"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
			else { rtext = "Conductor de Bus"; }
		}
		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7 || PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18)// Mecánicos
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Ayudante"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Trucker"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Mecánico"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Ingeniero"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Supervisor"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
			else { rtext = "Ayudante"; }
		}
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)//U7 Ranks
		{
      if(PlayerInfo[targetid][pRank] == 1) { rtext = "Secretario"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Detective"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Guardaespaldas"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Super Agente"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Agente 47"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
			else { rtext = "Secretario"; }
		}
		else if(Pandilleros(playerid))// 9-11 GS,LH,LK Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 6) { rtext = "Líder"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "General"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Cabezilla"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Propagador"; }
		    else if(PlayerInfo[targetid][pRank] == 1) { rtext = "Joto"; }
			else { rtext = "Joto"; }
		}
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)//ITA Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 7) { rtext = "Capi Di Tutti Capi"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Don"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Sottocapo"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Consigliere"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Capo"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Soldati"; }
		    else if(PlayerInfo[targetid][pRank] == 1) { rtext = "Giovane d' Honore"; }
			else { rtext = "Giovane d' Honore"; }
		}
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)//YAK Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Kyodai"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Wakashu"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Senpai Kohai"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Saiko Komon"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Sumiyoshi"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Oyabun"; }
			else { rtext = "Kyodai"; }

		}
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)//RUS Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 7) { rtext = "Hannibal Lecter"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Don"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Zamestitel"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "konsul'tant"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Kapo"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Soldat"; }
		    else if(PlayerInfo[targetid][pRank] == 1) { rtext = "Assotsiirovat"; }
			else { rtext = "Assotsiirovat"; }
		}
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)// Licencieros
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Secretario"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Maestro"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Evaluador"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Supervisor"; }
		    else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Director"; }
			else { rtext = "Secretario"; }
		}
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)// Gobierno
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Chofer del gobierno"; }
		    else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Agente en practicas"; }
		    else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Agente del Servico Secreto"; }
		    else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Ministro"; }
		    else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Ministro General"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Alcalde LV"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Alcalde LS"; }
            else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Vicepresidente"; }
            else if(PlayerInfo[targetid][pRank] == 9) { rtext = "Presidente"; }
			else { rtext = "Ministro"; }
		}
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17)// CNN
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Becario"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Redactor"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Periodista"; }
		    else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Enviado Especial"; }
		    else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Presentador"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director CNN"; }
			else { rtext = "Becario"; }
		}
		else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19)// Banqueros
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Guardia"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Cosechador"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Contrabandista"; }
		    else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Traficante"; }
		    else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Mano derecha"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Jefazo"; }
			else { rtext = "Guardia"; }
		}
		else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20)// Triadas
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Aprendiz"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Jivaro"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Satelite"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Consejero"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Mano derecha"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Patrón"; }
			else { rtext = "Aprendiz"; }
		}
		else if(PlayerInfo[targetid][pMember] == 22 || PlayerInfo[targetid][pLeader] == 22)// F. Capone
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Turro"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Socio"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Miembro de honor"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Capo"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Manager"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Mano Derecha"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Dirigente"; }
			else { rtext = "Asociado"; }
		}
		else if(PlayerInfo[targetid][pMember] == 23 || PlayerInfo[targetid][pLeader] == 23)// Hitman
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Asesino"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Sicario"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Agente Especial"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Vice-Director"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
			else { rtext = "Novato"; }
		}
		else if(PlayerInfo[targetid][pMember] == 24 || PlayerInfo[targetid][pLeader] == 24)// FBI
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Agente"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "S. Agente"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Especial"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Criminalista"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Sub-Director"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
			else { rtext = "Novato"; }
		}
		else if(PlayerInfo[targetid][pMember] == 27 || PlayerInfo[targetid][pLeader] == 27)// Al Qaeda
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Hacker"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Terrorista"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Mano Derecha"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Mandatario"; }
			else { rtext = "Novato"; }
		}
		else if(PlayerInfo[targetid][pMember] == 28 || PlayerInfo[targetid][pLeader] == 28)// Mafia Española
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Novice"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Associated"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Trafficker"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Assassin Master"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Right Hand"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Sub Lord"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Lord"; }
			else { rtext = "Espia"; }
		}
		else if(PlayerInfo[targetid][pMember] == 29 || PlayerInfo[targetid][pLeader] == 29)// Mafia Alemana
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Neuling"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Mitarbeiter"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "SpecializedKriminel"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Infiltrieren"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Rechte Hand"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "AnFuhrer"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Fuhrer"; }
			else { rtext = "Neuling"; }
		}
		else { rtext = "No"; }

		new age = PlayerInfo[targetid][pAge];
		new deaths = PlayerInfo[targetid][pDeaths];
		new arrest = PlayerInfo[targetid][pArrested];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new kills = PlayerInfo[targetid][pKills];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new account = PlayerInfo[targetid][pAccount];
		new puntosrol = PlayerInfo[targetid][pGPS];
		new housekey = PlayerInfo[targetid][pPhousekey]; 
		new housekey2 = PlayerInfo[targetid][pPhousekey2];
		new carkey = PlayerInfo[targetid][pPcarkey];
		new carkey2 = PlayerInfo[targetid][pPcarkey2];
		new CarPremium = PlayerInfo[targetid] [pCarPremium];
		new CarPremium2 = PlayerInfo[targetid] [pCarPremium2];
		new ctime = PlayerInfo[targetid][pConnectTime];
		new nxtlevel = PlayerInfo[playerid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new hirekey = HireKey[playerid];
		new bizz = PlayerInfo[targetid][pPbiskey];
		new rentc = PlayerInfo[targetid][pRent];
		new gsocial = PlayerInfo[playerid][pGSocial];
		new timejail = PlayerInfo[targetid][pJailTime];
		new materiales = PlayerInfo[targetid][pMats];
		new wr = PlayerInfo[targetid][pWRestricted];
		new Float:health;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		ClearChatbox(playerid, 10);
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring),"| Tus Stats : %s",name);
		SendClientMessage(playerid, 0x4B005E93,coordsstring);
		format(coordsstring, sizeof(coordsstring),"| Edad[%d]  Nivel[%d]  Sexo[%s]  Cuenta Bancaria[%d$]  Teléfono[%d]  Seguro[%s] Grupo Social[%s]", age, level, atext, account,pnumber, setext, gsocial);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Proximo Nivel: %d (%d/%d)  Facción[%s]  Rango[%s]  Trabajo[%s] Puntos de rol[%d]", level+1, exp, expamount, ftext, rtext, jtext, puntosrol);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Horas Jugadas[%d]  Muertes[%d]  Arrestos[%d]  Asesinatos[%d] {A80000}Premium{FFFFFF}[%s]",ctime, deaths, arrest, kills, dotext);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Llave Casa[%d] Llave Coche[%d] Llave Coche2[%d]  Coche Renta[%d]  Casa Renta[%d] Negocio[%d]",housekey, carkey, carkey2, hirekey, rentc, bizz);
		SendClientMessage(playerid, COLOR_GRAD3,coordsstring);
		format(coordsstring, sizeof(coordsstring), " Segundos en jails[%d] Materiales[%d] Llave Casa2 [%d] Protección de armas [%d]",timejail, materiales, housekey2, wr+1);
		SendClientMessage(playerid, COLOR_GRAD3,coordsstring);
		if (PlayerInfo[targetid][pPcarkey] != 9999)
		{
		    format(coordsstring, sizeof(coordsstring), "|{006A75} Vehículo:{FFFFFF} %s  Valor: %d$  Colores:%d/%d  Locked:%d", CarInfo[carkey][cName], CarInfo[carkey][cValue], CarInfo[carkey][cColorOne], CarInfo[carkey][cColorTwo], CarInfo[carkey][cLock]);
		    SendClientMessage(playerid, COLOR_GRAD3,coordsstring);
		}
		if (PlayerInfo[targetid][pPcarkey2] != 9999)
		{
		    format(coordsstring, sizeof(coordsstring), "|{006A75} Vehículo2:{FFFFFF} %s  Valor: %d$  Colores:%d/%d  Locked:%d", CarInfo[carkey2][cName], CarInfo[carkey2][cValue], CarInfo[carkey2][cColorOne], CarInfo[carkey2][cColorTwo], CarInfo[carkey2][cLock]);
		    SendClientMessage(playerid, COLOR_GRAD3,coordsstring);
		}
		if (PlayerInfo[targetid][pCarPremium] != 9999)
		{
		    format(coordsstring, sizeof(coordsstring), "|{006A75} Vehículo Premium:{FFFFFF} %s  Valor: %d$  Colores:%d/%d  Locked:%d  Llave:%d", CarInfo[CarPremium][cName], CarInfo[CarPremium][cValue], CarInfo[CarPremium][cColorOne], CarInfo[CarPremium][cColorTwo], CarInfo[CarPremium][cLock], CarPremium);
		    SendClientMessage(playerid, COLOR_GRAD3,coordsstring);
		}
		if (PlayerInfo[targetid][pCarPremium2] != 9999)
		{
		    format(coordsstring, sizeof(coordsstring), "|{006A75} Vehículo Premium2:{FFFFFF} %s  Valor: %d$  Colores:%d/%d  Locked:%d  Llave:%d", CarInfo[CarPremium2][cName], CarInfo[CarPremium2][cValue], CarInfo[CarPremium2][cColorOne], CarInfo[CarPremium2][cColorTwo], CarInfo[CarPremium2][cLock], CarPremium2);
		    SendClientMessage(playerid, COLOR_GRAD3,coordsstring);
		}
	}
}

public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
  if(AdminDuty[playerid] == 0  && InTvTNaranja[playerid] == 0 && InTvTVerde[playerid] == 0 && Premiumcolor[playerid] == 0)
  {
	    SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
	    }
	}
}

public OnGameModeExit()
{
    DEBUG("--------------------------------------------------------");
	DEBUG("- - - - - - - - - - >Gamemode Termino< - - - - - - - - - -");
	DEBUG("--------------------------------------------------------");
	return 1;
}

public GameModeExitFunc()
{
	KillTimer(synctimer);
	KillTimer(unjailtimer);
	KillTimer(actimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(globaltimer);
	KillTimer(accountstimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(stoppedvehtimer);
	KillTimer(tracetimer);
	KillTimer(LifeTimer);
	KillTimer(KeysTimer);
	GameModeExit();
}
// -==================================================================
public LoadStuff()
{
	new arrCoords[18][64];
	new strFromFile2[128];
	new File: file = fopen("stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		Security = strval(arrCoords[3]);
		Blood = strval(arrCoords[4]);
		Fuel = strval(arrCoords[5]);
		FMB = strval(arrCoords[6]);
		FMP = strval(arrCoords[7]);
		txtcost = strval(arrCoords[8]);
		Bank_Interest = strval(arrCoords[9]);
		Max_Prestamo = strval(arrCoords[10]);
		TarifaTaxi = strval(arrCoords[11]);
		/////////////////
		Samd_Impuesto = strval(arrCoords[12]);
		Samd_Fondos = strval(arrCoords[13]);
		Samd_Asistencia = strval(arrCoords[14]);
		Samd_CompraSeguro = strval(arrCoords[15]);
		TaxRenta = strval(arrCoords[16]);
		TaxPasaporte = strval (arrCoords[17]);
		fclose(file);
	}
	else
	{
	    printf("LoadStuff() No funciona correctamente y se a cerrado.");
	    printf("Error: El archivo: \"stuff.ini\" no funciona!");
	    GameModeExit();
	}
	return 1;
}

public SaveStuff()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d", Jackpot,Tax,TaxValue,Security,Blood,Fuel,FMB,FMP,txtcost,Bank_Interest,Max_Prestamo,TarifaTaxi,Samd_Impuesto,Samd_Fondos,Samd_Asistencia,Samd_CompraSeguro,TaxRenta,TaxPasaporte);
	new File: file2 = fopen("stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadCar()
{
	new arrCoords[34][64];
	new strFromFile2[256];
	new File: file = fopen("cars.cfg", io_read);
	if (file)
	{
	    //printf("-========= Coches en venta =======-");
  		new idx = VV;
		while (idx < sizeof(CarInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			CarInfo[idx][cModel] 		= strval(arrCoords[0]);
			CarInfo[idx][cLocationx] 	= floatstr(arrCoords[1]);
			CarInfo[idx][cLocationy] 	= floatstr(arrCoords[2]);
			CarInfo[idx][cLocationz] 	= floatstr(arrCoords[3]);
			CarInfo[idx][cAngle] 		= floatstr(arrCoords[4]);
			CarInfo[idx][cColorOne] 	= strval(arrCoords[5]);
			CarInfo[idx][cColorTwo] 	= strval(arrCoords[6]);
  			strmid(CarInfo[idx][cOwner], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(CarInfo[idx][cName], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			CarInfo[idx][cValue] 		= strval(arrCoords[9]);
			CarInfo[idx][cOwned] 		= strval(arrCoords[10]);
			CarInfo[idx][cLock] 		= strval(arrCoords[11]);
			CarInfo[idx][cBattery] 		= strval(arrCoords[12]);
			CarInfo[idx][cSpoiler] 		= strval(arrCoords[13]);
			CarInfo[idx][cHood] 		= strval(arrCoords[14]);
			CarInfo[idx][cRoof] 		= strval(arrCoords[15]);
			CarInfo[idx][cSideskirt] 		= strval(arrCoords[16]);
			CarInfo[idx][cNitro] 		= strval(arrCoords[17]);
			CarInfo[idx][cLamps] 		= strval(arrCoords[18]);
			CarInfo[idx][cExhaust] 		= strval(arrCoords[19]);
			CarInfo[idx][cWheel] 		= strval(arrCoords[20]);
			CarInfo[idx][cHydraulics] 		= strval(arrCoords[21]);
			CarInfo[idx][cPaintjob] 		= strval(arrCoords[22]);
			CarInfo[idx][cNeon] 		= strval(arrCoords[23]);
			CarInfo[idx][cFrontBumper] 		= strval(arrCoords[24]);
			CarInfo[idx][cRearBumper] 		= strval(arrCoords[25]);
			CarInfo[idx][cVents] 		= strval(arrCoords[26]);
			CarInfo[idx][cEmbargo] 		= strval(arrCoords[27]);
			CarInfo[idx][cMulta] 		= strval(arrCoords[28]);
			strmid(CarInfo[idx][cPlate], arrCoords[29], 0, strlen(arrCoords[29]), 255);
			CarInfo[idx][cGas] 		= strval(arrCoords[30]);
			CarInfo[idx][cAlarm] 		= strval(arrCoords[31]);
			CarInfo[idx][cGPS]          = strval(arrCoords[32]);
			CarInfo[idx][cRastreo]          = strval(arrCoords[33]);
			printf("(%d) %s",idx,CarInfo[idx][cName]);
			idx++;
		}
	}
	return 1;
}
public LoadBizz()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("bizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bName], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntrancex] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntrancey] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntrancez] = floatstr(arrCoords[6]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[7]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[8]);
			BizzInfo[idx][bTill] = strval(arrCoords[9]);
			BizzInfo[idx][bTillEx] = strval(arrCoords[10]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public LoadProperty()
{
	new arrCoords[27][64];
	new strFromFile2[256];
	new File: file = fopen("property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hOwned] = strval(arrCoords[0]);
			strmid(HouseInfo[idx][hOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[2]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[3]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[5]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[6]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[7]);
			HouseInfo[idx][hInt] = strval(arrCoords[8]);
			HouseInfo[idx][hLevel] = strval(arrCoords[9]);
			HouseInfo[idx][hValue] = strval(arrCoords[10]);
			HouseInfo[idx][hLock] = strval(arrCoords[11]);
			HouseInfo[idx][hRooms] = strval(arrCoords[12]);
			HouseInfo[idx][hRent] = strval(arrCoords[13]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[14]);
			HouseInfo[idx][hWep] = strval(arrCoords[15]);
			HouseInfo[idx][hAmmo] = strval(arrCoords[16]);
			HouseInfo[idx][hMats] = strval(arrCoords[17]);
			HouseInfo[idx][hDrugs] = strval(arrCoords[18]);
			HouseInfo[idx][hSpeed] = strval(arrCoords[19]);
			HouseInfo[idx][hEctasy] = strval(arrCoords[20]);
			HouseInfo[idx][hRitalin] = strval(arrCoords[21]);
			HouseInfo[idx][hHeroina] = strval(arrCoords[22]);
			HouseInfo[idx][hMarihuana] = strval(arrCoords[23]);
			HouseInfo[idx][hWorld] = strval(arrCoords[24]);
			HouseInfo[idx][hTime] = strval(arrCoords[25]);
			HouseInfo[idx][hprecioentrada] = strval(arrCoords[26]);
			idx++;
		}
		printf("Gamemode: Se han cargado %d Casas Perfectamente.",idx);
		fclose(file);
	}
	return 1;
}


//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{
    AntiDeAMX(); //

    Ganzones();
    b_Area = CreateDynamicRectangle(1843.243896, -1271.769653, 2083.243896, -1047.769653);
    SetTimer("Send_Mensajes_1",150000,1);
    ManualVehicleEngineAndLights();
	for(new c=0;c<VEH;c++)
	{
	    if(!IsAnOwnableCar(c)) Gas[c] = GasMax;
		else
		{
		    if(CarInfo[c][cGas] == 0) Gas[c] = 100;
		    else if(CarInfo[c][cGas] == 1) Gas[c] = 100;
		    else if(CarInfo[c][cGas] == 2) Gas[c] = 100;
		    else if(CarInfo[c][cGas] == 3) Gas[c] = 100;
		}
	}
	UsePlayerPedAnims(); // CJ Anims
	LoadCar();
	LoadTrunk();
	LoadProperty();
	LoadBizz();
	LoadStuff();
	LoadHQLocks();
	SetGameModeText("Roleplay en Español");
	SendRconCommand("mapname Los Santos");
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	SetPDistance(10);
	EnableTirePopping(1);
	AllowInteriorWeapons(1);
	AllowAdminTeleport(0);
	OnGlobalPropTextdrawUpdate();
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	OnGlobalBizzTextdrawUpdate();
	TextDrawCreate(0.0, 0.0, " ");

	mec = CreateDynamicObject(971, 1624.29, -1861.84, 13.00, 0.00, 0.00, 0.00);
	// 3D Labels
	CreateDynamic3DTextLabel("Casa de Impuestos\n Utiliza /pagarimpuestos", 		0xF4BA0BFD, 1510.8704,-1766.3086,-22.5984, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Recepción para multar\n Utiliza /pagarmultaveh", 		0xF4BA0BFD, 249.4565,67.7661,1003.6406, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,6);
	CreateDynamic3DTextLabel("[!]Hitman Deje su mensaje\nFunción: /hitman (id) (Monto)",  0x957714FD, 2230.9795,-2209.1138,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2388.82104492,2462.00488281,-19.26678085, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2388.84204102,2463.08447266,-19.26678085, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2388.80151367,2464.22631836,-19.26678085, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1456.9540,-1754.8099,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1505.2412,-1754.8859,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Robar Banco\nFunción: {CD0000}/asaltarbanco",  0xFFFFFFFD, 2396.1411,2490.1655,-19.0217, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1144.14, -1765.94, 13.23, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1269.46, -1323.66, 13.14, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2823.53, -1593.46, 10.72, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1589.25, -2295.61, 13.17, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1591.34, -2295.65, 13.18, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1593.18, -2295.65, 12.87, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 450.59, -1793.85, 5.18, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1415.24, -1020.80, 23.47, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1417.24, -1020.81, 23.47, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2194.95, 1987.35, 11.94, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2102.28, 2232.37, 10.67, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2241.49, 2396.21, 10.46, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2366.10, 2390.80, 10.46, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1586.76, 2282.15, 10.44, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1656.80, 1736.25, 10.45, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1595.33, 1819.43, 10.46, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2548.79, 1972.67, 10.46, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1984.10, 1032.45, 994.11, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1985.17, 1032.44, 994.11, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD,  1986.31, 1032.39, 994.11, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD,	2243.83, 1635.49, 1008.00, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2243.13, 1636.34, 1008.00, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 2244.52, 1634.61, 1008.01, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD,	1140.21, 12.01, 1000.32, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1141.04, 12.01, 1000.32, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!]Cajero ATM\nFunción: {CD0000}/depositar /sacar  /balance",  0xFFFFFFFD, 1141.87, 12.01, 1000.32, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("/equipo", 0xFF0000FF,1555.6058,-1822.8219,-22.6631, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mercado Negro \n Función: /bmbuy", 		0xFF0000FD, 1381.7235,-1479.5184,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Sala Reconocimientos", 		0xFF0000FD, 225.5393,69.1785,1005.0391, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD, 1505.15, -1740.25, 13.39, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD, 1757.51, -1865.24, 13.39, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD, 204.64, -1457.91, 12.86, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD, 1006.72, -952.08, 42.03, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD, 1413.72, -1025.69, 23.64, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD, 1924.68, -1759.70, 13.36, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD, 1953.42, -2093.50, 13.37, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD, 1673.36, -2242.31, 13.36, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD, 1608.49, -1878.95, 13.36, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mapa Publico\n Función: {CD0000}/Mapa", 		0xFFFFFFFD,	1180.13, -1387.50, 13.34, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Vendedor de Armas\n Función: {CD0000}/Carmas", 		0xFFFFFFFD, 308.4166,-141.4639,999.6016, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,7);
	CreateDynamic3DTextLabel("Lecciones de Armas\n Función: {CD0000}/Aleccion", 		0xFFFFFFFD,	314.2575,-133.4665,999.6016, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,7);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	389.2946,-2072.7144,7.8359, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	1479.58, -1677.91, 14.08, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	1474.32, -1692.75, 14.02, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	1474.96, -1704.05, 14.11, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	1359.35, -1748.55, 13.35, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	1358.74, -1755.30, 13.55, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	1359.95, -1752.11, 13.37, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	379.07, -2075.11, 7.98, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	384.87, -2058.28, 7.98, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	376.78, -2043.83, 7.95, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	364.91, -2040.62, 8.24, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	374.96, -2022.04, 8.24, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	354.50, -1360.15, 14.45, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	344.80, -1365.06, 14.45, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Carro de Comida Rapida\n Función: {CD0000}/Ccomida", 		0xFFFFFFFD,	1101.1132,-1380.3010,13.7813, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("LSPD", 						0xFF0000FD, 228.3314,69.1013,1005.0391, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Floristeria\nUtiliza /comprarflores", 				0xB900B9FD, 1424.4368,-1717.5712,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("/comprarflores", 				0xB900B9FD, 1272.6466,-1651.7512,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Cyber\nUtiliza: /google", 				0x007DFBFD, 1094.0630,-1386.4250,13.7408, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Bowling", 					0x06AEFFFD, 1632.0132,-1172.9296,24.0781, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Fábrica de Armas", 			0xF4BA0BFD, 2447.89,-1962.84,13.55, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Importación de Mercancías", 			0xF4BA0BFD, -117.99618530,-96.64963531,2.66079330, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Centro de Licencias", 		0xE6DE48FD, 2045.5239,-1907.7998,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para comprar licencia\n utiliza /clicencias", 		0xE6DE48FD, 2069.1609,-2217.1582,2664.6157, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Gimnasio", 					0xE6DE48FD, 2229.7756,-1721.4515,13.5631, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Compañia de Taxis", 			0xE6DE48FD, 1752.7571,-1894.2361,13.5573, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Pizza Stack", 				0xFF9B6AFD, 2105.2734,-1806.5475,13.5547, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Burger Shot", 				0xFF9B6AFD, 810.6635,-1616.1995,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Renta de Vehículos", 			0xD7006BFD, 1545.7329,-2202.2278,13.3326, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Oficina LSTV", 				0x13D269FD, 732.4431,-1350.7870,13.5000, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Terrazza", 					0xDF00DFFD, 1116.7500,-2063.1682,74.4297, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Ascensor", 					0x0093D9FD, 2034.1501,-1402.0724,17.2946, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Centro \nde Inteligencia", 					0xB700B7FD, 2025.3489,-1401.9500,17.2108, 20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Departamento\nde Policía", 	0xE8E202FD, 1554.9644,-1675.6254,16.1953, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Farmacia 24h",				0x6CD900FD, 895.3104,-1664.9683,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Hospital", 					0xFF0000FD, 1172.8470,-1323.1869,15.3999, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[ Pedir Servicio ]\nUtilize: /psv", 					0x8080FFFD, 251.1073,118.2060,1003.2188, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,10);
	CreateDynamic3DTextLabel("Lavadoras\nUsa /lavarropa",           0xE6DE48FD,3937.3613,-820.6308,1874.0156, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Lavadoras\nUsa /lavarropa",           0xE6DE48FD,3937.7209,-834.2257,1874.0156, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nVendedor móviles\nFunción:{9D0000}/Trabajo", 	0x00D56AFD, 994.3785,-1296.4718,13.5469, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nTrenero\nFunción:{9D0000}/Trabajo", 			0x00D56AFD, 1684.6482,-1944.7058,13.5469, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nBarrendero\nFunción:{9D0000}/Trabajo", 	0x00D56AFD, 1616.0780,-1896.7744,13.5490, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nPiloto\nFunción:{9D0000}/Trabajo", 				0x00D56AFD, 1642.3722,-2238.3552,13.4976, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nLadrón\nFunción:{9D0000}/Trabajo", 				0x00D56AFD, 2610.85, -2193.26, -0.22, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("[!] Solo Personal\n/trajepizza", 		0x00D56AFD, 369.0226,-114.5778,1001.4995, 02.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,5);
    CreateDynamic3DTextLabel("Quieres aprender a pelear?\n Use: /apelear", 		0xFF0000FD, 767.6719,13.6320,1000.7010, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,5);
	CreateDynamic3DTextLabel("Cajas de Carton /Armarse",					0x0093D9FD, 620.4682,-127.6068,998.8359, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,3);
	CreateDynamic3DTextLabel("Armario",		 								0x0093D9FD, 2455.9192,-1700.4346,1013.5078, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,2);
	CreateDynamic3DTextLabel("Almacen",		 								0x0093D9FD, 2613.3953,-1065.7686,69.9656, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Concesionario", 								0x0093D9FD, 557.0934,-1256.9490,17.2422, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Concesionario", 								0x0093D9FD, 1021.5117,-949.4960,42.3289, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Concesionario", 								0x0093D9FD, 2126.3022,-1122.2637,25.3800, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Concesionario", 								0x0093D9FD, 2164.8828,-1203.2673,23.9080, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Biblioteca", 	    							0x0093D9FD, 1546.6545,-1097.5780,25.0625, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Departamento\nde Policía", 	0xE8E202FD, 2336.9954,2459.3049,14.9742, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Cuartel Militar", 	0x00D56AFD, 228.7534,1963.4094,18.1465, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("*Prisión Militar*", 	0x00D56AFD, 2729.6455,-2451.4712,17.5937, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Iglesia", 					0xFF0000FD, 2491.1787,918.5558,11.0234, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("FBI", 					0x0000D7FD, 913.8191,-1004.3729,37.9846, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("/duty", 					0x0000D7FD, 255.3,77.4,1003.6, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,6);
    CreateDynamic3DTextLabel("/duty", 					0x0000D7FD, 229.03,164.86,1003.02, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,3);
    CreateDynamic3DTextLabel("/duty", 					0x0000D7FD, 2913.8074,2135.1877,0.3278, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Cafe\nBar", 					0xFF0000FD, 2441.1465,2065.4824,10.8203, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("[!] Seguro de LS\n /cseguro", 					0xFF0000FD, 1600.7926,1748.7646,-60.5596, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!] Autos en Renta",           0xE8E202FD,1220.9541,-1423.9290,13.0901, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("[!] Cuarto de Camaras\n Función: {CD0000}/Camara ",           0xE8E202FD,1580.0735,-1635.2903,13.5608, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Skin\n/cropa", 				0xF1E00AFD, 203.8821,-43.6424,1001.8047, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,1);
    CreateDynamic3DTextLabel("Objetos\n/accesorios", 				0xF1E00AFD, 206.8013,-40.7768,1001.8047, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,1);
    CreateDynamic3DTextLabel("Ayuntamiento", 				0xE8E202FD, 2364.2021,2377.5361,10.8203, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Vice Bar", 	0xE8E202FD, 2489.9966,2065.4270,10.8203, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Quieres aprender a pelear?\n Use: /apelear", 		0xFF0000FD, 768.6885,-36.5168,1000.6865, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,6);
    CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nHeladero\nFunción:{9D0000}/Trabajo", 	0x00D56AFD, 1038.1670,-1340.3824,13.7408, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nPizzero\nFunción:{9D0000}/Trabajo", 	0x00D56AFD, 2103.7043,-1809.8376,13.5547, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,5);
    CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nCamionero\nFunción:{9D0000}/Trabajo", 	0x00D56AFD, 2040.6719,-2137.0037,13.2200, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Skin\n/cropa", 				0xF1E00AFD, -1828.5704,55.5554,1055.1891, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,1);
    CreateDynamic3DTextLabel("Ascensor", 					0xE8E202FD, 2343.3733,2459.3279,14.9742, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Ascensor FBI", 					0xE8E202FD, 917.3611,-1004.4540,37.9829, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Casino Four Dragons", 	0x0093D9FD, 2019.3704,1007.8625,10.8203, 60.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Casino Caligula´s", 	0x0093D9FD, 2191.3867,1677.0533,12.0007, 60.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Casino The Visage", 		0x0093D9FD, 2016.9799,1919.8507,12.3424, 60.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Club The Visage", 		0x0093D9FD, 2016.9714,1906.1774,12.3339, 60.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Club The Visage", 		0x0093D9FD, 1143.7104,6.1954,1000.6797, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,12);
    CreateDynamic3DTextLabel("Casino The Visage", 		0x0093D9FD, -2634.3232,1409.8407,906.4647, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,3);
//////////////////////////////////////// Paint Ball ////////////////////////////////////////
	CreateDynamic3DTextLabel("PaintBall\nUtiliza /paintball", 				0xB900B9FD, 1310.2435,-1367.8308,13.5413, 25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFD, -1464.7714,1555.9248,1052.5313, 25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,14);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFD, -977.8622,1053.0814,1344.9912, 25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,10);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFD, -1128.6946,1066.2456,1345.7439, 25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,10);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFD, 1947.2084,1653.8584,-4.6563, 25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
/////////////////////////////////////////////////////////////////////////////////////////////



//////////////////// Map Icons //////////////////////////////////
    CreateDynamicMapIcon(1963.8937,-349.6577,1092.9454, 3, 0, 0, 0); //  Iglesia
	CreateDynamicMapIcon(512.4965,-1486.8862,14.5022, 50, 0, 0, 0);  //  Kenta
	CreateDynamicMapIcon(1567.9321,-1897.9972,13.5609, 50, 0, 0, 0); // Donuts
    CreateDynamicMapIcon(1303.9761,-1132.1615,23.8281, 49, 0, 0, 0); // Motion
    CreateDynamicMapIcon(2639.2590,-1088.0187,69.4531, 60, 0, 0, 0); // Latin Kings
    CreateDynamicMapIcon(2421.5994,-1219.8439,25.5226, 49, 0, 0, 0); // Pig Pen
    CreateDynamicMapIcon(1836.8391,-1682.6100,13.3312, 49, 0, 0, 0); // Pleasures
    CreateDynamicMapIcon(1381.7235,-1479.5184,13.5469, 23, 0, 0, 0); // Mercado Negro
//////////////////////////////////////////////////////////////////

	// Maps Icons
	CreateDynamicMapIcon(1185.0560,-1323.9019,13.5730, 22, 0, 0, 0); // Hospital
	CreateDynamicMapIcon(1411.0602,-1648.7770,13.3828, 27, 0, 0, 0); // LSPD
	CreateDynamicMapIcon(1547.4792,-1675.3093,13.5541, 30, 0, 0, 0); // LSPD
	CreateDynamicMapIcon(1829.5077,-1842.7311,13.5781, 17, 0, 0, 0); // 24-7 UNITY
	CreateDynamicMapIcon(1352.1354,-1759.1620,13.5541, 17, 0, 0, 0); // 24-7
	CreateDynamicMapIcon(2098.5596,-1805.6979,13.5546, 29, 0, 0, 0); // Pizza
	CreateDynamicMapIcon(1368.7128,-1279.8639,13.5541, 18, 0, 0, 0); // Ammunation
	CreateDynamicMapIcon(2245.9502,-1660.6981,15.2864, 45, 0, 0, 0); // Binco
	CreateDynamicMapIcon(456.8236,-1501.6539,31.0389, 45, 0, 0, 0); // Binco
	CreateDynamicMapIcon(313.9230,-1612.6130,33.5849, 52, 0, 0, 0); // Banco
    CreateDynamicMapIcon(2229.5786,-1721.5316,13.5638, 54, 0, 0, 0); // GYM
    CreateDynamicMapIcon(1797.5867,-1578.8649,14.0855, 23, 0, 0, 0);
    // Map Icons LV
    CreateDynamicMapIcon(2337.0706,2459.1782,14.9742, 30, 0, 0, 0); // LVPD
    CreateDynamicMapIcon(2192.3911,1990.9458,12.2969, 17, 0, 0, 0); // 24-7 [1]
    CreateDynamicMapIcon(2247.3171,2397.4089,10.8203, 17, 0, 0, 0); // 24-7 [2]
    CreateDynamicMapIcon(2103.1382,2257.5208,11.0234, 45, 0, 0, 0); // Binco [1]
    CreateDynamicMapIcon(1968.8945,2295.1882,16.4559, 54, 0, 0, 0); // GYM
    CreateDynamicMapIcon(2546.7227,1970.8087,10.8203, 17, 0, 0, 0); // 24-7 [2]
    CreateDynamicMapIcon(2363.5610,2377.3569,10.8203, 56, 0, 0, 0); // Ayuntamiento
    CreateDynamicMapIcon(1652.9954,1732.9534,10.8203, 45, 0, 0, 0); // Binco [2]
    CreateDynamicMapIcon(1607.1758,1819.6998,10.8280, 22, 0, 0, 0); // Hospital
	// ---------------------        TextDrawX        --------------- //
	//Velociemtro
	SetTimer("Velocimetro", 100, true);
	for(new i = 0; i<MAX_PLAYERS; i++)
        {
	            Velocidadvv[i] = TextDrawCreate(250.000000, 388.000000, "");
                TextDrawBackgroundColor(Velocidadvv[i], 255);
                TextDrawFont(Velocidadvv[i], 1);
                TextDrawLetterSize(Velocidadvv[i], 0.420000, 1.000000);
                TextDrawColor(Velocidadvv[i], -1);
                TextDrawSetOutline(Velocidadvv[i], 1);
                TextDrawSetProportional(Velocidadvv[i], 1);
                TextDrawUseBox(Velocidadvv[i], 1);
                TextDrawBoxColor(Velocidadvv[i], -216);
                TextDrawTextSize(Velocidadvv[i], 386.000000, 30.000000);
                TextDrawSetSelectable(Velocidadvv[i], 0);

                Gasolina[i] = TextDrawCreate(250.000000, 403.000000, "");
                TextDrawBackgroundColor(Gasolina[i], 255);
                TextDrawFont(Gasolina[i], 1);
                TextDrawLetterSize(Gasolina[i], 0.440000, 1.000000);
                TextDrawColor(Gasolina[i], -1);
                TextDrawSetOutline(Gasolina[i], 1);
                TextDrawSetProportional(Gasolina[i], 1);
                TextDrawUseBox(Gasolina[i], 1);
                TextDrawBoxColor(Gasolina[i], -216);
                TextDrawTextSize(Gasolina[i], 386.000000, 140.000000);
                TextDrawSetSelectable(Gasolina[i], 0);

                Motor[i] = TextDrawCreate(250.000000, 418.000000, "");
                TextDrawBackgroundColor(Motor[i], 255);
                TextDrawFont(Motor[i], 1);
                TextDrawLetterSize(Motor[i], 0.450000, 1.000000);
                TextDrawColor(Motor[i], -1);
                TextDrawSetOutline(Motor[i], 1);
                TextDrawSetProportional(Motor[i], 1);
                TextDrawUseBox(Motor[i], 1);
                TextDrawBoxColor(Motor[i], -216);
                TextDrawTextSize(Motor[i], 386.000000, 0.000000);
                TextDrawSetSelectable(Motor[i], 0);
                
                SetTimer("updatenivelyexp", 1000, true);
                Nivelyexp[i] = TextDrawCreate(525.000000, 9.000000, " ");
                TextDrawBackgroundColor(Nivelyexp[i], 255);
                TextDrawFont(Nivelyexp[i], 1);
                TextDrawLetterSize(Nivelyexp[i], 0.320000, 1.000000);
                TextDrawColor(Nivelyexp[i], -1);
                TextDrawSetOutline(Nivelyexp[i], 0);
                TextDrawSetProportional(Nivelyexp[i], 1);
                TextDrawSetShadow(Nivelyexp[i], 1);
                TextDrawSetSelectable(Nivelyexp[i], 0);
 }
	////////************
	Film_1 = TextDrawCreate(642.000000,1.000000,"_");//abajo
	TextDrawUseBox(Film_1,1);
	TextDrawBoxColor(Film_1,0x000000ff);
	TextDrawTextSize(Film_1,-61.000000,7.000000);
	TextDrawBackgroundColor(Film_1,0x000000ff);
	TextDrawFont(Film_1,3);
	TextDrawLetterSize(Film_1,0.700000,10.700009);
	TextDrawColor(Film_1,0xffffffff);
	TextDrawSetOutline(Film_1,1);
	TextDrawSetProportional(Film_1,1);
	TextDrawSetShadow(Film_1,1);

	Film_2 = TextDrawCreate(642.000000,341.000000,"_");//arriba
    TextDrawUseBox(Film_2,1);
    TextDrawBoxColor(Film_2,0x000000ff);
    TextDrawTextSize(Film_2,-36.000000,2.000000);
    TextDrawBackgroundColor(Film_2,0x000000ff);
    TextDrawFont(Film_2,3);
    TextDrawLetterSize(Film_2,1.300000,18.500022);
    TextDrawColor(Film_2,0xffffffff);
    TextDrawSetOutline(Film_2,1);
    TextDrawSetProportional(Film_2,1);
    TextDrawSetShadow(Film_2,1);
	///textdrawinicio
    Textdrawinicio = TextDrawCreate(1.000000, -1.000000, "loadSUK:loadsc14");
   TextDrawBackgroundColor(Textdrawinicio, 255);
   TextDrawFont(Textdrawinicio, 4);
   TextDrawLetterSize(Textdrawinicio, 0.500000, 1.000000);
   TextDrawColor(Textdrawinicio, -1);
   TextDrawSetOutline(Textdrawinicio, 0);
   TextDrawSetProportional(Textdrawinicio, 1);
   TextDrawSetShadow(Textdrawinicio, 1);
    TextDrawUseBox(Textdrawinicio, 1);
   TextDrawBoxColor(Textdrawinicio, 255);
   TextDrawTextSize(Textdrawinicio, 645.000000, 450.000000);
    ///Cargando...
    Cargando = TextDrawCreate(210.000000, 214.000000, "CARGANDO OBJETOS ESPERA POR FAVOR");
	TextDrawBackgroundColor(Cargando, 255);
	TextDrawFont(Cargando, 2);
	TextDrawLetterSize(Cargando, 0.259999, 1.299999);
	TextDrawColor(Cargando, -1);
	TextDrawSetOutline(Cargando, 0);
	TextDrawSetProportional(Cargando, 1);
	TextDrawSetShadow(Cargando, 1);
	TextDrawUseBox(Cargando, 1);
	TextDrawBoxColor(Cargando, 66);
	TextDrawTextSize(Cargando, 425.000000, 2.000000);

	Textdrawinicio2 = TextDrawCreate(1.000000, -1.000000, "loadSUK:loadscuk");
    TextDrawBackgroundColor(Textdrawinicio2, 255);
    TextDrawFont(Textdrawinicio2, 4);
    TextDrawLetterSize(Textdrawinicio2, 0.500000, 1.000000);
    TextDrawColor(Textdrawinicio2, -1);
    TextDrawSetOutline(Textdrawinicio2, 0);
    TextDrawSetProportional(Textdrawinicio2, 1);
    TextDrawSetShadow(Textdrawinicio2, 1);
    TextDrawUseBox(Textdrawinicio2, 1);
    TextDrawBoxColor(Textdrawinicio2, 255);
    TextDrawTextSize(Textdrawinicio2, 645.000000, 450.000000);
    ///GameWorld StarsCity Roleplay
    UCRP = TextDrawCreate(467.000000, 420.000000, "     GameWorld RP");
	TextDrawBackgroundColor(UCRP, 255);
	TextDrawFont(UCRP, 3);
	TextDrawLetterSize(UCRP, 0.500000, 1.000000);
	TextDrawColor(UCRP, -1);
	TextDrawSetOutline(UCRP, 1);
	TextDrawSetProportional(UCRP, 1);
	TextDrawSetShadow(UCRP, 1);

	UCRPP = TextDrawCreate(537.000000, 412.000000, "GWRP");
	TextDrawBackgroundColor(UCRPP, 255);
	TextDrawFont(UCRPP, 3);
	TextDrawLetterSize(UCRPP, 0.500000, 1.000000);
	TextDrawColor(UCRPP, -16776961);
	TextDrawSetOutline(UCRPP, 1);
	TextDrawSetProportional(UCRPP, 1);
/////
	SunGlasses = TextDrawCreate(0.0,0.0,"_");
 	TextDrawFont(SunGlasses,1);
  	TextDrawLetterSize(SunGlasses,0.0,50.0);
   	TextDrawUseBox(SunGlasses,true);
   	TextDrawColor(SunGlasses,0);
 //carreras
 CreateDynamicObject(3749, 2425.88, -2089.49, 18.14,   0.00, 0.00, 90.43);
CreateDynamicObject(3749, 2538.78, -2116.83, 18.30,   0.00, 0.00, 90.19);
CreateDynamicObject(3749, 2626.22, -2116.98, 18.39,   0.00, 0.00, 90.01);
CreateDynamicObject(10401, 2448.39, -2068.68, 14.75,   0.00, 0.00, 44.97);
CreateDynamicObject(10401, 2468.68, -2068.67, 14.75,   0.00, 0.00, 45.07);
CreateDynamicObject(10401, 2489.11, -2068.68, 14.75,   0.00, 0.00, 45.07);
CreateDynamicObject(10401, 2509.46, -2068.59, 14.75,   0.00, 0.00, 45.07);
CreateDynamicObject(10401, 2529.89, -2068.53, 14.75,   0.00, 0.00, 45.07);
CreateDynamicObject(987, 2424.37, -2145.11, 18.11,   0.00, 0.00, 89.88);
CreateDynamicObject(987, 2424.36, -2110.99, 18.11,   0.00, 0.00, 89.88);
CreateDynamicObject(987, 2424.39, -2122.93, 18.11,   0.00, 0.00, 89.88);
CreateDynamicObject(987, 2424.39, -2134.94, 18.11,   0.00, 0.00, 89.88);
CreateDynamicObject(987, 2460.21, -2144.79, 18.01,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2436.23, -2144.73, 18.01,   0.00, 0.00, 180.36);
CreateDynamicObject(987, 2448.24, -2144.77, 18.01,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2472.14, -2144.67, 17.91,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2484.10, -2144.69, 17.91,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2496.08, -2144.66, 17.91,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2520.20, -2144.47, 17.91,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2508.04, -2144.67, 17.91,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2532.20, -2144.46, 17.91,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2544.17, -2144.48, 17.91,   0.00, 0.00, 180.06);
CreateDynamicObject(3279, 2628.91, -2137.36, 12.44,   0.00, 0.00, 88.38);
CreateDynamicObject(3279, 2533.21, -2093.68, 12.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3279, 2430.62, -2071.87, 12.53,   0.00, 0.00, 4.27);
CreateDynamicObject(3279, 2430.11, -2137.89, 12.53,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2556.04, -2144.70, 17.81,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2568.05, -2144.70, 17.81,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2580.05, -2144.88, 17.61,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2591.96, -2144.72, 17.40,   0.00, 0.00, 180.06);
CreateDynamicObject(987, 2603.95, -2144.71, 17.19,   0.00, 0.00, 180.04);
CreateDynamicObject(987, 2615.90, -2144.58, 16.49,   0.00, 0.00, 181.08);
CreateDynamicObject(987, 2639.78, -2144.78, 15.74,   0.00, 0.00, 179.83);
CreateDynamicObject(1232, 2519.89, -2082.51, 15.12,   0.00, 0.00, 388.21);
CreateDynamicObject(1232, 2499.54, -2082.49, 15.16,   0.00, 0.00, 29.10);
CreateDynamicObject(1258, 2423.24, -2098.81, 13.21,   0.00, 0.00, -89.58);
CreateDynamicObject(1258, 2423.25, -2099.55, 13.21,   0.00, 0.00, -89.58);
CreateDynamicObject(1258, 2423.25, -2100.28, 13.21,   0.00, 0.00, -89.58);
CreateDynamicObject(1597, 2432.83, -2083.24, 15.01,   0.00, 0.00, 269.89);
CreateDynamicObject(1597, 2433.01, -2095.17, 15.11,   0.00, 0.00, 269.95);
CreateDynamicObject(987, 2424.38, -2079.12, 17.71,   0.00, 0.00, 89.88);
CreateDynamicObject(987, 2424.39, -2077.52, 17.71,   0.00, 0.00, 89.88);
CreateDynamicObject(987, 2424.39, -2065.99, 17.71,   0.00, 0.00, -0.36);
CreateDynamicObject(987, 2436.30, -2066.07, 17.71,   0.00, 0.00, -0.36);
CreateDynamicObject(987, 2448.20, -2066.11, 17.71,   0.00, 0.00, -0.36);
CreateDynamicObject(987, 2460.16, -2066.10, 17.71,   0.00, 0.00, -0.36);
CreateDynamicObject(987, 2472.05, -2066.18, 17.71,   0.00, 0.00, 0.96);
CreateDynamicObject(987, 2484.00, -2066.07, 17.71,   0.00, 0.00, -0.36);
CreateDynamicObject(987, 2495.92, -2066.17, 17.71,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2507.82, -2066.17, 17.71,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2519.81, -2066.20, 17.71,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2528.96, -2066.19, 17.71,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2541.00, -2065.30, 12.32,   0.00, 0.00, -89.34);
CreateDynamicObject(987, 2541.15, -2077.25, 12.32,   0.00, 0.00, -90.72);
CreateDynamicObject(987, 2541.00, -2089.21, 12.32,   0.00, 0.00, -89.52);
CreateDynamicObject(987, 2541.05, -2100.63, 12.32,   0.00, 0.00, -89.52);
CreateDynamicObject(987, 2541.03, -2122.05, 12.32,   0.00, 0.00, -89.70);
CreateDynamicObject(987, 2541.08, -2132.17, 12.32,   0.00, 0.00, -89.70);
CreateDynamicObject(987, 2552.67, -2121.67, 11.81,   0.00, 0.00, -180.06);
CreateDynamicObject(987, 2558.67, -2121.67, 11.81,   0.00, 0.00, -180.06);
CreateDynamicObject(987, 2627.89, -2144.87, 16.25,   0.00, 0.00, 179.29);
CreateDynamicObject(987, 2651.77, -2144.80, 15.74,   0.00, 0.00, 179.83);
CreateDynamicObject(987, 2663.74, -2144.82, 15.74,   0.00, 0.00, 179.83);
CreateDynamicObject(987, 2675.71, -2144.86, 15.74,   0.00, 0.00, 179.83);
CreateDynamicObject(987, 2687.66, -2144.97, 15.64,   0.00, 0.00, 179.83);
CreateDynamicObject(987, 2699.61, -2144.96, 15.64,   0.00, 0.00, 179.83);
CreateDynamicObject(987, 2703.63, -2144.93, 15.64,   0.00, 0.00, 179.83);
CreateDynamicObject(987, 2703.59, -2121.05, 15.54,   0.00, 0.00, 270.07);
CreateDynamicObject(987, 2703.60, -2133.03, 15.54,   0.00, 0.00, 270.07);
CreateDynamicObject(987, 2623.86, -2144.41, 12.09,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2623.84, -2133.60, 12.09,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2623.87, -2121.80, 12.09,   0.00, 0.00, 180.12);
CreateDynamicObject(987, 2614.85, -2121.85, 12.09,   0.00, 0.00, 180.12);
CreateDynamicObject(1232, 2479.09, -2082.64, 15.16,   0.00, 0.00, 29.10);
CreateDynamicObject(1232, 2438.55, -2082.59, 15.16,   0.00, 0.00, 29.10);
CreateDynamicObject(987, 2703.58, -2109.09, 15.54,   0.00, 0.00, 270.07);
CreateDynamicObject(987, 2703.56, -2097.14, 15.54,   0.00, 0.00, 270.07);
CreateDynamicObject(987, 2703.58, -2085.18, 15.54,   0.00, 0.00, 270.07);
CreateDynamicObject(987, 2703.55, -2073.26, 15.54,   0.00, 0.00, 270.07);
CreateDynamicObject(987, 2691.74, -2066.00, 18.35,   0.00, 0.00, 359.95);
CreateDynamicObject(987, 2703.55, -2065.73, 15.54,   0.00, 0.00, 270.07);
CreateDynamicObject(987, 2679.79, -2065.97, 18.35,   0.00, 0.00, 359.95);
CreateDynamicObject(987, 2667.81, -2065.93, 18.35,   0.00, 0.00, 359.95);
CreateDynamicObject(987, 2655.86, -2065.93, 18.35,   0.00, 0.00, 359.95);
CreateDynamicObject(987, 2643.92, -2065.92, 18.35,   0.00, 0.00, 359.95);
CreateDynamicObject(987, 2631.98, -2065.93, 18.35,   0.00, 0.00, 359.95);
CreateDynamicObject(987, 2624.16, -2065.90, 18.35,   0.00, 0.00, 359.95);
CreateDynamicObject(987, 2624.05, -2077.99, 11.78,   0.00, 0.00, 89.95);
CreateDynamicObject(987, 2624.07, -2089.92, 11.78,   0.00, 0.00, 89.95);
CreateDynamicObject(987, 2623.99, -2101.92, 11.78,   0.00, 0.00, 89.95);
CreateDynamicObject(987, 2623.97, -2112.20, 11.78,   0.00, 0.00, 89.95);
CreateDynamicObject(987, 2612.09, -2112.21, 11.78,   0.00, 0.00, 0.13);
CreateDynamicObject(987, 2600.11, -2112.12, 11.78,   0.00, 0.00, 0.13);
CreateDynamicObject(987, 2550.14, -2112.22, 12.32,   0.00, 0.00, -0.18);
CreateDynamicObject(987, 2541.15, -2112.22, 12.32,   0.00, 0.00, 0.12);
CreateDynamicObject(1232, 2458.81, -2082.66, 15.16,   0.00, 0.00, 29.10);
CreateDynamicObject(14781, 2664.65, -2103.77, 13.63,   0.00, 0.00, 0.20);
CreateDynamicObject(3279, 2629.90, -2096.68, 12.44,   0.00, 0.00, 0.84);
CreateDynamicObject(3605, 2685.36, -2112.78, 18.67,   0.00, 0.00, 272.75);
CreateDynamicObject(3619, 2652.12, -2127.97, 16.08,   0.00, 0.00, 0.54);
CreateDynamicObject(17041, 2647.47, -2070.31, 12.51,   0.00, 0.00, 270.08);
CreateDynamicObject(9697, 2487.38, -2070.91, 12.71,   0.00, 0.00, -0.07);
CreateDynamicObject(9241, 2449.63, -2130.54, 14.28,   0.00, 0.00, 270.38);
CreateDynamicObject(16326, 2432.03, -2106.62, 12.40,   0.00, 0.00, 270.20);
CreateDynamicObject(2009, 2435.28, -2104.95, 15.01,   0.00, 0.00, 360.90);
CreateDynamicObject(1806, 2436.09, -2105.15, 14.99,   0.00, 0.00, 0.00);
CreateDynamicObject(2167, 2437.35, -2106.36, 14.99,   0.00, 0.00, 180.95);
CreateDynamicObject(2167, 2438.25, -2106.35, 14.99,   0.00, 0.00, 182.15);
CreateDynamicObject(2164, 2436.28, -2106.41, 15.00,   0.00, 0.00, 179.76);
CreateDynamicObject(1703, 2435.22, -2101.83, 14.98,   0.00, 0.00, 89.87);
CreateDynamicObject(1703, 2436.32, -2098.80, 14.98,   0.00, 0.00, 361.39);
CreateDynamicObject(2002, 2435.20, -2098.82, 15.04,   0.00, 0.00, 40.64);
CreateDynamicObject(2202, 2438.81, -2104.09, 14.82,   0.00, 0.00, 271.86);
CreateDynamicObject(17298, 2697.17, -2082.95, 18.18,   0.00, 0.00, 1.44);
CreateDynamicObject(18260, 2690.52, -2082.16, 14.10,   0.00, 0.00, 90.10);
CreateDynamicObject(2669, 2643.58, -2138.31, 13.88,   0.00, 0.00, 269.51);
CreateDynamicObject(19143, 2701.44, -2076.91, 20.71,   0.00, 0.00, -212.67);
CreateDynamicObject(19143, 2699.69, -2076.77, 20.71,   0.00, 0.00, -180.15);
CreateDynamicObject(19143, 2698.01, -2076.79, 20.71,   0.00, 0.00, -180.15);
CreateDynamicObject(19143, 2696.91, -2076.77, 20.71,   0.00, 0.00, -180.15);
CreateDynamicObject(19143, 2695.49, -2077.28, 20.71,   0.00, 0.00, -171.09);
CreateDynamicObject(19143, 2693.93, -2077.03, 20.71,   0.00, 0.00, -171.09);
CreateDynamicObject(19279, 2701.51, -2081.69, 16.66,   0.00, 0.00, 91.39);
CreateDynamicObject(19279, 2701.53, -2083.69, 16.62,   0.00, 0.00, 91.39);
CreateDynamicObject(19279, 2701.44, -2079.78, 16.72,   0.00, 0.00, 91.39);
CreateDynamicObject(19279, 2701.11, -2076.85, 16.72,   0.00, 0.00, 180.07);
CreateDynamicObject(19279, 2698.36, -2076.85, 16.72,   0.00, 0.00, 181.39);
CreateDynamicObject(19279, 2693.22, -2076.96, 16.72,   0.00, 0.00, 180.19);
CreateDynamicObject(19279, 2696.47, -2076.83, 16.72,   0.00, 0.00, 181.39);
CreateDynamicObject(19279, 2692.90, -2079.19, 16.72,   0.00, 0.00, 270.49);
CreateDynamicObject(19279, 2692.89, -2083.54, 16.72,   0.00, 0.00, 270.49);
CreateDynamicObject(19279, 2692.88, -2081.30, 16.72,   0.00, 0.00, 270.49);
CreateDynamicObject(19279, 2692.95, -2086.14, 12.88,   0.00, 0.00, 271.59);
CreateDynamicObject(11090, 2699.61, -2082.09, 13.26,   0.00, 0.00, 1.26);
CreateDynamicObject(941, 2694.16, -2078.72, 13.02,   0.00, 0.00, 90.70);
CreateDynamicObject(941, 2694.20, -2081.38, 13.02,   0.00, 0.00, 90.70);
CreateDynamicObject(941, 2694.23, -2084.00, 13.02,   0.00, 0.00, 90.70);
CreateDynamicObject(1575, 2694.51, -2081.20, 13.48,   0.00, 0.00, -85.20);
CreateDynamicObject(1575, 2694.05, -2080.54, 13.46,   0.00, 0.00, 9.77);
CreateDynamicObject(1575, 2694.14, -2081.94, 13.46,   0.00, 0.00, -33.73);
CreateDynamicObject(1575, 2694.16, -2079.23, 13.48,   0.00, 0.00, 9.77);
CreateDynamicObject(1575, 2694.08, -2077.57, 13.48,   0.00, 0.00, 9.77);
CreateDynamicObject(1575, 2694.55, -2078.40, 13.48,   0.00, 0.00, -90.91);
CreateDynamicObject(1575, 2694.16, -2083.02, 13.48,   0.00, 0.00, 64.37);
CreateDynamicObject(1575, 2694.59, -2083.74, 13.48,   0.00, 0.00, 90.28);
CreateDynamicObject(1575, 2694.15, -2084.40, 13.46,   0.00, 0.00, 149.86);
CreateDynamicObject(942, 2698.88, -2090.46, 14.96,   0.00, 0.00, 1.99);
CreateDynamicObject(14468, 2697.20, -2080.76, 17.22,   0.00, 0.00, 0.00);
CreateDynamicObject(14468, 2697.93, -2082.09, 17.22,   0.00, 0.00, 0.00);
CreateDynamicObject(14468, 2696.59, -2079.95, 17.22,   0.00, 0.00, 0.00);
CreateDynamicObject(14468, 2696.59, -2079.95, 17.22,   0.00, 0.00, 0.00);
CreateDynamicObject(14468, 2695.21, -2081.92, 17.22,   0.00, 0.00, 0.00);
CreateDynamicObject(3776, 2473.28, -2124.38, 21.42,   0.00, 0.00, 91.37);
CreateDynamicObject(3624, 2504.40, -2127.98, 17.08,   0.00, 0.00, 270.66);
CreateDynamicObject(14537, 2504.15, -2127.96, 14.56,   0.00, 0.00, 1.37);
CreateDynamicObject(643, 2513.08, -2122.41, 13.01,   0.00, 0.00, 0.00);
CreateDynamicObject(643, 2512.61, -2131.91, 13.01,   0.00, 0.00, 0.00);
CreateDynamicObject(643, 2495.40, -2121.86, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(643, 2495.89, -2131.29, 13.01,   0.00, 0.00, 0.10);
CreateDynamicObject(1703, 2508.93, -2140.41, 12.41,   0.00, 0.00, 180.49);
CreateDynamicObject(1703, 2506.39, -2140.46, 12.41,   0.00, 0.00, 180.49);
CreateDynamicObject(1703, 2503.85, -2140.49, 12.41,   0.00, 0.00, 180.49);
CreateDynamicObject(1703, 2501.42, -2140.52, 12.41,   0.00, 0.00, 180.49);
CreateDynamicObject(14877, 2694.28, -2084.46, 14.35,   0.00, 0.00, 89.89);
CreateDynamicObject(3293, 2528.92, -2131.42, 15.91,   0.00, 0.00, 0.87);
CreateDynamicObject(3292, 2524.15, -2134.17, 12.67,   0.00, 0.00, 0.44);
CreateDynamicObject(1509, 2508.64, -2124.37, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.33, -2123.98, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.62, -2123.46, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.27, -2125.32, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.34, -2124.70, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2506.42, -2123.32, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.67, -2125.30, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.24, -2123.45, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.45, -2123.44, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.45, -2123.44, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.24, -2123.45, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2507.36, -2123.55, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2505.61, -2123.41, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2502.57, -2123.48, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2501.97, -2123.32, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2501.49, -2123.59, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2500.76, -2123.75, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2500.27, -2123.42, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.77, -2123.57, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.81, -2124.19, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.29, -2124.03, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.47, -2124.78, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.45, -2125.17, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.51, -2126.07, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.77, -2129.74, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.55, -2126.59, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.67, -2130.50, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2500.00, -2130.87, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.61, -2131.42, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.58, -2132.16, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2499.80, -2132.55, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2500.55, -2132.45, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2501.57, -2132.77, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2502.39, -2132.31, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2506.04, -2132.50, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.06, -2132.51, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2506.71, -2132.14, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2507.35, -2132.48, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2507.83, -2132.13, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.24, -2132.40, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.84, -2132.39, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.70, -2130.28, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.45, -2131.78, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.70, -2131.61, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.66, -2130.80, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2508.53, -2129.56, 13.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2513.09, -2122.60, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2513.05, -2122.30, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2513.19, -2122.43, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2512.59, -2132.00, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2512.61, -2131.85, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1509, 2512.78, -2131.94, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(931, 2626.49, -2086.23, 13.59,   0.00, 0.00, 94.97);
CreateDynamicObject(931, 2626.43, -2083.82, 13.59,   0.00, 0.00, 93.17);
CreateDynamicObject(931, 2626.26, -2081.31, 13.59,   0.00, 0.00, 92.57);
CreateDynamicObject(348, 2625.88, -2082.84, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.25, -2082.82, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.58, -2082.81, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2625.88, -2082.84, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.87, -2082.77, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.87, -2083.22, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.59, -2083.22, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.27, -2083.25, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2625.91, -2083.29, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2625.95, -2083.77, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.28, -2083.75, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.61, -2083.71, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.87, -2083.68, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.88, -2084.09, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.87, -2084.51, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.60, -2084.11, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.31, -2084.14, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2625.97, -2084.16, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.59, -2084.53, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.30, -2084.58, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(348, 2626.00, -2084.61, 13.73,   91.30, -91.00, 359.00);
CreateDynamicObject(353, 2625.83, -2082.71, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.17, -2082.68, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.49, -2082.67, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.79, -2082.71, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2627.08, -2082.72, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2625.86, -2083.27, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.18, -2083.24, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.50, -2083.21, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.80, -2083.21, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2627.08, -2083.20, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2627.10, -2083.72, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2627.13, -2084.30, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.87, -2084.31, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.82, -2083.73, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.54, -2083.73, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.57, -2084.33, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.30, -2084.33, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2625.98, -2084.34, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.24, -2083.80, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.24, -2083.80, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2626.82, -2083.73, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(353, 2625.90, -2083.80, 12.66,   84.00, -91.00, 0.00);
CreateDynamicObject(355, 2625.79, -2080.50, 13.72,   76.00, -11.00, 279.00);
CreateDynamicObject(355, 2626.58, -2080.50, 13.72,   76.00, -11.00, 279.00);
CreateDynamicObject(355, 2626.19, -2080.53, 13.72,   76.00, -11.00, 279.00);
CreateDynamicObject(355, 2626.95, -2080.58, 13.72,   76.00, -11.00, 279.00);
CreateDynamicObject(355, 2625.81, -2081.66, 13.72,   76.00, -11.00, 279.00);
CreateDynamicObject(355, 2626.18, -2081.60, 13.72,   76.00, -11.00, 279.00);
CreateDynamicObject(355, 2626.53, -2081.62, 13.72,   76.00, -11.00, 279.00);
CreateDynamicObject(355, 2626.87, -2081.60, 13.72,   76.00, -11.00, 279.00);
CreateDynamicObject(356, 2625.79, -2080.59, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(356, 2626.10, -2081.64, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(356, 2625.78, -2081.65, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(356, 2626.39, -2081.63, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(356, 2626.69, -2081.63, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(356, 2626.97, -2081.62, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(356, 2626.11, -2080.60, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(356, 2626.37, -2080.57, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(356, 2626.65, -2080.57, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(356, 2626.94, -2080.57, 12.68,   84.00, -18.00, 285.00);
CreateDynamicObject(373, 2625.85, -2085.61, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.19, -2085.60, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.53, -2085.57, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.87, -2085.57, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2625.86, -2086.11, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.24, -2086.08, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.60, -2086.07, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.98, -2086.04, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.07, -2086.60, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.41, -2086.58, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.73, -2086.53, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2627.05, -2086.50, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2625.84, -2087.29, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.26, -2087.22, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2626.72, -2087.15, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(373, 2627.14, -2087.06, 14.18,   -25.00, -62.00, 0.00);
CreateDynamicObject(351, 2625.88, -2085.17, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.15, -2085.14, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.47, -2085.12, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.75, -2085.09, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2627.05, -2085.10, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2627.10, -2085.87, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2627.13, -2086.59, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.82, -2086.63, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.56, -2086.66, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.28, -2086.69, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.00, -2086.72, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2625.97, -2085.93, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.27, -2085.95, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.86, -2085.89, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(351, 2626.58, -2085.90, 12.64,   84.00, -84.00, 0.00);
CreateDynamicObject(16151, 2632.34, -2084.08, 12.86,   0.00, 0.00, 2.98);
CreateDynamicObject(942, 2628.77, -2076.46, 14.93,   0.00, 0.00, 3.07);
CreateDynamicObject(943, 2683.79, -2067.80, 13.36,   0.00, 0.00, 271.09);
CreateDynamicObject(12943, 2629.35, -2083.04, 12.53,   0.00, 0.00, -87.48);
CreateDynamicObject(12943, 2678.19, -2071.20, 12.54,   0.00, 0.00, 180.12);
CreateDynamicObject(941, 2680.81, -2067.75, 12.95,   0.00, 0.00, 1.94);
CreateDynamicObject(941, 2678.30, -2067.86, 12.95,   0.00, 0.00, 1.28);
CreateDynamicObject(943, 2675.64, -2067.80, 13.36,   0.00, 0.00, 90.61);
CreateDynamicObject(3631, 2677.64, -2074.03, 13.16,   0.00, 0.00, 0.12);
CreateDynamicObject(3577, 2684.37, -2070.38, 13.25,   0.00, 0.00, 0.00);
CreateDynamicObject(943, 2672.19, -2073.85, 13.25,   0.00, 0.00, 90.91);
CreateDynamicObject(348, 2678.52, -2073.85, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2677.58, -2074.12, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2678.07, -2074.48, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2678.98, -2074.54, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2679.07, -2073.45, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2679.63, -2074.00, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2680.01, -2074.64, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2679.85, -2073.46, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2677.07, -2074.63, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2677.07, -2073.65, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2676.56, -2074.18, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2675.91, -2074.68, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2675.93, -2073.62, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2675.36, -2074.19, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2674.47, -2074.49, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(348, 2674.47, -2073.55, 13.73,   0.00, 0.00, 0.00);
CreateDynamicObject(3632, 2685.83, -2072.61, 13.06,   0.00, 0.00, 0.00);
CreateDynamicObject(3632, 2685.03, -2072.64, 13.06,   0.00, 0.00, 0.00);
CreateDynamicObject(3632, 2685.10, -2073.36, 13.06,   0.00, 0.00, 0.00);
CreateDynamicObject(3632, 2685.75, -2074.07, 13.06,   0.00, 0.00, 0.00);
CreateDynamicObject(3632, 2685.83, -2073.33, 13.06,   0.00, 0.00, 0.00);
CreateDynamicObject(3632, 2685.03, -2074.07, 13.06,   0.00, 0.00, 0.00);
   	//Las dos puertas para Alemana
   	CreateDynamicObject(1557, 2479, 1499.19995, 9.8, 0, 0, 0);
CreateDynamicObject(1557, 2465.80005, 1503.40002, 18.1, 0, 0, 50);
   	//Interior ayunta
   	CreateDynamicObject(14853, 1491.44995, -1788.19995, -18.45000,   0.00000, 0.00000, 182.75000);
CreateDynamicObject(14595, 1539.88000, -1801.77002, -19.71000,   0.00000, 0.00000, 182.38000);
CreateDynamicObject(18766, 1531.28003, -1788.39001, -22.77000,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(14597, 1515.52002, -1743.91003, -21.59000,   0.00000, 0.00000, 272.85001);
CreateDynamicObject(18762, 1514.89001, -1756.97998, -21.40000,   0.00000, 0.00000, 2.73000);
CreateDynamicObject(18762, 1517.95996, -1757.07996, -21.41000,   0.00000, 0.00000, 2.73000);
CreateDynamicObject(2614, 1516.42004, -1757.25000, -20.19000,   0.00000, 0.00000, 359.72000);
CreateDynamicObject(2914, 1515.98999, -1757.20996, -21.04000,   0.00000, 0.00000, 1.53000);
CreateDynamicObject(2167, 1512.50000, -1730.94995, -23.60000,   0.00000, 0.00000, 3.35000);
CreateDynamicObject(2167, 1513.43005, -1730.90002, -23.60000,   0.00000, 0.00000, 3.35000);
CreateDynamicObject(2167, 1514.34998, -1730.84998, -23.60000,   0.00000, 0.00000, 3.35000);
CreateDynamicObject(2112, 1515.20996, -1735.45996, -23.16000,   0.00000, 0.00000, 2.54000);
CreateDynamicObject(1562, 1513.56006, -1735.60999, -23.00000,   0.00000, 0.00000, 91.84000);
CreateDynamicObject(1562, 1515.06006, -1733.76001, -23.00000,   0.00000, 0.00000, 1.24000);
CreateDynamicObject(1562, 1516.90002, -1735.21997, -23.00000,   0.00000, 0.00000, 273.60999);
CreateDynamicObject(2921, 1511.82996, -1731.06995, -20.72000,   0.00000, 0.00000, 151.49001);
CreateDynamicObject(2258, 1521.39001, -1739.70996, -21.39000,   0.00000, 0.00000, 3.11000);
CreateDynamicObject(2611, 1516.52002, -1730.77002, -22.00000,   0.00000, 0.00000, 2.87000);
CreateDynamicObject(2612, 1518.09998, -1738.20996, -22.00000,   0.00000, 0.00000, 272.76001);
CreateDynamicObject(2060, 1512.42004, -1759.48999, -23.44000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1512.42004, -1759.48999, -23.24000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1512.42004, -1759.48999, -23.04000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1512.44995, -1759.44995, -22.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1513.46997, -1759.47998, -23.44000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1513.38000, -1759.47998, -23.24000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1513.40002, -1759.45996, -23.04000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1513.35999, -1759.41003, -22.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1514.52002, -1759.51001, -23.44000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1518.56006, -1759.25000, -23.44000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1519.62000, -1759.25000, -23.44000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1520.59998, -1759.25000, -23.44000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1514.42004, -1759.43994, -23.24000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1518.57996, -1759.21997, -23.24000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1519.64001, -1759.22998, -23.24000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1520.68005, -1759.18994, -23.24000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1514.44995, -1759.35999, -23.04000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1518.60999, -1759.18005, -23.04000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1519.59998, -1759.16003, -23.04000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1520.67004, -1759.17004, -23.04000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1514.48999, -1759.32996, -22.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1519.60999, -1759.10999, -22.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1513.35999, -1759.41003, -22.64000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1520.72998, -1759.06995, -22.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2060, 1520.72998, -1759.06995, -22.53000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1516.57996, -1760.26001, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1516.43005, -1763.84998, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1516.70996, -1766.87000, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1517.52002, -1770.25000, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1518.88000, -1773.04004, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1520.65002, -1775.81995, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1521.30005, -1778.78003, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1519.68994, -1781.45996, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1517.26001, -1783.55005, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1514.77002, -1785.38000, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1511.83997, -1786.96997, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1509.54004, -1789.15002, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1507.52002, -1791.54004, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1504.18005, -1793.67004, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1499.81006, -1794.84998, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1497.47998, -1792.67004, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1494.47998, -1790.91003, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1498.59998, -1797.80005, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2189, 1496.18005, -1800.69995, -23.55000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3047, 1513.17004, -1758.34998, -19.78000,   0.00000, 0.00000, 272.84000);
CreateDynamicObject(3047, 1514.89001, -1758.26001, -19.78000,   0.00000, 0.00000, 272.84000);
CreateDynamicObject(3047, 1516.62000, -1758.18005, -19.78000,   0.00000, 0.00000, 272.84000);
CreateDynamicObject(3047, 1518.33997, -1758.08997, -19.78000,   0.00000, 0.00000, 272.84000);
CreateDynamicObject(3047, 1520.06995, -1758.00000, -19.78000,   0.00000, 0.00000, 272.84000);
CreateDynamicObject(16732, 1518.59998, -1740.80005, -21.96000,   0.00000, 0.00000, 272.13000);
CreateDynamicObject(16732, 1518.88000, -1744.65002, -21.96000,   0.00000, 0.00000, 272.13000);
CreateDynamicObject(16732, 1518.94995, -1746.20996, -21.96000,   0.00000, 0.00000, 272.13000);
CreateDynamicObject(3809, 1518.43994, -1747.43994, -21.88000,   0.00000, 0.00000, 184.78000);
CreateDynamicObject(3809, 1518.69995, -1755.21997, -21.88000,   0.00000, 0.00000, 184.78000);
CreateDynamicObject(3809, 1518.26001, -1739.79004, -21.88000,   0.00000, 0.00000, 236.55000);
CreateDynamicObject(3809, 1512.47998, -1740.13000, -21.88000,   0.00000, 0.00000, 330.19000);
CreateDynamicObject(3809, 1512.79004, -1747.67004, -21.88000,   0.00000, 0.00000, 355.73999);
CreateDynamicObject(3809, 1513.48999, -1755.41003, -21.88000,   0.00000, 0.00000, 355.73999);
CreateDynamicObject(3437, 1497.37000, -1803.23999, -24.41000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3437, 1502.66003, -1802.73999, -24.41000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3437, 1507.83997, -1802.72998, -24.41000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2572, 1519.55005, -1741.69995, -23.76000,   0.00000, 0.00000, 17.59000);
CreateDynamicObject(2412, 1518.01001, -1741.41003, -23.61000,   0.00000, 0.00000, 90.59000);
CreateDynamicObject(2412, 1518.09998, -1743.29004, -23.61000,   0.00000, 0.00000, 90.59000);
CreateDynamicObject(2370, 1519.68005, -1746.58997, -23.61000,   0.00000, 0.00000, 1.99000);
CreateDynamicObject(2003, 1520.02002, -1746.47998, -22.26000,   0.00000, 0.00000, 168.33000);
CreateDynamicObject(3031, 1523.88000, -1739.43994, -20.32000,   0.00000, 0.00000, 275.22000);
CreateDynamicObject(1509, 1520.73999, -1740.54004, -23.03000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1509, 1520.56006, -1740.52002, -23.03000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1509, 1520.72998, -1740.23999, -23.03000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1509, 1520.56995, -1740.31995, -23.03000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1509, 1520.87000, -1740.41003, -23.03000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1485, 1520.76001, -1740.58997, -23.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1485, 1520.42004, -1740.66003, -23.20000,   0.00000, 0.00000, 296.10999);
CreateDynamicObject(1485, 1520.51001, -1740.63000, -23.20000,   0.00000, 0.00000, 296.10999);
CreateDynamicObject(1485, 1520.47998, -1740.63000, -23.20000,   0.00000, 0.00000, 296.10999);
CreateDynamicObject(1485, 1520.47998, -1740.63000, -23.20000,   0.00000, 0.00000, 328.42999);
CreateDynamicObject(1616, 1528.02002, -1739.57996, -19.99000,   0.00000, 0.00000, 63.29000);
CreateDynamicObject(2571, 1524.14001, -1745.68994, -23.64000,   0.00000, 0.00000, 181.39000);
CreateDynamicObject(1550, 1528.94995, -1746.55005, -23.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1528.48999, -1746.65002, -23.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1529.03003, -1746.16003, -23.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1529.06006, -1745.73999, -23.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2044, 1522.75000, -1746.53003, -23.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1514.84998, -1760.93005, -23.09000,   0.00000, 0.00000, 0.72000);
CreateDynamicObject(2773, 1514.91003, -1762.90002, -23.09000,   0.00000, 0.00000, 0.72000);
CreateDynamicObject(2773, 1514.95996, -1764.83997, -23.09000,   0.00000, 0.00000, 0.72000);
CreateDynamicObject(2773, 1518.07996, -1760.68005, -23.09000,   0.00000, 0.00000, 0.72000);
CreateDynamicObject(2773, 1518.15002, -1762.67004, -23.09000,   0.00000, 0.00000, 0.72000);
CreateDynamicObject(2773, 1518.17004, -1764.59998, -23.09000,   0.00000, 0.00000, 0.72000);
CreateDynamicObject(2774, 1520.44995, -1757.33997, -31.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2774, 1512.56995, -1757.40002, -31.92000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 1520.14001, -1746.56006, -22.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 1520.17004, -1746.42004, -22.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 1519.89001, -1746.55005, -22.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 1519.93994, -1746.45996, -22.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 1519.93005, -1746.32996, -22.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 1519.93005, -1746.32996, -22.21000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 1519.88000, -1746.50000, -22.21000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 1520.12000, -1746.53003, -22.21000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 1520.13000, -1746.39001, -22.21000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2604, 1503.92004, -1748.89001, -23.21000,   0.00000, 0.00000, 3.64000);
CreateDynamicObject(2604, 1521.05005, -1747.97998, -23.21000,   0.00000, 0.00000, 3.64000);
CreateDynamicObject(2574, 1526.19995, -1747.66003, -23.61000,   0.00000, 0.00000, 0.94000);
CreateDynamicObject(2574, 1502.43994, -1740.94995, -23.61000,   0.00000, 0.00000, 0.94000);
CreateDynamicObject(2491, 1519.64001, -1745.56006, -22.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2491, 1523.21997, -1739.60999, -23.61000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2613, 1527.65002, -1741.31995, -23.65000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2614, 1529.01001, -1742.68005, -21.36000,   0.00000, 0.00000, 272.78000);
CreateDynamicObject(2648, 1524.25000, -1739.35999, -21.78000,   0.00000, 0.00000, 3.02000);
CreateDynamicObject(2690, 1518.93005, -1743.83997, -22.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2710, 1520.56006, -1740.04004, -23.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2813, 1520.41003, -1745.83997, -22.71000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2833, 1516.89001, -1742.21997, -23.56000,   0.00000, 0.00000, 273.76001);
CreateDynamicObject(1562, 1527.18005, -1742.90002, -23.00000,   0.00000, 0.00000, 273.60999);
CreateDynamicObject(1210, 1527.14001, -1743.34998, -23.41000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1210, 1527.28003, -1743.44995, -23.41000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2356, 1507.40002, -1755.46997, -23.41000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2247, 1522.55005, -1746.78003, -22.70000,   0.00000, 0.00000, 13.07000);
CreateDynamicObject(3124, 1523.41003, -1747.27002, -21.66000,   0.00000, 0.00000, 34.83000);
CreateDynamicObject(3124, 1523.32996, -1746.63000, -21.66000,   0.00000, 0.00000, 213.32001);
CreateDynamicObject(2634, 1526.31995, -1739.31006, -22.05000,   0.00000, 0.00000, 182.46001);
CreateDynamicObject(2004, 1520.41003, -1746.25000, -22.28000,   0.00000, 0.00000, 24.26000);
CreateDynamicObject(2922, 1518.73999, -1743.60999, -21.78000,   0.00000, 0.00000, 92.15000);
CreateDynamicObject(16732, 1518.59998, -1740.80005, -19.04000,   0.00000, 0.00000, 272.13000);
CreateDynamicObject(16732, 1518.66003, -1742.33997, -19.04000,   0.00000, 0.00000, 272.13000);
CreateDynamicObject(16732, 1518.71997, -1743.89001, -19.04000,   0.00000, 0.00000, 272.13000);
CreateDynamicObject(16732, 1518.79004, -1745.43005, -19.04000,   0.00000, 0.00000, 272.13000);
CreateDynamicObject(16732, 1518.88000, -1746.78003, -19.04000,   0.00000, 0.00000, 272.13000);
CreateDynamicObject(16732, 1518.70996, -1742.69995, -19.85000,   0.00000, 0.00000, 272.56000);
CreateDynamicObject(2569, 1522.37000, -1746.52002, -22.00000,   0.00000, 0.00000, 182.86000);
CreateDynamicObject(2569, 1502.52002, -1746.44995, -23.34000,   0.00000, 0.00000, 92.78000);
CreateDynamicObject(2009, 1504.34998, -1754.22998, -23.60000,   0.00000, 0.00000, 273.32999);
CreateDynamicObject(2009, 1506.40002, -1755.12000, -23.60000,   0.00000, 0.00000, 3.48000);
CreateDynamicObject(2921, 1518.13000, -1739.39001, -20.60000,   0.00000, 0.00000, 102.25000);
CreateDynamicObject(14787, 1513.59998, -1727.54004, -23.55000,   0.00000, 0.00000, 2.45000);
CreateDynamicObject(2158, 1529.13000, -1739.69995, -23.10000,   0.00000, 0.00000, 273.10999);
CreateDynamicObject(2158, 1529.17004, -1740.59998, -23.10000,   0.00000, 0.00000, 273.10999);
CreateDynamicObject(2158, 1529.20996, -1741.56995, -23.10000,   0.00000, 0.00000, 273.10999);
CreateDynamicObject(2158, 1529.23999, -1742.56006, -23.10000,   0.00000, 0.00000, 273.10999);
CreateDynamicObject(2158, 1529.31006, -1743.53003, -23.10000,   0.00000, 0.00000, 273.10999);
CreateDynamicObject(2158, 1529.35999, -1744.46997, -23.10000,   0.00000, 0.00000, 273.10999);
CreateDynamicObject(2158, 1529.40002, -1745.42004, -23.10000,   0.00000, 0.00000, 273.10999);
CreateDynamicObject(2158, 1529.44995, -1746.31006, -23.10000,   0.00000, 0.00000, 273.10999);
CreateDynamicObject(2186, 1506.48999, -1748.70996, -23.59000,   0.00000, 0.00000, 3.08000);
CreateDynamicObject(1808, 1508.72998, -1748.27002, -23.54000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 1515.16003, -1730.98999, -23.54000,   0.00000, 0.00000, 2.95000);
CreateDynamicObject(1808, 1511.37000, -1740.39001, -23.54000,   0.00000, 0.00000, 2.95000);
CreateDynamicObject(2227, 1529.27002, -1742.98999, -23.51000,   0.00000, 0.00000, 273.70999);
CreateDynamicObject(2868, 1528.57996, -1739.56006, -23.51000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2868, 1522.94995, -1739.90002, -21.68000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2868, 1525.93994, -1746.66003, -23.51000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2868, 1521.97998, -1746.39001, -21.29000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2811, 1519.27002, -1743.88000, -23.62000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2811, 1519.08997, -1741.63000, -23.62000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2076, 1526.60999, -1741.35999, -20.26000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2076, 1526.81995, -1744.48999, -20.26000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2076, 1521.43994, -1744.83997, -20.26000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2076, 1521.29004, -1741.65002, -20.26000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2606, 1501.77002, -1745.04004, -21.74000,   0.00000, 0.00000, 93.15000);
CreateDynamicObject(2606, 1501.77002, -1745.04004, -21.24000,   0.00000, 0.00000, 93.15000);
CreateDynamicObject(2606, 1501.77002, -1745.04004, -20.84000,   0.00000, 0.00000, 93.15000);
CreateDynamicObject(2606, 1501.77002, -1745.04004, -20.33000,   0.00000, 0.00000, 93.15000);
CreateDynamicObject(2104, 1501.50000, -1743.50000, -22.03000,   0.00000, 0.00000, 93.86000);
CreateDynamicObject(2104, 1501.63000, -1746.13000, -22.03000,   0.00000, 0.00000, 93.86000);
CreateDynamicObject(1703, 1504.53003, -1743.70996, -23.70000,   0.00000, 0.00000, 273.84000);
CreateDynamicObject(2073, 1522.81006, -1752.53003, -19.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2073, 1522.68005, -1750.40002, -19.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2073, 1526.03003, -1750.28003, -19.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2073, 1526.18005, -1752.43005, -19.84000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1519.01001, -1749.03003, -21.98000,   0.00000, 0.00000, 272.91000);
CreateDynamicObject(1649, 1519.13000, -1749.05005, -21.98000,   0.00000, 0.00000, 92.81000);
CreateDynamicObject(2834, 1519.09998, -1752.57996, -23.54000,   0.00000, 0.00000, 93.32000);
CreateDynamicObject(2412, 1518.46997, -1750.70996, -23.61000,   0.00000, 0.00000, 90.59000);
CreateDynamicObject(2412, 1518.54004, -1752.81006, -23.61000,   0.00000, 0.00000, 90.59000);
CreateDynamicObject(2356, 1504.17004, -1755.56995, -23.41000,   0.00000, 0.00000, 327.25000);
CreateDynamicObject(1562, 1528.41003, -1751.01001, -23.00000,   0.00000, 0.00000, 273.60999);
CreateDynamicObject(1828, 1522.43994, -1743.15002, -23.61000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2316, 1527.68005, -1754.76001, -21.73000,   0.00000, 0.00000, 185.33000);
CreateDynamicObject(2295, 1525.97998, -1753.77002, -23.61010,   0.00000, 0.00000, 190.48000);
CreateDynamicObject(2295, 1525.20996, -1753.75000, -23.60805,   0.00000, 0.00000, 190.48000);
CreateDynamicObject(2266, 1526.04004, -1754.16003, -20.81000,   0.00000, 0.00000, 182.89999);
CreateDynamicObject(2267, 1522.68005, -1754.78003, -21.00000,   0.00000, 0.00000, 182.87000);
CreateDynamicObject(2257, 1516.43530, -1756.97839, -20.18066,   0.00000, 0.00000, 183.18347);
CreateDynamicObject(2256, 1506.76001, -1748.20996, -21.00000,   0.00000, 0.00000, 3.19000);
CreateDynamicObject(2255, 1525.08997, -1746.39001, -21.00000,   0.00000, 0.00000, 183.53000);
CreateDynamicObject(2254, 1526.98999, -1746.75000, -21.01000,   0.00000, 0.00000, 183.42000);
CreateDynamicObject(2251, 1527.87000, -1747.38000, -21.58000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2248, 1529.37000, -1754.21997, -23.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2251, 1529.22998, -1754.19995, -21.99000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2248, 1519.59998, -1753.38000, -23.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2248, 1519.41003, -1750.78003, -23.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19147, 1520.13000, -1754.81006, -19.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2225, 1527.85999, -1754.63000, -23.61000,   0.00000, 0.00000, 184.34000);
CreateDynamicObject(2868, 1519.37000, -1750.77002, -22.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2868, 1519.56995, -1753.40002, -22.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16640, 1530.97998, -1731.19995, -25.10000,   0.00000, 0.00000, 86.88000);
CreateDynamicObject(16640, 1540.45996, -1746.76001, -25.10000,   0.00000, 0.00000, 267.03000);
CreateDynamicObject(10246, 1545.98999, -1739.59998, -22.78000,   0.00000, 0.00000, 266.51001);
CreateDynamicObject(3666, 1527.96997, -1731.55005, -24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1526.88000, -1731.42004, -24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1525.68994, -1731.31995, -24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1524.65002, -1731.27002, -24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1523.65002, -1731.18005, -24.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18766, 1524.19995, -1738.50000, -23.98000,   0.00000, 0.00000, 357.79999);
CreateDynamicObject(2634, 1525.56006, -1738.15002, -22.93000,   0.00000, 0.00000, 357.75000);
CreateDynamicObject(2983, 1543.12000, -1740.20996, -23.13000,   0.00000, 0.00000, 83.03000);
CreateDynamicObject(2886, 1515.21997, -1757.41003, -22.26000,   0.00000, 0.00000, 2.76000);
CreateDynamicObject(2229, 1529.15002, -1743.59998, -23.78000,   0.00000, 0.00000, 275.57001);
CreateDynamicObject(2229, 1529.18005, -1744.16003, -23.78000,   0.00000, 0.00000, 275.57001);
CreateDynamicObject(2229, 1529.04004, -1742.42004, -23.78000,   0.00000, 0.00000, 274.19000);
CreateDynamicObject(2229, 1529.04004, -1741.79004, -23.78000,   0.00000, 0.00000, 274.19000);
CreateDynamicObject(1533, 1563.26001, -1795.83997, -23.75000,   0.00000, 0.00000, 2.16000);
CreateDynamicObject(1251, 1563.70996, -1795.73999, -22.26000,   0.00000, 0.00000, 272.29999);
CreateDynamicObject(2343, 1553.44995, -1791.52002, -23.03000,   0.00000, 0.00000, 185.63000);
CreateDynamicObject(1721, 1550.94995, -1792.19995, -23.65000,   0.00000, 0.00000, 287.56000);
CreateDynamicObject(1721, 1551.13000, -1791.08997, -23.65000,   0.00000, 0.00000, 254.81000);
CreateDynamicObject(1721, 1551.88000, -1790.12000, -23.65000,   0.00000, 0.00000, 214.69000);
CreateDynamicObject(2921, 1546.68994, -1788.44995, -21.66000,   0.00000, 0.00000, 195.23000);
CreateDynamicObject(2603, 1554.13000, -1787.93005, -23.40000,   0.00000, 0.00000, 270.78000);
CreateDynamicObject(2525, 1547.58997, -1788.14001, -23.62000,   0.00000, 0.00000, 4.89000);
CreateDynamicObject(18762, 1524.28003, -1788.78003, -23.58000,   0.00000, 0.00000, 6.73000);
CreateDynamicObject(2333, 1532.48999, -1802.54004, -24.02000,   0.00000, 0.00000, 272.04999);
CreateDynamicObject(2333, 1532.43005, -1800.66003, -24.02000,   0.00000, 0.00000, 272.04999);
CreateDynamicObject(2333, 1533.78003, -1801.66003, -24.02000,   0.00000, 0.00000, 91.83000);
CreateDynamicObject(2333, 1533.82996, -1803.54004, -24.02000,   0.00000, 0.00000, 91.75000);
CreateDynamicObject(1562, 1533.16003, -1799.08997, -23.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2356, 1531.33997, -1801.12000, -23.72000,   0.00000, 0.00000, 273.32999);
CreateDynamicObject(2356, 1531.39001, -1802.29004, -23.72000,   0.00000, 0.00000, 273.32999);
CreateDynamicObject(2356, 1531.45996, -1803.46997, -23.72000,   0.00000, 0.00000, 273.32999);
CreateDynamicObject(2356, 1534.91003, -1803.37000, -23.72000,   0.00000, 0.00000, 96.92000);
CreateDynamicObject(2356, 1534.93005, -1802.27002, -23.72000,   0.00000, 0.00000, 96.92000);
CreateDynamicObject(2356, 1534.84998, -1800.84998, -23.72000,   0.00000, 0.00000, 96.92000);
CreateDynamicObject(2356, 1532.46997, -1804.96997, -23.72000,   0.00000, 0.00000, 357.98999);
CreateDynamicObject(2356, 1533.68994, -1804.93994, -23.72000,   0.00000, 0.00000, 7.28000);
CreateDynamicObject(1232, 1536.97998, -1807.58997, -23.94000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1540.04004, -1801.72998, -23.94000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1539.91003, -1801.90002, -23.94000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1539.68994, -1801.80005, -23.94000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1539.81006, -1801.59998, -23.94000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1997, 1547.54004, -1791.58997, -23.66000,   0.00000, 0.00000, 2.88000);
CreateDynamicObject(1223, 1536.08997, -1793.23999, -25.33000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1536.14001, -1788.07996, -25.54000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1546.88000, -1792.17004, -25.33000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1546.02002, -1796.31995, -25.33000,   0.00000, 0.00000, 268.39999);
CreateDynamicObject(1223, 1558.46997, -1795.78003, -25.33000,   0.00000, 0.00000, 268.39999);
CreateDynamicObject(1223, 1552.56006, -1806.43005, -25.33000,   0.00000, 0.00000, 94.02000);
CreateDynamicObject(1223, 1557.56995, -1806.32996, -25.33000,   0.00000, 0.00000, 94.02000);
CreateDynamicObject(1223, 1562.85999, -1806.05005, -25.33000,   0.00000, 0.00000, 94.02000);
CreateDynamicObject(1223, 1557.30005, -1800.98999, -25.33000,   0.00000, 0.00000, 94.02000);
CreateDynamicObject(1223, 1542.73999, -1814.73999, -25.33000,   0.00000, 0.00000, 94.02000);
CreateDynamicObject(1223, 1538.35999, -1814.95996, -25.33000,   0.00000, 0.00000, 94.02000);
CreateDynamicObject(1223, 1530.15002, -1799.52002, -25.33000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1530.46997, -1805.08997, -25.33000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1533.93994, -1796.93994, -25.33000,   0.00000, 0.00000, 274.85001);
CreateDynamicObject(1223, 1534.02002, -1807.50000, -25.33000,   0.00000, 0.00000, 94.02000);
CreateDynamicObject(1223, 1517.93005, -1757.08997, -25.33000,   0.00000, 0.00000, 274.85001);
CreateDynamicObject(1223, 1514.81006, -1757.38000, -25.33000,   0.00000, 0.00000, 274.85001);
CreateDynamicObject(1223, 1515.37000, -1787.96997, -25.54000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1515.26001, -1782.66003, -24.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1514.73999, -1777.42004, -23.51000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1514.65002, -1772.23999, -22.06000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1523.45996, -1788.38000, -25.54000,   0.00000, 0.00000, 99.65000);
CreateDynamicObject(1223, 1527.01001, -1788.23999, -25.54000,   0.00000, 0.00000, 96.87000);
CreateDynamicObject(2607, 1550.00000, -1819.31006, -23.30000,   0.00000, 0.00000, 268.79999);
CreateDynamicObject(2607, 1549.80005, -1823.31995, -23.30000,   0.00000, 0.00000, 268.79999);
CreateDynamicObject(2356, 1551.46997, -1819.22998, -23.64000,   0.00000, 0.00000, 98.93000);
CreateDynamicObject(2356, 1551.25000, -1823.37000, -23.64000,   0.00000, 0.00000, 85.16000);
CreateDynamicObject(2356, 1548.40002, -1823.77002, -23.64000,   0.00000, 0.00000, 289.72000);
CreateDynamicObject(2356, 1548.65002, -1819.82996, -23.64000,   0.00000, 0.00000, 289.72000);
CreateDynamicObject(2356, 1548.23999, -1822.59998, -23.64000,   0.00000, 0.00000, 252.50000);
CreateDynamicObject(2356, 1548.77002, -1818.67004, -23.64000,   0.00000, 0.00000, 252.50000);
CreateDynamicObject(1708, 1543.90002, -1815.68005, -23.81000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1708, 1542.64001, -1815.67004, -23.81000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1708, 1545.25000, -1815.66003, -23.81000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2372, 1546.45996, -1819.80005, -23.73000,   0.00000, 0.00000, 3.35000);
CreateDynamicObject(2372, 1546.57996, -1822.02002, -23.73000,   0.00000, 0.00000, 3.35000);
CreateDynamicObject(2372, 1546.70996, -1824.20996, -23.73000,   0.00000, 0.00000, 3.35000);
CreateDynamicObject(2372, 1546.82996, -1826.41003, -23.73000,   0.00000, 0.00000, 3.35000);
CreateDynamicObject(2007, 1556.27002, -1819.28003, -23.71000,   0.00000, 0.00000, 272.22000);
CreateDynamicObject(2007, 1556.28003, -1820.28003, -23.71000,   0.00000, 0.00000, 272.22000);
CreateDynamicObject(2007, 1556.31995, -1821.30005, -23.71000,   0.00000, 0.00000, 272.22000);
CreateDynamicObject(2007, 1556.22998, -1818.28003, -23.71000,   0.00000, 0.00000, 272.22000);
CreateDynamicObject(2007, 1556.17004, -1817.28003, -23.71000,   0.00000, 0.00000, 272.22000);
CreateDynamicObject(2007, 1556.12000, -1816.29004, -23.71000,   0.00000, 0.00000, 272.22000);
CreateDynamicObject(14501, 1546.97998, -1767.69995, -22.70000,   0.00000, 0.00000, 274.31000);
CreateDynamicObject(18764, 1547.37000, -1763.02002, -25.68000,   0.00000, 0.00000, 3.66000);
CreateDynamicObject(2169, 1547.16003, -1768.10999, -22.32000,   0.00000, 0.00000, 92.94000);
CreateDynamicObject(1562, 1548.55005, -1767.53003, -21.70000,   0.00000, 0.00000, 276.07001);
CreateDynamicObject(2122, 1548.67004, -1767.53003, -21.81000,   0.00000, 0.00000, 4.95000);
CreateDynamicObject(2343, 1548.62000, -1772.96997, -22.02000,   0.00000, 0.00000, 183.61000);
CreateDynamicObject(14416, 1542.95996, -1762.64001, -26.36000,   0.00000, 0.00000, 274.12000);
CreateDynamicObject(18762, 1550.97998, -1773.46997, -24.81000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1562, 1547.68994, -1762.46997, -22.50000,   0.00000, 0.00000, 273.89999);
CreateDynamicObject(2293, 1547.66003, -1762.45996, -23.25000,   0.00000, 0.00000, 3.48000);
CreateDynamicObject(1703, 1538.76001, -1765.65002, -23.60000,   0.00000, 0.00000, 93.85000);
CreateDynamicObject(640, 1529.97998, -1762.18994, -22.94000,   0.00000, 0.00000, 274.20999);
CreateDynamicObject(1232, 1549.62000, -1770.12000, -23.43000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3437, 1550.30005, -1769.18005, -21.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 1549.22998, -1771.37000, -21.08000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3462, 1549.67004, -1772.96997, -19.42000,   0.00000, 0.00000, 359.88000);
CreateDynamicObject(2614, 1546.28003, -1767.57996, -22.42000,   0.00000, 0.00000, 274.23001);
CreateDynamicObject(1721, 1541.31006, -1766.82996, -23.53000,   0.00000, 0.00000, 275.12000);
CreateDynamicObject(1721, 1550.19995, -1767.47998, -23.63000,   0.00000, 0.00000, 186.50999);
CreateDynamicObject(2169, 1543.08997, -1766.76001, -23.72000,   0.00000, 0.00000, 273.89999);
CreateDynamicObject(18766, 1467.63000, -1787.32996, -19.34000,   0.00000, 0.00000, 2.47000);
CreateDynamicObject(2877, 1466.38000, -1787.88000, -18.29000,   0.00000, 0.00000, 2.61000);
CreateDynamicObject(2877, 1469.31995, -1787.76001, -18.29000,   0.00000, 0.00000, 182.71001);
CreateDynamicObject(2272, 1461.10999, -1791.76001, -18.39000,   0.00000, 0.00000, 2.86000);
CreateDynamicObject(948, 1464.02002, -1790.80005, -19.51000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, 1471.78003, -1790.44995, -19.51000,   0.00000, 0.00000, 2.57000);
CreateDynamicObject(14397, 1472.23999, -1790.12000, -16.79000,   0.00000, 0.00000, 3.04000);
CreateDynamicObject(14397, 1472.23999, -1790.12000, -17.41000,   0.00000, 0.00000, 3.04000);
CreateDynamicObject(14902, 1480.67004, -1804.31006, -19.62000,   0.00000, 0.00000, 2.32000);
CreateDynamicObject(14855, 1507.70996, -1761.98999, -19.29000,   0.00000, 0.00000, 5.76000);
CreateDynamicObject(2253, 1484.52002, -1803.96997, -19.20000,   0.00000, 0.00000, 8.35000);
CreateDynamicObject(2253, 1484.70996, -1809.31995, -19.20000,   0.00000, 0.00000, 8.35000);
CreateDynamicObject(2253, 1480.78003, -1809.67004, -19.20000,   0.00000, 0.00000, 8.35000);
CreateDynamicObject(2253, 1462.28003, -1810.51001, -19.20000,   0.00000, 0.00000, 1.57000);
CreateDynamicObject(2253, 1459.67004, -1810.68005, -19.20000,   0.00000, 0.00000, 1.57000);
CreateDynamicObject(2254, 1465.10999, -1810.56995, -17.75000,   0.00000, 0.00000, 181.25000);
CreateDynamicObject(2256, 1455.01001, -1801.44995, -17.46000,   0.00000, 0.00000, 93.58000);
CreateDynamicObject(18013, 1487.09998, -1784.21997, -16.84000,   0.00000, 0.00000, 182.84000);
CreateDynamicObject(18013, 1496.97998, -1783.40002, -20.78000,   0.00000, 0.00000, 182.84000);
CreateDynamicObject(2265, 1512.23999, -1759.29004, -22.16000,   0.00000, 0.00000, 0.62000);
CreateDynamicObject(2186, 1505.73999, -1761.84998, -23.54000,   0.00000, 0.00000, 91.38000);
CreateDynamicObject(1808, 1506.47998, -1759.18994, -23.63000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13623, 996.84998, 8382.83008, -2399.58008,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2842, 1540.00000, -1816.43994, -23.61000,   0.00000, 0.00000, 1.16000);
CreateDynamicObject(2140, 1546.26001, -1814.97998, -23.62000,   0.00000, 0.00000, 1.73000);
CreateDynamicObject(2140, 1547.18005, -1814.94995, -23.62000,   0.00000, 0.00000, 1.73000);
CreateDynamicObject(2140, 1548.10999, -1814.91003, -23.62000,   0.00000, 0.00000, 1.73000);
CreateDynamicObject(2140, 1549.03003, -1814.89001, -23.62000,   0.00000, 0.00000, 1.73000);
CreateDynamicObject(2140, 1549.95996, -1814.87000, -23.62000,   0.00000, 0.00000, 1.73000);
CreateDynamicObject(2140, 1550.89001, -1814.84998, -23.62000,   0.00000, 0.00000, 1.73000);
CreateDynamicObject(2140, 1551.79004, -1814.81995, -23.62000,   0.00000, 0.00000, 1.73000);
CreateDynamicObject(2140, 1552.72998, -1814.79004, -23.62000,   0.00000, 0.00000, 2.03000);
CreateDynamicObject(2140, 1553.66003, -1814.75000, -23.62000,   0.00000, 0.00000, 2.13000);
CreateDynamicObject(2140, 1554.58997, -1814.71997, -23.62000,   0.00000, 0.00000, 2.64000);
CreateDynamicObject(2140, 1555.46997, -1814.68005, -23.62000,   0.00000, 0.00000, 2.64000);
CreateDynamicObject(2140, 1556.40002, -1814.63000, -23.62000,   0.00000, 0.00000, 3.04000);
CreateDynamicObject(2076, 1555.21997, -1818.04004, -20.39000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2076, 1555.65002, -1823.31995, -20.39000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2076, 1548.60999, -1818.00000, -20.39000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2076, 1548.69995, -1823.57996, -20.39000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2076, 1542.47998, -1818.10999, -20.39000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2076, 1542.66003, -1823.87000, -20.39000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10182, 1559.73999, -1722.05005, 6.90000,   0.00000, 0.00000, 89.73000);
CreateDynamicObject(1622, 1413.37000, -1722.35999, 28.41000,   0.00000, 0.00000, 120.70000);
CreateDynamicObject(1622, 1481.76001, -1789.97998, 229.12000,   0.00000, -18.00000, 237.73000);
CreateDynamicObject(1622, 1380.29004, -1882.05005, 17.13000,   0.00000, 0.00000, 201.63000);
CreateDynamicObject(1622, 1576.77002, -1881.79004, 26.59000,   0.00000, 0.00000, 298.79999);
CreateDynamicObject(1622, 1578.45996, -1834.81006, 30.50000,   0.00000, 0.00000, 329.32999);
CreateDynamicObject(1622, 1481.20996, -1791.21997, 229.12000,   0.00000, -18.00000, 45.87000);
CreateDynamicObject(1622, 1555.83997, -1582.89001, 23.21000,   0.00000, 0.00000, 348.91000);
CreateDynamicObject(1622, 1342.37000, -1759.58997, 15.90000,   0.00000, 0.00000, 223.17999);
CreateDynamicObject(1622, 1553.23999, -1651.07996, 27.40000,   0.00000, 0.00000, 16.25000);
CreateDynamicObject(1622, 1455.75000, -1810.69995, -15.03000,   0.00000, 0.00000, 191.88000);
CreateDynamicObject(1622, 1517.91003, -1757.79004, -19.88000,   0.00000, 0.00000, 60.33000);
CreateDynamicObject(1622, 1580.25000, -1690.30005, 10.57000,   0.00000, 0.00000, 33.04000);
CreateDynamicObject(1622, 1564.07996, -1676.46997, 61.54000,   0.00000, 0.00000, 37.88000);
CreateDynamicObject(19436, 1528.28003, -1780.81201, -22.11000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19363, 1527.56995, -1771.67004, -22.24000,   0.00000, 0.00000, 3.65000);
CreateDynamicObject(19363, 1527.37000, -1768.45996, -22.24000,   0.00000, 0.00000, 3.65000);
CreateDynamicObject(14488, 1538.50000, -1771.09998, -21.20000,   0.00000, 0.00000, 273.73999);
CreateDynamicObject(19375, 1543.97998, -1765.65002, -23.65000,   0.00000, 90.00000, 3.79000);
CreateDynamicObject(19375, 1544.62000, -1775.26001, -23.65000,   0.00000, 90.00000, 3.79000);
CreateDynamicObject(19375, 1533.50000, -1766.33997, -23.65000,   0.00000, 90.00000, 3.79000);
CreateDynamicObject(19375, 1534.14001, -1775.95996, -23.65000,   0.00000, 90.00000, 3.79000);
CreateDynamicObject(18764, 1548.80005, -1766.88000, -24.74000,   0.00000, 0.00000, 3.66000);
CreateDynamicObject(3437, 1550.30005, -1768.18994, -21.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3437, 1550.27002, -1767.30005, -21.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3437, 1550.25000, -1766.38000, -21.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3437, 1550.28003, -1765.47998, -21.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3437, 1550.31006, -1764.66003, -21.09000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2169, 1543.29004, -1769.68994, -23.72000,   0.00000, 0.00000, 273.89999);
CreateDynamicObject(1721, 1541.40002, -1767.79004, -23.53000,   0.00000, 0.00000, 275.12000);
CreateDynamicObject(1721, 1541.47998, -1769.79004, -23.53000,   0.00000, 0.00000, 275.12000);
CreateDynamicObject(1721, 1541.55005, -1770.87000, -23.53000,   0.00000, 0.00000, 275.12000);
CreateDynamicObject(1703, 1538.94995, -1769.50000, -23.60000,   0.00000, 0.00000, 93.85000);
CreateDynamicObject(1703, 1539.19995, -1773.38000, -23.60000,   0.00000, 0.00000, 93.85000);
CreateDynamicObject(1703, 1536.84998, -1773.50000, -23.60000,   0.00000, 0.00000, 93.85000);
CreateDynamicObject(1703, 1536.52002, -1769.59998, -23.60000,   0.00000, 0.00000, 93.85000);
CreateDynamicObject(1703, 1536.26001, -1765.70996, -23.60000,   0.00000, 0.00000, 93.85000);
CreateDynamicObject(1232, 1549.62000, -1770.12000, -22.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1549.62000, -1770.12000, -21.16000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1549.62000, -1770.12000, -20.06000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1549.62000, -1770.12000, -24.51000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1549.62000, -1770.12000, -25.73000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18764, 1549.19995, -1773.38000, -25.07000,   0.00000, 0.00000, 3.66000);
CreateDynamicObject(971, 1551.06995, -1770.93005, -23.04000,   0.00000, 0.00000, 2.49000);
CreateDynamicObject(14416, 1549.02002, -1777.75000, -25.75000,   0.00000, 0.00000, 3.63000);
CreateDynamicObject(19466, 1546.82996, -1774.43994, -21.72000,   0.00000, 0.00000, 3.04000);
CreateDynamicObject(19466, 1546.70996, -1772.19995, -21.72000,   0.00000, 0.00000, 3.04000);
CreateDynamicObject(19466, 1546.82996, -1774.43994, -19.79000,   0.00000, 0.00000, 3.04000);
CreateDynamicObject(19466, 1546.70996, -1772.19995, -19.79000,   0.00000, 0.00000, 3.04000);
CreateDynamicObject(19436, 1546.83997, -1775.27002, -20.50000,   0.00000, 0.00000, 2.49000);
CreateDynamicObject(19436, 1546.83997, -1775.27002, -24.00000,   0.00000, 0.00000, 2.49000);
CreateDynamicObject(19436, 1548.66003, -1775.81995, -19.16000,   90.00000, 0.00000, 94.14000);
CreateDynamicObject(1502, 1528.34998, -1778.50000, -23.61000,   0.00000, 0.00000, 273.64001);
CreateDynamicObject(19436, 1549.03003, -1775.76001, -21.12000,   0.00000, 0.00000, 93.88000);
CreateDynamicObject(19432, 1536.17004, -1788.53003, -23.11000,   0.00000, 0.00000, 2.47000);
CreateDynamicObject(19432, 1536.17004, -1788.53003, -19.62000,   0.00000, 0.00000, 2.47000);
CreateDynamicObject(19432, 1536.35999, -1792.16003, -21.44000,   0.00000, 0.00000, 1.23000);
CreateDynamicObject(19432, 1536.35999, -1792.16003, -24.95000,   0.00000, 0.00000, 1.23000);
CreateDynamicObject(19458, 1531.62000, -1790.48999, -23.76000,   0.00000, 90.00000, 272.31000);
CreateDynamicObject(19458, 1525.17004, -1793.18994, -23.76000,   0.00000, 90.00000, 2.55000);
CreateDynamicObject(19451, 1524.42004, -1793.17004, -21.95000,   0.00000, 0.00000, 3.61000);
CreateDynamicObject(19451, 1531.53003, -1792.34998, -21.95000,   0.00000, 0.00000, 92.17000);
CreateDynamicObject(19432, 1525.92004, -1792.56006, -21.96000,   0.00000, 0.00000, 272.37000);
CreateDynamicObject(19432, 1524.32996, -1792.62000, -21.96000,   0.00000, 0.00000, 272.37000);
CreateDynamicObject(19451, 1531.52002, -1790.52002, -19.61000,   0.00000, 90.00000, 92.44000);
CreateDynamicObject(19451, 1531.53003, -1792.34998, -18.47000,   0.00000, 0.00000, 92.17000);
CreateDynamicObject(19432, 1525.92004, -1792.56006, -18.47000,   0.00000, 0.00000, 272.37000);
CreateDynamicObject(19432, 1524.32996, -1792.62000, -18.47000,   0.00000, 0.00000, 272.37000);
CreateDynamicObject(18766, 1531.28003, -1788.39001, -17.76000,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(18762, 1524.28003, -1788.78003, -18.58000,   0.00000, 0.00000, 6.73000);
CreateDynamicObject(19451, 1525.05005, -1793.04004, -19.61000,   0.00000, 90.00000, 182.46001);
CreateDynamicObject(19451, 1524.42004, -1793.17004, -18.48000,   0.00000, 0.00000, 3.61000);
CreateDynamicObject(19467, 1526.47998, -1788.30005, -23.62000,   0.00000, 0.00000, 2.25000);
CreateDynamicObject(1502, 1518.73999, -1741.93994, -23.54000,   0.00000, 0.00000, 273.16000);
CreateDynamicObject(2173, 1525.93994, -1743.42004, -23.59000,   0.00000, 0.00000, 94.81000);
CreateDynamicObject(2190, 1525.63000, -1743.35999, -22.84000,   0.00000, 0.00000, 96.45000);
CreateDynamicObject(1782, 1525.94995, -1742.91003, -22.90000,   0.00000, 0.00000, 94.34000);
CreateDynamicObject(1502, 1512.10999, -1742.26001, -23.54000,   0.00000, 0.00000, 273.16000);
CreateDynamicObject(1502, 1512.52002, -1751.63000, -23.54000,   0.00000, 0.00000, 273.16000);
CreateDynamicObject(1502, 1519.18005, -1751.29004, -23.54000,   0.00000, 0.00000, 273.16000);
CreateDynamicObject(2173, 1527.04004, -1751.44995, -23.59000,   0.00000, 0.00000, 94.81000);
CreateDynamicObject(2190, 1526.69995, -1750.66003, -22.84000,   0.00000, 0.00000, 64.54000);
CreateDynamicObject(2611, 1492.79004, -1807.78003, -16.93000,   0.00000, 0.00000, 92.94000);
CreateDynamicObject(2894, 1492.77002, -1808.31995, -16.68000,   0.00000, 90.00000, 3.96000);
CreateDynamicObject(2894, 1492.72998, -1807.31995, -16.68000,   0.00000, 90.00000, 3.96000);
CreateDynamicObject(2894, 1492.79004, -1807.80005, -17.09000,   0.00000, 90.00000, 3.96000);
CreateDynamicObject(19160, 1556.73999, -1823.90002, -23.00000,   0.00000, -84.00000, 0.00000);
CreateDynamicObject(1433, 1556.40002, -1824.13000, -23.51000,   0.00000, 0.00000, 0.94000);
CreateDynamicObject(19160, 1556.78003, -1824.30005, -23.00000,   0.00000, -84.00000, 0.00000);
CreateDynamicObject(19093, 1556.51001, -1823.91003, -23.00000,   0.00000, -84.00000, 0.00000);
CreateDynamicObject(19093, 1556.48999, -1824.30005, -23.00000,   0.00000, -84.00000, 0.00000);
CreateDynamicObject(19093, 1556.21997, -1824.30005, -23.00000,   0.00000, -84.00000, 0.00000);
CreateDynamicObject(19160, 1556.23999, -1823.93994, -23.00000,   0.00000, -84.00000, 0.00000);
CreateDynamicObject(3017, 1556.46997, -1824.44995, -23.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2257, 1516.44958, -1756.97900, -20.59900,   0.00000, 0.00000, 183.12347);
   	//Casa vinewood
CreateDynamicObject(1337,-649.7812500,982.8789100,11.6328100,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (2)
CreateDynamicObject(1337,-717.4052700,950.3847700,11.6407100,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (4)
CreateDynamicObject(1337,-650.6699200,976.7255900,11.6328100,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (3)
CreateDynamicObject(1337,-664.2353500,992.6601600,11.6328100,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (6)
CreateDynamicObject(1337,-678.6845700,973.0664100,11.6328100,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (7)
CreateDynamicObject(16409,-676.5999800,982.2999900,11.1000000,0.0000000,0.0000000,0.0000000); //object(by_weehangr) (1)
CreateDynamicObject(1337,-639.3867200,1015.7334000,11.4529000,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (9)
CreateDynamicObject(1337,-682.2236300,982.7939500,11.6390600,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (8)
CreateDynamicObject(1337,-656.9677700,974.9150400,14.4101700,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (12)
CreateDynamicObject(10282,-691.2999900,983.0999800,12.2000000,0.0000000,0.0000000,0.0000000); //object(mich_int_sfe) (1)
CreateDynamicObject(3749,320.2000100,-1186.8000500,81.3000000,0.0000000,0.0000000,39.0000000); //object(clubgate01_lax) (1)
CreateDynamicObject(987,329.2000100,-1181.6999500,81.3000000,0.0000000,0.0000000,41.0000000); //object(elecfence_bar) (1)
CreateDynamicObject(13692,252.2343800,-1211.9296900,64.9609400,0.0000000,0.0000000,0.0000000); //object(cunte_landf4_03) (1)
CreateDynamicObject(987,338.2000100,-1173.9000200,81.3000000,0.0000000,0.0000000,43.0000000); //object(elecfence_bar) (2)
CreateDynamicObject(987,349.2999900,-1163.6999500,81.3000000,0.0000000,0.0000000,121.0000000); //object(elecfence_bar) (3)
CreateDynamicObject(987,340.5000000,-1171.9000200,81.3000000,0.0000000,0.0000000,43.0000000); //object(elecfence_bar) (5)
CreateDynamicObject(706,251.8000000,-1156.4000200,78.0000000,0.0000000,0.0000000,0.9830000); //object(sm_vegvbbig) (1)
CreateDynamicObject(987,343.1000100,-1153.5000000,82.9000000,0.0000000,0.0000000,127.0000000); //object(elecfence_bar) (6)
CreateDynamicObject(987,336.1000100,-1144.1999500,82.9000000,0.0000000,0.0000000,127.0000000); //object(elecfence_bar) (7)
CreateDynamicObject(987,329.1000100,-1134.9000200,82.9000000,0.0000000,0.0000000,127.0000000); //object(elecfence_bar) (8)
CreateDynamicObject(987,321.8999900,-1125.3000500,82.9000000,0.0000000,0.0000000,127.0000000); //object(elecfence_bar) (9)
CreateDynamicObject(987,314.7000100,-1115.8000500,82.9000000,0.0000000,0.0000000,145.0000000); //object(elecfence_bar) (10)
CreateDynamicObject(987,305.0000000,-1109.0000000,83.6000000,0.0000000,0.0000000,157.0000000); //object(elecfence_bar) (11)
CreateDynamicObject(987,291.7000100,-1103.5000000,84.0000000,0.0000000,0.0000000,265.0000000); //object(elecfence_bar) (12)
CreateDynamicObject(1337,292.5156300,-1120.0302700,80.5999000,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (11)
CreateDynamicObject(987,290.7999900,-1115.5999800,83.0000000,0.0000000,0.0000000,250.0000000); //object(elecfence_bar) (13)
CreateDynamicObject(987,286.7999900,-1126.9000200,82.9000000,0.0000000,0.0000000,236.0000000); //object(elecfence_bar) (14)
CreateDynamicObject(987,279.8999900,-1136.5000000,82.9000000,0.0000000,0.0000000,223.0000000); //object(elecfence_bar) (15)
CreateDynamicObject(987,271.1000100,-1144.6999500,82.2000000,0.0000000,0.0000000,202.0000000); //object(elecfence_bar) (16)
CreateDynamicObject(987,259.8999900,-1149.0000000,81.0000000,0.0000000,0.0000000,195.0000000); //object(elecfence_bar) (17)
CreateDynamicObject(987,248.3000000,-1152.0999800,80.5000000,0.0000000,0.0000000,195.0000000); //object(elecfence_bar) (18)
CreateDynamicObject(987,245.3999900,-1152.6999500,80.7000000,0.0000000,0.0000000,195.0000000); //object(elecfence_bar) (19)
CreateDynamicObject(987,302.2999900,-1107.8000500,84.1000000,0.0000000,0.0000000,157.0000000); //object(elecfence_bar) (20)
CreateDynamicObject(987,233.8000000,-1155.9000200,80.6000000,0.0000000,0.0000000,309.0000000); //object(elecfence_bar) (21)
CreateDynamicObject(987,241.3000000,-1165.1999500,81.3000000,0.0000000,0.0000000,309.0000000); //object(elecfence_bar) (22)
CreateDynamicObject(987,248.8999900,-1174.5000000,81.9000000,0.0000000,0.0000000,309.0000000); //object(elecfence_bar) (23)
CreateDynamicObject(987,256.3999900,-1183.8000500,82.6000000,0.0000000,0.0000000,309.0000000); //object(elecfence_bar) (24)
CreateDynamicObject(987,263.8999900,-1193.0999800,82.9000000,0.0000000,0.0000000,310.0000000); //object(elecfence_bar) (25)
CreateDynamicObject(987,271.6000100,-1202.3000500,82.9000000,0.0000000,0.0000000,310.0000000); //object(elecfence_bar) (26)
CreateDynamicObject(987,275.2999900,-1207.0000000,83.1000000,0.0000000,0.0000000,310.0000000); //object(elecfence_bar) (27)
CreateDynamicObject(987,303.5000000,-1201.5000000,81.3000000,0.0000000,0.0000000,37.0000000); //object(elecfence_bar) (28)
CreateDynamicObject(987,294.2999900,-1208.3000500,81.3000000,0.0000000,0.0000000,37.0000000); //object(elecfence_bar) (29)
CreateDynamicObject(987,284.5000000,-1215.1999500,81.3000000,0.0000000,0.0000000,35.0000000); //object(elecfence_bar) (30)
CreateDynamicObject(987,282.0000000,-1216.8000500,81.3000000,0.0000000,0.0000000,35.0000000); //object(elecfence_bar) (31)
CreateDynamicObject(9885,288.6000100,-1175.4000200,96.0000000,0.0000000,0.0000000,0.0000000); //object(sfw_nitlite1) (1)
CreateDynamicObject(9241,277.7000100,-1183.4000200,80.1999700,0.0000000,0.0000000,133.0000000); //object(copbits_sfn) (2)
CreateDynamicObject(11547,301.8999900,-1196.8000500,82.9000000,0.0000000,0.0000000,125.0000000); //object(desn_tscanopy) (1)
   	//Western
CreateDynamicObject(8355, 1650.62524, 683.35065, 10.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16771, 1736.59961, 684.19922, 16.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3268, 1728.30334, 721.10706, 9.80000,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(3934, 1733.50000, 756.09998, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1757.50000, 711.90002, 11.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1619.69922, 783.00000, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1631.59998, 782.79999, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1643.69995, 782.79999, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1655.80005, 782.70001, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1667.90002, 782.59998, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1676.90002, 782.59998, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1688.80005, 782.50000, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1700.69995, 782.40002, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1706.90002, 782.50000, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1718.59998, 782.40002, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1730.00000, 782.40002, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1742.00000, 782.50000, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1745.00000, 782.40002, 11.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1756.90002, 782.70001, 11.00000,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(987, 1757.09998, 771.00000, 11.00000,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(987, 1757.19995, 759.09998, 11.00000,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(987, 1757.09998, 747.50000, 11.00000,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(987, 1757.30005, 735.70001, 11.00000,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(969, 1713.40002, 730.00000, 9.80000,   0.00000, 0.00000, 94.00000);
CreateDynamicObject(969, 1712.19995, 747.40002, 9.80000,   0.00000, 0.00000, 93.99900);
CreateDynamicObject(969, 1711.59998, 756.20001, 9.80000,   0.00000, 0.00000, 93.99900);
CreateDynamicObject(969, 1711.00000, 764.90002, 9.80000,   0.00000, 0.00000, 93.99900);
CreateDynamicObject(969, 1710.40002, 773.59998, 9.80000,   0.00000, 0.00000, 93.99900);
CreateDynamicObject(969, 1710.40002, 773.59998, 13.10000,   0.00000, 0.00000, 93.99900);
CreateDynamicObject(969, 1713.40002, 730.00000, 12.80000,   0.00000, 0.00000, 93.99900);
CreateDynamicObject(969, 1712.19995, 747.29999, 12.80000,   0.00000, 0.00000, 93.99900);
CreateDynamicObject(969, 1711.69995, 756.00000, 12.80000,   0.00000, 0.00000, 93.99900);
CreateDynamicObject(969, 1711.09998, 764.70001, 12.80000,   0.00000, 0.00000, 93.99900);
CreateDynamicObject(9482, 1713.09998, 743.09998, 16.50000,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(8038, 1672.90002, 713.90002, 29.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7981, 1655.90002, 709.70001, 23.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1682, 1661.69995, 707.29999, 35.30000,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(3763, 1686.30005, 714.50000, 52.30000,   0.00000, 0.00000, 314.74200);
CreateDynamicObject(14467, 1678.30005, 754.40002, 11.90000,   0.00000, 0.00000, 2.00000);
CreateDynamicObject(14467, 1684.19995, 754.40002, 11.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18284, 1653.50000, 772.50000, 12.80000,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(18284, 1634.19995, 772.79999, 12.80000,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(18284, 1615.69922, 773.00000, 12.80000,   0.00000, 0.00000, 357.98999);
CreateDynamicObject(3749, 1578.59998, 713.20001, 15.70000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3528, 1581.50000, 705.09998, 12.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3528, 1581.59998, 720.70001, 12.70000,   0.00000, 0.00000, 356.00000);
CreateDynamicObject(3528, 1575.59998, 721.50000, 12.70000,   0.00000, 0.00000, 175.99500);
CreateDynamicObject(3528, 1575.59998, 706.00000, 12.70000,   0.00000, 0.00000, 177.99001);
CreateDynamicObject(3763, 1673.80005, 712.50000, 52.30000,   0.00000, 0.00000, 314.74200);
CreateDynamicObject(3268, 1616.05164, 713.40118, 9.80000,   0.00000, 0.00000, 89.99400);
CreateDynamicObject(6115, 1673.19922, 743.09961, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11081, 1584.09998, 773.59998, 16.50000,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(11081, 1590.90002, 773.00000, 16.50000,   0.00000, 0.00000, 87.99500);
CreateDynamicObject(11081, 1597.80005, 772.79999, 16.50000,   0.00000, 0.00000, 87.99500);
CreateDynamicObject(11081, 1605.89941, 772.89941, 16.50000,   0.00000, 0.00000, 87.99000);
CreateDynamicObject(8884, 1587.30005, 758.40002, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2934, 1604.59998, 760.50000, 11.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2934, 1604.69995, 755.50000, 11.80000,   90.00000, 180.40401, 179.59599);
CreateDynamicObject(987, 1577.59961, 663.00000, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1589.59998, 662.90002, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1601.40002, 662.79999, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1612.90002, 663.00000, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1624.59998, 662.90002, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1636.50000, 662.90002, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1648.59998, 662.79999, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1660.30005, 662.79999, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1684.00000, 662.90002, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1695.90002, 662.90002, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1703.90002, 663.00000, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1709.09998, 737.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1698.80005, 737.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1688.30005, 737.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1679.50000, 737.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1669.40002, 737.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1660.59998, 737.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1652.40002, 737.70001, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1643.90002, 737.70001, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1633.80005, 737.70001, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1634.00000, 748.70001, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1644.09998, 748.70001, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1652.59998, 748.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1660.40002, 748.70001, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1669.69995, 748.50000, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1688.19995, 748.50000, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1699.00000, 748.59998, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1709.50000, 748.50000, 12.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1675.30005, 755.20001, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1673.30005, 755.59998, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1671.90002, 755.90002, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1670.69995, 756.00000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1669.30005, 756.29999, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1668.30005, 755.20001, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1669.00000, 754.50000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1670.09998, 754.20001, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1671.69995, 754.50000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1674.19995, 754.59998, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1673.09998, 754.90002, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1674.59998, 755.90002, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1675.69995, 756.00000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1675.80005, 754.90002, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1674.40002, 754.50000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1673.19995, 754.59998, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1671.90002, 755.09998, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1670.80005, 755.00000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1668.90002, 754.70001, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1667.69995, 754.50000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1667.69922, 754.50000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1668.80005, 754.59998, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1668.40002, 755.29999, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1668.59998, 755.50000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1670.19995, 755.79999, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1671.09998, 756.00000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1672.69995, 755.90002, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1673.80005, 756.00000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1675.69995, 756.29999, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1673.69995, 756.70001, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1672.50000, 756.50000, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1671.40002, 756.40002, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1670.69995, 756.40002, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1670.09998, 754.20001, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1670.80005, 754.20001, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1672.19995, 754.29999, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1674.30005, 754.40002, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1675.19995, 754.59998, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1669.80005, 756.79999, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1686.80005, 756.09998, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1686.80005, 756.59998, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1686.69995, 755.40002, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1686.19995, 754.90002, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1687.40002, 754.79999, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1688.90002, 754.70001, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1688.90002, 755.40002, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1689.40002, 756.09998, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1689.50000, 757.09998, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1691.00000, 757.00000, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1692.19995, 756.90002, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1693.19995, 756.29999, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1693.09998, 755.59998, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1693.80005, 755.09998, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1693.80005, 754.90002, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1692.30005, 755.00000, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1691.59998, 755.00000, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1690.90002, 755.00000, 10.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1678.09998, 752.40002, 10.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1678.30005, 749.70001, 10.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1683.59998, 749.70001, 10.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1683.80005, 752.20001, 10.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14706, 1678.69922, 762.69922, 6.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1756.30005, 704.20001, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1756.40002, 702.59998, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1756.40002, 700.79999, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1756.50000, 699.20001, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1756.50000, 697.40002, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1754.00000, 698.79999, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1754.09998, 700.09998, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1754.19995, 701.40002, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1754.30005, 702.70001, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1754.40002, 704.00000, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1754.00000, 697.59998, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1754.19995, 696.29999, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1755.50000, 694.40002, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1754.50000, 694.70001, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3633, 1756.19995, 695.70001, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14480, 1673.69995, 772.50000, 7.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14446, 1683.50000, 767.90002, 7.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14527, 1682.30005, 770.20001, 7.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, 1681.80005, 762.00000, 2.90000,   0.00000, 0.00000, 212.00000);
CreateDynamicObject(1704, 1678.00000, 761.59998, 2.90000,   0.00000, 0.00000, 179.99800);
CreateDynamicObject(1704, 1676.59998, 761.59998, 2.90000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(1723, 1676.00000, 764.09998, 2.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 1681.69995, 766.90002, 2.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14806, 1679.30005, 772.40002, 4.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1565.69995, 663.09998, 10.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1553.69995, 663.29999, 10.10000,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(987, 1553.90002, 675.40002, 10.10000,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(987, 1553.80005, 687.29999, 10.10000,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(987, 1553.69995, 699.20001, 10.10000,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(987, 1565.59998, 699.09998, 10.10000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(987, 1576.59998, 703.50000, 10.10000,   0.00000, 0.00000, 201.99500);
CreateDynamicObject(987, 1577.69995, 734.59998, 11.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(987, 1577.69995, 746.20001, 11.10000,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(987, 1577.80005, 758.00000, 11.10000,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(987, 1577.80005, 770.09998, 11.10000,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(987, 1577.80005, 782.20001, 11.10000,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(987, 1607.80005, 782.90002, 9.80000,   0.00000, 0.00000, 2.00000);
CreateDynamicObject(987, 1595.80005, 782.70001, 9.80000,   0.00000, 0.00000, 2.00000);
CreateDynamicObject(987, 1583.80005, 782.50000, 9.80000,   0.00000, 0.00000, 2.00000);
CreateDynamicObject(987, 1578.00000, 782.40002, 9.80000,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(8063, 1567.69995, 785.70001, 6.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8063, 1565.69995, 879.40002, 3.60000,   0.00000, 353.99500, 92.00000);
CreateDynamicObject(991, 1557.19995, 870.09998, 7.90000,   0.00000, 354.00000, 90.00000);
CreateDynamicObject(991, 1557.19995, 876.70001, 8.40000,   0.00000, 355.99600, 89.99900);
CreateDynamicObject(991, 1557.19995, 883.20001, 8.90000,   0.00000, 355.99500, 89.99500);
CreateDynamicObject(991, 1557.19995, 889.79999, 8.90000,   0.00000, 355.99500, 89.99500);
CreateDynamicObject(991, 1557.19995, 889.79999, 9.60000,   0.00000, 355.99500, 89.99500);
CreateDynamicObject(991, 1557.09998, 896.40002, 9.60000,   0.00000, 355.99500, 89.99500);
CreateDynamicObject(8063, 1569.19995, 832.79999, 1.10000,   0.00000, 348.00000, 270.00000);
CreateDynamicObject(710, 1578.59998, 803.09998, 24.80000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1578.59998, 800.40002, 24.80000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1578.80005, 797.90002, 24.80000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1578.80005, 795.59998, 24.80000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1578.90002, 793.29999, 24.80000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1578.80005, 790.90002, 24.80000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1578.69995, 788.50000, 24.80000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1578.59998, 784.90002, 24.80000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1556.19995, 799.09998, 25.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1556.09998, 801.90002, 25.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1556.19995, 804.40002, 25.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1555.80005, 796.09998, 25.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1555.90002, 793.40002, 25.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1556.00000, 790.90002, 25.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1555.90002, 788.40002, 25.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1555.80005, 785.90002, 25.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(710, 1555.69995, 783.40002, 25.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(8063, 1581.80005, 880.59998, -3.40000,   77.84600, 99.33100, 170.45799);
CreateDynamicObject(2118, 1678.80005, 766.09998, 2.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2108, 1682.09998, 770.59998, 2.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2075, 1671.59998, 767.59998, 5.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2140, 1672.30005, 772.29999, 2.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2305, 1673.50000, 772.59998, 2.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2323, 1676.30005, 768.79999, 6.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2323, 1674.19995, 768.79999, 6.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14720, 1668.59998, 772.40002, 2.90000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1594, 1671.80005, 768.50000, 3.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1663, 1665.80005, 763.50000, 3.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 1664.59998, 758.00000, 2.90000,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(1963, 1666.30005, 762.29999, 3.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1742, 1668.00000, 759.00000, 2.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1491, 1668.09998, 759.90002, 2.90000,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(2637, 1692.50000, 769.59998, 3.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2637, 1690.59998, 769.59998, 3.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2637, 1689.30005, 769.59998, 3.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2637, 1687.30005, 769.59998, 3.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2064, 1692.50000, 765.09998, 3.50000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1550, 1686.00000, 770.20001, 3.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1686.09998, 769.50000, 3.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1686.59998, 770.00000, 4.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1687.09998, 770.00000, 4.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1687.59998, 770.00000, 4.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1687.69995, 769.29999, 3.90000,   0.00000, 52.00000, 264.00000);
CreateDynamicObject(1550, 1687.19995, 769.29999, 3.90000,   0.00000, 51.99800, 263.99600);
CreateDynamicObject(1550, 1686.69995, 769.29999, 3.90000,   0.00000, 51.99800, 263.99600);
CreateDynamicObject(1550, 1686.69995, 769.79999, 3.90000,   0.00000, 19.99800, 263.99600);
CreateDynamicObject(1550, 1687.19995, 769.79999, 3.90000,   0.00000, 19.99500, 263.98999);
CreateDynamicObject(1550, 1687.90002, 769.90002, 3.90000,   0.00000, 19.99500, 263.98999);
CreateDynamicObject(1575, 1688.59998, 769.20001, 3.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 1688.59998, 769.40002, 3.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 1688.59998, 769.59998, 3.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 1688.59998, 769.79999, 3.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 1688.59998, 770.00000, 3.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1576, 1689.09998, 769.20001, 3.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1576, 1689.09998, 769.59998, 3.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1576, 1689.09998, 770.00000, 3.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1576, 1689.09998, 769.59998, 4.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1576, 1689.09998, 769.20001, 4.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1576, 1689.00000, 769.90002, 4.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1577, 1689.59998, 769.00000, 3.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1577, 1689.69995, 769.20001, 3.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1577, 1689.59998, 769.50000, 3.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1577, 1689.69995, 769.70001, 3.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1577, 1689.59998, 770.00000, 3.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1577, 1689.50000, 769.20001, 3.90000,   0.00000, 124.00000, 260.00000);
CreateDynamicObject(1577, 1689.69995, 769.09998, 3.90000,   0.00000, 123.99700, 259.99701);
CreateDynamicObject(1576, 1689.09998, 769.20001, 4.00000,   0.00000, 84.00000, 262.00000);
CreateDynamicObject(1576, 1688.90002, 769.29999, 4.00000,   0.00000, 83.99600, 261.99600);
CreateDynamicObject(373, 1690.00000, 769.79999, 4.00000,   332.45901, 300.23700, 281.57599);
CreateDynamicObject(373, 1686.40002, 765.29999, 3.50000,   332.45700, 300.23401, 281.57401);
CreateDynamicObject(373, 1686.40002, 765.90002, 3.50000,   332.45700, 300.23401, 281.57401);
CreateDynamicObject(373, 1686.80005, 765.20001, 3.50000,   332.45700, 300.23401, 281.57401);
CreateDynamicObject(373, 1687.00000, 765.90002, 3.50000,   332.45700, 300.23401, 281.57401);
CreateDynamicObject(373, 1687.40002, 765.20001, 3.50000,   332.45700, 300.23401, 281.57401);
CreateDynamicObject(373, 1687.40002, 765.79999, 3.50000,   332.45700, 300.23401, 281.57401);
CreateDynamicObject(349, 1693.40002, 770.40002, 4.70000,   0.00000, 2.00000, 194.00000);
CreateDynamicObject(349, 1692.00000, 770.29999, 4.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1690.59998, 769.20001, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1690.59998, 769.40002, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1690.59998, 769.59998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1690.59998, 769.79999, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1690.59998, 770.00000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1691.59998, 770.09998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1691.59998, 769.90002, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1691.59998, 769.70001, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1691.59998, 769.50000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1691.59998, 769.29999, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1691.59998, 769.09998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(358, 1692.80005, 769.79999, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(358, 1692.80005, 769.59998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(358, 1692.80005, 769.40002, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(358, 1692.80005, 769.20001, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(358, 1692.80005, 769.00000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(358, 1692.69995, 770.00000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2637, 1692.80005, 767.09998, 3.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2637, 1689.69995, 765.20001, 3.30000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(351, 1688.69995, 765.79999, 3.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(351, 1689.30005, 765.79999, 3.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(351, 1690.09998, 765.79999, 3.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1688.90002, 765.09998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1688.90002, 765.29999, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1688.90002, 765.50000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1688.90002, 765.70001, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1688.90002, 765.90002, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1689.40002, 765.79999, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1689.40002, 765.59998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1689.40002, 765.40002, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1689.40002, 765.20001, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1689.40002, 765.00000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1689.50000, 764.79999, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(353, 1688.90002, 764.90002, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 1690.00000, 764.90002, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 1690.09998, 765.09998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 1690.19995, 765.29999, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 1690.30005, 765.50000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 1690.29980, 765.50000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 1690.40002, 765.70001, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 1689.90002, 765.79999, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 1689.80005, 765.59998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(347, 1689.69995, 765.40002, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(359, 1692.80005, 767.70001, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(359, 1692.80005, 767.50000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(361, 1692.19995, 767.20001, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(361, 1692.30005, 767.00000, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(362, 1692.30005, 766.59998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(362, 1692.19995, 766.09998, 3.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 1685.50000, 767.29999, 2.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2299, 1692.30005, 759.79999, 2.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2299, 1689.40002, 759.59998, 2.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2299, 1686.80005, 759.70001, 2.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2299, 1690.19995, 760.79999, 2.90000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2299, 1693.19995, 760.90002, 2.90000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(2299, 1687.30005, 760.90002, 2.90000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(777, 1723.67468, 621.02972, 9.81508,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 1609.74622, 716.33783, 11.48774,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1327, 1625.20215, 722.13013, 10.67501,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1327, 1625.86609, 722.25909, 10.67501,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1327, 1626.60144, 722.46442, 10.67501,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11417, 1559.69788, 703.58234, 14.75542,   0.00000, 0.00000, 0.10000);
CreateDynamicObject(2466, 1575.04895, 698.54590, 15.09938,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2466, 1616.45251, 723.02728, 13.49916,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3761, 1630.31580, 710.70337, 11.84800,   0.00000, 0.00000, 1.45721);
CreateDynamicObject(3594, 1607.56018, 708.93134, 10.83910,   0.00000, 0.00000, 346.76080);
CreateDynamicObject(2205, 1617.04175, 720.75574, 9.82249,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2860, 1617.27905, 720.56268, 10.83140,   0.00000, 0.00000, 0.81311);
CreateDynamicObject(1661, 1618.44702, 711.54913, 17.13494,   0.00000, 0.00000, 1.15668);
CreateDynamicObject(2226, 1618.28992, 720.60065, 10.71817,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1520, 1618.15149, 720.97095, 10.85907,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2477, 1616.39038, 723.24841, 12.78567,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(987, 1672.43713, 662.91229, 11.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7073, 2267.71216, 606.01233, 27.80343,   0.00000, 0.00000, 84.99561);
CreateDynamicObject(6965, 2319.25244, 571.35455, 12.55398,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8465, 2364.12427, 683.12512, -16.73438,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3524, 2319.68701, 571.52905, 15.70160,   0.00000, 0.00000, 192.89037);
CreateDynamicObject(3528, 2266.38135, 603.87646, 37.67353,   0.00000, 0.00000, 265.54150);
CreateDynamicObject(3528, 2267.51709, 607.01764, 37.67353,   0.00000, 0.00000, 87.76216);
CreateDynamicObject(3472, 2306.50854, 571.49243, 7.32289,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 2329.31543, 572.14844, 7.32289,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2410, 2298.49341, 518.87238, 0.30514,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1824, 2248.57642, 587.62427, 8.29033,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1634, 2336.77148, 557.50256, 8.25548,   0.00000, 0.00000, 183.98564);
CreateDynamicObject(987, 2279.12622, 545.76733, 6.64360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 2267.42627, 545.99109, 6.64360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 2237.82813, 558.31378, 6.64360,   0.00000, 0.00000, 273.46036);
CreateDynamicObject(987, 2233.86987, 546.54706, 6.64360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 2243.61670, 546.38892, 6.64360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 2255.80957, 546.25775, 6.64360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 2237.77954, 569.74445, 6.64360,   0.00000, 0.00000, 273.46036);
CreateDynamicObject(987, 2237.45679, 593.56531, 9.62975,   0.00000, 0.00000, 273.46036);
CreateDynamicObject(987, 2237.81372, 581.58203, 9.29951,   0.00000, 0.00000, 273.46036);
CreateDynamicObject(987, 2249.28394, 605.78534, 9.62975,   0.00000, 0.00000, 186.16040);
CreateDynamicObject(987, 2236.96265, 605.21326, 9.62975,   0.00000, 0.00000, 273.46036);
CreateDynamicObject(987, 2261.68164, 606.41858, 9.62975,   0.00000, 0.00000, 186.16040);
CreateDynamicObject(987, 2273.75293, 607.11902, 9.62975,   0.00000, 0.00000, 186.16040);
CreateDynamicObject(987, 2277.82520, 609.86993, 9.62975,   0.00000, 0.00000, 186.16040);
CreateDynamicObject(3749, 2287.44067, 612.02301, 15.25038,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 2400.06567, 599.93170, 9.62975,   0.00000, 0.00000, 94.26062);
CreateDynamicObject(3528, 2279.95996, 607.59674, 13.50228,   0.00000, 0.00000, 265.54150);
CreateDynamicObject(3528, 2294.92627, 608.72314, 13.50228,   0.00000, 0.00000, 265.54150);
CreateDynamicObject(987, 2277.42188, 607.43774, 9.62975,   0.00000, 0.00000, 186.16040);
CreateDynamicObject(987, 2308.26245, 610.48541, 9.62975,   0.00000, 0.00000, 181.89320);
CreateDynamicObject(987, 2320.00220, 610.62207, 9.62975,   0.00000, 0.00000, 181.89320);
CreateDynamicObject(987, 2332.05786, 611.13922, 9.62975,   0.00000, 0.00000, 181.89320);
CreateDynamicObject(987, 2343.76587, 611.12500, 9.62975,   0.00000, 0.00000, 181.89320);
CreateDynamicObject(987, 2355.21362, 611.31610, 9.62975,   0.00000, 0.00000, 181.89320);
CreateDynamicObject(987, 2366.63452, 611.43365, 9.62975,   0.00000, 0.00000, 181.89320);
CreateDynamicObject(987, 2376.83521, 611.55017, 9.62975,   0.00000, 0.00000, 181.89320);
CreateDynamicObject(987, 2388.44727, 611.77368, 9.62975,   0.00000, 0.00000, 181.89320);
CreateDynamicObject(987, 2399.62720, 611.67255, 9.62975,   0.00000, 0.00000, 181.89320);
CreateDynamicObject(987, 2400.63599, 588.01025, 9.62975,   0.00000, 0.00000, 94.26062);
CreateDynamicObject(987, 2401.17407, 576.13196, 9.62975,   0.00000, 0.00000, 94.26062);
CreateDynamicObject(987, 2401.82764, 564.59381, 9.62975,   0.00000, 0.00000, 94.26062);
CreateDynamicObject(987, 2394.90356, 547.10175, 9.49332,   0.00000, 0.00000, 42.48578);
CreateDynamicObject(987, 2402.20972, 555.70972, 9.62975,   0.00000, 0.00000, 94.26062);
CreateDynamicObject(987, 2371.56372, 545.83368, 9.22475,   0.00000, 0.00000, 1.37752);
CreateDynamicObject(987, 2394.90356, 547.10175, 6.28041,   0.00000, 0.00000, 42.48578);
CreateDynamicObject(987, 2382.87354, 546.69843, 9.62975,   0.00000, 0.00000, 8.60888);
CreateDynamicObject(987, 2356.83960, 541.94348, 2.57119,   0.00000, 0.00000, 1.37752);
CreateDynamicObject(987, 2371.66479, 546.44275, 9.22475,   0.00000, 0.00000, 1.37752);
CreateDynamicObject(987, 2366.52905, 546.70770, 9.22475,   0.00000, 0.00000, 1.37752);
CreateDynamicObject(987, 2343.08252, 543.40839, 5.71935,   0.00000, 0.00000, 0.21984);
CreateDynamicObject(987, 2350.40234, 542.33026, 2.10962,   0.00000, 0.00000, 1.37752);
CreateDynamicObject(987, 2367.17822, 546.97687, 3.73188,   0.00000, 0.00000, 219.80077);
CreateDynamicObject(987, 2354.14429, 542.64642, 5.72290,   0.00000, 0.00000, 1.37752);
CreateDynamicObject(987, 2354.14429, 542.64642, 5.72290,   0.00000, 0.00000, 1.37752);
CreateDynamicObject(987, 2354.16406, 542.64374, 0.22617,   0.00000, 0.00000, 1.37752);
CreateDynamicObject(987, 2332.27271, 543.33929, 5.71935,   0.00000, 0.00000, 0.35732);
CreateDynamicObject(987, 2320.50854, 543.69489, 5.71935,   0.00000, 0.00000, 0.35732);
CreateDynamicObject(987, 2310.07007, 543.85358, 5.71935,   0.00000, 0.00000, 0.35732);
CreateDynamicObject(987, 2298.56592, 544.01892, 5.71935,   0.00000, 0.00000, 0.35732);
CreateDynamicObject(987, 2282.72729, 543.82587, 0.87922,   0.00000, 0.00000, 0.35732);
CreateDynamicObject(987, 2288.65625, 543.94397, 5.71935,   0.00000, 0.00000, 0.35732);
CreateDynamicObject(987, 2288.65625, 543.94397, 0.87922,   0.00000, 0.00000, 0.35732);
CreateDynamicObject(3605, 1681.90002, 768.29999, 15.90000,   0.00000, 0.00000, 0.57100);
CreateDynamicObject(3605, 2257.97998, 575.35870, 13.08267,   0.00000, 0.00000, 90.14894);
CreateDynamicObject(14467, 2271.88623, 569.64789, 9.25224,   0.00000, 0.00000, 73.73313);
CreateDynamicObject(14467, 2271.92969, 577.90729, 9.25224,   0.00000, 0.00000, 12.66281);
CreateDynamicObject(9623, 2386.09863, 571.80133, 9.40806,   0.00000, 0.00000, 90.60847);
CreateDynamicObject(987, 2367.17822, 546.97687, 9.07165,   0.00000, 0.00000, 219.80077);
CreateDynamicObject(1212, 2270.59570, 575.07202, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2270.48779, 574.50055, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2270.60425, 574.97015, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2270.53735, 574.76410, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2270.59277, 574.86298, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2270.69238, 574.20947, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2270.67017, 575.25806, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2270.65845, 575.15094, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2270.61963, 573.86340, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1212, 2270.60596, 573.57513, 7.71219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 2270.64795, 573.38440, 8.04131,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, 2273.74756, 575.39142, 6.77215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, 2272.84082, 575.41351, 6.77215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, 2273.60547, 572.97778, 6.77215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, 2273.80029, 573.91901, 6.77215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, 2272.86060, 574.09216, 6.77215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, 2273.09058, 574.93121, 6.77215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, 2272.57129, 573.15668, 6.77215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, 2273.66528, 574.71503, 6.77215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16151, 2249.60034, 563.09308, 8.22467,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1612, 2317.68530, 516.44556, 5.38997,   0.00000, 0.00000, 89.77811)

   	//Cercado Cripz
   CreateDynamicObject(1412, 2281.97412, -1038.50244, 49.80417,   0.00000, 0.00000, 44.79229);
CreateDynamicObject(1412, 2274.42676, -1045.90308, 49.80255,   0.00000, 0.00000, 46.36135);
CreateDynamicObject(1412, 2270.83740, -1049.61780, 49.74599,   0.00000, 0.00000, 45.69354);
CreateDynamicObject(1412, 2267.73169, -1049.38818, 49.78540,   0.00000, 0.00000, 318.12585);
CreateDynamicObject(1412, 2257.85571, -1040.10876, 52.37234,   0.00000, 0.00000, 317.28156);
CreateDynamicObject(1412, 2261.61108, -1043.61133, 51.48675,   0.00000, 0.00000, 316.86737);
CreateDynamicObject(716, 2266.21338, -1049.30688, 48.56420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(716, 2261.88208, -1045.47864, 49.68454,   0.00000, 0.00000, 3.79114);
CreateDynamicObject(1412, 2281.16284, -1035.61987, 50.10861,   0.00000, 0.00000, 289.52533);
CreateDynamicObject(1412, 2279.01074, -1030.82129, 50.43016,   0.00000, 0.00000, 296.19284);
CreateDynamicObject(1412, 2276.92065, -1026.17419, 51.55019,   0.00000, 0.00000, 293.07715);
CreateDynamicObject(1412, 2273.95654, -1022.18353, 52.73424,   0.00000, 0.00000, 318.52460);
CreateDynamicObject(1412, 2270.07520, -1018.81866, 53.72571,   0.00000, 0.00000, 318.61572);
CreateDynamicObject(1412, 2266.37817, -1015.34821, 54.54686,   0.00000, 0.00000, 314.09195);
CreateDynamicObject(1412, 2262.70996, -1011.73535, 55.47706,   0.00000, 0.00000, -44.33998);
CreateDynamicObject(1412, 2258.93237, -1008.26355, 56.41963,   0.00000, 0.00000, -41.28001);
CreateDynamicObject(1412, 2255.09229, -1004.88104, 57.60533,   0.00000, 0.00000, -42.35998);
CreateDynamicObject(1412, 2251.39966, -1005.17786, 57.72348,   0.00000, 0.00000, 49.53498);
//CASA PREMIUM
CreateDynamicObject(3439, 819.14557, -1385.99683, 16.61640,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3439, 813.22382, -1385.60718, 16.61640,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 822.61823, -1386.25647, 13.32140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 810.96808, -1386.09375, 13.40040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 827.53473, -1388.41882, 13.40330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19130, -3650.94141, 7371.44873, -2149.06665,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19130, 816.18494, -1386.23657, 13.48040,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3851, 841.44659, -1385.12085, 19.02520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3851, 830.18091, -1385.05920, 19.02520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3851, 833.96454, -1385.00317, 19.02520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3877, 814.63812, -1386.11804, 14.24780,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 817.81128, -1386.09521, 14.24780,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19366, 4878.33789, 8107.09912, 981.05396,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19366, 836.04193, -1384.44299, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 839.11041, -1384.44812, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 842.26471, -1384.43994, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 845.44519, -1384.44592, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 832.88367, -1384.45593, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 829.69946, -1384.44812, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3851, 819.36957, -1385.16150, 19.02520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2773, 815.36304, -1387.35950, 13.16900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 816.98944, -1387.16821, 13.16900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 816.97729, -1389.08459, 13.16900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 815.38275, -1389.30774, 13.16900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 819.87280, -1370.89929, 22.52388,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14531, 1530.22046, -9738.46484, -5628.67822,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14531, 676.56989, -1461.29370, 500.56360,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(3439, 819.14557, -1385.99683, 16.61640,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3439, 813.22382, -1385.60718, 16.61640,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 822.61823, -1386.25647, 13.32140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 810.96808, -1386.09375, 13.40040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 827.53473, -1388.41882, 13.40330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19130, -3650.94141, 7371.44873, -2149.06665,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19130, 816.18494, -1386.23657, 13.48040,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3851, 841.44659, -1385.12085, 19.02520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3851, 830.18091, -1385.05920, 19.02520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3851, 833.96454, -1385.00317, 19.02520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3877, 814.63812, -1386.11804, 14.24780,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 817.81128, -1386.09521, 14.24780,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19366, 4878.33789, 8107.09912, 981.05396,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19366, 836.04193, -1384.44299, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 839.11041, -1384.44812, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 842.26471, -1384.43994, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 845.44519, -1384.44592, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 832.88367, -1384.45593, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19366, 829.69946, -1384.44812, 14.29710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3851, 819.36957, -1385.16150, 19.02520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2773, 815.36304, -1387.35950, 13.16900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 816.98944, -1387.16821, 13.16900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 816.97729, -1389.08459, 13.16900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 815.38275, -1389.30774, 13.16900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 819.87280, -1370.89929, 22.52388,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14531, 1530.22046, -9738.46484, -5628.67822,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2990, -108.78178, 8437.67090, -1723.72375,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, 680.74640, -1455.35596, 496.94675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, 679.59979, -1455.34949, 496.94675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, 678.47296, -1455.37183, 496.94675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, 677.34985, -1455.36584, 496.94675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, 676.21936, -1455.32080, 496.94675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, 675.07733, -1455.36194, 496.94675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1827, 678.18909, -1458.74634, 496.94583,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1504, 671.58142, -1473.25574, 496.90970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1504, 680.38385, -1473.09094, 496.90970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16151, 680.94489, -1465.22571, 497.29739,   -0.12300, 0.00000, 0.00000);
CreateDynamicObject(1670, 679.87903, -1463.15649, 497.93509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 679.96973, -1465.49744, 497.93509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 679.86078, -1467.05029, 497.93509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 678.16779, -1458.85522, 497.37195,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 680.81757, -1461.98328, 497.93509,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 676.39539, -1450.26099, 497.50970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 676.42841, -1450.74634, 497.50970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 676.40393, -1451.20593, 497.50970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 676.40308, -1451.62769, 497.50970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 676.40302, -1452.06970, 497.50970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 676.37958, -1452.54956, 497.50970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 676.37744, -1453.01111, 497.50970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 673.15057, -1472.05127, 497.42770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11665, 672.83868, -1463.95020, 497.58670,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(1242, 676.29474, -1450.27417, 498.20059,   0.00000, 0.00000, 84.00000);
CreateDynamicObject(1242, 675.76746, -1450.30444, 498.20059,   0.00000, 0.00000, 84.00000);
CreateDynamicObject(1242, 676.24188, -1450.68689, 498.20059,   0.00000, 0.00000, 84.00000);
CreateDynamicObject(1242, 675.73254, -1450.70752, 498.20059,   0.00000, 0.00000, 84.00000);
CreateDynamicObject(2043, 676.40607, -1450.92871, 498.12079,   0.00000, 0.00000, -84.00000);
CreateDynamicObject(2043, 676.41797, -1451.21118, 498.12079,   0.00000, 0.00000, -84.00000);
CreateDynamicObject(2043, 675.76593, -1450.98645, 498.12079,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(356, 675.95258, -1451.52710, 498.08090,   -78.00000, 14.00000, -76.00000);
CreateDynamicObject(351, 675.71503, -1452.52905, 498.04169,   69.00000, 11.00000, 91.00000);
CreateDynamicObject(19172, 681.92871, -1458.90063, 498.96051,   0.00000, 0.00000, -89.00000);
CreateDynamicObject(19174, 677.28784, -1454.96228, 499.47049,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19164, 674.16052, -1450.11047, 498.26031,   88.00000, 2.00000, 0.00000);
CreateDynamicObject(1252, 676.56763, -1453.75269, 497.33881,   0.00000, 0.00000, -84.00000);
CreateDynamicObject(1252, 676.55359, -1454.05469, 497.33881,   0.00000, 0.00000, -84.00000);
CreateDynamicObject(1252, 676.55774, -1454.33508, 497.33881,   0.00000, 0.00000, -84.00000);
CreateDynamicObject(1252, 676.58276, -1453.46887, 497.33881,   0.00000, 0.00000, -84.00000);
CreateDynamicObject(19058, 672.44696, -1460.58350, 497.58740,   0.00000, 0.00000, 2.00000);
CreateDynamicObject(19054, 672.38635, -1459.42456, 497.55530,   0.00000, 0.00000, 0.00000);

   	//ALQAEDA
CreateDynamicObject(3280, 299.47760, 1818.62317, 3.70310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8572, 263.92490, 1824.27686, 1.82780,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1499, 233.37805, 1824.23877, 6.31040,   0.00000, 0.00000, -87.00000);
CreateDynamicObject(1499, 233.51950, 1821.21472, 6.31040,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(1849, 276.98920, 1852.68665, 7.75250,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1849, 280.91757, 1856.90894, 7.75250,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3014, 280.51801, 1853.42578, 7.96680,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3014, 280.23303, 1852.82910, 7.96680,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3014, 280.32669, 1853.15234, 8.44680,   0.00000, 0.00000, -25.00000);
CreateDynamicObject(349, 281.08014, 1858.26611, 8.93120,   60.00000, 4.00000, 95.00000);
CreateDynamicObject(349, 280.96643, 1856.71631, 8.93120,   60.00000, 4.00000, 95.00000);
CreateDynamicObject(349, 280.96378, 1856.41895, 8.07120,   60.00000, 4.00000, 95.00000);
CreateDynamicObject(2043, 281.04559, 1855.36780, 9.02540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2043, 281.02841, 1858.83496, 9.48540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2043, 280.85916, 1855.22888, 8.18540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 281.03644, 1857.57813, 9.39630,   49.00000, -10.00000, 90.00000);
CreateDynamicObject(356, 281.02982, 1857.24048, 8.55630,   49.00000, -10.00000, 90.00000);
CreateDynamicObject(2043, 281.14099, 1858.83496, 8.60540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(341, 281.14267, 1855.83521, 8.64710,   54.00000, 25.00000, 90.00000);
CreateDynamicObject(353, 280.87341, 1854.89587, 8.54710,   25.00000, -4.00000, 90.00000);
CreateDynamicObject(355, 280.95209, 1858.20642, 8.16100,   0.00000, -3.00000, 90.00000);
CreateDynamicObject(359, 280.90170, 1855.56824, 9.38510,   62.00000, -9.00000, 90.00000);
CreateDynamicObject(356, 280.93799, 1856.50208, 9.39630,   49.00000, -10.00000, 90.00000);
CreateDynamicObject(353, 277.85065, 1852.60547, 9.40420,   47.00000, -11.00000, 9.00000);
CreateDynamicObject(353, 275.80911, 1852.60486, 8.54420,   47.00000, -11.00000, 9.00000);
CreateDynamicObject(353, 278.73880, 1852.54492, 8.10420,   47.02000, -11.00000, 9.00000);
CreateDynamicObject(2043, 278.83649, 1852.63501, 9.46510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2043, 276.21384, 1852.52917, 9.02510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2043, 277.11182, 1852.48621, 8.60510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2043, 274.93439, 1852.52625, 8.18510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(349, 274.87549, 1852.60022, 8.93470,   60.00000, 0.00000, 0.00000);
CreateDynamicObject(349, 275.44403, 1852.69849, 9.37470,   60.00000, 0.00000, 0.00000);
CreateDynamicObject(349, 278.14731, 1852.63977, 8.51470,   60.00000, 0.00000, 0.00000);
CreateDynamicObject(349, 275.82193, 1852.65063, 8.07470,   60.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 278.49686, 1852.55823, 8.99450,   28.00000, -5.00000, 0.00000);
CreateDynamicObject(356, 276.86740, 1852.49243, 9.43450,   28.00000, -5.00000, 0.00000);
CreateDynamicObject(356, 277.50549, 1852.54248, 8.15450,   28.00000, -5.00000, 0.00000);
CreateDynamicObject(356, 274.84409, 1852.41626, 8.57450,   28.00000, -5.00000, 0.00000);
CreateDynamicObject(359, 277.39011, 1852.56555, 8.97460,   41.00000, 0.00000, 0.00000);
CreateDynamicObject(3280, 299.47760, 1818.62317, 3.70310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8572, 263.92490, 1824.27686, 1.82780,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1849, 276.98920, 1852.68665, 7.75250,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1849, 280.91757, 1856.90894, 7.75250,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(349, 281.08014, 1858.26611, 8.93120,   60.00000, 4.00000, 95.00000);
CreateDynamicObject(349, 280.96643, 1856.71631, 8.93120,   60.00000, 4.00000, 95.00000);
CreateDynamicObject(349, 280.96378, 1856.41895, 8.07120,   60.00000, 4.00000, 95.00000);
CreateDynamicObject(2043, 281.04559, 1855.36780, 9.02540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2043, 281.02841, 1858.83496, 9.48540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2043, 280.85916, 1855.22888, 8.18540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 281.03644, 1857.57813, 9.39630,   49.00000, -10.00000, 90.00000);
CreateDynamicObject(356, 281.02982, 1857.24048, 8.55630,   49.00000, -10.00000, 90.00000);
CreateDynamicObject(2043, 281.14099, 1858.83496, 8.60540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(341, 281.14267, 1855.83521, 8.64710,   54.00000, 25.00000, 90.00000);
CreateDynamicObject(355, 280.95209, 1858.20642, 8.16100,   0.00000, -3.00000, 90.00000);
CreateDynamicObject(359, 280.90170, 1855.56824, 9.38510,   62.00000, -9.00000, 90.00000);
CreateDynamicObject(356, 280.93799, 1856.50208, 9.39630,   49.00000, -10.00000, 90.00000);
CreateDynamicObject(353, 277.85065, 1852.60547, 9.40420,   47.00000, -11.00000, 9.00000);
CreateDynamicObject(353, 275.80911, 1852.60486, 8.54420,   47.00000, -11.00000, 9.00000);
CreateDynamicObject(353, 278.73880, 1852.54492, 8.10420,   47.02000, -11.00000, 9.00000);
CreateDynamicObject(2043, 278.83649, 1852.63501, 9.46510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2043, 276.21384, 1852.52917, 9.02510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2043, 277.11182, 1852.48621, 8.60510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2043, 274.93439, 1852.52625, 8.18510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(349, 274.87549, 1852.60022, 8.93470,   60.00000, 0.00000, 0.00000);
CreateDynamicObject(349, 275.44403, 1852.69849, 9.37470,   60.00000, 0.00000, 0.00000);
CreateDynamicObject(349, 278.14731, 1852.63977, 8.51470,   60.00000, 0.00000, 0.00000);
CreateDynamicObject(349, 275.82193, 1852.65063, 8.07470,   60.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 278.49686, 1852.55823, 8.99450,   28.00000, -5.00000, 0.00000);
CreateDynamicObject(356, 276.86740, 1852.49243, 9.43450,   28.00000, -5.00000, 0.00000);
CreateDynamicObject(356, 277.50549, 1852.54248, 8.15450,   28.00000, -5.00000, 0.00000);
CreateDynamicObject(356, 274.84409, 1852.41626, 8.57450,   28.00000, -5.00000, 0.00000);
CreateDynamicObject(359, 277.39011, 1852.56555, 8.97460,   41.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 275.07642, 1858.28992, 7.75446,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1432, 271.39325, 1854.72180, 7.75446,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 279.92050, 1862.51318, 8.15150,   11.00000, -1.00000, 90.00000);
CreateDynamicObject(1271, 280.55103, 1862.40625, 8.09460,   0.00000, 0.00000, -46.00000);
CreateDynamicObject(1271, 280.11038, 1863.22864, 8.09460,   0.00000, 0.00000, -18.00000);
CreateDynamicObject(1271, 280.61829, 1862.94934, 8.77460,   0.00000, 0.00000, -18.00000);
CreateDynamicObject(1550, 280.87619, 1861.89148, 8.15150,   11.00000, -1.00000, 90.00000);
CreateDynamicObject(1550, 279.64523, 1863.39319, 8.15150,   11.00000, -1.00000, 90.00000);
CreateDynamicObject(1512, 275.40106, 1858.37561, 8.54860,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(1512, 275.09317, 1858.04395, 8.54860,   0.00000, 0.00000, 149.00000);
CreateDynamicObject(1520, 275.07697, 1858.63330, 8.42860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(346, 274.72321, 1858.34717, 8.40850,   -84.00000, 0.00000, 0.00000);
CreateDynamicObject(346, 275.57574, 1858.12158, 8.40850,   -84.00000, 200.00000, 0.00000);
CreateDynamicObject(352, 271.00562, 1854.56104, 8.40830,   -94.00000, 55.00000, -236.00000);
CreateDynamicObject(352, 271.30008, 1854.88037, 8.40830,   -88.00000, 44.00000, -20.00000);
CreateDynamicObject(1543, 271.71091, 1854.72791, 8.36820,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1543, 271.23502, 1854.37793, 8.36820,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 271.52811, 1855.22058, 8.36833,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1654, 280.65411, 1853.48413, 8.28940,   -90.00000, 0.00000, 222.00000);
CreateDynamicObject(1654, 280.46521, 1853.08643, 8.76940,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 280.17010, 1863.26917, 8.81150,   11.00000, -1.00000, 90.00000);
CreateDynamicObject(1717, 264.35898, 1857.15686, 7.75030,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1713, 266.46649, 1852.95837, 7.74930,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1713, 269.15717, 1852.92358, 7.74930,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1808, 281.00803, 1859.93945, 7.73160,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2985, 277.53354, 1863.40454, 7.75260,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2387, 264.55981, 1863.04529, 7.75376,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2377, 264.46591, 1861.85388, 9.29380,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2389, 264.44467, 1861.19397, 9.37110,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2390, 264.39584, 1861.95898, 8.33320,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2401, 264.51349, 1861.17664, 8.40200,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2669, 268.47769, 1868.59192, 9.08430,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2678, 267.72202, 1865.95581, 8.94420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2679, 269.23962, 1865.94031, 8.95570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 281.17950, 1867.34656, 8.35330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 281.17297, 1867.34644, 9.59330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 281.17950, 1867.34656, 10.83330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 279.38150, 1867.35754, 8.35330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 279.38211, 1867.33936, 9.59330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 279.38211, 1867.33936, 9.59330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 279.38211, 1867.35938, 10.83330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 277.59937, 1864.91467, 9.49330,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19304, 281.15411, 1871.48486, 8.35330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 281.15411, 1871.48486, 9.59330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 281.15411, 1871.48486, 10.83330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 275.85410, 1871.48486, 8.35330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 275.85410, 1871.48486, 9.59330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 275.85410, 1871.48486, 10.83330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 270.59409, 1871.48486, 8.35330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 270.61411, 1871.48486, 9.59330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 272.39410, 1871.48486, 10.83330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 278.55411, 1871.48486, 10.83330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 275.86227, 1872.10120, 9.49330,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19304, 275.86230, 1873.32117, 9.49330,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19304, 275.86230, 1874.32117, 9.49330,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(1224, 271.37631, 1865.02173, 8.29480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1224, 272.91653, 1865.16663, 8.29480,   2.00000, 0.00000, -70.00000);
CreateDynamicObject(1224, 272.22748, 1865.07239, 9.45480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 274.83594, 1871.35181, 7.75570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 271.38641, 1871.34888, 7.75570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 276.62640, 1871.34888, 7.75570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 282.13132, 1871.33972, 7.75570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 282.06229, 1863.30969, 7.75570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 278.32996, 1863.54126, 7.75570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2669, 268.66965, 1872.65332, 9.08430,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1729, 272.31046, 1866.15942, 7.75380,   0.00000, 0.00000, 185.00000);
CreateDynamicObject(1717, 270.91577, 1870.45886, 7.75030,   0.00000, 0.00000, -49.00000);
CreateDynamicObject(16613, 357.15521, 2028.84094, 24.12410,   0.00000, 0.00000, 244.00000);
CreateDynamicObject(16782, 211.32571, 1827.04614, 7.60160,   0.00000, 0.00000, -28.00000);
CreateDynamicObject(16782, 211.39983, 1818.19250, 7.60160,   0.00000, 0.00000, 28.00000);
CreateDynamicObject(1714, 216.04242, 1822.84546, 5.40860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1704, 219.94212, 1822.23779, 5.41020,   0.00000, 0.00000, -98.00000);
CreateDynamicObject(1704, 219.58690, 1824.59497, 5.41020,   0.00000, 0.00000, -69.00000);
CreateDynamicObject(1963, 217.70294, 1823.00732, 5.74930,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1670, 217.57437, 1823.65430, 6.17240,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(3279, 267.06250, 1895.29688, 16.82031,   356.85840, 0.00000, 3.14159);
CreateDynamicObject(2238, 217.73657, 1824.07336, 6.55240,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2282, 215.99841, 1815.24963, 7.73910,   0.00000, 0.00000, 142.00000);
CreateDynamicObject(3471, 215.82642, 1826.67639, 6.30240,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3471, 216.04572, 1819.01001, 6.30240,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8263, 389.48279, 1954.83044, 19.67840,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(8263, 328.32123, 2118.45532, 19.67840,   0.00000, 0.00000, 181.00000);
CreateDynamicObject(8263, 208.62758, 2117.92163, 19.67840,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8263, 148.75298, 2058.31885, 19.67840,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8263, 57.53630, 1936.21643, 19.67840,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8263, -13.63243, 1877.57117, 19.67840,   0.00000, 0.00000, -101.00000);
CreateDynamicObject(8263, -36.47372, 1759.91052, 19.67840,   0.00000, 0.00000, -101.00000);
CreateDynamicObject(8263, 10.34933, 1687.80701, 19.67840,   0.00000, 0.00000, -13.00000);
CreateDynamicObject(8263, 127.10936, 1659.63745, 19.67840,   0.00000, 0.00000, -14.00000);
CreateDynamicObject(8263, 243.49472, 1658.50659, 19.67840,   0.00000, 0.00000, 13.00000);
CreateDynamicObject(8263, 319.12817, 1729.18616, 19.67840,   0.00000, 0.00000, 73.00000);
CreateDynamicObject(8263, 362.03745, 1840.74548, 19.67840,   0.00000, 0.00000, 65.00000);
CreateDynamicObject(8210, 391.50171, 2039.66309, 19.67840,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8210, 389.99854, 2091.10376, 19.67840,   0.00000, 0.00000, 93.00000);
CreateDynamicObject(3279, 384.47021, 2115.33789, 16.82031,   356.85840, 0.00000, 3.14159);
CreateDynamicObject(3881, 125.71303, 1939.00500, 20.08910,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3881, 144.12199, 1938.89209, 20.06910,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8263, 69.49630, 1936.21643, 19.67840,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8263, 148.77299, 1998.37878, 19.67840,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3928, 276.33490, 1960.08521, 16.64920,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3928, 276.18375, 1947.75171, 16.64920,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3928, 276.24625, 1935.50854, 16.64920,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2929, 276.71170, 1827.18652, 8.50350,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(2929, 278.95309, 1827.12341, 8.50350,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(2929, 294.73306, 1838.98499, 8.34200,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(2929, 294.77029, 1840.78406, 8.34200,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(2929, 316.53610, 1840.69897, 8.53910,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(2929, 316.45654, 1838.46521, 8.53910,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(2929, 316.48920, 1856.27527, 8.60340,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(2929, 316.55817, 1854.29712, 8.60340,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(14455, 217.71034, 1831.34387, 6.36620,   0.00000, 0.00000, -149.00000);
CreateDynamicObject(2100, 215.73227, 1814.95776, 5.40660,   0.00000, 0.00000, 145.00000);
CreateDynamicObject(2921, 228.92159, 1820.21509, 8.39750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 216.80107, 1822.09460, 5.84790,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2332, 211.88837, 1821.28027, 5.83890,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2332, 211.88083, 1824.13110, 5.83890,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1829, 212.60487, 1822.70801, 5.84070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1892, 230.56300, 1823.10095, 6.40880,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1892, 230.56300, 1821.50098, 6.40880,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1985, 267.94263, 1864.31958, 10.60770,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(1985, 269.33429, 1864.45264, 10.60770,   0.00000, 0.00000, 40.00000);
CreateDynamicObject(2611, 272.71085, 1863.71082, 9.46972,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1676, 284.05045, 1819.29260, 18.00750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16107, 280.05624, 1812.91357, 16.62560,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8674, 268.34589, 1886.90430, 16.52850,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 268.34589, 1884.02429, 16.52850,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 268.34589, 1881.12427, 16.52850,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(11504, 97.83771, 1671.71887, 16.62060,   0.00000, 0.00000, 166.00000);

   	//MAPEO AYUNTA
   	CreateDynamicObject(3851, 1489.38, -1751.41, 16.31,   0.00, 0.00, 89.88);
CreateDynamicObject(3851, 1472.40, -1751.34, 20.29,   0.00, 0.00, 89.88);
CreateDynamicObject(3851, 1472.40, -1751.34, 24.24,   0.00, 0.00, 89.88);
CreateDynamicObject(3851, 1472.40, -1751.34, 16.31,   0.00, 0.00, 89.88);
CreateDynamicObject(3851, 1489.38, -1751.41, 20.26,   0.00, 0.00, 89.88);
CreateDynamicObject(3851, 1489.38, -1751.41, 24.22,   0.00, 0.00, 89.88);
CreateDynamicObject(3877, 1478.37, -1737.85, 14.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3877, 1483.43, -1737.88, 14.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1476.25, -1737.46, 13.07,   0.00, 0.00, -90.30);
CreateDynamicObject(3850, 1472.80, -1737.45, 13.07,   0.00, 0.00, -90.30);
CreateDynamicObject(3850, 1469.34, -1737.43, 13.07,   0.00, 0.00, -90.30);
CreateDynamicObject(3850, 1465.90, -1737.42, 13.07,   0.00, 0.00, -90.06);
CreateDynamicObject(3850, 1462.45, -1737.42, 13.07,   0.00, 0.00, -90.30);
CreateDynamicObject(3850, 1460.75, -1737.41, 13.07,   0.00, 0.00, -90.30);
CreateDynamicObject(3850, 1459.02, -1739.12, 13.07,   0.00, 0.00, -180.84);
CreateDynamicObject(3850, 1458.97, -1742.53, 13.07,   0.00, 0.00, -180.84);
CreateDynamicObject(3850, 1458.91, -1745.95, 13.07,   0.00, 0.00, -180.84);
CreateDynamicObject(3850, 1458.87, -1749.38, 13.07,   0.00, 0.00, -180.84);
CreateDynamicObject(3850, 1485.51, -1737.47, 13.05,   0.00, 0.00, 90.12);
CreateDynamicObject(3850, 1488.94, -1737.46, 13.05,   0.00, 0.00, 90.12);
CreateDynamicObject(3850, 1492.36, -1737.47, 13.05,   0.00, 0.00, 90.12);
CreateDynamicObject(3850, 1495.80, -1737.47, 13.05,   0.00, 0.00, 90.12);
CreateDynamicObject(3850, 1499.24, -1737.46, 13.05,   0.00, 0.00, 90.12);
CreateDynamicObject(3850, 1501.42, -1737.48, 13.05,   0.00, 0.00, 90.12);
CreateDynamicObject(3850, 1503.10, -1739.20, 13.05,   0.00, 0.00, -0.18);
CreateDynamicObject(3850, 1503.09, -1742.63, 13.05,   0.00, 0.00, -0.18);
CreateDynamicObject(3850, 1503.06, -1746.06, 13.05,   0.00, 0.00, -0.18);
CreateDynamicObject(3850, 1503.05, -1749.50, 13.05,   0.00, 0.00, -0.18);
CreateDynamicObject(19473, 1967.16, -1685.96, 14.72,   0.00, 0.00, 0.00);
CreateDynamicObject(19473, 1967.20, -1684.14, 14.72,   0.00, 0.00, 0.00);
CreateDynamicObject(19473, 1967.13, -1682.34, 14.72,   0.00, 0.00, 0.00);
   	//CASA FRANKLIN STARK
CreateDynamicObject(3606, 280.46954, -1278.57666, 76.21860,   0.00000, 0.00000, 213.00000);
CreateDynamicObject(3604, 244.49063, -1283.48694, 75.42630,   0.00000, 0.00000, 125.00000);
CreateDynamicObject(3749, 280.28467, -1259.99390, 78.09270,   0.00000, 0.00000, 139.00000);
CreateDynamicObject(987, 292.99780, -1277.82458, 74.88220,   0.00000, 0.00000, 116.00000);
CreateDynamicObject(987, 283.39944, -1284.92126, 74.88220,   0.00000, 0.00000, 36.00000);
CreateDynamicObject(987, 273.68839, -1291.65173, 74.88220,   0.00000, 0.00000, 36.00000);
CreateDynamicObject(987, 264.00516, -1298.70386, 74.88220,   0.00000, 0.00000, 36.00000);
CreateDynamicObject(987, 254.36012, -1305.78491, 74.88220,   0.00000, 0.00000, 36.00000);
CreateDynamicObject(700, 270.81320, -1285.05786, 73.41406,   356.85840, 0.00000, -2.00713);
CreateDynamicObject(987, 247.00050, -1296.44067, 74.84220,   0.00000, 0.00000, -52.00000);
CreateDynamicObject(987, 239.68542, -1286.92688, 74.84220,   0.00000, 0.00000, -52.00000);
CreateDynamicObject(987, 234.44151, -1280.38257, 74.84220,   0.00000, 0.00000, -52.00000);
CreateDynamicObject(987, 241.80537, -1271.14319, 74.84220,   0.00000, 0.00000, -129.00000);
CreateDynamicObject(987, 247.75529, -1265.82422, 74.84220,   0.00000, 0.00000, -136.00000);
CreateDynamicObject(987, 260.39938, -1255.97131, 74.84220,   0.00000, 0.00000, 218.00000);
CreateDynamicObject(987, 275.14093, -1253.45862, 72.92220,   0.00000, 0.00000, 182.00000);
CreateDynamicObject(987, 262.98294, -1254.00439, 74.84220,   0.00000, 0.00000, 218.00000);
CreateDynamicObject(987, 253.78000, -1261.05371, 73.34220,   0.00000, 0.00000, -140.00000);
CreateDynamicObject(620, 287.79144, -1268.80505, 71.30469,   3.14159, 0.00000, 2.48348);
CreateDynamicObject(1281, 268.38739, -1288.56653, 73.75320,   0.00000, 0.00000, -56.00000);
CreateDynamicObject(3934, 258.93729, -1293.29565, 72.96260,   0.00000, 0.00000, 37.00000);
CreateDynamicObject(3279, 262.30774, -1260.83301, 72.74640,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(355, 278.18509, -1275.20728, 76.28530,   0.00000, 0.00000, 18.00000);
   	//CASA MARIANO
   	CreateDynamicObject(3749, 1056.90, -625.77, 120.34,   0.00, 0.00, 354.69);
CreateDynamicObject(987, 1072.02, -635.09, 114.29,   0.00, 0.00, 118.00);
CreateDynamicObject(987, 1072.02, -635.09, 116.89,   0.00, 0.00, 118.00);
CreateDynamicObject(987, 1072.96, -646.67, 115.42,   0.00, 0.00, 96.22);
CreateDynamicObject(987, 1072.96, -646.67, 116.85,   0.00, 0.00, 96.22);
CreateDynamicObject(987, 1074.26, -658.52, 115.18,   0.00, 0.00, 96.22);
CreateDynamicObject(987, 1074.26, -658.52, 116.81,   0.00, 0.00, 96.22);
CreateDynamicObject(987, 1062.54, -660.44, 115.38,   0.00, 0.00, 10.00);
CreateDynamicObject(987, 1062.54, -660.44, 116.82,   0.00, 0.00, 10.00);
CreateDynamicObject(987, 1051.35, -663.06, 116.85,   0.00, 0.00, 13.19);
CreateDynamicObject(987, 1039.72, -665.71, 116.85,   0.00, 0.00, 13.19);
CreateDynamicObject(987, 1028.03, -668.53, 116.85,   0.00, 0.00, 13.19);
CreateDynamicObject(987, 1020.62, -659.24, 116.85,   0.00, 0.00, -51.00);
CreateDynamicObject(987, 1020.62, -659.24, 121.88,   0.00, 0.00, -51.00);
CreateDynamicObject(987, 1028.03, -668.53, 121.87,   0.00, 0.00, 13.19);
CreateDynamicObject(987, 1039.72, -665.71, 121.80,   0.00, 0.00, 13.19);
CreateDynamicObject(987, 1051.35, -663.06, 121.76,   0.00, 0.00, 13.19);
CreateDynamicObject(987, 1062.54, -660.44, 121.77,   0.00, 0.00, 10.00);
CreateDynamicObject(987, 1013.80, -650.02, 121.88,   0.00, 0.00, 307.68);
CreateDynamicObject(987, 1008.04, -642.45, 121.88,   0.00, 0.00, 307.68);
CreateDynamicObject(987, 1047.51, -623.32, 116.37,   0.00, 0.00, 195.98);
CreateDynamicObject(987, 1036.32, -626.73, 116.37,   0.00, 0.00, 195.98);
CreateDynamicObject(987, 1024.89, -629.95, 116.37,   0.00, 0.00, 195.98);
CreateDynamicObject(987, 1015.12, -632.81, 116.37,   0.00, 0.00, 195.98);
CreateDynamicObject(987, 1003.80, -635.82, 116.37,   0.00, 0.00, 305.00);
CreateDynamicObject(987, 1003.80, -635.82, 119.38,   0.00, 0.00, 305.00);
CreateDynamicObject(987, 1015.12, -632.81, 119.30,   0.00, 0.00, 195.98);
CreateDynamicObject(987, 1024.89, -629.95, 119.37,   0.00, 0.00, 195.98);
CreateDynamicObject(987, 1036.32, -626.73, 119.32,   0.00, 0.00, 195.98);
CreateDynamicObject(987, 1047.51, -623.32, 119.33,   0.00, 0.00, 195.98);
CreateDynamicObject(10009, 1044.36, -655.60, 123.13,   0.00, 0.00, 83.10);
CreateDynamicObject(3472, 1067.21, -634.70, 114.20,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1068.68, -647.05, 114.20,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1066.49, -654.57, 114.20,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1042.26, -628.93, 113.04,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1033.92, -632.62, 113.04,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1013.04, -642.07, 116.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1026.55, -650.01, 116.52,   0.00, 0.00, 0.00);
CreateDynamicObject(12842, 1018.91, -641.21, 120.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2669, 1017.21, -648.12, 120.85,   0.00, 0.00, 106.08);
CreateDynamicObject(2669, 1018.12, -651.00, 120.86,   0.00, 0.00, 106.08);

  //CASA GIORGIO+
  CreateDynamicObject(9272, -2633.19531, 2365.92188, 14.36719,   356.85840, 0.00000, 3.14159);
CreateDynamicObject(9258, -2631.03906, 2314.31250, 11.11719,   356.85840, 0.00000, 3.14159);
CreateDynamicObject(9324, -2477.17627, 2456.01880, 21.53906,   3.14159, 0.00000, 2.95827);
CreateDynamicObject(9310, -2475.43750, 2409.91406, 21.57031,   3.14159, 0.00000, 2.61799);
CreateDynamicObject(9270, -2588.47656, 2303.51563, 11.21875,   3.14159, 0.00000, 3.06167);
CreateDynamicObject(0, 985.53912, -683.66412, 126.25780,   3.14160, 0.00000, 2.59050);
CreateDynamicObject(3605, 1520.47607, 751.12982, 16.01781,   0.00000, 0.00000, 359.77576);
CreateDynamicObject(3604, 1461.88928, 758.63361, 12.57289,   0.00000, 0.00000, 358.14651);
CreateDynamicObject(3604, 1475.18311, 758.05115, 12.60237,   0.00000, 0.00000, 356.83090);
CreateDynamicObject(3604, 1488.69812, 757.38782, 12.46529,   0.00000, 0.00000, 357.72226);
CreateDynamicObject(759, -6879.03467, 2801.85376, -5560.03271,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1458.61487, 664.91443, 9.81481,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1459.23877, 667.30670, 9.88303,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1459.91016, 669.86432, 9.88303,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1460.43115, 672.54724, 9.82000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1460.81091, 674.79138, 9.83576,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1461.77039, 676.55981, 9.85151,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1462.61609, 678.53241, 9.83284,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1463.96533, 680.34589, 9.81808,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1465.22546, 682.30554, 9.81815,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1466.95801, 683.94495, 9.81844,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1468.15112, 685.80792, 9.81532,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1470.16895, 688.15576, 9.81531,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1471.89905, 689.98157, 9.81522,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1474.43713, 691.82733, 9.81540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1476.97803, 693.48505, 9.81557,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1479.39868, 694.41534, 9.81463,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1481.36646, 695.12836, 9.81445,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1483.89819, 695.87518, 9.81448,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1486.59375, 696.47534, 9.81364,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1489.49829, 696.03607, 9.81318,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2000, 1505.95105, 735.99158, 9.81215,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1491.39758, 695.24005, 9.81404,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1494.31689, 695.30035, 9.80261,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1497.88599, 694.87775, 9.80107,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 9804.43066, 4876.81592, -3701.32471,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1500.50183, 693.69562, 9.80329,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1504.01855, 692.30157, 9.79951,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1506.89734, 690.12964, 9.79869,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1509.64087, 687.69354, 9.79175,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1510.64050, 684.81738, 9.80132,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 12103.21582, 1484.09009, -3419.78589,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 11115.09961, 1403.85828, -3109.24756,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1512.84692, 682.04669, 9.79407,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1514.72253, 677.55096, 9.85548,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1515.24780, 673.62152, 9.84220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1515.75757, 671.81049, 9.83941,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1516.60840, 669.49658, 9.80247,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(759, 1517.10840, 666.21375, 9.81414,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16776, 1430.46594, 669.63104, 9.76197,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16776, 1545.11230, 669.75409, 9.79243,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1294, 1544.92969, 661.67969, 14.27344,   3.14159, 0.00000, 1.57079);
CreateDynamicObject(1294, 1453.21216, 754.04315, 9.79999,   0.00000, 0.00000, 6.09011);
   	//BANCO EVAN
   	CreateDynamicObject(3475,311.7999900,-1620.0999800,34.7000000,0.0000000,0.0000000,180.0000000); //object(vgsn_fncelec_pst) (1)
CreateDynamicObject(3475,300.5000000,-1616.1999500,34.6000000,0.0000000,0.0000000,84.0000000); //object(vgsn_fncelec_pst) (2)
CreateDynamicObject(3475,303.0000000,-1608.0000000,34.5000000,0.0000000,0.0000000,266.0000000); //object(vgsn_fncelec_pst) (3)
CreateDynamicObject(3475,308.7999900,-1608.5000000,34.6000000,0.0000000,0.0000000,268.0000000); //object(vgsn_fncelec_pst) (4)
CreateDynamicObject(3475,311.7000100,-1626.0000000,34.7000000,0.0000000,0.0000000,180.0000000); //object(vgsn_fncelec_pst) (5)
CreateDynamicObject(3475,309.2999900,-1617.0000000,34.7000000,0.0000000,0.0000000,266.0000000); //object(vgsn_fncelec_pst) (6)
CreateDynamicObject(3475,312.1000100,-1605.3000500,35.4000000,0.0000000,0.0000000,182.0000000); //object(vgsn_fncelec_pst) (7)
CreateDynamicObject(3475,311.8999900,-1599.3000500,35.3000000,0.0000000,0.0000000,180.0000000); //object(vgsn_fncelec_pst) (8)
CreateDynamicObject(3475,308.7999900,-1595.4000200,35.1000000,0.0000000,0.0000000,252.0000000); //object(vgsn_fncelec_pst) (9)
CreateDynamicObject(3475,303.0000000,-1594.1999500,34.8000000,0.0000000,0.0000000,266.0000000); //object(vgsn_fncelec_pst) (10)
CreateDynamicObject(3475,297.1000100,-1593.5000000,34.6000000,0.0000000,0.0000000,262.0000000); //object(vgsn_fncelec_pst) (11)
CreateDynamicObject(3475,291.2999900,-1592.6999500,34.0000000,0.0000000,0.0000000,260.0000000); //object(vgsn_fncelec_pst) (12)
CreateDynamicObject(3475,288.0000000,-1594.8000500,34.2000000,0.0000000,0.0000000,352.0000000); //object(vgsn_fncelec_pst) (13)
CreateDynamicObject(3475,286.8999900,-1600.8000500,34.2000000,0.0000000,0.0000000,350.0000000); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,309.0000000,-1628.4000200,34.7000000,0.0000000,0.0000000,84.0000000); //object(vgsn_fncelec_pst) (15)
CreateDynamicObject(3475,303.1000100,-1627.6999500,34.7000000,0.0000000,0.0000000,84.0000000); //object(vgsn_fncelec_pst) (16)
CreateDynamicObject(3475,297.6000100,-1626.1999500,34.7000000,0.0000000,0.0000000,70.0000000); //object(vgsn_fncelec_pst) (17)
CreateDynamicObject(3475,284.3999900,-1617.9000200,34.4000000,0.0000000,0.0000000,356.0000000); //object(vgsn_fncelec_pst) (18)
CreateDynamicObject(3475,284.0000000,-1624.0000000,34.4000000,0.0000000,0.0000000,356.0000000); //object(vgsn_fncelec_pst) (19)
CreateDynamicObject(3475,286.5000000,-1627.3000500,34.7000000,0.0000000,0.0000000,84.0000000); //object(vgsn_fncelec_pst) (20)
CreateDynamicObject(3475,292.2000100,-1626.9000200,34.7000000,0.0000000,0.0000000,104.0000000); //object(vgsn_fncelec_pst) (21)
CreateDynamicObject(805,310.5000000,-1628.9000200,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (1)
CreateDynamicObject(805,306.8999900,-1628.5000000,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (2)
CreateDynamicObject(805,304.2000100,-1627.9000200,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (3)
CreateDynamicObject(805,300.8999900,-1627.5000000,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (4)
CreateDynamicObject(805,297.7999900,-1627.0999800,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (5)
CreateDynamicObject(805,294.8999900,-1626.8000500,33.4000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (6)
CreateDynamicObject(805,292.5000000,-1627.4000200,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (7)
CreateDynamicObject(805,289.7000100,-1627.9000200,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (8)
CreateDynamicObject(805,287.6000100,-1628.3000500,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (9)
CreateDynamicObject(805,285.1000100,-1628.0000000,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (10)
CreateDynamicObject(805,283.5000000,-1625.8000500,33.4000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (11)
CreateDynamicObject(805,283.7000100,-1622.5000000,33.2000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (12)
CreateDynamicObject(805,283.6000100,-1619.8000500,33.2000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (13)
CreateDynamicObject(805,284.0000000,-1616.3000500,33.2000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (14)
CreateDynamicObject(805,299.5000000,-1618.6999500,33.4000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (15)
CreateDynamicObject(805,302.7000100,-1619.0999800,33.4000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (16)
CreateDynamicObject(805,306.5000000,-1619.8000500,33.4000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (17)
CreateDynamicObject(805,309.6000100,-1620.4000200,33.5000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (18)
CreateDynamicObject(805,310.2000100,-1607.3000500,33.4000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (19)
CreateDynamicObject(805,308.0000000,-1606.0000000,33.3000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (20)
CreateDynamicObject(805,304.3999900,-1605.9000200,33.3000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (21)
CreateDynamicObject(805,301.2999900,-1606.5000000,33.2000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (22)
CreateDynamicObject(805,310.7999900,-1596.0000000,33.9000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (23)
CreateDynamicObject(805,307.5000000,-1595.5999800,33.4000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (24)
CreateDynamicObject(805,304.3999900,-1595.1999500,33.1000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (25)
CreateDynamicObject(805,301.2000100,-1594.6999500,33.0000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (26)
CreateDynamicObject(805,298.0000000,-1594.3000500,32.9000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (27)
CreateDynamicObject(805,295.7999900,-1594.0999800,32.8000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (28)
CreateDynamicObject(805,293.2000100,-1593.3000500,32.7000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (29)
CreateDynamicObject(805,290.0000000,-1592.0999800,33.6000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (30)
CreateDynamicObject(805,287.8999900,-1592.5999800,32.9000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (31)
CreateDynamicObject(805,287.2000100,-1595.4000200,33.0000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (32)
CreateDynamicObject(805,286.2000100,-1598.0999800,33.0000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (33)
CreateDynamicObject(805,285.7999900,-1601.5000000,33.0000000,0.0000000,0.0000000,0.0000000); //object(genveg_bush11) (34)
CreateDynamicObject(870,297.2000100,-1623.5999800,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (1)
CreateDynamicObject(870,297.7999900,-1620.5000000,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (2)
CreateDynamicObject(870,299.2999900,-1624.1999500,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (3)
CreateDynamicObject(870,299.7999900,-1621.0999800,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (4)
CreateDynamicObject(870,297.8999900,-1622.1999500,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (5)
CreateDynamicObject(870,301.2000100,-1624.5999800,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (6)
CreateDynamicObject(870,302.8999900,-1624.5999800,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (7)
CreateDynamicObject(870,304.2999900,-1624.6999500,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (8)
CreateDynamicObject(870,306.0000000,-1625.3000500,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (9)
CreateDynamicObject(870,307.5000000,-1625.0999800,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (10)
CreateDynamicObject(870,309.5000000,-1625.5000000,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (11)
CreateDynamicObject(870,309.7000100,-1622.3000500,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (12)
CreateDynamicObject(870,308.7999900,-1623.0999800,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (13)
CreateDynamicObject(870,307.2000100,-1621.8000500,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (14)
CreateDynamicObject(870,304.7999900,-1621.0000000,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (15)
CreateDynamicObject(870,303.2999900,-1620.4000200,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (16)
CreateDynamicObject(870,301.5000000,-1622.1999500,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (17)
CreateDynamicObject(870,303.7000100,-1622.1999500,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (18)
CreateDynamicObject(870,305.7999900,-1623.0000000,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (19)
CreateDynamicObject(870,310.2999900,-1597.8000500,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (20)
CreateDynamicObject(870,310.5000000,-1600.3000500,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (21)
CreateDynamicObject(870,305.5000000,-1596.5999800,32.3000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (22)
CreateDynamicObject(870,305.5000000,-1596.5999800,32.3000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (23)
CreateDynamicObject(870,307.8999900,-1597.4000200,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (24)
CreateDynamicObject(870,310.3999900,-1602.5999800,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (25)
CreateDynamicObject(870,310.6000100,-1604.9000200,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (26)
CreateDynamicObject(870,308.6000100,-1598.8000500,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (27)
CreateDynamicObject(870,308.5000000,-1601.3000500,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (28)
CreateDynamicObject(870,307.8999900,-1603.1999500,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (29)
CreateDynamicObject(870,305.8999900,-1599.6999500,32.3000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (30)
CreateDynamicObject(870,306.2000100,-1601.5999800,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (31)
CreateDynamicObject(870,307.7000100,-1600.4000200,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (32)
CreateDynamicObject(870,305.6000100,-1603.5000000,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (33)
CreateDynamicObject(870,303.2999900,-1603.0999800,32.3000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (34)
CreateDynamicObject(870,304.0000000,-1601.0999800,32.3000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (35)
CreateDynamicObject(870,301.5000000,-1603.4000200,32.3000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (36)
CreateDynamicObject(870,304.6000100,-1598.1999500,32.3000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (37)
CreateDynamicObject(870,306.8999900,-1598.4000200,32.3000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (38)
CreateDynamicObject(870,303.6000100,-1596.6999500,32.2000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (39)
CreateDynamicObject(870,302.2000100,-1596.4000200,32.2000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (40)
CreateDynamicObject(870,302.7000100,-1599.0999800,32.2000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (41)
CreateDynamicObject(870,301.7000100,-1601.0000000,32.2000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (42)
CreateDynamicObject(870,300.1000100,-1603.5000000,32.2000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (43)
CreateDynamicObject(870,311.1000100,-1616.4000200,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (44)
CreateDynamicObject(870,308.7999900,-1615.9000200,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (45)
CreateDynamicObject(870,306.8999900,-1615.4000200,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (46)
CreateDynamicObject(870,304.8999900,-1615.0999800,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (47)
CreateDynamicObject(870,302.8999900,-1614.6999500,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (48)
CreateDynamicObject(870,301.0000000,-1614.4000200,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (49)
CreateDynamicObject(870,299.3999900,-1614.3000500,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (50)
CreateDynamicObject(870,310.0000000,-1609.5999800,32.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (51)
CreateDynamicObject(870,307.7000100,-1609.5999800,32.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (52)
CreateDynamicObject(870,305.7000100,-1609.5000000,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (53)
CreateDynamicObject(870,303.7000100,-1609.4000200,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (54)
CreateDynamicObject(870,302.1000100,-1609.0999800,32.4000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (55)
CreateDynamicObject(870,300.6000100,-1608.8000500,32.3000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (56)
CreateDynamicObject(870,311.2999900,-1610.0000000,32.7000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (57)
CreateDynamicObject(639,311.3999900,-1626.0999800,36.9000000,0.0000000,0.0000000,0.0000000); //object(veg_ivy_balcny_kb3) (1)
CreateDynamicObject(639,311.8999900,-1620.8000500,36.7000000,0.0000000,0.0000000,0.0000000); //object(veg_ivy_balcny_kb3) (2)
CreateDynamicObject(639,312.0000000,-1598.5000000,36.9000000,0.0000000,0.0000000,0.0000000); //object(veg_ivy_balcny_kb3) (3)
CreateDynamicObject(639,312.1000100,-1604.4000200,36.9000000,0.0000000,0.0000000,0.0000000); //object(veg_ivy_balcny_kb3) (4)
CreateDynamicObject(640,313.2999900,-1626.3000500,33.7000000,0.0000000,0.0000000,182.0000000); //object(kb_planter_bush2) (1)
CreateDynamicObject(640,313.1000100,-1620.6999500,33.8000000,0.0000000,0.0000000,182.0000000); //object(kb_planter_bush2) (2)
CreateDynamicObject(640,312.6000100,-1604.1999500,33.7000000,0.0000000,0.0000000,180.0000000); //object(kb_planter_bush2) (3)
CreateDynamicObject(640,312.6000100,-1598.5999800,33.6000000,0.0000000,0.0000000,180.0000000); //object(kb_planter_bush2) (4)
CreateDynamicObject(9833,308.0000000,-1623.6999500,35.5000000,0.0000000,0.0000000,0.0000000); //object(fountain_sfw) (1)
CreateDynamicObject(9833,308.7000100,-1600.9000200,35.4000000,0.0000000,0.0000000,0.0000000); //object(fountain_sfw) (2)
CreateDynamicObject(996,318.7000100,-1622.9000200,33.1000000,0.0000000,0.0000000,272.0000000); //object(lhouse_barrier1) (1)
CreateDynamicObject(996,317.5000000,-1603.0999800,33.1000000,0.0000000,0.0000000,272.0000000); //object(lhouse_barrier1) (2)
CreateDynamicObject(996,317.3999900,-1601.8000500,33.1000000,0.0000000,0.0000000,92.0000000); //object(lhouse_barrier1) (3)
CreateDynamicObject(997,318.5000000,-1619.0999800,32.4000000,0.0000000,0.0000000,272.0000000); //object(lhouse_barrier3) (1)
CreateDynamicObject(997,314.7000100,-1630.6999500,32.3000000,0.0000000,0.0000000,354.0000000); //object(lhouse_barrier3) (2)
CreateDynamicObject(997,313.5000000,-1594.0000000,32.2000000,0.0000000,0.0000000,358.0000000); //object(lhouse_barrier3) (3)
CreateDynamicObject(2921,303.7000100,-1615.6999500,38.1000000,0.0000000,0.0000000,334.0000000); //object(kmb_cam) (1)
CreateDynamicObject(2921,306.5000000,-1616.0999800,37.9000000,0.0000000,0.0000000,226.0000000); //object(kmb_cam) (2)
CreateDynamicObject(2921,305.1000100,-1607.4000200,38.1000000,0.0000000,0.0000000,70.0000000); //object(kmb_cam) (3)
CreateDynamicObject(2921,309.0000000,-1607.8000500,39.4000000,0.0000000,0.0000000,176.0000000); //object(kmb_cam) (4)
CreateDynamicObject(2921,344.5000000,-1605.0000000,49.2000000,0.0000000,0.0000000,50.0000000); //object(kmb_cam) (5)
CreateDynamicObject(2921,345.1000100,-1624.5000000,49.2000000,0.0000000,0.0000000,0.0000000); //object(kmb_cam) (6)
CreateDynamicObject(1622,344.3999900,-1616.0000000,48.9000000,0.0000000,0.0000000,322.0000000); //object(nt_securecam2_01) (1)
CreateDynamicObject(1215,318.2999900,-1616.3000500,32.9000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (1)
CreateDynamicObject(1215,318.2000100,-1612.6999500,32.9000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
CreateDynamicObject(3515,290.8999900,-1621.8000500,33.1000000,0.0000000,0.0000000,0.0000000); //object(vgsfountain) (1)
CreateDynamicObject(3515,295.1000100,-1598.8000500,32.8000000,0.0000000,0.0000000,0.0000000); //object(vgsfountain) (2)
CreateDynamicObject(1975,299.2000100,-1610.9000200,37.9000000,0.0000000,0.0000000,80.0000000); //object(e_test) (1)
CreateDynamicObject(1975,307.5000000,-1612.4000200,43.3000000,0.0000000,0.0000000,86.0000000); //object(e_test) (2)
CreateDynamicObject(1975,307.7000100,-1611.6999500,43.0000000,0.0000000,0.0000000,80.0000000); //object(e_test) (3)
CreateDynamicObject(1247,307.7999900,-1611.0000000,42.5000000,0.0000000,0.0000000,80.0000000); //object(bribe) (1)
CreateDynamicObject(1247,307.6000100,-1612.3000500,42.5000000,0.0000000,0.0000000,82.0000000); //object(bribe) (2)
CreateDynamicObject(1247,307.7000100,-1611.6999500,44.2000000,0.0000000,0.0000000,78.0000000); //object(bribe) (3)
CreateDynamicObject(1247,299.2999900,-1610.1999500,37.3000000,0.0000000,0.0000000,80.0000000); //object(bribe) (4)
CreateDynamicObject(1247,299.1000100,-1611.5000000,37.3000000,0.0000000,0.0000000,80.0000000); //object(bribe) (5)
CreateDynamicObject(1247,299.2000100,-1610.9000200,39.1000000,0.0000000,0.0000000,80.0000000); //object(bribe) (6)
CreateDynamicObject(1274,299.1000100,-1611.5000000,38.1000000,0.0000000,0.0000000,264.0000000); //object(bigdollar) (1)
CreateDynamicObject(1274,299.2999900,-1610.4000200,38.1000000,0.0000000,0.0000000,74.0000000); //object(bigdollar) (2)
CreateDynamicObject(1274,307.7999900,-1611.1999500,43.2000000,0.0000000,0.0000000,78.0000000); //object(bigdollar) (3)
CreateDynamicObject(1274,307.6000100,-1612.1999500,43.2000000,0.0000000,0.0000000,262.0000000); //object(bigdollar) (4)
CreateDynamicObject(700,312.7999900,-1617.3000500,33.2000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (1)
CreateDynamicObject(700,312.7000100,-1608.5000000,33.1000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (2)
CreateDynamicObject(700,312.2000100,-1595.5000000,32.8000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (3)
CreateDynamicObject(700,313.0000000,-1630.0000000,32.9000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (4)
CreateDynamicObject(7090,307.7999900,-1611.0999800,46.8000000,0.0000000,0.0000000,352.0000000); //object(vegasflag1) (1)
CreateDynamicObject(4003,307.3999900,-1613.3000500,53.9000000,0.0000000,0.0000000,262.0000000); //object(lacityhalltrans_lan) (1)
CreateDynamicObject(1231,318.1000100,-1629.9000200,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (1)
CreateDynamicObject(1231,317.8999900,-1623.8000500,35.1000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (2)
CreateDynamicObject(1231,317.7000100,-1617.4000200,35.1000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (3)
CreateDynamicObject(1231,317.1000100,-1609.0999800,35.1000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (4)
CreateDynamicObject(1231,317.0000000,-1605.6999500,35.1000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (5)
CreateDynamicObject(1231,316.7999900,-1601.5999800,35.1000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (6)
CreateDynamicObject(1231,316.3999900,-1596.5999800,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (7)
CreateDynamicObject(1231,313.6000100,-1591.0000000,34.9000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (8)
CreateDynamicObject(1231,305.7000100,-1589.9000200,34.7000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (9)
CreateDynamicObject(1231,297.7999900,-1588.6999500,34.4000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (10)
CreateDynamicObject(1231,288.7999900,-1586.9000200,34.4000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (11)
CreateDynamicObject(1231,277.8999900,-1584.6999500,34.7000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (12)
CreateDynamicObject(1231,268.0000000,-1582.5999800,34.8000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (13)
CreateDynamicObject(1231,260.1000100,-1580.6999500,34.9000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (14)
CreateDynamicObject(1231,250.8999900,-1578.4000200,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (15)
CreateDynamicObject(1231,243.2000000,-1584.4000200,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (16)
CreateDynamicObject(1231,242.7000000,-1593.8000500,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (17)
CreateDynamicObject(1231,245.2000000,-1604.9000200,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (18)
CreateDynamicObject(1231,248.8000000,-1612.3000500,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (19)
CreateDynamicObject(1231,254.0000000,-1618.6999500,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (20)
CreateDynamicObject(1231,261.2999900,-1624.3000500,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (21)
CreateDynamicObject(1231,271.1000100,-1629.0000000,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (22)
CreateDynamicObject(1231,282.7999900,-1631.5000000,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (23)
CreateDynamicObject(1231,293.7999900,-1632.5999800,35.1000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (24)
CreateDynamicObject(1231,301.2000100,-1633.5000000,35.1000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (25)
CreateDynamicObject(1231,308.7000100,-1634.5000000,35.0000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (26)
CreateDynamicObject(1231,311.1000100,-1615.6999500,35.1000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (27)
CreateDynamicObject(1231,300.5000000,-1614.9000200,34.9000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (28)
CreateDynamicObject(1231,310.7999900,-1609.5000000,35.1000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (29)
CreateDynamicObject(1231,301.8999900,-1608.5999800,34.8000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (30)
CreateDynamicObject(700,269.2000100,-1589.9000200,32.3000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (5)
CreateDynamicObject(700,263.7000100,-1588.0000000,32.3000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (6)
CreateDynamicObject(700,256.5000000,-1586.0999800,32.3000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (7)
CreateDynamicObject(700,249.6000100,-1584.0000000,32.2000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (8)
CreateDynamicObject(700,249.0000000,-1589.5999800,32.2000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (9)
CreateDynamicObject(700,249.5000000,-1597.3000500,32.2000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (10)
CreateDynamicObject(700,252.5000000,-1606.1999500,32.3000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (11)
CreateDynamicObject(700,257.2000100,-1612.5000000,32.3000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (12)
CreateDynamicObject(700,264.5000000,-1618.8000500,32.3000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (13)
CreateDynamicObject(7073,260.2000100,-1596.8000500,50.5000000,0.0000000,0.0000000,356.0000000); //object(vegascowboy1) (1)
CreateDynamicObject(3519,302.2000100,-1613.0000000,41.9000000,0.0000000,0.0000000,354.0000000); //object(vgsn_rooflitb) (1)
CreateDynamicObject(3519,302.2999900,-1610.1999500,41.9000000,0.0000000,0.0000000,352.0000000); //object(vgsn_rooflitb) (2)
CreateDynamicObject(7072,259.5000000,-1597.9000200,48.5000000,0.0000000,0.0000000,0.0000000); //object(vegascowboy3) (1)

   	//MAPEO CASA VICTOR KRAKEN LV
CreateDynamicObject(974, 1100.15454, -2024.43726, 69.33360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(974, 1100.11707, -2049.82617, 69.98140,   0.00000, 0.00000, 0.00000);
   	//MAPEO CASA DE GABRIEL VINEWOOD
   	CreateDynamicObject(3605, 1497.83997, -674.80292, 99.88280,   0.00000, 0.00000, 1.00000);
CreateDynamicObject(3604, 1523.22314, -665.31860, 96.07810,   356.85840, 0.00000, 0.00000);
CreateDynamicObject(3928, 1468.64880, -674.67181, 93.79820,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(987, 1456.68323, -693.63208, 93.71410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1468.59326, -693.67395, 93.71410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1508.68945, -699.66174, 93.71410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1519.10950, -699.62817, 93.71410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1530.80286, -699.63739, 93.71410,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1530.78149, -687.73224, 93.71410,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1530.86523, -675.80396, 93.71410,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1530.90698, -668.94739, 93.71410,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1530.98962, -657.18207, 93.71410,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1519.06238, -657.24078, 93.71410,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1507.11707, -657.35388, 93.71410,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1495.13672, -657.29303, 93.71410,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1483.21484, -657.37396, 93.71410,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1471.26208, -657.48688, 93.71410,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1468.42883, -657.48804, 93.71410,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(987, 1456.79236, -657.37451, 93.71410,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1456.88953, -669.39166, 93.71410,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1456.86267, -681.33667, 93.71410,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1480.60803, -693.64569, 93.71410,   0.00000, 0.00000, -92.00000);
CreateDynamicObject(987, 1480.25586, -705.31152, 93.71410,   0.00000, 0.00000, 27.00000);
CreateDynamicObject(3749, 1498.70959, -699.06262, 99.57070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(659, 1482.38208, -701.89960, 91.65625,   356.85840, 0.00000, 3.14159);
CreateDynamicObject(1595, 1496.05151, -682.36511, 109.46080,   13.00000, 0.00000, 0.00000);
CreateDynamicObject(2669, 1460.30286, -690.77002, 95.03900,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2921, 1462.70911, -689.38641, 95.76320,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2921, 1506.78699, -701.18512, 98.16340,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3279, 1461.08569, -661.63800, 93.56000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, 1500.85339, -687.19727, 98.16340,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2921, 1463.01807, -663.60632, 98.16340,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1812, 1458.87988, -691.99249, 93.81525,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1645, 1510.37341, -667.48120, 94.67990,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1645, 1508.99524, -667.47070, 94.67990,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1252, 1462.29028, -692.22620, 95.31863,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3267, 1459.68921, -690.83441, 95.87630,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1225, 1458.47803, -688.69031, 94.12060,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1225, 1459.61450, -688.71429, 94.12060,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1225, 1459.09583, -688.04205, 94.12060,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1975, 1519.94739, -670.20587, 95.28272,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1975, 1526.13843, -670.13733, 95.28270,   -4.00000, 0.00000, 0.00000);
	//MAPEO casa GABRIEL
   	CreateDynamicObject(8572, 1365.55310, -1202.08984, 152.18504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8572, 1365.55310, -1202.08984, 152.18504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8572, 1365.55310, -1202.08984, 152.18504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16644, -8604.57422, -3563.63892, 2409.97046,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1102.55945, -1090.33740, 36.82040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1102.55798, -1096.74036, 36.77750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1102.57129, -1103.11548, 36.78470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1115.02783, -1088.27783, 36.79630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1115.02783, -1094.82458, 36.79300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1105.75061, -1084.94861, 36.79630,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1108.93164, -1084.94128, 36.79630,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1105.73474, -1106.38513, 36.79630,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1111.88940, -1106.48645, 36.79630,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1222, 1108.83582, 30.66890, 30.66890,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8572, 1365.55310, -1202.08984, 152.18504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8572, 1365.55310, -1202.08984, 152.18504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8572, 1365.55310, -1202.08984, 152.18504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16644, -8604.57422, -3563.63892, 2409.97046,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1114.97961, -1103.18372, 36.79300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1222, 1108.83582, 30.66890, 30.66890,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3928, 1108.74841, -1090.90613, 36.19570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6976, 1095.96680, -1083.31177, 27.34110,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1102.55640, -1088.12708, 36.80040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1115.02649, -1101.20483, 36.79300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1694, 1107.06226, -1106.58752, 44.77500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, 1103.65881, -1105.46179, 34.80299,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1622, 1103.72388, -1086.31396, 33.61570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1886, 1108.65857, -1101.82251, 43.22440,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1886, 1110.91931, -1100.04187, 43.62440,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1886, 1106.27136, -1100.12402, 43.62440,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1886, 1108.26343, -1103.70459, 43.62440,   0.00000, 0.00000, 8.00000);
CreateDynamicObject(1975, 1103.14111, -1092.35913, 33.14880,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1437, 1103.89478, -1105.99707, 26.25310,   9.90000, 0.00000, 0.00000);
CreateDynamicObject(1437, 1103.89038, -1105.99707, 30.44900,   9.90000, 0.00000, 0.00000);
CreateDynamicObject(1976, 263.47729, -1333.13672, 54.33680,   1.12000, 0.00000, 210.00000);

   	//MAPEO RUSA CERCA AL REDEDOR BY GABRIEL
CreateDynamicObject(987, 787.35199, -1250.08081, 13.43200,   0.00000, -2.28000, 90.00000);
CreateDynamicObject(987, 787.35022, -1262.08813, 13.29200,   0.00000, -0.72000, 90.00000);
CreateDynamicObject(987, 787.40100, -1274.07642, 13.31200,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 787.42328, -1309.89648, 13.33200,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 787.36572, -1297.91614, 13.35200,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 787.40729, -1285.97974, 13.35200,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 787.37769, -1238.13818, 13.91200,   0.00000, -2.90000, 90.00000);
CreateDynamicObject(987, 787.36395, -1226.27747, 14.55200,   0.00000, -7.02000, 90.00000);
CreateDynamicObject(987, 787.38062, -1214.17627, 16.05200,   0.00000, -9.16000, 90.00000);
CreateDynamicObject(987, 787.39398, -1202.35315, 17.97200,   0.00000, -9.16000, 90.00000);
CreateDynamicObject(987, 787.41223, -1190.73596, 19.93200,   0.00000, -7.66000, 90.00000);
CreateDynamicObject(987, 787.41675, -1179.12427, 21.55200,   0.00000, -6.06000, 90.00000);
CreateDynamicObject(987, 787.23792, -1173.18848, 22.15200,   0.00000, -6.06000, 90.00000);
CreateDynamicObject(987, 775.25165, -1309.98608, 13.33200,   0.00000, 0.00000, -1.00000);
CreateDynamicObject(987, 763.33698, -1309.75964, 13.33200,   0.00000, 0.00000, -1.00000);
CreateDynamicObject(987, 751.40985, -1309.53638, 13.33200,   0.00000, 0.00000, -1.00000);
CreateDynamicObject(987, 739.53302, -1309.26489, 13.33200,   0.00000, 0.00000, -1.00000);
CreateDynamicObject(987, 727.61560, -1309.23010, 13.33200,   0.00000, 0.00000, -0.16000);
CreateDynamicObject(987, 715.69299, -1309.22253, 13.33200,   0.00000, 0.00000, -0.16000);
CreateDynamicObject(987, 703.78589, -1309.28345, 13.33200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 691.88312, -1309.25903, 13.33200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 680.05933, -1309.33069, 13.33200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 674.09381, -1309.25708, 13.33200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 650.21143, -1309.44189, 19.25200,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(987, 654.06152, -1309.46497, 7.43200,   180.00000, 90.00000, 180.00000);
CreateDynamicObject(987, 648.00708, -1297.64709, 14.37200,   0.00000, 5.00000, -89.88000);
CreateDynamicObject(987, 648.24707, -1285.64612, 15.55200,   0.00000, 5.42000, -90.90000);
CreateDynamicObject(987, 648.67273, -1278.99548, 16.17200,   0.00000, 5.42000, -90.90000);
CreateDynamicObject(987, 647.55231, -1267.36121, 16.13200,   0.00000, 0.00000, -84.44000);
CreateDynamicObject(987, 646.37360, -1255.44775, 16.13200,   0.00000, 0.00000, -84.44000);
CreateDynamicObject(987, 645.09857, -1243.50378, 16.13200,   0.00000, 0.00000, -84.32000);
CreateDynamicObject(987, 643.66473, -1233.02380, 16.13200,   0.00000, 0.00000, -82.52000);
CreateDynamicObject(987, 654.50171, -1235.78735, 14.93200,   0.00000, -6.58000, 164.96001);

//BY AGUSTIN ALBARENQUE
CreateDynamicObject(987, 702.15, -1206.25, 15.49,   0.00, 0.00, 139.79);
CreateDynamicObject(987, 702.20, -1206.90, 19.80,   0.00, 0.00, 61.99);
CreateDynamicObject(987, 708.10, -1196.90, 20.50,   0.00, 0.00, 59.99);
CreateDynamicObject(987, 714.10, -1187.00, 21.30,   0.00, 0.00, 59.99);
CreateDynamicObject(987, 720.10, -1176.80, 22.10,   0.00, 0.00, 59.99);
CreateDynamicObject(987, 726.20, -1165.80, 22.90,   0.00, 0.00, 55.99);
CreateDynamicObject(987, 732.10, -1155.20, 23.60,   0.00, 0.00, 57.98);
CreateDynamicObject(987, 737.50, -1144.50, 24.20,   0.00, 0.00, 15.98);
CreateDynamicObject(987, 746.40, -1142.10, 24.80,   0.00, 0.00, 355.98);
CreateDynamicObject(987, 757.60, -1142.40, 25.20,   0.00, 0.00, 357.98);
CreateDynamicObject(987, 768.80, -1142.40, 25.70,   0.00, 0.00, 357.98);
CreateDynamicObject(987, 774.70, -1142.20, 26.00,   0.00, 0.00, 357.98);
CreateDynamicObject(987, 693.04, -1198.87, 19.10,   0.00, 0.00, 319.35);

   //Mapeo hitman
   CreateDynamicObject(987, 2229.31, -2210.56, 15.09,   0.00, 0.00, 135.00);
CreateDynamicObject(987, 2220.90, -2202.19, 15.09,   0.00, 0.00, 135.00);
CreateDynamicObject(987, 2212.40, -2193.67, 15.09,   0.00, 0.00, 135.00);
CreateDynamicObject(987, 2207.03, -2188.35, 15.09,   0.00, 0.00, 135.00);
CreateDynamicObject(987, 2198.71, -2179.91, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2190.22, -2188.35, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2181.81, -2196.76, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2173.33, -2205.24, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2165.00, -2213.60, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2156.59, -2222.09, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2148.14, -2230.49, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2139.88, -2238.70, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2131.53, -2247.07, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2123.90, -2254.71, 15.09,   0.00, 0.00, 225.00);
CreateDynamicObject(987, 2115.48, -2263.18, 15.09,   0.00, 0.00, 248.00);
CreateDynamicObject(987, 2111.05, -2274.27, 15.09,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2111.01, -2286.01, 15.09,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2111.02, -2297.98, 15.09,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2111.07, -2300.06, 15.09,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2111.01, -2311.84, 15.09,   0.00, 0.00, -10.00);
CreateDynamicObject(987, 2119.62, -2313.43, 15.09,   0.00, 0.00, -10.00);
CreateDynamicObject(987, 2131.45, -2315.52, 15.09,   0.00, 0.00, -26.00);
CreateDynamicObject(987, 2138.47, -2318.98, 15.09,   0.00, 0.00, -26.00);
CreateDynamicObject(987, 2149.09, -2324.09, 15.09,   0.00, 0.00, -38.00);
CreateDynamicObject(987, 2158.19, -2331.21, 15.09,   0.00, 0.00, -38.00);
CreateDynamicObject(987, 2167.39, -2338.48, 15.09,   0.00, 0.00, -38.00);
CreateDynamicObject(987, 2176.33, -2345.64, 15.09,   0.00, 0.00, -38.00);
CreateDynamicObject(987, 2186.07, -2353.27, 15.09,   0.00, 0.00, 46.00);
CreateDynamicObject(987, 2194.33, -2344.72, 15.09,   0.00, 0.00, 44.00);
CreateDynamicObject(987, 2202.90, -2336.34, 15.09,   0.00, 0.00, 45.00);
CreateDynamicObject(987, 2211.29, -2327.99, 15.09,   0.00, 0.00, 45.00);
CreateDynamicObject(987, 2219.79, -2319.58, 15.09,   0.00, 0.00, 45.00);
CreateDynamicObject(987, 2223.22, -2316.06, 15.09,   0.00, 0.00, 45.00);
CreateDynamicObject(987, 2268.17, -2258.74, 12.29,   0.00, 0.00, -225.00);
CreateDynamicObject(987, 2249.21, -2247.30, 15.10,   0.00, 0.00, -315.00);
CreateDynamicObject(987, 2257.71, -2238.94, 15.10,   0.00, 0.00, -224.00);
CreateDynamicObject(987, 2251.66, -2232.91, 15.10,   0.00, 0.00, -224.00);
CreateDynamicObject(987, 2247.60, -2228.79, 15.10,   0.00, 0.00, -224.00);
CreateDynamicObject(3749, 2233.21, -2216.65, 18.26,   0.00, 0.00, -46.00);
CreateDynamicObject(3585, 2204.78, -2311.71, 14.16,   0.00, 0.00, 0.00);
CreateDynamicObject(3585, 2210.75, -2305.76, 14.16,   0.00, 0.00, 0.00);
CreateDynamicObject(3585, 2216.84, -2299.77, 14.16,   0.00, 0.00, 0.00);
CreateDynamicObject(16767, 2248.82, -2177.04, 18.60,   0.00, 0.00, -135.00);
CreateDynamicObject(8535, 2191.01, -2214.30, 18.85,   0.00, 0.00, 134.00);
CreateDynamicObject(3578, 2232.60, -2226.21, 12.28,   0.00, 0.00, 47.00);
CreateDynamicObject(3578, 2223.88, -2217.27, 12.28,   0.00, 0.00, 47.00);

//mapeo by maxi casa
   	//MAPEO GROTTI
   	CreateDynamicObject(19378, 561.56, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 552.06, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 542.56, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 533.06, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 523.56, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 523.03, -1294.38, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(13187, 560.66, -1294.33, 17.53,   0.00, 0.00, 90.00);
CreateDynamicObject(13187, 523.78, -1294.33, 17.53,   0.00, 0.00, 90.00);
CreateDynamicObject(13187, 552.14, -1294.30, 17.53,   0.00, 0.00, 90.00);
CreateDynamicObject(13187, 532.28, -1294.33, 17.53,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 540.66, -1294.34, 16.23,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, 543.64, -1294.28, 16.23,   0.00, 0.00, 180.00);
CreateDynamicObject(948, 544.12, -1293.95, 16.24,   0.00, 0.00, 0.00);
CreateDynamicObject(948, 540.45, -1293.98, 16.24,   0.00, 0.00, 0.00);
CreateDynamicObject(9339, 554.12, -1279.22, 23.50,   0.00, 90.00, 90.00);
CreateDynamicObject(8661, 547.21, -1288.57, 23.59,   0.00, 0.00, 0.00);
CreateDynamicObject(9339, 540.32, -1279.21, 23.50,   0.00, 90.00, 90.00);
CreateDynamicObject(9339, 527.91, -1291.58, 23.50,   0.00, 90.00, 180.00);
CreateDynamicObject(9339, 566.50, -1291.59, 23.50,   0.00, 90.00, 179.99);
CreateDynamicObject(8661, 546.96, -1288.68, 23.59,   0.25, 180.00, 180.00);
CreateDynamicObject(970, 550.84, -1260.10, 17.74,   0.00, 0.00, 35.00);
CreateDynamicObject(970, 547.36, -1262.54, 17.74,   0.00, 0.00, 35.00);
CreateDynamicObject(970, 543.88, -1265.03, 17.74,   0.00, 0.00, 35.00);
CreateDynamicObject(970, 540.43, -1267.51, 17.74,   0.00, 0.00, 37.00);
CreateDynamicObject(970, 537.07, -1270.11, 17.74,   0.00, 0.00, 38.00);
CreateDynamicObject(970, 533.76, -1272.74, 17.74,   0.00, 0.00, 38.00);
CreateDynamicObject(970, 530.38, -1275.36, 17.74,   0.00, 0.00, 38.00);
CreateDynamicObject(970, 527.04, -1277.99, 17.74,   0.00, 0.00, 38.00);
CreateDynamicObject(970, 523.73, -1280.65, 17.74,   0.00, 0.00, 39.25);
CreateDynamicObject(970, 520.40, -1283.34, 17.74,   0.00, 0.00, 38.74);
CreateDynamicObject(970, 517.10, -1286.02, 17.74,   0.00, 0.00, 38.74);
CreateDynamicObject(970, 513.80, -1288.70, 17.74,   0.00, 0.00, 38.74);
CreateDynamicObject(970, 510.50, -1291.34, 17.74,   0.00, 0.00, 38.74);
CreateDynamicObject(970, 507.15, -1294.03, 17.74,   0.00, 0.00, 38.99);
CreateDynamicObject(970, 503.90, -1296.69, 17.74,   0.00, 0.00, 39.74);
CreateDynamicObject(970, 500.59, -1299.46, 17.74,   0.00, 0.00, 39.24);
CreateDynamicObject(970, 497.54, -1301.98, 17.74,   0.00, 0.00, 39.23);
CreateDynamicObject(970, 497.26, -1304.98, 17.74,   0.00, 0.00, 129.23);
CreateDynamicObject(970, 499.96, -1308.29, 17.74,   0.00, 0.00, 128.23);
CreateDynamicObject(970, 502.56, -1311.71, 17.74,   0.00, 0.00, 126.22);
CreateDynamicObject(970, 505.10, -1315.19, 17.74,   0.00, 0.00, 126.22);
CreateDynamicObject(970, 507.46, -1318.81, 17.74,   0.00, 0.00, 119.47);
CreateDynamicObject(970, 509.46, -1322.59, 17.74,   0.00, 0.00, 115.47);
CreateDynamicObject(970, 511.32, -1326.49, 17.74,   0.00, 0.00, 115.46);
CreateDynamicObject(970, 512.32, -1328.56, 17.74,   0.00, 0.00, 115.46);
CreateDynamicObject(970, 515.24, -1330.07, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 519.36, -1329.02, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 523.51, -1327.98, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 527.65, -1326.95, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 531.77, -1325.90, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 535.89, -1324.84, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 539.94, -1323.81, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 544.10, -1322.72, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 548.22, -1321.67, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 552.37, -1320.63, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 556.49, -1319.60, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 560.61, -1318.55, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 564.68, -1317.51, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 568.80, -1316.46, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 572.89, -1315.41, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 574.27, -1315.06, 17.74,   0.00, 0.00, 194.21);
CreateDynamicObject(970, 575.92, -1312.46, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 575.00, -1308.40, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 574.06, -1304.21, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 573.17, -1300.03, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 572.27, -1295.87, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 571.37, -1291.71, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 570.46, -1287.48, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 569.53, -1283.30, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 568.57, -1279.10, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 567.65, -1274.93, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 566.71, -1270.67, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 565.77, -1266.47, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 565.02, -1262.27, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 564.10, -1258.02, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(970, 563.50, -1254.81, 17.74,   0.00, 0.00, 282.21);
CreateDynamicObject(9339, 560.79, -1266.29, 19.47,   342.11, 92.02, 7.32);
CreateDynamicObject(9339, 562.07, -1266.28, 19.47,   342.10, 92.02, 7.32);
CreateDynamicObject(9339, 559.79, -1266.31, 19.47,   342.10, 92.02, 7.32);
CreateDynamicObject(970, 558.38, -1278.56, 24.19,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 554.17, -1278.55, 24.19,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 549.94, -1278.60, 24.19,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 545.71, -1278.61, 24.19,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 541.47, -1278.60, 24.19,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 537.16, -1278.60, 24.19,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 532.90, -1278.62, 24.19,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 529.42, -1278.66, 24.19,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 527.35, -1280.69, 24.19,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 527.35, -1284.91, 24.19,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 527.36, -1289.16, 24.19,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 527.36, -1293.49, 24.19,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 567.16, -1291.84, 24.19,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 567.17, -1287.61, 24.19,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 567.15, -1283.38, 24.19,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 567.13, -1280.73, 24.19,   0.00, 0.00, 90.00);
CreateDynamicObject(9339, 563.13, -1266.30, 19.47,   342.10, 92.02, 7.32);
CreateDynamicObject(9339, 564.44, -1266.37, 19.47,   342.10, 92.02, 7.32);
CreateDynamicObject(970, 560.36, -1275.80, 23.32,   358.10, 18.51, 96.63);
CreateDynamicObject(970, 559.90, -1271.84, 21.97,   358.10, 18.26, 98.63);
CreateDynamicObject(970, 559.36, -1267.78, 20.64,   358.08, 17.50, 98.60);
CreateDynamicObject(970, 558.85, -1263.71, 19.32,   358.08, 17.50, 98.60);
CreateDynamicObject(970, 558.32, -1259.63, 17.99,   358.08, 17.50, 97.60);
CreateDynamicObject(970, 564.09, -1259.05, 17.99,   358.08, 17.50, 97.59);
CreateDynamicObject(970, 564.65, -1263.29, 19.32,   358.08, 17.50, 98.60);
CreateDynamicObject(970, 565.23, -1267.28, 20.64,   358.08, 17.50, 98.60);
CreateDynamicObject(970, 565.73, -1271.44, 21.97,   358.09, 18.25, 98.62);
CreateDynamicObject(970, 566.26, -1275.58, 23.32,   358.10, 18.51, 96.63);
CreateDynamicObject(10183, 537.34, -1275.61, 16.26,   0.00, 0.00, 83.00);
CreateDynamicObject(10183, 556.81, -1290.24, 16.26,   0.00, 0.00, 225.75);
CreateDynamicObject(10183, 546.96, -1290.62, 23.64,   0.00, 0.00, 225.74);
CreateDynamicObject(10183, 535.81, -1320.54, 16.26,   0.00, 0.00, 239.50);
CreateDynamicObject(10183, 531.90, -1309.58, 16.26,   0.00, 0.00, 225.49);
CreateDynamicObject(10183, 532.81, -1299.14, 16.26,   0.00, 0.00, 225.49);
CreateDynamicObject(647, 576.34, -1285.99, 16.30,   0.00, 0.00, 0.00);
CreateDynamicObject(647, 573.40, -1286.56, 16.30,   0.00, 0.00, 0.00);
CreateDynamicObject(647, 574.11, -1290.24, 16.30,   0.00, 0.00, 0.00);
CreateDynamicObject(647, 577.84, -1287.45, 16.30,   0.00, 0.00, 0.00);
CreateDynamicObject(647, 577.38, -1290.10, 16.30,   0.00, 0.00, 0.00);
CreateDynamicObject(647, 577.41, -1292.65, 16.30,   0.00, 0.00, 0.00);
CreateDynamicObject(647, 574.72, -1293.22, 16.30,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 558.60, -1255.30, 15.41,   358.75, 358.50, 29.72);
CreateDynamicObject(3578, 556.98, -1256.20, 15.41,   358.75, 359.00, 29.72);
CreateDynamicObject(1472, 566.16, -1293.81, 25.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1472, 566.15, -1292.86, 24.72,   0.00, 0.00, 179.99);
CreateDynamicObject(1472, 566.10, -1291.80, 23.85,   0.00, 0.00, 179.99);
CreateDynamicObject(1472, 566.14, -1292.90, 23.85,   0.00, 0.00, 179.99);
CreateDynamicObject(1472, 566.14, -1294.08, 23.85,   0.00, 0.00, 179.99);
CreateDynamicObject(1472, 566.13, -1293.85, 24.72,   0.00, 0.00, 179.99);
CreateDynamicObject(1491, 565.47, -1293.89, 26.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 563.26, -1293.81, 27.93,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, 558.84, -1293.80, 27.93,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 554.45, -1293.82, 27.93,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 550.06, -1293.79, 27.93,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 546.09, -1295.13, 27.93,   0.00, 0.00, 217.99);
CreateDynamicObject(1649, 546.09, -1295.13, 27.93,   0.00, 0.00, 39.99);
CreateDynamicObject(1649, 550.06, -1293.79, 27.93,   0.00, 0.00, 359.99);
CreateDynamicObject(1649, 554.45, -1293.82, 27.93,   0.00, 0.00, 359.99);
CreateDynamicObject(1649, 558.84, -1293.80, 27.93,   0.00, 0.00, 359.99);
CreateDynamicObject(1649, 563.25, -1293.81, 27.93,   0.00, 0.00, 359.99);
CreateDynamicObject(1649, 567.11, -1296.03, 27.93,   0.00, 0.00, 89.99);
CreateDynamicObject(1649, 567.10, -1300.55, 27.93,   0.00, 0.00, 89.99);
CreateDynamicObject(1649, 567.09, -1305.03, 27.93,   0.00, 0.00, 89.99);
CreateDynamicObject(1649, 567.12, -1309.49, 27.93,   0.00, 0.00, 89.99);
CreateDynamicObject(1649, 567.11, -1296.03, 27.93,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 567.10, -1300.55, 27.93,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 567.09, -1305.03, 27.93,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 567.04, -1309.47, 27.93,   0.00, 0.00, 269.99);
CreateDynamicObject(970, 567.11, -1311.70, 26.69,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 564.94, -1313.81, 26.69,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 560.71, -1313.79, 26.69,   0.00, 0.00, 0.00);
CreateDynamicObject(1491, 561.13, -1311.67, 26.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 564.79, -1311.72, 27.93,   0.00, 0.00, 359.99);
CreateDynamicObject(1649, 558.92, -1311.75, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 555.68, -1311.73, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 549.94, -1311.74, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 545.42, -1311.74, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 564.79, -1311.72, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 558.92, -1311.75, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 554.43, -1311.72, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 549.94, -1311.74, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 545.49, -1311.74, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 543.25, -1309.48, 27.93,   0.00, 0.00, 91.98);
CreateDynamicObject(1649, 543.09, -1305.02, 27.93,   0.00, 0.00, 91.98);
CreateDynamicObject(1649, 543.25, -1309.48, 27.93,   0.00, 0.00, 271.98);
CreateDynamicObject(1649, 543.09, -1305.01, 27.93,   0.00, 0.00, 271.98);
CreateDynamicObject(1649, 542.96, -1300.58, 27.93,   0.00, 0.00, 271.98);
CreateDynamicObject(1649, 542.96, -1300.58, 27.93,   0.00, 0.00, 91.98);
CreateDynamicObject(970, 556.61, -1313.70, 26.69,   0.00, 0.00, 179.00);
CreateDynamicObject(2885, 552.00, -1300.52, 29.78,   270.06, 359.63, 179.18);
CreateDynamicObject(2885, 561.70, -1300.50, 29.78,   270.05, 359.63, 179.43);
CreateDynamicObject(2885, 561.68, -1307.20, 29.78,   270.05, 359.63, 179.43);
CreateDynamicObject(2885, 561.70, -1311.77, 29.78,   270.05, 359.63, 179.43);
CreateDynamicObject(2885, 551.03, -1311.74, 29.78,   270.05, 359.63, 179.43);
CreateDynamicObject(2885, 551.11, -1306.23, 29.78,   270.05, 359.63, 179.43);
CreateDynamicObject(2885, 548.64, -1306.07, 29.78,   270.05, 359.63, 181.43);
CreateDynamicObject(2885, 548.71, -1311.82, 29.78,   270.05, 359.63, 181.43);
CreateDynamicObject(970, 567.04, -1292.07, 25.29,   358.40, 37.02, 91.20);
CreateDynamicObject(1703, 552.71, -1311.06, 26.24,   0.00, 0.00, 181.00);
CreateDynamicObject(1703, 549.13, -1294.42, 26.24,   0.00, 0.00, 358.50);
CreateDynamicObject(1703, 566.29, -1308.01, 26.24,   0.00, 0.00, 267.50);
CreateDynamicObject(1703, 566.42, -1304.39, 26.24,   0.00, 0.00, 267.50);
CreateDynamicObject(2163, 543.52, -1301.86, 26.24,   0.00, 0.00, 0.00);
CreateDynamicObject(2164, 545.30, -1301.87, 26.24,   0.00, 0.00, 0.00);
CreateDynamicObject(2604, 547.93, -1305.81, 27.04,   0.00, 0.00, 272.00);
CreateDynamicObject(2604, 548.05, -1309.81, 27.04,   0.00, 0.00, 272.00);
CreateDynamicObject(2099, 553.12, -1294.07, 26.24,   0.00, 0.00, 0.00);
CreateDynamicObject(2186, 544.04, -1311.17, 26.24,   0.00, 0.00, 0.00);
CreateDynamicObject(2186, 543.80, -1308.32, 26.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1703, 556.58, -1303.61, 26.24,   0.00, 0.00, 4.50);
CreateDynamicObject(1703, 558.54, -1302.07, 26.24,   0.00, 0.00, 184.49);
CreateDynamicObject(631, 559.54, -1303.31, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 559.49, -1302.27, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 555.69, -1303.50, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 555.60, -1302.47, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 566.17, -1310.94, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 566.39, -1307.19, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 566.53, -1303.53, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 566.56, -1297.43, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 566.42, -1298.39, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 566.50, -1299.27, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 557.77, -1294.46, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 558.80, -1294.50, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 559.74, -1294.50, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 560.79, -1294.40, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 561.73, -1294.42, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 548.19, -1295.05, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1703, 554.68, -1302.43, 26.24,   0.00, 0.00, 184.49);
CreateDynamicObject(1703, 552.72, -1303.91, 26.24,   0.00, 0.00, 4.49);
CreateDynamicObject(631, 555.35, -1303.46, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 551.97, -1303.78, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1703, 558.09, -1311.12, 26.24,   0.00, 0.00, 176.99);
CreateDynamicObject(631, 558.93, -1311.08, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 555.24, -1311.02, 27.27,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 550.19, -1260.22, 12.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 537.77, -1269.21, 12.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 524.57, -1279.61, 12.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 510.60, -1290.73, 12.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 495.42, -1302.80, 12.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 518.91, -1295.02, 24.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 542.99, -1303.94, 27.93,   0.00, 0.00, 91.98);
CreateDynamicObject(1649, 543.16, -1308.25, 27.93,   0.00, 0.00, 91.98);
CreateDynamicObject(1649, 543.19, -1309.61, 27.93,   0.00, 0.00, 91.98);
CreateDynamicObject(970, 552.56, -1313.68, 26.69,   0.00, 0.00, 181.00);
CreateDynamicObject(970, 548.46, -1313.75, 26.69,   0.00, 0.00, 181.00);
CreateDynamicObject(970, 544.34, -1313.76, 26.69,   0.00, 0.00, 179.00);
CreateDynamicObject(970, 540.32, -1313.68, 26.69,   0.00, 0.00, 179.00);
CreateDynamicObject(970, 538.24, -1303.80, 26.69,   0.00, 0.00, 91.00);
CreateDynamicObject(970, 538.32, -1307.80, 26.69,   0.00, 0.00, 91.00);
CreateDynamicObject(970, 538.30, -1311.61, 26.69,   0.00, 0.00, 91.00);
CreateDynamicObject(1649, 553.64, -1311.59, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 553.64, -1311.59, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 554.20, -1311.73, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 552.68, -1311.57, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 552.68, -1311.57, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 550.57, -1311.73, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 551.45, -1311.74, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 552.00, -1311.76, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 552.89, -1311.76, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 554.54, -1311.83, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 556.24, -1311.81, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 556.24, -1311.81, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 549.94, -1311.74, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 549.94, -1311.74, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 545.42, -1311.74, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 545.42, -1311.74, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(1649, 549.94, -1311.74, 27.93,   0.00, 0.00, 179.98);
CreateDynamicObject(1649, 545.42, -1311.74, 27.93,   0.00, 0.00, 359.98);
CreateDynamicObject(2316, 546.45, -1299.50, 28.77,   0.00, 0.00, 93.00);
CreateDynamicObject(2316, 546.54, -1298.72, 28.77,   0.00, 0.00, 93.00);
CreateDynamicObject(2316, 546.44, -1297.80, 28.77,   0.00, 0.00, 93.00);
CreateDynamicObject(2316, 545.33, -1296.41, 28.77,   0.00, 0.00, 93.00);
CreateDynamicObject(1661, 553.55, -1301.31, 29.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1661, 559.25, -1301.66, 29.20,   0.00, 0.00, 0.00);

//Vidrios FBI
CreateDynamicObject(3851,234.5077800,170.5520000,1003.0007900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3851,234.1716000,162.9721100,999.3408200,90.0000000,0.0000000,-10.0800000); //
CreateDynamicObject(3851,232.5103100,159.5773900,999.3808000,90.0000000,0.0000000,-43.9800000); //

//PEAJE
CreateDynamicObject(9623, 70.13, -1534.10, 7.01,   0.00, 0.00, -96.30);
CreateDynamicObject(3850, 68.23, -1522.41, 4.41,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 68.27, -1522.41, 5.28,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 68.28, -1522.42, 6.03,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 68.28, -1522.42, 8.64,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 68.28, -1522.42, 7.78,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 68.28, -1522.42, 6.91,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 67.89, -1544.75, 4.39,   0.00, 0.00, -7.02);
CreateDynamicObject(3850, 67.89, -1544.75, 5.24,   0.00, 0.00, -7.02);
CreateDynamicObject(3850, 67.89, -1544.75, 6.98,   0.00, 0.00, -7.02);
CreateDynamicObject(3850, 67.89, -1544.75, 6.10,   0.00, 0.00, -7.02);
CreateDynamicObject(3850, 67.89, -1544.75, 8.65,   0.00, 0.00, -7.02);
CreateDynamicObject(3850, 67.89, -1544.75, 7.79,   0.00, 0.00, -7.02);

   	// Policía Puertas
pitalina = CreateDynamicObject(980, 1094.85, -2029.89, 68.55,   0.00, 0.00, 261.86);
pitalina2 = CreateDynamicObject(980, 1096.18, -2046.59, 65.82,   4.00, -90.00, 275.47);
puertabomba = CreateDynamicObject(988, 1843.22, -1856.35, 11.70,   0.00, 0.00, 270.18);
ayunta = CreateDynamicObject(1535, 1517.91040, -1756.91467, -23.59077,   0.00000, 0.00000, 183.08214);
ayunta1 = CreateDynamicObject(1535, 1514.90027, -1757.08008, -23.58875,   0.00000, 0.00000, 2.48146);
ayunta2 = CreateDynamicObject(1495, 1524.72815, -1788.48083, -23.59802,   0.00000, 0.00000, 3.38011);
lspdo = CreateDynamicObject(2957, 250.52018737793, 62.803260803223, 1004.2604370117, 0.000000, 0.000000, 90,0,6);
lspd2 = CreateDynamicObject(988, 258.94287109375, 90.618301391602, 1001.330078125, 0.000000, 0.000000, 270,0,6);
lspdg = CreateDynamicObject(1649, 250.607421875, 67.644607543945, 1003.560546875, 0.000000, 0.000000, 270,0,6);
lspdk = CreateDynamicObject(2886, 245.17594909668, 72.789848327637, 1003.8690795898, 0.000000, 0.000000, 180,0,6);
cell =  CreateDynamicObject(980, 266.3408203125, 82.641418457031, 1001.8412475586, 0.000000, 0.000000, 270,0,6);
lspddoor1 = CreateDynamicObject(1500, 245.0578,72.4314,1002.5406,0, 0.0000, 0.0000,0,6);
gabipuerta = CreateDynamicObject(16773, 1498.99805, -700.79468, 95.75400,   0.00000, 0.00000, 0.00000);
lisanp = CreateDynamicObject(980,321.2999900,-1188.1999500,78.1000000,0.0000000,0.0000000,219.0000000); //object(airportgate) (1)
valentinap = CreateDynamicObject(980, 1534.61108, -1451.28650, 14.82909,   0.00000, 0.00000, 0.00000);
frankpuerta = CreateDynamicObject(2963, 249.48886, -1264.72827, 71.23620,   0.00000, 0.00000, -53.00000);
frankpuerta1 = CreateDynamicObject(16775, 280.76578, -1258.31787, 75.60100,   0.00000, 0.00000, -41.00000);
lautaro = CreateDynamicObject(980, -487.38779, -562.71643, 27.00564,   0.00000, 0.00000, 0.00000);
lspddoor2 = CreateDynamicObject(1500, 245.9478,72.4314,1002.5406,0, 0.0000, 0.0000,0,6);
pdgate1 = CreateDynamicObject(971,1589.053344,-1638.123168,14.122960,0.000000,0.000000,180);
lspdg1 = CreateDynamicObject(2957, 248.01469421387, 75.232604980469, 1004.2604370117, 0, 0, 90, 0, 6);
lspdg2 = CreateDynamicObject(2957, 244.78970336914, 75.232421875, 1004.2604370117, 0, 0, 90, 0, 6);
lspdg3 = CreateDynamicObject(2957, 226.30581665039, 71.110366821289, 1005.6588745117, 0, 0, 90, 0, 6);
lspdg4 = CreateDynamicObject(2957, 226.3056640625, 75.235343933105, 1005.6588745117, 0, 0, 90, 0, 6);
lspdg5 = CreateDynamicObject(2957, 250.81405639648, 86.482467651367, 1003.235168457, 0, 0, 90, 0, 6);
pdgate2 = CreateDynamicObject(980, 1545.7398681641, -1627.7280273438, 15.206203460693, 0, 0, 90);
capon1 = CreateDynamicObject(980, 1577.80005, 713.09998, 12.6, 0, 0, 270);
// Umbrella 7
u7d1 = CreateDynamicObject(2957, 253.27075195313, 109.32601928711, 1003.7384643555, 0, 0, 90, 0 ,10);
u7d2 = CreateDynamicObject(2957, 239.74563598633, 117.20024871826, 1003.7384643555, 0, 0, 90, 0 ,10);
u7d3 = CreateDynamicObject(1569, 244.86236572266, 110.86795043945, 1002.21875, 0, 0, 0, 0 ,10);
// Mafias
crgate = CreateDynamicObject(980,1298.79980469,-2056.79980469,59.70000076,0.00000000,0.00000000,268.48937988); //Santi LCN Puerta
crgate1 = CreateDynamicObject(3749,1298.79980469,-2056.79980469,62.79999924,0.00000000,0.00000000,88.99475098); //Santi LCN Puerta

rusg = CreateDynamicObject(980,787.20361328,-1152.45361328,25.40438461,0.00000000,0.00000000,90.00000000);
rusg2 = CreateDynamicObject(980,658.68890381,-1226.62780762,17.62639618,0.00000000,0.00000000,64.00000000);
rusg3 = CreateDynamicObject(980,665.05010986,-1310.76293945,15.35269642,0.00000000,0.00000000,180.00000000);
// LSTV
tvp = CreateDynamicObject(971, 777.70, -1330.10, 13.00,   0.00, 0.00, 179.99);
tvp2 = CreateDynamicObject(969, 774.12, -1384.97, 12.92,   0.00, 0.00, 0.00);
// ++
CreateDynamicObject(971, 1042.2530,-1026.0344,32.1016,0, 0.0000, 0.0000);
// LVPD Puertas
lvpddoor1 = CreateDynamicObject(1495,228.26893616,149.72817993,1002.02343750,0.00000000,0.00000000,90.00000000); //object(gen_doorext01) (1)
lvpddoor2 = CreateDynamicObject(1495,228.20497131,152.73513794,1002.02343750,0.00000000,0.00000000,271.00000000); //object(gen_doorext01) (2)
lvpddoor3 = CreateDynamicObject(1495,230.44369507,158.50949097,1001.94860840,0.00000000,0.00000000,180.49975586); //object(gen_doorext01) (3)
lvpdg1 = CreateDynamicObject(969,200.02711487,160.48478699,1002.02343750,0.00000000,0.00000000,270.00000000); //object(electricgate) (1)
lvpdg2 = CreateDynamicObject(969,200.15646362,185.94311523,1002.03552246,0.00000000,0.00000000,270.00000000); //object(electricgate) (2)
lvpdgate = CreateDynamicObject(971,2334.91796875,2443.72534180,6.76478863,0.00000000,0.00000000,240.25000000); //object(subwaygate) (1)
//PRISION ALQUEADA
alqaedap1 = CreateDynamicObject(19303, 273.21701, 1871.48132, 8.99440,   0.00000, 0.00000, 180.00000);
alqaedap2 = CreateDynamicObject(19303, 278.49698, 1871.48132, 8.99440,   0.00000, 0.00000, 180.00000);
alqaedap3 = CreateDynamicObject(19303, 277.61270, 1866.45154, 8.99440,   0.00000, 0.00000, 90.00000);
// Prision Militar
prison1 = CreateDynamicObject(971,601.87536621,857.28271484,-91.00811768,0.00000000,0.00000000,0.00000000); //object(subwaygate) (1)
prison2 = CreateDynamicObject(971,610.68005371,857.30963135,-91.00811768,0.00000000,0.00000000,0.00000000); //object(subwaygate) (2)
prison3 = CreateDynamicObject(971,619.55297852,857.30340576,-91.00819397,0.00000000,0.00000000,0.00000000); //object(subwaygate) (3)
// Peaje Principal
pea1 = CreateDynamicObject(968,1722.61853027,507.60769653,28.95280647,0.00000000,91.00015259,341.50000000); // barrierturn
pea2 = CreateDynamicObject(968,1746.43005371,513.26916504,28.22655106,0.00546265,268.75024414,339.49902344); // barrierturn
// Peaje 2
pea3 = CreateDynamicObject(968,607.10003662,335.74792480,18.97176361,0.00000000,90.50006104,34.25000000); //object(barrierturn) (1)
pea4 = CreateDynamicObject(968,619.59411621,344.81277466,18.83676720,0.00000000,270.00000000,37.99621582); //object(barrierturn) (2)
//peaje 3
pea5 = CreateDynamicObject(968,-186.28271484,327.83526611,12.05736542,0.01754761,90.49975586,344.99993896); //object(barrierturn) (2)
pea6 = CreateDynamicObject(968,-171.78678894,323.75659180,11.97812653,359.96047974,269.00064087,345.24826050); //object(barrierturn) (3)
//peaje 4
pea7 = CreateDynamicObject(968,72.80000305,-1536.50000000,4.80000019,0.00000000,270.00000000,90.00000000); //object(barrierturn) (1)
pea8 = CreateDynamicObject(968,73.50000000,-1534.19995117,4.80000019,0.00000000,269.98901367,270.00000000); //object(barrierturn) (2)
//Hitman
//mafia2 = CreateDynamicObject(980,712.89758301,1929.85510254,7.31245375,0.00000000,0.00000000,0.00000000); //object(airportgate) (1)

/* Fbi
fbi0 = CreateDynamicObject(3089,2483.00561523,2381.76684570,-8.43979073,0.00000000,0.00000000,147.73950195); //object(ab_casdorlok) (4) Rota
fbi1 = CreateDynamicObject(3089,2476.98681641,2373.87304688,-8.43979073,0.00000000,0.00000000,359.50000000); //object(ab_casdorlok) (2)
fbi2 = CreateDynamicObject(3089,2465.39184570,2391.48339844,-8.43255424,0.00000000,0.00000000,269.23950195); //object(ab_casdorlok) (5)*/
//·| << Objetos Moviles >> =====================================================================================|·
////////////////////MApas!/////////////////// incio de mapeos
/////Estacionamiento
new myobject5 = CreateObject(6959, 1165.32, -1435.73, 12.44,   0.00, 0.13, 0.00);
SetObjectMaterial(myobject5, 0, 3896,"indust1","Grass_128HV");
new myobject6 = CreateObject(6959, 1109.02, -1432.97, 12.54,   0.00, 0.13, 0.00);
SetObjectMaterial(myobject6, 0, 3896,"indust1","Grass_128HV");
new myobject7 = CreateObject(6959, 1089.60, -1431.39, 12.44,   0.00, 0.13, 0.00);
SetObjectMaterial(myobject7, 0, 3896,"indust1","Grass_128HV");
new myobject8 = CreateObject(6959, 1088.99, -1470.91, 12.44,   0.00, 0.13, 0.84);
SetObjectMaterial(myobject8, 0, 3896,"indust1","Grass_128HV");
new myobject9 = CreateObject(6959, 1080.45, -1493.20, 12.44,   0.00, 0.13, -20.82);
SetObjectMaterial(myobject9, 0, 3896,"indust1","Grass_128HV");
new myobject10 = CreateObject(6959, 1067.76, -1541.95, 12.44,   0.00, 0.13, -2.34);
SetObjectMaterial(myobject10, 0, 3896,"indust1","Grass_128HV");
new myobject11 = CreateObject(6959, 1074.21, -1523.93, 12.44,   0.00, 0.13, -11.34);
SetObjectMaterial(myobject11, 0, 3896,"indust1","Grass_128HV");
new myobject12 = CreateObject(6959, 1169.09, -1462.47, 12.44,   0.00, 0.13, 0.00);
SetObjectMaterial(myobject12, 0, 3896,"indust1","Grass_128HV");
new myobject13 = CreateObject(6959, 1168.06, -1502.26, 12.44,   0.00, 0.13, 0.00);
SetObjectMaterial(myobject13, 0, 3896,"indust1","Grass_128HV");
new myobject14 = CreateObject(6959, 1170.29, -1540.80, 12.44,   0.00, 0.13, 0.00);
SetObjectMaterial(myobject14, 0, 3896,"indust1","Grass_128HV");

//LAUTARO MONTES
CreateDynamicObject(3445, -511.92883, -543.67157, 27.59017,   0.00000, 0.00000, 180.17781);
CreateDynamicObject(3486, -536.16846, -545.94080, 31.60843,   0.00000, 0.00000, 180.11687);
CreateDynamicObject(3487, -561.60999, -545.98474, 31.21883,   0.00000, 0.00000, 180.21056);
CreateDynamicObject(3487, -582.58020, -545.71295, 31.28074,   0.00000, 0.00000, 179.73260);
CreateDynamicObject(3486, -608.10822, -545.67725, 31.60843,   0.00000, 0.00000, 180.11687);
CreateDynamicObject(7484, -553.30853, -508.82715, 24.68799,   0.00000, 0.00000, 89.76865);
CreateDynamicObject(12814, -549.73846, -493.92380, 24.59182,   0.00000, 0.00000, 89.81429);
CreateDynamicObject(12814, -599.63348, -493.84396, 24.59182,   0.00000, 0.00000, 89.81429);
CreateDynamicObject(3605, -605.01477, -494.08298, 30.62311,   0.00000, 0.00000, 179.91811);
CreateDynamicObject(12814, -549.37091, -483.17050, 24.59182,   0.00000, 0.00000, 89.81429);
CreateDynamicObject(12814, -598.52795, -483.17303, 24.59182,   0.00000, 0.00000, 89.81429);
CreateDynamicObject(3605, -516.49792, -495.19373, 30.62512,   0.00000, 0.00000, 179.91811);
CreateDynamicObject(12814, -509.50510, -483.01422, 24.59182,   0.00000, 0.00000, 89.81429);
CreateDynamicObject(3603, -559.80139, -494.21667, 30.39374,   0.00000, 0.00000, 179.75458);
CreateDynamicObject(12814, -509.75769, -494.25171, 24.49284,   0.00000, 0.00000, 89.81429);
CreateDynamicObject(3486, -481.22687, -492.36890, 31.81548,   0.00000, 0.00000, 359.93433);
CreateDynamicObject(12814, -491.23413, -483.39124, 24.59182,   0.00000, 0.00000, 89.81429);
CreateDynamicObject(4641, -495.67337, -563.59387, 25.30946,   0.00000, 0.00000, 181.45180);
CreateDynamicObject(717, -481.24057, -562.67792, 24.11219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, -493.55243, -562.54388, 24.11219,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -497.09772, -563.03809, 29.11328,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, -497.09772, -563.03809, 26.86667,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, -482.13770, -549.91333, 25.22657,   0.00000, 0.00000, 3.90445);
CreateDynamicObject(984, -483.11725, -535.71985, 25.22472,   0.00000, 0.00000, 3.01648);
CreateDynamicObject(1290, -483.52429, -519.16498, 28.39284,   0.00000, 0.00000, 89.63999);
CreateDynamicObject(1290, -517.48102, -519.04681, 28.39284,   0.00000, 0.00000, 89.63999);
CreateDynamicObject(1290, -543.57111, -518.87494, 28.39284,   0.00000, 0.00000, 89.63999);
CreateDynamicObject(1290, -571.32404, -518.83777, 28.39284,   0.00000, 0.00000, 89.63999);
CreateDynamicObject(1290, -600.30652, -518.70129, 28.39284,   0.00000, 0.00000, 89.63999);

//MAPEO GONZALO JAVIER!!!!!
CreateDynamicObject(2035,2592.1406300,-1839.2349900,2.0459000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2035,2613.4218800,-2192.6106000,0.1040700,0.0000000,0.0000000,359.7992200); //
CreateDynamicObject(2036,2613.3613300,-2193.8137200,0.1085300,0.0000000,0.0000000,359.8969700); //
CreateDynamicObject(2047,2614.0561500,-2194.0979000,2.9102800,0.0000000,0.0000000,272.3833900); //
CreateDynamicObject(1230,2613.4226100,-2191.3337400,-0.8651600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1224,2613.2473100,-2192.9145500,-0.6080200,0.0000000,0.0000000,358.9631300); //
CreateDynamicObject(1224,2613.2421900,-2194.3115200,-0.5546900,0.0000000,0.0000000,359.7652900); //
CreateDynamicObject(1227,2613.3940400,-2200.1955600,-0.3663600,0.0000000,0.0000000,269.8729600); //
CreateDynamicObject(1271,2613.0290500,-2194.7045900,0.3343900,0.0000000,0.0000000,1.8487500); //
CreateDynamicObject(1220,2613.4353000,-2191.1064500,-0.3186200,0.0000000,0.0000000,357.1543900); //
CreateDynamicObject(1230,2613.4082000,-2190.6416000,-0.8924800,0.0000000,0.0000000,357.3009300); //
CreateDynamicObject(1279,2613.3730500,-2193.2946800,0.0189100,0.0000000,0.0000000,0.3010000); //
CreateDynamicObject(1299,2612.9160200,-2197.0087900,-0.7447800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1349,2612.8132300,-2198.2834500,-0.6229600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1415,2613.3144500,-2189.0356400,-1.2243000,0.0000000,0.0000000,288.2996800); //
CreateDynamicObject(1431,2612.8308100,-2202.4941400,-0.6360800,0.0000000,0.0000000,52.2503500); //
CreateDynamicObject(1441,2611.6420900,-2189.1467300,-0.4664300,0.0000000,0.0000000,307.5132100); //
CreateDynamicObject(1449,2612.2565900,-2193.3864700,-0.6909400,0.0000000,0.0000000,284.1132500); //
CreateDynamicObject(1486,2600.4450700,-2195.0593300,5.0616000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1486,2613.4812000,-2196.2326700,0.7828300,0.0000000,0.0000000,2.3854500); //
CreateDynamicObject(1010,2612.9504400,-2194.1401400,0.0402500,0.0000000,0.0000000,359.4888000); //
CreateDynamicObject(1025,2614.0214800,-2192.6203600,0.9661100,0.0000000,0.0000000,180.2701600); //
CreateDynamicObject(989,2586.1191400,-2125.0412600,1.3777900,0.0000000,0.0000000,104.8694600); //
CreateDynamicObject(989,2582.4231000,-2124.9965800,1.3777900,0.0000000,0.0000000,106.4894600); //


//////////////
CreateDynamicObject(2885, 1554.99, -1675.62, 27.03,   0.00, 0.00, 89.46);
CreateDynamicObject(8390, 1134.71, -1487.84, 31.86,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1139.51, -1416.66, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1139.51, -1416.22, 11.90,   -5.24, 0.00, 0.00);
CreateDynamicObject(3578, 1139.51, -1417.17, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1139.53, -1417.59, 11.90,   -5.24, 0.00, 179.94);
CreateDynamicObject(3578, 1134.78, -1416.20, 11.90,   -5.24, 0.00, 0.00);
CreateDynamicObject(3578, 1134.78, -1416.64, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1134.77, -1417.16, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1134.79, -1417.59, 11.90,   -5.24, 0.00, 179.94);
CreateDynamicObject(3578, 1134.30, -1558.10, 11.90,   -5.24, 0.00, 0.00);
CreateDynamicObject(3578, 1127.92, -1558.09, 11.90,   -5.24, 0.00, 0.00);
CreateDynamicObject(3578, 1134.30, -1558.54, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1134.30, -1559.06, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1134.30, -1559.57, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1134.29, -1560.08, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1134.29, -1560.60, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1134.29, -1561.11, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1134.29, -1561.63, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1134.31, -1562.04, 11.90,   -5.24, 0.00, 179.94);
CreateDynamicObject(3578, 1127.93, -1562.04, 11.90,   -5.24, 0.00, 179.94);
CreateDynamicObject(3578, 1127.91, -1561.62, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1127.91, -1561.10, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1127.91, -1560.59, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1127.91, -1560.08, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1127.91, -1559.56, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1127.91, -1559.05, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1127.91, -1558.54, 11.92,   0.00, 0.00, 0.00);
CreateDynamicObject(11556, 1047.23, -1530.75, 5.77,   0.00, 0.00, -110.40);
CreateDynamicObject(11556, 1091.73, -1523.72, 5.77,   0.00, 0.00, 79.86);
CreateDynamicObject(11556, 1059.21, -1479.87, 5.77,   0.00, 0.00, -112.62);
CreateDynamicObject(11556, 1067.99, -1458.84, 5.77,   0.00, 0.00, -112.62);
CreateDynamicObject(11556, 1065.30, -1442.06, 5.77,   0.00, 0.00, -102.06);
CreateDynamicObject(750, 1076.96, -1420.22, 12.02,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1082.63, -1443.27, 12.02,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1074.88, -1497.37, 12.02,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1127.86, -1417.05, 11.72,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1145.58, -1416.83, 11.72,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1141.34, -1559.99, 11.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1120.72, -1560.48, 11.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1065.27, -1532.18, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1075.47, -1532.07, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1071.56, -1510.14, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1066.10, -1550.73, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1073.55, -1527.83, 12.02,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1065.69, -1555.30, 12.02,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1078.15, -1553.71, 12.02,   0.00, 0.00, 0.00);
CreateDynamicObject(3437, 1092.36, -1557.84, 40.68,   0.00, 0.00, 0.00);
CreateDynamicObject(3437, 1092.36, -1557.84, 17.34,   0.00, 0.00, 0.00);
CreateDynamicObject(3437, 1092.36, -1557.84, 29.04,   0.00, 0.00, 0.00);
CreateDynamicObject(3437, 1177.41, -1417.79, 28.43,   0.00, 0.00, 0.00);
CreateDynamicObject(3437, 1177.41, -1417.79, 16.88,   0.00, 0.00, 0.00);
CreateDynamicObject(3437, 1177.41, -1417.79, 40.04,   0.00, 0.00, 0.00);
/////Nueva HQ para La Cosa Nostra
CreateDynamicObject(14390, 1500.18, -991.80, 1961.91,   0.00, 0.00, 271.00);
CreateDynamicObject(14420, 1500.16, -991.80, 1961.92,   0.00, 0.00, 271.00);
CreateDynamicObject(2207, 1502.16, -967.85, 1958.66,   0.00, 0.00, 269.25);
CreateDynamicObject(1723, 1505.15, -973.93, 1958.66,   0.00, 0.00, 229.24);
CreateDynamicObject(1724, 1500.64, -970.80, 1958.66,   0.00, 0.00, 110.00);
CreateDynamicObject(1724, 1500.27, -968.06, 1958.66,   0.00, 0.00, 66.00);
CreateDynamicObject(1491, 1501.57, -977.09, 1958.66,   0.00, 0.00, 180.50);
CreateDynamicObject(1491, 1498.56, -977.14, 1958.66,   0.00, 0.00, 0.99);
CreateDynamicObject(2255, 1498.89, -973.43, 1960.79,   0.00, 0.00, 91.00);
CreateDynamicObject(2255, 1505.70, -967.59, 1960.37,   0.00, 0.00, 271.00);
CreateDynamicObject(2004, 1506.23, -970.11, 1959.90,   0.00, 0.00, 271.50);
CreateDynamicObject(14399, 1519.06, -999.87, 1958.66,   0.00, 0.00, 271.00);
CreateDynamicObject(1723, 1494.92, -980.32, 1958.66,   0.00, 0.00, 90.99);
CreateDynamicObject(1557, 1501.55, -977.12, 1958.66,   0.00, 0.00, 0.75);
CreateDynamicObject(14419, 1500.17, -991.81, 1961.90,   0.00, 0.00, 271.00);
CreateDynamicObject(1491, 1503.03, -1001.38, 1958.65,   0.00, 0.00, 0.75);
CreateDynamicObject(1491, 1506.03, -1001.29, 1958.65,   0.00, 0.00, 181.99);
CreateDynamicObject(1491, 1510.37, -1005.60, 1958.65,   0.00, 0.00, 271.00);
CreateDynamicObject(1491, 1510.45, -1008.64, 1958.65,   0.00, 0.00, 90.75);
CreateDynamicObject(2773, 1524.45, -1004.43, 1959.18,   0.00, 0.00, 270.75);
CreateDynamicObject(2773, 1520.81, -1004.48, 1959.18,   0.00, 0.00, 270.75);
CreateDynamicObject(1491, 1522.34, -1016.75, 1958.65,   0.00, 0.00, 1.25);
CreateDynamicObject(1491, 1525.37, -1016.67, 1958.65,   0.00, 0.00, 181.00);
CreateDynamicObject(14419, 1523.85, -986.89, 1961.90,   0.00, 0.00, 180.75);
CreateDynamicObject(1557, 1514.27, -992.70, 1958.65,   0.00, 0.00, 91.00);
CreateDynamicObject(1557, 1514.21, -989.68, 1958.65,   0.00, 0.00, 271.00);
CreateDynamicObject(1557, 1524.87, -988.22, 1958.66,   0.00, 0.00, 181.25);
CreateDynamicObject(1557, 1521.82, -988.28, 1958.66,   0.00, 0.00, 1.25);
CreateDynamicObject(1557, 1524.21, -988.17, 1958.66,   0.00, 0.00, 181.25);
CreateDynamicObject(1716, 1522.45, -988.97, 1958.66,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 1522.40, -990.74, 1958.66,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 1522.46, -992.77, 1958.66,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 1522.51, -994.82, 1958.66,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 1522.56, -996.92, 1958.66,   0.00, 0.00, 0.00);
CreateDynamicObject(1667, 1520.71, -989.46, 1960.12,   0.00, 0.00, 0.00);
CreateDynamicObject(1667, 1521.06, -996.75, 1960.12,   0.00, 0.00, 0.00);
CreateDynamicObject(1665, 1520.84, -995.59, 1960.05,   0.00, 0.00, 0.00);
CreateDynamicObject(1544, 1520.79, -991.32, 1960.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 1520.98, -997.21, 1960.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1520, 1520.89, -993.68, 1960.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1703, 1521.16, -1014.17, 1958.66,   0.00, 0.00, 271.00);
CreateDynamicObject(1703, 1521.09, -1007.34, 1958.66,   0.00, 0.00, 270.99);
CreateDynamicObject(1703, 1517.06, -1005.90, 1958.66,   0.00, 0.00, 1.00);
CreateDynamicObject(1704, 1521.18, -1011.14, 1958.66,   0.00, 0.00, 271.75);
CreateDynamicObject(1704, 1520.23, -1005.67, 1958.66,   0.00, 0.00, 325.50);
CreateDynamicObject(2296, 1518.28, -1013.03, 1958.82,   0.00, 0.00, 91.00);
CreateDynamicObject(2231, 1517.97, -1013.87, 1958.82,   0.00, 0.00, 89.50);
CreateDynamicObject(2231, 1517.94, -1009.70, 1958.82,   0.00, 0.00, 89.49);
CreateDynamicObject(2230, 1517.98, -1013.38, 1958.82,   0.00, 0.00, 90.50);
CreateDynamicObject(2230, 1517.95, -1010.07, 1958.82,   0.00, 0.00, 90.50);
CreateDynamicObject(2010, 1516.35, -1008.38, 1958.84,   0.00, 0.00, 335.50);
CreateDynamicObject(1491, 1509.97, -997.04, 1958.65,   0.00, 0.00, 180.74);
CreateDynamicObject(1491, 1506.95, -997.10, 1958.65,   0.00, 0.00, 0.75);
CreateDynamicObject(1975, 1506.24, -969.04, 1961.36,   0.00, 0.00, 271.50);
CreateDynamicObject(18102, 1505.19, -1011.97, 1963.06,   0.00, 0.00, 310.00);
CreateDynamicObject(18102, 1503.94, -1009.53, 1963.06,   0.00, 0.00, 53.00);
CreateDynamicObject(14809, 1497.24, -1011.88, 1960.07,   0.00, 359.50, 1.75);
CreateDynamicObject(2290, 1504.46, -1007.67, 1958.65,   0.00, 0.00, 269.50);
CreateDynamicObject(2290, 1499.19, -1004.60, 1958.65,   0.00, 0.00, 0.74);
CreateDynamicObject(2118, 1512.00, -1020.31, 1958.66,   0.00, 0.00, 324.00);
CreateDynamicObject(1754, 1503.28, -1005.44, 1958.65,   0.00, 0.00, 316.00);
CreateDynamicObject(1828, 1523.99, -1011.33, 1958.66,   0.00, 0.00, 90.50);
CreateDynamicObject(1665, 1520.84, -990.39, 1960.05,   0.00, 0.00, 0.00);
CreateDynamicObject(1975, 1511.81, -1015.24, 1961.36,   0.00, 0.00, 91.50);
CreateDynamicObject(11665, 1502.22, -962.86, 1959.36,   0.00, 0.00, 90.25);
CreateDynamicObject(2118, 1502.06, -976.50, 1958.66,   0.00, 0.00, 4.75);
CreateDynamicObject(13656, 1551.95, -967.08, 1958.61,   0.00, 0.00, 0.00);
CreateDynamicObject(2780, 1501.01, -1008.91, 1953.65,   0.00, 0.00, 0.00);
CreateDynamicObject(1978, 1511.82, -994.09, 1959.70,   0.00, 0.00, 181.00);
CreateDynamicObject(2188, 1506.57, -986.51, 1959.64,   0.00, 0.00, 53.00);
CreateDynamicObject(2188, 1512.66, -986.52, 1959.64,   0.00, 0.00, 320.25);
CreateDynamicObject(1753, 1503.98, -996.38, 1958.65,   0.00, 0.00, 90.75);
CreateDynamicObject(1753, 1503.95, -992.54, 1958.65,   0.00, 0.00, 90.75);
CreateDynamicObject(1754, 1503.95, -993.42, 1958.65,   0.00, 0.00, 91.00);
CreateDynamicObject(630, 1504.16, -989.52, 1959.68,   0.00, 0.00, 0.00);
CreateDynamicObject(2075, 1507.02, -986.98, 1962.75,   0.00, 0.00, 44.50);
CreateDynamicObject(2075, 1512.53, -986.81, 1962.75,   0.00, 0.00, 314.49);
CreateDynamicObject(2075, 1511.79, -994.14, 1962.75,   0.00, 0.00, 267.99);
CreateDynamicObject(2118, 1483.32, -965.51, 1958.66,   0.00, 0.00, 0.75);
CreateDynamicObject(14393, 1475.27, -974.45, 1960.90,   0.00, 0.25, 91.00);
CreateDynamicObject(3117, 1475.46, -965.91, 1958.50,   0.00, 0.00, 4.50);
CreateDynamicObject(1508, 1476.48, -969.41, 1957.92,   0.00, 0.00, 91.00);
CreateDynamicObject(1508, 1476.28, -973.80, 1958.10,   0.00, 0.00, 91.00);
CreateDynamicObject(2606, 1476.91, -971.98, 1962.04,   45.00, 0.00, 181.25);
CreateDynamicObject(2606, 1475.43, -972.01, 1962.04,   44.99, 0.00, 181.25);
CreateDynamicObject(2606, 1476.91, -972.30, 1961.74,   43.19, 0.00, 181.25);
CreateDynamicObject(2606, 1475.45, -972.32, 1961.74,   43.19, 0.00, 181.25);
CreateDynamicObject(1499, 1471.58, -974.22, 1958.66,   0.00, 0.00, 4.00);
CreateDynamicObject(1508, 1476.62, -976.94, 1963.11,   0.00, 0.00, 91.00);
CreateDynamicObject(1508, 1468.47, -974.19, 1960.32,   0.00, 0.00, 90.99);
CreateDynamicObject(2898, 1475.27, -974.85, 1959.77,   90.00, 180.00, 181.00);
CreateDynamicObject(2898, 1477.77, -974.80, 1959.77,   90.00, 179.99, 181.00);
CreateDynamicObject(1812, 1476.94, -980.66, 1958.69,   0.00, 0.00, 181.25);
CreateDynamicObject(2602, 1479.34, -982.59, 1959.22,   0.00, 0.00, 270.50);
CreateDynamicObject(2229, 1479.95, -982.77, 1958.10,   0.00, 0.75, 327.00);
CreateDynamicObject(2229, 1479.56, -983.05, 1958.10,   0.00, 0.75, 229.25);
CreateDynamicObject(1812, 1472.46, -980.72, 1958.69,   0.00, 0.00, 180.75);
CreateDynamicObject(1812, 1474.73, -980.67, 1958.69,   0.00, 0.00, 181.25);
CreateDynamicObject(3055, 1473.08, -965.66, 1963.29,   0.00, 0.00, 1.00);
CreateDynamicObject(1714, 1504.34, -968.80, 1958.66,   0.00, 0.00, 270.50);
CreateDynamicObject(1491, 1497.95, -961.82, 1958.66,   0.00, 0.00, 271.00);
CreateDynamicObject(1491, 1498.04, -964.85, 1958.66,   0.00, 0.00, 91.25);
CreateDynamicObject(16780, 1501.99, -968.92, 1963.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1514.82, -997.72, 1959.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2179, 1509.83, -1001.87, 1960.36,   0.00, 0.00, 0.00);
CreateDynamicObject(2179, 1498.69, -1002.13, 1960.36,   0.00, 0.00, 0.00);
CreateDynamicObject(2179, 1509.79, -1011.57, 1960.36,   0.00, 0.00, 0.00);
CreateDynamicObject(627, 1526.09, -1021.02, 1960.51,   0.00, 0.00, 0.00);
CreateDynamicObject(1726, 1500.40, -1000.81, 1958.66,   0.00, 0.00, 135.25);
CreateDynamicObject(630, 1515.38, -1021.50, 1959.69,   0.00, 0.00, 0.00);
CreateDynamicObject(630, 1511.74, -1017.65, 1959.69,   0.00, 0.00, 0.00);
CreateDynamicObject(2946, 2852.51, -1367.58, 13.17,   0.00, 0.00, 0.00);
CreateDynamicObject(2946, 2852.51, -1364.42, 13.17,   0.00, 0.00, 180.50);
CreateDynamicObject(3051, 2852.44, -1366.76, 15.03,   0.00, 0.00, 46.25);
CreateDynamicObject(3051, 2852.44, -1365.63, 15.03,   0.00, 0.00, 46.25);
CreateDynamicObject(3051, 2852.43, -1365.03, 15.03,   0.00, 0.00, 46.25);
CreateDynamicObject(1703, 1526.33, -993.81, 1958.67,   0.00, 0.00, 271.00);
CreateDynamicObject(1703, 1526.41, -996.71, 1958.67,   0.00, 0.00, 271.00);
CreateDynamicObject(1704, 1526.40, -1000.67, 1958.67,   0.00, 0.00, 271.75);
CreateDynamicObject(1704, 1526.31, -991.16, 1958.67,   0.00, 0.00, 271.75);
CreateDynamicObject(630, 1526.39, -1003.62, 1959.69,   0.00, 0.00, 0.00);
CreateDynamicObject(630, 1526.26, -988.74, 1959.69,   0.00, 0.00, 0.00);
CreateDynamicObject(2257, 1527.05, -1009.79, 1961.63,   0.00, 0.00, 271.00);
CreateDynamicObject(1508, 1470.86, -965.82, 1960.32,   0.00, 0.00, 90.99);
CreateDynamicObject(1499, 1474.00, -965.87, 1958.66,   0.00, 0.00, 2.25);
CreateDynamicObject(1499, 1477.02, -965.76, 1958.66,   0.00, 0.00, 181.75);
CreateDynamicObject(1828, 1499.97, -974.63, 1958.66,   0.00, 0.00, 268.75);
CreateDynamicObject(1824, 1508.78, -989.97, 1959.17,   0.00, 0.00, 0.00);
CreateDynamicObject(13295, 1883.99, -1868.01, 18.91,   0.00, 0.00, 89.50);
CreateDynamicObject(4100, 1886.46, -1879.70, 14.17,   0.00, 0.00, 321.00);
CreateDynamicObject(4100, 1875.00, -1879.75, 14.17,   0.00, 0.00, 319.50);
///estacion de camiones
CreateDynamicObject(5002, 2070.79, -2162.39, 12.22,   0.00, 0.00, 356.80);
CreateDynamicObject(5002, 2083.11, -2163.93, 12.02,   0.00, 0.00, 356.80);
CreateDynamicObject(3755, 2016.38, -2138.66, 17.77,   0.00, 0.00, 0.11);
CreateDynamicObject(5002, 2071.32, -2162.23, 12.02,   0.00, 0.00, 356.80);
CreateDynamicObject(1412, 2132.74, -2198.87, 13.79,   0.00, 0.00, 314.83);
CreateDynamicObject(1412, 2103.60, -2120.23, 13.75,   0.00, 0.00, 355.97);
CreateDynamicObject(1412, 2098.44, -2120.01, 13.75,   0.00, 0.00, 358.34);
CreateDynamicObject(1412, 2093.23, -2119.93, 13.75,   0.00, 0.00, 358.34);
CreateDynamicObject(1412, 2087.86, -2119.76, 13.75,   0.00, 0.00, 358.34);
CreateDynamicObject(1412, 2082.64, -2119.65, 13.75,   0.00, 0.00, 358.34);
CreateDynamicObject(1412, 2077.44, -2119.71, 13.75,   0.00, 0.00, 1.99);
CreateDynamicObject(1412, 2072.30, -2119.78, 13.75,   0.00, 0.00, 359.84);
CreateDynamicObject(1412, 2056.64, -2119.72, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2067.08, -2119.75, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2061.86, -2119.73, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2041.06, -2119.77, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2051.22, -2119.78, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2045.71, -2119.74, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2024.88, -2119.62, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2030.25, -2119.60, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2035.76, -2119.67, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2009.48, -2119.65, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2014.32, -2119.63, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2019.86, -2119.77, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1994.37, -2119.61, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1999.02, -2119.60, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2004.32, -2119.65, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1979.61, -2119.79, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1983.82, -2119.62, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1989.11, -2119.63, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1974.26, -2119.69, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1983.52, -2119.80, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1984.34, -2156.91, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1979.16, -2156.93, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1999.75, -2157.01, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 1989.52, -2157.02, 13.80,   0.00, 0.00, 359.86);
CreateDynamicObject(1412, 1995.07, -2157.00, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2015.06, -2157.05, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2004.97, -2157.05, 13.80,   0.00, 0.00, 359.86);
CreateDynamicObject(1412, 2010.69, -2157.04, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2030.09, -2157.01, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2020.16, -2157.01, 13.80,   0.00, 0.00, 359.86);
CreateDynamicObject(1412, 2026.03, -2157.00, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2065.11, -2159.06, 13.80,   0.00, 0.00, 345.18);
CreateDynamicObject(1412, 2035.19, -2156.94, 13.80,   0.00, 0.00, 359.86);
CreateDynamicObject(1412, 2041.31, -2156.94, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2044.87, -2156.92, 13.80,   0.00, 0.00, 359.74);
CreateDynamicObject(1412, 2050.16, -2157.36, 13.80,   0.00, 0.00, 354.85);
CreateDynamicObject(1412, 2055.37, -2157.81, 13.80,   0.00, 0.00, 354.85);
CreateDynamicObject(1412, 2108.70, -2120.68, 13.75,   0.00, 0.00, 356.91);
CreateDynamicObject(1412, 2113.81, -2120.96, 13.75,   0.00, 0.00, 356.91);
CreateDynamicObject(1412, 2118.94, -2121.72, 13.75,   0.00, 0.00, 344.60);
CreateDynamicObject(1412, 2123.93, -2123.01, 13.75,   0.00, 0.00, 344.60);
CreateDynamicObject(1412, 2128.98, -2124.50, 13.75,   0.00, 0.00, 344.60);
CreateDynamicObject(1412, 2133.84, -2126.03, 13.75,   0.00, 0.00, 336.60);
CreateDynamicObject(1412, 2138.65, -2128.20, 13.75,   0.00, 0.00, 333.43);
CreateDynamicObject(1412, 2143.21, -2130.61, 13.75,   0.00, 0.00, 333.43);
CreateDynamicObject(1412, 2147.83, -2132.89, 13.75,   0.00, 0.00, 333.43);
CreateDynamicObject(1412, 2152.26, -2135.50, 13.75,   0.00, 0.00, 324.48);
CreateDynamicObject(1412, 2156.47, -2138.60, 13.75,   0.00, 0.00, 322.92);
CreateDynamicObject(1412, 2160.65, -2141.73, 13.75,   0.00, 0.00, 322.92);
CreateDynamicObject(1412, 2164.66, -2145.17, 13.79,   0.00, 0.00, 319.38);
CreateDynamicObject(1412, 2168.33, -2148.80, 13.79,   0.00, 0.00, 313.89);
CreateDynamicObject(1412, 2171.99, -2152.56, 13.79,   0.00, 0.00, 312.16);
CreateDynamicObject(1412, 2175.68, -2156.38, 13.79,   0.00, 0.00, 312.16);
CreateDynamicObject(1412, 2179.58, -2160.24, 13.79,   0.00, 0.00, 312.16);
CreateDynamicObject(1412, 2183.08, -2164.15, 13.79,   0.00, 0.00, 311.00);
CreateDynamicObject(1412, 2182.83, -2167.74, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2179.19, -2171.27, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2175.41, -2174.91, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2164.34, -2186.02, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2160.50, -2189.59, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2156.71, -2193.27, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2152.93, -2197.01, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2149.26, -2200.63, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2145.56, -2204.47, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2143.88, -2206.31, 13.79,   0.00, 0.00, 224.00);
CreateDynamicObject(1412, 2128.87, -2195.41, 13.79,   0.00, 0.00, 314.83);
CreateDynamicObject(1412, 2069.87, -2160.45, 13.79,   0.00, 0.00, 344.27);
CreateDynamicObject(1412, 2136.50, -2202.55, 13.79,   0.00, 0.00, 314.83);
CreateDynamicObject(1412, 2140.19, -2206.25, 13.79,   0.00, 0.00, 314.83);
CreateDynamicObject(1412, 2125.30, -2191.82, 13.79,   0.00, 0.00, 314.83);
CreateDynamicObject(1412, 2121.62, -2188.19, 13.79,   0.00, 0.00, 315.03);
CreateDynamicObject(1412, 2117.69, -2184.87, 13.79,   0.00, 0.00, 322.35);
CreateDynamicObject(1412, 2113.59, -2181.65, 13.79,   0.00, 0.00, 322.35);
CreateDynamicObject(1412, 2109.39, -2178.63, 13.79,   0.00, 0.00, 323.07);
CreateDynamicObject(1412, 2105.15, -2175.60, 13.79,   0.00, 0.00, 324.30);
CreateDynamicObject(1412, 2100.71, -2172.94, 13.79,   0.00, 0.00, 333.12);
CreateDynamicObject(1412, 2096.03, -2170.63, 13.79,   0.00, 0.00, 333.12);
CreateDynamicObject(1412, 2091.46, -2168.34, 13.79,   0.00, 0.00, 333.12);
CreateDynamicObject(1412, 2086.84, -2165.95, 13.79,   0.00, 0.00, 333.12);
CreateDynamicObject(1412, 2081.98, -2163.93, 13.79,   0.00, 0.00, 341.11);
CreateDynamicObject(1412, 2076.91, -2162.45, 13.79,   0.00, 0.00, 343.86);
CreateDynamicObject(1412, 2071.86, -2161.02, 13.79,   0.00, 0.00, 344.88);
CreateDynamicObject(1412, 1973.86, -2156.93, 13.80,   0.00, 0.00, 359.86);
CreateDynamicObject(1412, 1971.38, -2154.38, 13.83,   0.00, 0.00, 89.29);
CreateDynamicObject(1412, 1971.31, -2149.04, 13.83,   0.00, 0.00, 89.29);
CreateDynamicObject(1412, 1971.67, -2122.32, 13.83,   0.00, 0.00, 89.29);
CreateDynamicObject(1412, 1971.35, -2143.77, 13.83,   0.00, 0.00, 89.29);
CreateDynamicObject(1412, 1971.32, -2138.57, 13.83,   0.00, 0.00, 89.29);
CreateDynamicObject(1412, 1971.40, -2133.26, 13.83,   0.00, 0.00, 89.29);
CreateDynamicObject(1412, 1971.59, -2128.03, 13.83,   0.00, 0.00, 89.29);
CreateDynamicObject(1412, 1971.71, -2122.82, 13.83,   0.00, 0.00, 89.29);
CreateDynamicObject(3578, 2138.96, -2131.09, 12.92,   3.14, 0.00, 335.78);
CreateDynamicObject(3578, 2075.44, -2121.10, 12.92,   3.14, 0.00, 0.00);
CreateDynamicObject(3578, 2090.08, -2121.73, 12.82,   3.14, 0.00, 0.00);
CreateDynamicObject(3578, 2108.42, -2123.71, 12.92,   3.14, 0.00, 356.18);
CreateDynamicObject(3578, 2124.86, -2125.59, 12.92,   3.14, 0.00, 347.39);
CreateDynamicObject(1232, 2173.85, -2176.67, 14.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 2166.55, -2183.97, 14.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 2057.91, -2157.88, 14.84,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 2062.44, -2158.58, 14.84,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 2119.33, -2128.27, 12.17,   0.00, 0.00, 347.63);
CreateDynamicObject(1251, 2070.33, -2124.81, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2140.06, -2142.33, 12.17,   0.00, 0.00, 338.91);
CreateDynamicObject(1251, 2142.41, -2136.24, 12.17,   0.00, 0.00, 338.91);
CreateDynamicObject(1251, 2130.40, -2138.48, 12.17,   0.00, 0.00, 338.91);
CreateDynamicObject(1251, 2132.76, -2132.35, 12.17,   0.00, 0.00, 338.91);
CreateDynamicObject(1251, 2126.97, -2136.23, 12.17,   0.00, 0.00, 345.84);
CreateDynamicObject(1251, 2128.52, -2130.12, 12.17,   0.00, 0.00, 345.77);
CreateDynamicObject(1251, 2118.06, -2134.71, 12.17,   0.00, 0.00, 349.08);
CreateDynamicObject(1251, 2112.51, -2133.82, 12.17,   0.00, 0.00, 351.24);
CreateDynamicObject(1251, 2113.28, -2127.41, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2102.92, -2126.46, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2102.29, -2133.27, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2094.36, -2131.57, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2094.96, -2125.18, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2084.90, -2125.85, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2084.33, -2131.98, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2080.53, -2124.86, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2079.89, -2131.15, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1251, 2069.76, -2131.07, 12.17,   0.00, 0.00, 354.46);
CreateDynamicObject(1267, 2048.11, -2126.42, 33.70,   0.00, 0.00, 166.07);
CreateDynamicObject(673, 2158.69, -2142.37, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2072.89, -2160.84, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2079.33, -2162.22, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2087.93, -2165.73, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2098.67, -2170.17, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2109.28, -2177.14, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2117.06, -2182.52, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2124.26, -2188.80, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2132.57, -2197.07, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2140.29, -2205.18, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2140.29, -2205.18, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2152.45, -2195.80, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2160.56, -2188.54, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2178.01, -2170.85, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2177.24, -2160.38, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 2168.74, -2150.98, 11.88,   0.00, 0.00, 0.00);
CreateDynamicObject(8131, 2120.19, -2167.68, 22.32,   0.00, 0.00, 326.96);
CreateDynamicObject(1597, 2169.73, -2174.01, 14.91,   0.00, 0.00, 46.18);
CreateDynamicObject(1597, 2162.75, -2181.30, 14.91,   0.00, 0.00, 47.34);
CreateDynamicObject(3439, 2165.76, -2169.88, 16.42,   0.00, 0.00, 0.18);
CreateDynamicObject(3439, 2158.64, -2176.90, 16.42,   0.00, 0.00, 0.18);
CreateDynamicObject(19124, 2125.99, -2165.82, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(19124, 2123.39, -2162.93, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(19124, 2120.63, -2162.51, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(19124, 2118.48, -2162.82, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(19124, 2116.28, -2165.46, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(19124, 2116.16, -2171.44, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(19124, 2120.31, -2173.37, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(19124, 2123.25, -2173.07, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(19124, 2125.72, -2170.06, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(19124, 2115.10, -2168.59, 12.83,   0.00, 0.00, 357.93);
CreateDynamicObject(1280, 1984.52, -2137.03, 12.56,   0.00, 0.00, 91.60);
CreateDynamicObject(1280, 2048.08, -2135.88, 12.56,   0.00, 0.00, 91.60);
CreateDynamicObject(1280, 2052.76, -2136.03, 12.56,   0.00, 0.00, 91.60);
CreateDynamicObject(1280, 2031.19, -2136.16, 12.56,   0.00, 0.00, 91.60);
CreateDynamicObject(1280, 2024.74, -2136.59, 12.56,   0.00, 0.00, 91.60);
CreateDynamicObject(1280, 2008.86, -2136.22, 12.56,   0.00, 0.00, 91.60);
CreateDynamicObject(1280, 2002.31, -2136.60, 12.56,   0.00, 0.00, 91.60);
CreateDynamicObject(19124, 1980.78, -2136.52, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2050.44, -2136.02, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2055.37, -2135.66, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2045.64, -2136.17, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2033.44, -2135.98, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2027.92, -2136.16, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2021.64, -2135.94, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2010.58, -2136.02, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2006.15, -2136.13, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1999.48, -2136.54, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1985.88, -2136.58, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1597, 2039.55, -2155.75, 14.90,   0.00, 0.00, 89.19);
////Practica de tiro en NarcoTraficantes
CreateDynamicObject(1586, -105.34, -38.87, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -102.83, -39.62, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -102.90, -36.45, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -108.98, -41.14, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -104.31, -42.77, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -108.67, -35.98, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -110.77, -39.81, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -108.51, -40.97, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -108.33, -45.89, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -114.17, -44.35, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -111.45, -43.65, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -105.58, -46.10, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -107.12, -43.44, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -114.37, -41.40, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(3475, -115.69, -37.84, 2.23,   0.00, 0.00, 345.31);
CreateDynamicObject(3475, -117.08, -43.16, 2.23,   0.00, 0.00, 345.31);
CreateDynamicObject(3475, -115.21, -46.23, 2.23,   0.00, 0.00, 253.25);
CreateDynamicObject(3475, -110.00, -48.38, 2.23,   0.00, 0.00, 244.52);
CreateDynamicObject(3475, -104.83, -47.88, 2.23,   0.00, 0.00, 306.07);
CreateDynamicObject(3475, -101.66, -43.71, 2.23,   0.00, 0.00, 345.31);
CreateDynamicObject(3475, -100.11, -37.90, 2.23,   0.00, 0.00, 345.31);
CreateDynamicObject(3475, -98.60, -32.55, 2.23,   0.00, 0.00, 345.31);
CreateDynamicObject(3475, -114.17, -32.44, 2.23,   0.00, 0.00, 345.31);
CreateDynamicObject(3475, -112.83, -27.20, 2.23,   0.00, 0.00, 345.31);
CreateDynamicObject(3475, -112.06, -24.33, 2.23,   0.00, 0.00, 345.31);
CreateDynamicObject(3475, -97.85, -29.68, 2.23,   0.00, 0.00, 345.31);
CreateDynamicObject(19368, -109.92, -21.89, 1.76,   0.00, 0.00, 69.91);
CreateDynamicObject(19368, -107.16, -22.89, 1.76,   0.00, 0.00, 69.91);
CreateDynamicObject(19368, -104.32, -23.93, 1.76,   0.00, 0.00, 69.91);
CreateDynamicObject(19368, -101.30, -25.04, 1.76,   0.00, 0.00, 69.91);
CreateDynamicObject(19368, -98.37, -26.11, 1.76,   0.00, 0.00, 69.91);
CreateDynamicObject(1587, -104.07, -24.04, 4.24,   0.00, 0.00, 339.17);
CreateDynamicObject(1587, -99.42, -25.70, 4.24,   0.00, 0.00, 339.40);
CreateDynamicObject(1587, -108.96, -22.24, 4.24,   0.00, 0.00, 339.17);
CreateDynamicObject(1587, -106.66, -23.04, 4.24,   0.00, 0.00, 339.17);
CreateDynamicObject(1587, -101.77, -24.88, 4.24,   0.00, 0.00, 339.17);
CreateDynamicObject(1586, -112.18, -34.98, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -112.68, -37.78, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -106.00, -35.87, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -110.16, -34.03, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -110.67, -37.60, 2.11,   0.00, 0.00, 157.50);
CreateDynamicObject(1586, -107.72, -38.79, 2.11,   0.00, 0.00, 157.50);
////24-7 por lukas zirr
CreateDynamicObject(2000, 1923.56, -3444.57, -10245.79,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1360.96, -1750.40, 13.20,   0.00, 0.00, 179.33);
CreateDynamicObject(983, 1341.50, -1745.94, 13.28,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1341.47, -1752.38, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1341.46, -1752.40, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1344.88, -1756.10, 13.20,   0.00, 0.00, 270.70);
CreateDynamicObject(983, 1357.54, -1756.11, 13.20,   0.00, 0.00, 270.70);
CreateDynamicObject(983, 1360.94, -1752.84, 13.20,   0.00, 0.00, 179.33);
CreateDynamicObject(983, 4528.30, -7152.07, -8084.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1343.23, -1756.69, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(1360, 1343.23, -1756.69, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(1360, 1346.34, -1756.74, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(1360, 1338.05, -1768.01, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(1360, 1356.59, -1756.74, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(1360, 1359.75, -1756.66, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(1360, 1359.75, -1756.66, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(1251, -873.37, -8322.77, -7749.58,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1344.80, -1753.79, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1348.57, -1753.93, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1348.57, -1753.93, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, -266.02, -6673.84, -8524.05,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, -645.95, -3993.98, -9855.32,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.56, -1742.61, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1354.16, -1756.35, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1363.62, -1769.49, 18.65,   0.00, 0.00, 0.41);
CreateDynamicObject(19124, 1348.40, -1756.26, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1348.40, -1756.26, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1348.40, -1756.26, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.49, -1755.98, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.49, -1755.98, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1360.86, -1756.14, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1360.86, -1756.14, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1360.86, -1756.14, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1354.69, -1747.01, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.16, -1743.53, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1353.62, -1746.23, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1352.57, -1745.12, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1351.85, -1743.62, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1351.61, -1741.82, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1351.61, -1741.82, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1352.26, -1740.03, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1353.41, -1738.65, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1354.75, -1737.79, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1336.43, -1737.31, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1337.62, -1737.55, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1339.42, -1738.27, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1340.70, -1739.83, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1340.70, -1739.83, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.36, -1741.06, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, -3518.23, -5675.47, -8087.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, -3432.28, -1153.67, -9057.68,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 3392.88, -2659.86, -9821.86,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, -2949.02, -403.01, -9086.69,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, -629.79, -3877.85, -9601.69,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1361.33, -1748.91, 12.72,   0.00, 0.00, 180.74);
CreateDynamicObject(1280, 1341.18, -1745.23, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1341.18, -1745.23, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1341.14, -1748.36, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1341.13, -1751.79, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1341.13, -1751.79, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1361.28, -1754.46, 12.92,   0.00, 0.00, 178.61);
CreateDynamicObject(1280, 1361.28, -1754.46, 12.92,   0.00, 0.00, 178.61);
CreateDynamicObject(1280, 1361.37, -1751.67, 12.92,   0.00, 0.00, 178.81);
CreateDynamicObject(1280, 1361.37, -1751.67, 12.92,   0.00, 0.00, 178.81);
CreateDynamicObject(19124, 1361.31, -1747.44, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1361.42, -1750.30, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1361.42, -1750.30, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1361.42, -1750.30, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1361.33, -1753.05, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1361.33, -1753.05, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1361.33, -1753.05, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1361.24, -1756.06, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1361.24, -1756.06, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.24, -1753.41, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.18, -1750.14, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.18, -1750.14, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.17, -1746.82, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.17, -1746.82, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.17, -1746.82, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1341.17, -1746.82, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19378, 1358.35, -1764.41, 18.18,   0.00, -90.00, 0.00);
CreateDynamicObject(19378, 1347.85, -1764.43, 18.18,   0.00, -90.00, 0.00);
CreateDynamicObject(983, 1339.42, -1768.47, 13.08,   0.00, 0.00, 269.70);
CreateDynamicObject(1360, 1346.34, -1756.74, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(1360, 1346.34, -1756.74, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(1360, 1340.98, -1767.95, 13.08,   0.00, 0.00, 89.00);
CreateDynamicObject(5820, 1084.42, -9455.42, -6736.93,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1354.16, -1756.35, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1363.81, -1759.24, 18.65,   0.00, 0.00, 0.41);
CreateDynamicObject(19124, 1342.69, -1759.55, 18.65,   0.00, 0.00, 0.41);
CreateDynamicObject(19124, 1342.60, -1769.67, 18.65,   0.00, 0.00, 0.41);
CreateDynamicObject(19124, 1342.60, -1769.67, 18.65,   0.00, 0.00, 0.41);
CreateDynamicObject(19124, 1342.60, -1769.67, 18.65,   0.00, 0.00, 0.41);
CreateDynamicObject(642, 1676.72, -9622.27, -6146.78,   0.00, 0.00, 0.00);
CreateDynamicObject(643, 1358.54, -1766.04, 18.74,   0.00, 0.00, 359.80);
CreateDynamicObject(643, 1361.32, -1767.46, 18.84,   0.00, 0.00, 359.80);
CreateDynamicObject(643, 1355.29, -1765.12, 18.74,   0.00, 0.00, 359.80);
CreateDynamicObject(3851, -2889.38, 1121.91, -8891.48,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1363.60, -1764.86, 19.49,   0.00, 0.00, 181.15);
CreateDynamicObject(3851, 1358.09, -1759.30, 19.49,   0.00, 0.00, 270.27);
CreateDynamicObject(3498, 1359.10, -1759.44, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1347.33, -1769.77, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1355.86, -1759.44, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1363.61, -1763.77, 21.36,   -90.00, -106.00, 254.23);
CreateDynamicObject(3851, 1348.15, -1759.33, 19.49,   0.00, 0.00, 270.27);
CreateDynamicObject(3851, 1348.15, -1759.33, 19.49,   0.00, 0.00, 270.27);
CreateDynamicObject(3851, 1348.22, -1769.58, 19.49,   0.00, 0.00, 270.27);
CreateDynamicObject(3851, 1348.22, -1769.58, 19.49,   0.00, 0.00, 270.27);
CreateDynamicObject(3851, 1348.22, -1769.58, 19.49,   0.00, 0.00, 270.27);
CreateDynamicObject(3851, 1358.03, -1769.53, 19.49,   0.00, 0.00, 270.27);
CreateDynamicObject(3498, 1347.01, -1759.42, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1355.86, -1759.44, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1347.01, -1759.42, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1355.86, -1759.44, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1347.01, -1759.42, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1355.86, -1759.44, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1342.60, -1769.48, 16.87,   -1.00, 0.00, 351.00);
CreateDynamicObject(3498, 1355.86, -1759.44, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1356.20, -1769.77, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1356.20, -1769.77, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1359.16, -1769.76, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1359.16, -1769.76, 21.36,   -90.00, -106.00, 343.95);
CreateDynamicObject(3498, 1363.62, -1765.43, 21.36,   -90.00, -106.00, 254.23);
CreateDynamicObject(16151, 1349.41, -1760.51, 18.61,   0.00, 0.00, 89.84);
CreateDynamicObject(643, 1359.38, -1762.39, 18.74,   0.00, 0.00, 359.80);
CreateDynamicObject(643, 1356.15, -1761.39, 18.74,   0.00, 0.00, 359.80);
CreateDynamicObject(643, 1356.15, -1761.39, 18.74,   0.00, 0.00, 359.80);
CreateDynamicObject(643, 1356.15, -1761.39, 18.74,   0.00, 0.00, 359.80);
CreateDynamicObject(643, 1352.01, -1765.94, 18.74,   0.00, 0.00, 359.80);
CreateDynamicObject(643, 1352.01, -1765.94, 18.74,   0.00, 0.00, 359.80);
CreateDynamicObject(3851, 1348.15, -1759.33, 19.49,   0.00, 0.00, 270.27);
CreateDynamicObject(3851, 1348.15, -1759.33, 19.49,   0.00, -4.00, 270.00);
CreateDynamicObject(3851, 1348.56, -1767.80, 21.72,   1.00, 90.00, 269.00);
CreateDynamicObject(3851, 1357.85, -1767.82, 21.72,   1.00, 90.00, 269.00);
CreateDynamicObject(3851, 1348.59, -1765.05, 21.72,   1.00, 90.00, 269.00);
CreateDynamicObject(3851, 1348.71, -1761.09, 21.82,   1.00, 90.00, 269.40);
CreateDynamicObject(3851, 1358.01, -1761.21, 21.72,   1.00, 90.00, 269.00);
CreateDynamicObject(3851, 1357.92, -1765.23, 21.72,   1.00, 90.00, 269.00);
CreateDynamicObject(3498, 1343.06, -1765.50, 21.66,   -90.00, -186.00, 353.51);
CreateDynamicObject(3498, 1342.69, -1759.82, 16.87,   -1.00, 0.00, 351.00);
CreateDynamicObject(3498, 1347.01, -1759.42, 21.36,   -90.00, -106.00, 344.00);
CreateDynamicObject(3498, 1343.05, -1763.80, 21.66,   -90.00, -186.00, 353.51);
CreateDynamicObject(5816, 1341.01, -1763.38, 15.15,   0.00, 0.00, 91.50);
//// Parque Central
CreateDynamicObject(1775, 1271.45, -881.94, 42.92,   0.00, 0.00, -354.54);
CreateDynamicObject(1216, 1262.09, -883.51, 42.50,   0.00, 0.00, 6.78);
CreateDynamicObject(1216, 1260.71, -883.62, 42.50,   0.00, 0.00, 6.78);
CreateDynamicObject(19124, 1272.21, -912.65, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1271.69, -907.92, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1271.27, -903.76, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1270.89, -899.45, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1270.48, -895.54, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1270.11, -891.59, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1264.74, -892.15, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1265.11, -895.96, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1265.42, -899.91, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1265.94, -904.18, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1266.36, -908.74, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1266.88, -913.64, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1259.53, -892.64, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1254.46, -893.25, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1248.93, -893.98, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1243.08, -894.75, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1237.66, -895.46, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1231.91, -896.17, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1230.36, -887.49, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1236.40, -886.66, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1242.23, -885.90, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1247.89, -885.06, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1253.54, -884.35, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1258.49, -883.79, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1263.76, -883.15, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1275.76, -890.95, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1282.08, -890.30, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1287.95, -889.70, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1293.85, -889.12, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1300.81, -888.39, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1269.29, -882.55, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1275.00, -881.92, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1281.35, -881.28, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1286.98, -880.72, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1292.73, -880.12, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1300.00, -879.56, 42.39,   0.00, 0.00, 0.00);
CreateDynamicObject(1211, 1279.01, -890.71, 42.23,   0.00, 0.00, 0.00);
CreateDynamicObject(1211, 1255.97, -883.98, 42.23,   0.00, 0.00, 0.00);
CreateDynamicObject(1344, 1232.98, -903.36, 42.63,   0.00, 0.00, -259.98);
CreateDynamicObject(1344, 1232.29, -899.83, 42.63,   0.00, 0.00, -259.98);
CreateDynamicObject(869, 1272.78, -893.76, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1276.82, -893.40, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1273.58, -900.23, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1277.96, -903.25, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1273.82, -903.28, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1274.14, -906.77, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1278.09, -906.62, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1277.57, -910.09, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1274.09, -910.54, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1264.59, -912.43, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1263.53, -911.17, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1262.40, -894.04, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1243.07, -896.56, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1259.94, -882.01, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1248.57, -883.94, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1237.08, -884.98, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1278.82, -879.75, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1290.24, -877.41, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1300.73, -876.56, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1301.96, -877.48, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1300.41, -908.20, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1287.05, -907.92, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1274.29, -909.59, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1263.18, -911.53, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1251.28, -913.70, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1238.60, -915.79, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1243.14, -896.22, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1272.52, -892.64, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1278.03, -878.84, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1289.98, -877.55, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1300.97, -876.36, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1259.74, -880.69, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1247.92, -882.41, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1235.98, -883.56, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(1346, 1283.90, -890.57, 43.17,   0.00, 0.00, -173.34);
CreateDynamicObject(1280, 1280.58, -889.88, 42.27,   0.00, 0.00, -84.72);
CreateDynamicObject(1280, 1272.31, -890.76, 42.27,   0.00, 0.00, -84.72);
CreateDynamicObject(1280, 1262.22, -891.80, 42.27,   0.00, 0.00, -84.72);
CreateDynamicObject(1280, 1251.57, -893.09, 42.27,   0.00, 0.00, -82.92);
CreateDynamicObject(1280, 1240.04, -894.55, 42.27,   0.00, 0.00, -82.92);
CreateDynamicObject(1280, 1290.88, -888.97, 42.27,   0.00, 0.00, -84.72);
CreateDynamicObject(1280, 1263.92, -880.67, 42.27,   0.00, 0.00, -171.84);
CreateDynamicObject(1280, 1268.65, -880.15, 42.27,   0.00, 0.00, -353.58);
CreateDynamicObject(1280, 1278.26, -882.23, 42.27,   0.00, 0.00, -264.36);
CreateDynamicObject(1280, 1284.35, -881.67, 42.27,   0.00, 0.00, -264.36);
CreateDynamicObject(1280, 1290.02, -880.95, 42.27,   0.00, 0.00, -264.36);
CreateDynamicObject(1280, 1296.67, -880.23, 42.27,   0.00, 0.00, -264.36);
CreateDynamicObject(1280, 1297.36, -888.28, 42.27,   0.00, 0.00, -84.72);
CreateDynamicObject(1280, 1265.79, -897.73, 42.27,   0.00, 0.00, -171.84);
CreateDynamicObject(1280, 1270.12, -897.54, 42.27,   0.00, 0.00, -353.58);
CreateDynamicObject(643, 1260.67, -869.40, 42.34,   0.00, 0.00, 0.00);
CreateDynamicObject(643, 1260.13, -864.55, 42.34,   0.00, 0.00, 0.00);
CreateDynamicObject(643, 1255.22, -869.22, 42.34,   0.00, 0.00, 0.00);
CreateDynamicObject(643, 1254.71, -864.50, 42.34,   0.00, 0.00, 0.00);
CreateDynamicObject(2218, 1255.13, -869.47, 42.81,   -27.18, 26.52, -15.42);
CreateDynamicObject(2218, 1254.68, -864.75, 42.81,   -27.18, 26.52, -15.42);
CreateDynamicObject(2218, 1260.02, -864.86, 42.81,   -27.18, 26.52, -15.42);
CreateDynamicObject(2218, 1260.53, -869.70, 42.81,   -27.18, 26.52, -15.42);
CreateDynamicObject(1543, 1261.07, -869.44, 42.73,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 1260.50, -864.51, 42.73,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 1255.10, -864.63, 42.73,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 1255.52, -869.23, 42.73,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1284.34, -902.06, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1281.79, -905.65, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1281.78, -909.35, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1284.40, -909.19, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1285.64, -905.42, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1289.64, -908.66, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1292.11, -901.40, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1293.01, -904.46, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1295.93, -906.07, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1293.22, -908.86, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1293.22, -908.86, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1296.44, -902.56, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1299.84, -900.98, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1301.74, -901.11, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1301.73, -903.85, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1293.20, -906.78, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1299.31, -904.92, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1301.76, -907.04, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1297.87, -908.61, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1250.68, -914.40, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1252.76, -911.94, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1249.30, -912.12, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1238.24, -913.89, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1236.86, -917.53, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1236.86, -917.53, 42.35,   0.00, 0.00, 0.00);
CreateDynamicObject(1281, 1258.72, -898.39, 42.72,   0.00, 0.00, 0.00);
CreateDynamicObject(1281, 1247.40, -902.18, 42.72,   0.00, 0.00, 0.00);
CreateDynamicObject(1281, 1242.52, -908.21, 42.72,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1261.73, -893.87, 41.87,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1246.24, -870.67, 41.83,   0.00, 0.00, 0.00);
////Decoracion del LSPD
CreateDynamicObject(1251, 1538.12, -1663.82, 12.37,   0.00, 0.00, 90.82);
CreateDynamicObject(1251, 1537.44, -1667.39, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1537.44, -1667.39, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1537.48, -1674.37, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1537.48, -1674.37, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1537.57, -1678.45, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1538.04, -1681.39, 12.37,   0.00, 0.00, 90.82);
CreateDynamicObject(19124, 1554.40, -1672.46, 15.64,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1546.56, -1678.85, 14.19,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1546.95, -1672.36, 14.09,   0.00, 0.00, 0.12);
CreateDynamicObject(19124, 1549.56, -1672.63, 14.11,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1550.12, -1672.47, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1550.94, -1672.42, 15.14,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1554.67, -1678.81, 15.63,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, 1555.88, -1677.12, 15.19,   0.00, 0.00, 89.97);
CreateDynamicObject(1569, 1555.87, -1674.14, 15.19,   0.00, 0.00, 270.25);
///Mini plaza por Unity
CreateDynamicObject(10378, 1777.44, -1773.07, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(10606, 1722.59, -1767.39, 21.53,   0.00, 0.00, -0.06);
CreateDynamicObject(16061, 1808.66, -1773.84, 11.78,   0.00, 0.00, 359.70);
CreateDynamicObject(16061, 1747.50, -1774.91, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(906, 1775.54, -1772.36, 13.37,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1777.51, -1772.12, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(6965, 1758.24, -1750.17, 14.16,   0.00, 0.00, 0.00);
CreateDynamicObject(6965, 1756.81, -1795.81, 14.16,   0.00, 0.00, 0.00);
CreateDynamicObject(6965, 1797.74, -1795.54, 14.16,   0.00, 0.00, 0.00);
CreateDynamicObject(6965, 1797.57, -1749.47, 14.16,   0.00, 0.00, 0.00);
// Lavanderia (By MaluGonza)
CreateDynamicObject(14665, 3937.37, -827.41, 1875.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3932.90, -817.00, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3934.80, -816.90, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3936.50, -817.00, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3938.30, -816.90, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1208, 3936.50, -816.90, 1874.10,   0.00, 0.00, 178.00);
CreateDynamicObject(1208, 3938.30, -816.90, 1874.10,   0.00, 0.00, 177.99);
CreateDynamicObject(1208, 3934.80, -816.90, 1874.10,   0.00, 0.00, 177.99);
CreateDynamicObject(1208, 3932.90, -816.90, 1874.10,   0.00, 0.00, 177.99);
CreateDynamicObject(2340, 3940.10, -816.90, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3941.90, -816.90, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3933.10, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3935.00, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3936.90, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3939.00, -837.70, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3940.90, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3942.60, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(1208, 3935.00, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3933.20, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3936.80, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3939.00, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3940.80, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3942.50, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3940.10, -816.90, 1874.10,   0.00, 0.00, 181.99);
CreateDynamicObject(1208, 3941.90, -816.90, 1874.10,   0.00, 0.00, 181.99);
CreateDynamicObject(2390, 3941.70, -837.90, 1874.60,   0.00, 0.00, 186.00);
CreateDynamicObject(2390, 3939.90, -837.90, 1874.60,   0.00, 0.00, 180.00);
CreateDynamicObject(2390, 3938.00, -837.90, 1874.50,   0.00, 0.00, 179.99);
CreateDynamicObject(2390, 3935.90, -837.90, 1874.60,   0.00, 0.00, 179.99);
CreateDynamicObject(2390, 3934.10, -837.90, 1874.60,   0.00, 0.00, 179.99);
CreateDynamicObject(2390, 3933.90, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2390, 3935.70, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2390, 3937.40, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2390, 3939.30, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2390, 3940.90, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2689, 3942.60, -818.30, 1875.60,   0.00, 0.00, 274.00);
CreateDynamicObject(2689, 3942.60, -819.30, 1875.60,   0.00, 0.00, 274.00);
CreateDynamicObject(2704, 3942.60, -820.30, 1875.60,   0.00, 0.00, 284.00);
CreateDynamicObject(2704, 3942.60, -821.30, 1875.60,   0.00, 0.00, 284.00);
CreateDynamicObject(2705, 3942.60, -822.30, 1875.60,   0.00, 0.00, 278.00);
CreateDynamicObject(2705, 3942.60, -823.10, 1875.60,   0.00, 0.00, 278.00);
CreateDynamicObject(2706, 3942.60, -823.90, 1875.60,   0.00, 0.00, 282.00);
CreateDynamicObject(2706, 3942.60, -824.60, 1875.60,   0.00, 0.00, 282.00);
CreateDynamicObject(1808, 3932.30, -825.70, 1873.00,   0.00, 0.00, 92.00);
CreateDynamicObject(1808, 3932.30, -829.20, 1873.00,   0.00, 0.00, 92.00);
CreateDynamicObject(1828, 3934.20, -827.30, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2391, 3942.60, -818.20, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2391, 3942.60, -819.30, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2396, 3942.60, -820.20, 1874.40,   0.00, 0.00, 270.00);
CreateDynamicObject(2396, 3942.60, -821.30, 1874.40,   0.00, 0.00, 270.00);
CreateDynamicObject(2398, 3942.60, -822.30, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2398, 3942.60, -823.20, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2399, 3942.60, -825.50, 1875.70,   0.00, 0.00, 274.00);
CreateDynamicObject(2399, 3942.60, -826.50, 1875.70,   0.00, 0.00, 274.00);
CreateDynamicObject(2401, 3942.60, -823.90, 1874.40,   0.00, 0.00, 270.00);
CreateDynamicObject(2401, 3942.60, -824.60, 1874.40,   0.00, 0.00, 270.00);
CreateDynamicObject(2374, 3942.60, -825.50, 1874.40,   0.00, 0.00, 276.00);
CreateDynamicObject(2374, 3942.60, -826.40, 1874.40,   0.00, 0.00, 276.00);
CreateDynamicObject(2377, 3942.60, -827.30, 1874.40,   0.00, 0.00, 280.00);
CreateDynamicObject(2377, 3942.60, -828.20, 1874.40,   0.00, 0.00, 280.00);
CreateDynamicObject(2378, 3942.60, -829.10, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2378, 3942.60, -830.00, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2383, 3942.60, -827.40, 1875.70,   0.00, 0.00, 190.00);
CreateDynamicObject(2383, 3942.60, -828.20, 1875.70,   0.00, 0.00, 190.00);
CreateDynamicObject(2704, 3942.60, -829.20, 1875.70,   0.00, 0.00, 284.00);
CreateDynamicObject(2704, 3942.60, -830.10, 1875.70,   0.00, 0.00, 284.00);
CreateDynamicObject(997, 3933.90, -816.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3935.60, -816.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3937.40, -816.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3939.20, -816.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3940.90, -817.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3941.70, -835.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3940.00, -835.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3937.80, -835.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3935.90, -834.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3934.10, -835.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(1504, 3932.10, -827.40, 1873.00,   0.00, 0.00, 268.00);
CreateDynamicObject(1504, 3932.10, -827.40, 1873.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1723, 3932.90, -831.90, 1873.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1723, 3932.90, -825.00, 1873.00,   0.00, 0.00, 88.00);
CreateDynamicObject(2180, 3942.50, -830.70, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2180, 3942.50, -832.60, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2054, 3942.60, -830.40, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2054, 3942.60, -830.80, 1873.90,   0.00, 0.00, 340.00);
CreateDynamicObject(2054, 3942.60, -831.20, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2054, 3942.60, -831.60, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2054, 3942.60, -832.00, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2054, 3942.60, -832.40, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2054, 3942.60, -832.80, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2053, 3942.20, -830.50, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3942.20, -830.90, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3942.20, -831.30, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3942.20, -831.70, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3942.20, -832.10, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2052, 3942.30, -832.50, 1873.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2052, 3942.30, -833.00, 1873.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3932.90, -816.90, 1873.99,   0.00, 0.00, 0.00);
////interior Licencieros
CreateDynamicObject(14665, 2066.90, -2214.30, 2665.60,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 2072.30, -2211.50, 2665.60,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 2064.80, -2225.20, 2665.60,   0.00, 0.00, 270.00);
CreateDynamicObject(7191, 2061.70, -2213.00, 2665.60,   0.00, 0.00, 180.00);
CreateDynamicObject(7191, 2061.70, -2213.00, 2669.40,   0.00, 0.00, 179.99);
CreateDynamicObject(7191, 2069.10, -2203.60, 2665.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 2061.80, -2215.80, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 2061.80, -2212.80, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(7191, 2085.50, -2207.90, 2665.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1502, 2063.40, -2207.90, 2663.60,   0.00, 0.00, 180.00);
CreateDynamicObject(7191, 2041.60, -2207.10, 2668.10,   180.00, 0.00, 88.00);
CreateDynamicObject(2165, 2068.40, -2223.40, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2165, 2063.90, -2223.20, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1806, 2069.00, -2224.70, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1806, 2064.40, -2224.50, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1715, 2069.50, -2221.70, 2663.60,   0.00, 0.00, 342.00);
CreateDynamicObject(1715, 2068.00, -2221.70, 2663.60,   0.00, 0.00, 20.00);
CreateDynamicObject(1715, 2065.10, -2221.60, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1715, 2063.80, -2221.60, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 2069.70, -2208.50, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 2068.10, -2212.20, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1704, 2070.90, -2212.90, 2663.60,   0.00, 0.00, 178.00);
CreateDynamicObject(2311, 2069.70, -2211.00, 2663.60,   0.00, 0.00, 358.00);
CreateDynamicObject(1714, 2062.10, -2217.70, 2663.60,   0.00, 0.00, 78.00);
CreateDynamicObject(1663, 2065.04, -2217.24, 2664.10,   0.00, 0.00, 282.00);
CreateDynamicObject(1663, 2064.85, -2218.93, 2664.10,   0.00, 0.00, 242.00);
CreateDynamicObject(7191, 2066.70, -2184.20, 2665.60,   0.00, 0.00, 180.00);
CreateDynamicObject(1502, 2066.70, -2206.30, 2663.60,   0.00, 0.00, 269.99);
CreateDynamicObject(7191, 2066.90, -2185.80, 2668.10,   0.00, 0.00, 179.40);
CreateDynamicObject(2163, 2067.10, -2225.10, 2663.60,   0.00, 0.00, 180.00);
CreateDynamicObject(2161, 2062.30, -2224.70, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2162, 2072.20, -2223.80, 2663.70,   0.00, 0.00, 270.00);
CreateDynamicObject(2165, 2070.00, -2218.20, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1806, 2071.10, -2217.90, 2663.60,   0.00, 0.00, 68.00);
CreateDynamicObject(1663, 2068.90, -2217.70, 2664.10,   0.00, 0.00, 88.00);
CreateDynamicObject(14604, 2062.40, -2204.20, 2664.60,   0.00, 0.00, 224.00);
CreateDynamicObject(2700, 2070.90, -2208.30, 2667.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2202, 2071.90, -2220.60, 2663.60,   0.00, 0.00, 268.00);
CreateDynamicObject(2205, 2070.30, -2206.30, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1714, 2071.80, -2205.70, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1671, 2068.90, -2205.00, 2664.10,   0.00, 0.00, 86.00);
CreateDynamicObject(1671, 2069.00, -2206.20, 2664.10,   0.00, 0.00, 90.00);
CreateDynamicObject(644, 2062.20, -2221.90, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2737, 2066.50, -2205.30, 2665.50,   0.00, 0.00, 272.00);
CreateDynamicObject(2610, 2072.00, -2203.80, 2664.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2184, 2063.78, -2219.09, 2663.60,   0.00, 0.00, 78.00);
CreateDynamicObject(2606, 2063.79, -2218.00, 2664.40,   324.00, 0.00, 260.00);
CreateDynamicObject(2283, 2072.19, -2206.00, 2666.10,   0.00, 0.00, 270.00);
CreateDynamicObject(2270, 2067.40, -2208.50, 2665.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2108, 2067.60, -2208.30, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2108, 2072.10, -2223.10, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2108, 2065.40, -2225.00, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1616, 2061.90, -2208.20, 2667.20,   0.00, 0.00, 180.00);
CreateDynamicObject(1722, 2064.60, -2204.10, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1722, 2064.50, -2204.80, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1722, 2063.50, -2204.80, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1722, 2063.50, -2204.00, 2663.60,   0.00, 0.00, 270.00);
/////Restaurante
CreateDynamicObject(3498, 1397.73, -1882.44, 15.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1397.29, -1882.28, 18.45,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1385.99, -1882.27, 18.45,   0.00, 0.00, 90.00);
CreateDynamicObject(3498, 1380.15, -1882.44, 15.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1393.77, -1882.45, 20.22,   0.00, 90.00, 0.00);
CreateDynamicObject(3498, 1384.81, -1882.44, 20.22,   0.00, 90.00, 180.00);
CreateDynamicObject(3498, 1380.11, -1891.77, 15.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1379.91, -1884.62, 14.33,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1379.89, -1888.56, 14.33,   90.00, 0.00, 0.00);
CreateDynamicObject(3498, 1380.13, -1887.05, 20.22,   0.00, 90.00, 90.00);
CreateDynamicObject(3498, 1380.13, -1887.05, 20.22,   0.00, 90.00, -90.00);
CreateDynamicObject(3851, 1379.90, -1889.60, 14.33,   90.00, 0.00, 0.00);
CreateDynamicObject(3498, 1397.69, -1891.95, 15.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1393.89, -1891.95, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1385.27, -1891.98, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1389.54, -1892.00, 19.36,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1383.05, -1892.03, 14.33,   90.00, 0.00, 90.00);
CreateDynamicObject(3498, 1384.70, -1891.80, 20.22,   0.00, 90.00, 180.00);
CreateDynamicObject(3851, 1382.31, -1892.02, 14.33,   90.00, 0.00, 90.00);
CreateDynamicObject(3498, 1393.58, -1891.80, 20.22,   0.00, 90.00, 180.00);
CreateDynamicObject(3851, 1396.04, -1891.93, 14.33,   90.00, 0.00, 90.00);
CreateDynamicObject(3498, 1389.54, -1892.00, 19.64,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1385.73, -1884.40, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1385.72, -1888.28, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1397.00, -1888.31, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1397.03, -1884.41, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1385.97, -1889.73, 20.49,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1392.22, -1889.82, 20.47,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1397.79, -1884.67, 14.79,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1397.77, -1888.68, 14.79,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1397.75, -1889.65, 14.79,   90.00, 0.00, 0.00);
CreateDynamicObject(14651, 1383.13, -1889.66, 18.68,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1383.17, -1885.57, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1387.58, -1884.75, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1386.40, -1888.89, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(16151, 1396.95, -1887.19, 16.81,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1390.22, -1887.49, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(8615, 1389.37, -1893.13, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1395.17, -1899.48, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1391.92, -1896.33, 12.95,   0.00, 0.00, -79.92);
CreateDynamicObject(1679, 1388.92, -1900.16, 12.95,   0.00, 0.00, -79.92);
CreateDynamicObject(1679, 1387.78, -1896.39, 12.95,   0.00, 0.00, -79.92);
CreateDynamicObject(642, 1387.71, -1896.43, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1391.90, -1896.36, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1395.14, -1899.54, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1388.87, -1900.16, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1368.12, -1892.82, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1368.03, -1899.96, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1368.30, -1892.53, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1368.42, -1899.86, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1379.49, -1882.23, 14.49,   0.00, 0.00, -89.22);
CreateDynamicObject(1231, 1365.99, -1880.63, 14.49,   0.00, 0.00, -89.22);
CreateDynamicObject(717, 1368.19, -1885.65, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1368.16, -1885.64, 12.92,   0.00, 0.00, 0.00);
////Mapa de miniplaza por Boxter
CreateDynamicObject(983, 1282.90, -1560.70, 13.20,   0.00, 0.00, 270.34);
CreateDynamicObject(983, 1270.10, -1560.80, 13.20,   0.00, 0.00, 270.34);
CreateDynamicObject(983, 1276.50, -1560.80, 13.20,   0.00, 0.00, 270.34);
CreateDynamicObject(983, 1286.50, -1539.20, 13.20,   0.00, 0.00, 179.13);
CreateDynamicObject(983, 1286.20, -1557.50, 13.20,   0.00, 0.00, 177.58);
CreateDynamicObject(983, 1286.40, -1551.10, 13.20,   0.00, 0.00, 179.13);
CreateDynamicObject(983, 1271.00, -1523.10, 13.20,   0.00, 0.00, 89.46);
CreateDynamicObject(983, 1286.60, -1532.80, 13.20,   0.00, 0.00, 179.13);
CreateDynamicObject(983, 1286.70, -1526.40, 13.20,   0.00, 0.00, 179.13);
CreateDynamicObject(983, 1283.60, -1523.20, 13.20,   0.00, 0.00, 89.46);
CreateDynamicObject(983, 1277.20, -1523.10, 13.20,   0.00, 0.00, 89.46);
CreateDynamicObject(983, 1267.90, -1526.40, 13.30,   0.00, 0.00, 180.67);
CreateDynamicObject(817, 1280.10, -1553.10, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(817, 1280.10, -1553.10, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(817, 1279.90, -1531.60, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(762, 1327.10, -1493.30, 1783.00,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1316.30, -1560.80, 324.40,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1269.10, -1560.10, 13.30,   0.00, 0.00, 270.34);
CreateDynamicObject(638, 1272.40, -1560.10, 13.30,   0.00, 0.00, 270.34);
CreateDynamicObject(638, 1275.70, -1560.10, 13.30,   0.00, 0.00, 270.34);
CreateDynamicObject(638, 1279.30, -1560.10, 13.30,   0.00, 0.00, 270.34);
CreateDynamicObject(638, 1282.50, -1560.10, 13.30,   0.00, 0.00, 270.34);
CreateDynamicObject(638, 1285.60, -1558.80, 13.30,   0.00, 0.00, 177.58);
CreateDynamicObject(638, 1285.70, -1555.90, 13.30,   0.00, 0.00, 177.58);
CreateDynamicObject(638, 1285.90, -1552.80, 13.20,   0.00, 0.00, 177.58);
CreateDynamicObject(638, 1286.00, -1549.50, 13.30,   0.00, 0.00, 177.58);
CreateDynamicObject(638, 1285.90, -1541.30, 13.20,   0.00, 0.00, 179.12);
CreateDynamicObject(638, 1285.90, -1537.10, 13.20,   0.00, 0.00, 179.12);
CreateDynamicObject(638, 1285.90, -1533.20, 13.20,   0.00, 0.00, 179.12);
CreateDynamicObject(638, 1285.90, -1529.60, 13.20,   0.00, 0.00, 179.12);
CreateDynamicObject(638, 1286.00, -1526.00, 13.30,   0.00, 0.00, 179.12);
CreateDynamicObject(638, 1283.90, -1524.10, 13.30,   0.00, 0.00, 91.00);
CreateDynamicObject(638, 1280.70, -1524.10, 13.30,   0.00, 0.00, 91.00);
CreateDynamicObject(638, 1277.40, -1524.00, 13.30,   0.00, 0.00, 91.00);
CreateDynamicObject(638, 1274.10, -1523.90, 13.30,   0.00, 0.00, 91.00);
CreateDynamicObject(638, 1270.40, -1524.00, 13.30,   0.00, 0.00, 91.00);
CreateDynamicObject(1594, 1276.20, -1527.70, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1272.20, -1528.50, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1273.60, -1532.00, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1276.90, -1532.60, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1282.70, -1531.90, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1280.80, -1526.90, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1282.70, -1529.50, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1275.20, -1530.00, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1277.10, -1554.70, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1278.10, -1557.30, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1281.30, -1556.60, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1283.30, -1554.10, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1283.70, -1557.80, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1283.30, -1550.00, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1594, 1276.60, -1551.20, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(14582, 1273.90, -1542.50, 16.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2916, 1254.00, -1545.30, 61.00,   0.00, 0.00, 0.00);
CreateDynamicObject(5812, 1252.60, -1504.88, 12.04,   0.00, 0.00, 89.92);
CreateDynamicObject(10562, 1300.62, -1478.69, 11.43,   0.00, 0.00, -87.06);
CreateDynamicObject(8397, 1290.98, -1467.12, 21.23,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1230.02, -1507.30, 11.93,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1241.68, -1501.02, 11.93,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1249.08, -1507.01, 11.93,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1258.23, -1501.52, 11.93,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1265.65, -1506.88, 11.93,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1270.06, -1500.62, 11.93,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1278.63, -1507.14, 11.93,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1278.95, -1500.65, 11.93,   0.00, 0.00, 0.00);
CreateDynamicObject(750, 1231.58, -1500.38, 11.93,   0.00, 0.00, 0.00);
CreateDynamicObject(11556, 1253.59, -1516.52, 3.53,   0.00, 0.00, -5.58);
CreateDynamicObject(11556, 1251.97, -1491.66, 3.53,   0.00, 0.00, 170.04);
CreateDynamicObject(673, 1241.08, -1494.57, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1256.84, -1494.65, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1270.38, -1494.67, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1287.40, -1495.21, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1290.53, -1504.62, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1283.70, -1513.89, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1266.73, -1514.00, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1246.07, -1514.67, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1221.88, -1513.35, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1215.11, -1504.37, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1219.71, -1496.04, 10.85,   0.00, 0.00, 0.00);
CreateDynamicObject(615, 1306.19, -1470.57, 9.62,   3.14, 0.00, 1.27);
CreateDynamicObject(615, 1272.79, -1469.33, 9.62,   3.14, 0.00, 1.27);
//Mapa del alhambra
CreateDynamicObject(1236, 1837.20, -1666.40, 13.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2672, 1835.60, -1670.70, 12.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1257, 1829.10, -1725.60, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1831.20, -1680.80, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1831.80, -1679.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1831.80, -1684.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1831.20, -1684.00, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(640, 1831.80, -1674.20, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(640, 1832.00, -1690.90, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1835.00, -1691.00, 11.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1834.70, -1674.20, 11.90,   0.00, 0.00, 0.00);
CreateDynamicObject(736, 1888.20, -1741.70, 23.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1913.60, -1718.60, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1483, 1911.50, -1715.40, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1483, 1911.50, -1708.60, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1483, 1911.50, -1701.80, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1483, 1911.50, -1695.00, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1483, 1911.40, -1668.30, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1483, 1911.40, -1661.50, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1483, 1911.40, -1654.70, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1483, 1911.40, -1647.90, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1913.70, -1715.40, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.60, -1712.10, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.60, -1708.60, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.70, -1705.30, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.60, -1701.80, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.60, -1698.50, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.60, -1695.00, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.50, -1691.70, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(640, 1913.80, -1691.20, 13.10,   0.00, 0.00, 270.00);
CreateDynamicObject(1251, 1913.50, -1671.60, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(640, 1913.70, -1672.10, 13.10,   0.00, 0.00, 269.99);
CreateDynamicObject(1251, 1913.50, -1668.30, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.50, -1665.00, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.50, -1661.50, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.60, -1658.20, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.40, -1654.70, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.50, -1651.40, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.50, -1647.90, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1913.40, -1644.60, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(640, 1913.60, -1644.10, 13.10,   0.00, 0.00, 269.99);
CreateDynamicObject(640, 1913.90, -1719.10, 13.10,   0.00, 0.00, 269.99);
CreateDynamicObject(19124, 1931.80, -1684.80, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1931.50, -1691.10, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1931.50, -1673.50, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1931.80, -1679.80, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1917.40, -1685.90, 11.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1917.40, -1678.00, 11.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1916.80, -1691.20, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1916.80, -1719.10, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1916.60, -1672.10, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1916.50, -1644.10, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2714, 1837.10, -1678.40, 15.90,   0.00, 0.00, 272.00);
CreateDynamicObject(1238, 1932.40, -1685.90, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1238, 1932.30, -1678.70, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2714, 1837.11, -1686.50, 15.90,   0.00, 0.00, 272.00);
////parle for Gabriel/gabox/Gabo$
CreateDynamicObject(3657, 1719.42, -1706.63, 12.94,   0.00, 0.00, 90.18);
CreateDynamicObject(3657, 1719.32, -1700.70, 12.94,   0.00, 0.00, 90.18);
CreateDynamicObject(3657, 1722.66, -1700.67, 12.94,   0.00, 0.00, 271.09);
CreateDynamicObject(3657, 1722.77, -1706.53, 12.94,   0.00, 0.00, 271.09);
CreateDynamicObject(1231, 1722.63, -1703.34, 13.51,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1722.89, -1708.72, 13.51,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1719.38, -1708.77, 13.51,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1719.37, -1703.36, 13.51,   0.00, 0.00, 359.18);
CreateDynamicObject(1360, 1720.99, -1707.10, 13.20,   0.00, 0.00, 0.67);
CreateDynamicObject(1360, 1720.95, -1703.60, 13.20,   0.00, 0.00, 0.67);
CreateDynamicObject(1360, 1720.93, -1700.32, 13.20,   0.00, 0.00, 0.67);
CreateDynamicObject(3935, 1720.76, -1695.79, 13.64,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1708.13, -1712.82, 13.35,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1708.86, -1712.89, 13.45,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1709.64, -1712.77, 13.45,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1711.04, -1711.50, 13.35,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1710.31, -1710.65, 13.55,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1708.67, -1710.50, 13.35,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1707.65, -1711.52, 13.25,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1707.79, -1710.91, 13.25,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1708.87, -1709.06, 13.55,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1710.95, -1708.92, 13.55,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1712.04, -1709.59, 13.55,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1711.80, -1710.53, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1712.76, -1709.53, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1713.57, -1708.46, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1712.00, -1707.55, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1710.20, -1707.29, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1708.70, -1707.09, 13.34,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1707.87, -1708.92, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1707.98, -1706.93, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1707.85, -1706.29, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1707.67, -1704.68, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1709.30, -1705.08, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1710.63, -1704.82, 13.25,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1710.96, -1705.67, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1712.95, -1705.54, 13.55,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1713.89, -1706.77, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1712.27, -1703.23, 13.55,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1713.91, -1703.16, 13.35,   0.00, 0.00, 25.79);
CreateDynamicObject(870, 1714.28, -1705.09, 13.25,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1707.76, -1702.22, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1708.44, -1702.56, 13.24,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1710.27, -1702.74, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1707.66, -1699.97, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1712.99, -1700.85, 13.34,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1711.55, -1700.51, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1709.53, -1700.35, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1712.27, -1698.30, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1714.09, -1698.61, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1714.37, -1701.74, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1707.70, -1698.44, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1710.65, -1698.19, 13.35,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1709.30, -1698.29, 13.34,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.47, -1712.91, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1734.21, -1712.74, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1733.85, -1711.13, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.39, -1711.33, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.70, -1711.52, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.64, -1712.65, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.72, -1709.69, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.66, -1707.97, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1734.29, -1708.67, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1734.92, -1708.05, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1733.04, -1708.72, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1731.78, -1709.40, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1732.89, -1710.90, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1732.69, -1711.35, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1733.31, -1711.92, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1731.81, -1710.38, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1730.57, -1709.20, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.71, -1708.37, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.06, -1707.71, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1731.08, -1706.80, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1730.81, -1705.00, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1733.02, -1705.77, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1733.04, -1706.92, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.16, -1705.44, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1733.65, -1703.36, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.59, -1704.07, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.75, -1705.91, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1732.60, -1704.03, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.39, -1701.75, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.17, -1703.92, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.37, -1705.96, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1730.40, -1705.94, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1730.92, -1703.97, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.79, -1701.86, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1734.71, -1701.57, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1732.87, -1700.88, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1731.48, -1702.39, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.34, -1699.73, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1730.54, -1699.97, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1732.15, -1701.14, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1734.96, -1699.19, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1732.93, -1698.56, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1731.31, -1697.56, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.13, -1697.32, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1730.99, -1699.00, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.44, -1697.47, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1733.71, -1696.41, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1731.81, -1695.63, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.16, -1692.40, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.24, -1694.56, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.24, -1694.56, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1730.41, -1695.48, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1731.60, -1693.71, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1732.72, -1691.40, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1730.83, -1691.04, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1734.53, -1691.90, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1732.87, -1693.36, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1734.36, -1693.99, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.26, -1695.61, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.36, -1693.57, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.57, -1691.49, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1734.22, -1690.78, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1729.43, -1690.67, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.69, -1690.41, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(870, 1735.53, -1696.05, 13.45,   0.00, 0.00, 25.49);
CreateDynamicObject(1231, 1727.30, -1708.77, 13.81,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1733.31, -1714.53, 14.11,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1737.30, -1714.54, 14.11,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1737.26, -1689.15, 14.11,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1727.72, -1689.02, 14.11,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1715.55, -1696.81, 14.11,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1715.70, -1708.75, 14.11,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1710.26, -1714.35, 14.11,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1706.65, -1714.32, 14.11,   0.00, 0.00, 359.18);
CreateDynamicObject(1231, 1706.57, -1696.72, 14.11,   0.00, 0.00, 359.18);
///camaras
CreateDynamicObject(1886, 1629.63, -1862.52, 21.85,   0.00, 0.00, -74.28);
CreateDynamicObject(2921, 1554.21, -1700.59, 25.32,   0.00, 0.00, -13.02);
CreateDynamicObject(1886, 1498.47, -1582.29, 18.75,   0.00, 0.00, 0.00);
CreateDynamicObject(2921, 1184.94, -1367.60, 21.87,   0.00, 0.00, -61.08);
CreateDynamicObject(1886, 807.46, -1367.80, 21.49,   0.00, 0.00, -95.76);
CreateDynamicObject(1886, 611.36, -1361.41, 21.24,   0.00, 0.00, 90.06);
CreateDynamicObject(1886, 299.32, -1610.19, 38.36,   0.00, 0.00, 79.38);
CreateDynamicObject(1886, 1787.87, -1867.31, 27.82,   0.00, 0.00, 116.82);
CreateDynamicObject(1886, 1814.33, -1698.53, 27.46,   0.00, 0.00, 129.30);
CreateDynamicObject(2921, 1364.44, -1758.86, 16.86,   0.00, 0.00, 0.00);
CreateDynamicObject(1886, 1304.14, -897.57, 41.38,   0.00, 0.00, 59.58);
CreateDynamicObject(2921, 531.74, -1293.97, 25.02,   0.00, 0.00, -109.62);
///Lugares de carrito de compra ;D
CreateDynamicObject(643, 1483.24, -1680.19, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1475.48, -1678.47, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1476.23, -1682.83, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1481.68, -1684.32, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1480.59, -1694.39, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1477.23, -1689.50, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1476.88, -1695.89, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1481.95, -1691.01, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1480.37, -1705.87, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1480.91, -1699.64, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(643, 1484.79, -1702.67, 13.56,   0.00, 0.00, 359.70);
CreateDynamicObject(1342, 1479.58, -1677.91, 14.08,   0.00, 0.00, -91.56);
CreateDynamicObject(1341, 1474.32, -1692.75, 14.02,   0.00, 0.00, 0.00);
CreateDynamicObject(1340, 1474.96, -1704.05, 14.11,   0.00, 0.00, 1.08);
CreateDynamicObject(1319, 1356.32, -1747.58, 12.80,   0.00, 0.00, 89.70);
CreateDynamicObject(1319, 1356.23, -1749.40, 12.80,   0.00, 0.00, 89.70);
CreateDynamicObject(1319, 1356.14, -1751.03, 12.80,   0.00, 0.00, 89.70);
CreateDynamicObject(1319, 1356.08, -1752.60, 12.80,   0.00, 0.00, 89.70);
CreateDynamicObject(1319, 1356.03, -1754.25, 12.80,   0.00, 0.00, 89.70);
CreateDynamicObject(1319, 1355.96, -1755.67, 12.80,   0.00, 0.00, 89.70);
CreateDynamicObject(1340, 1359.35, -1748.55, 13.35,   0.00, 0.00, 214.56);
CreateDynamicObject(1341, 1358.74, -1755.30, 13.55,   0.00, 0.00, 120.66);
CreateDynamicObject(1342, 1359.95, -1752.11, 13.37,   0.00, 0.00, 176.28);
CreateDynamicObject(1341, 379.07, -2075.11, 7.98,   0.00, 0.00, 0.00);
CreateDynamicObject(1341, 384.87, -2058.28, 7.98,   0.00, 0.00, 88.38);
CreateDynamicObject(1340, 376.78, -2043.83, 7.95,   356.86, 0.00, 174.05);
CreateDynamicObject(1342, 364.91, -2040.62, 8.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1342, 374.96, -2022.04, 8.24,   0.00, 0.00, 181.50);
CreateDynamicObject(1342, 354.50, -1360.15, 14.45,   0.00, 0.00, -60.48);
CreateDynamicObject(1341, 344.80, -1365.06, 14.45,   0.00, 0.00, 0.00);
///Pizzas BOys Creo de 4Game
CreateDynamicObject(996, 2091.90, -1802.40, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(994, 2099.35, -1790.92, 12.66,   0.00, 0.00, -90.00);
CreateDynamicObject(994, 2099.39, -1796.20, 12.66,   0.00, 0.00, 270.00);
CreateDynamicObject(996, 2091.91, -1790.95, 13.31,   0.00, 0.00, 0.00);
CreateDynamicObject(996, 2091.72, -1811.46, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(996, 2091.76, -1822.78, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(994, 2099.19, -1817.67, 12.66,   0.00, 0.00, 90.00);
CreateDynamicObject(994, 2099.20, -1822.84, 12.66,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 2099.14, -1812.79, 13.41,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2099.04, -1815.56, 13.56,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2099.16, -1818.57, 13.42,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2099.18, -1821.44, 13.35,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2099.14, -1791.69, 13.39,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2099.19, -1794.44, 13.29,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2099.24, -1797.16, 13.35,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 2099.25, -1800.04, 13.29,   0.00, 0.00, 90.00);
CreateDynamicObject(710, 2096.30, -1788.06, 27.87,   0.00, 0.00, 0.00);
CreateDynamicObject(710, 2097.52, -1777.09, 27.73,   0.00, 0.00, 0.00);
CreateDynamicObject(710, 2093.88, -1825.26, 27.75,   0.00, 0.00, 0.00);
CreateDynamicObject(710, 2105.04, -1829.21, 27.92,   0.00, 0.00, 0.00);
CreateDynamicObject(710, 2123.99, -1828.70, 27.90,   0.00, 0.00, 0.00);
CreateDynamicObject(710, 2131.64, -1790.90, 27.86,   0.00, 0.00, 0.00);
CreateDynamicObject(710, 2131.41, -1810.52, 27.80,   0.00, 0.00, 0.00);
CreateDynamicObject(718, 2100.83, -1821.09, 12.23,   0.00, 0.00, 0.00);
CreateDynamicObject(718, 2100.83, -1791.95, 12.23,   0.00, 0.00, 0.00);
CreateDynamicObject(1256, 2095.33, -1803.54, 13.16,   0.00, 0.00, 90.00);
CreateDynamicObject(1256, 2095.36, -1810.29, 13.16,   0.00, 0.00, -90.00);
CreateDynamicObject(19124, 2097.13, -1810.32, 13.12,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2093.55, -1810.49, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 2093.61, -1803.40, 13.11,   0.00, 0.00, -112.50);
CreateDynamicObject(19124, 2097.17, -1803.45, 13.12,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 2101.02, -1816.99, 14.99,   0.00, 0.00, -101.25);
CreateDynamicObject(1232, 2100.41, -1796.14, 15.00,   0.00, 0.00, 0.00);
CreateDynamicObject(4697, 2115.42, -1778.05, 12.67,   0.00, -1.72, 90.00);
CreateDynamicObject(4697, 2131.48, -1786.78, 13.16,   0.00, -5.16, 0.00);
CreateDynamicObject(1269, 2124.00, -1764.44, 13.39,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2123.99, -1768.28, 13.39,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2123.98, -1773.09, 13.38,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2124.03, -1777.84, 13.38,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2124.00, -1781.90, 13.38,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 2120.32, -1786.16, 13.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 2115.74, -1786.19, 13.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 2111.10, -1786.17, 13.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 2106.55, -1786.21, 13.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 2101.92, -1786.61, 13.38,   0.00, 0.00, 0.00);
CreateDynamicObject(910, 2124.60, -1808.02, 13.82,   0.00, 0.00, -270.00);
CreateDynamicObject(922, 2124.12, -1815.54, 13.44,   0.00, 0.00, -90.00);
CreateDynamicObject(928, 2126.55, -1799.97, 12.81,   0.00, 0.00, -135.00);
CreateDynamicObject(928, 2125.74, -1800.57, 12.81,   0.00, 0.00, 45.00);
CreateDynamicObject(928, 2126.62, -1801.11, 12.81,   0.00, 0.00, 33.75);
CreateDynamicObject(1227, 2124.22, -1797.01, 13.41,   0.00, 0.00, 90.00);
CreateDynamicObject(1236, 2134.11, -1802.04, 13.20,   0.00, 0.00, -90.00);
CreateDynamicObject(1299, 2134.43, -1796.91, 12.99,   0.00, 0.00, 90.00);
CreateDynamicObject(1333, 2134.75, -1817.22, 13.47,   0.00, 0.00, -90.00);
CreateDynamicObject(1334, 2124.29, -1802.48, 13.67,   0.00, 0.00, -90.00);
CreateDynamicObject(1338, 2130.06, -1802.11, 13.27,   0.00, 0.00, -180.00);
CreateDynamicObject(3262, 2123.24, -1791.07, 11.73,   0.00, 0.00, -180.00);
CreateDynamicObject(3262, 2092.48, -1828.09, 12.56,   0.00, 0.00, -90.00);
CreateDynamicObject(1231, 2099.29, -1771.66, 15.09,   0.00, 0.00, 78.75);
CreateDynamicObject(1231, 2096.79, -1782.72, 15.17,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 2105.22, -1788.24, 15.12,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 2118.65, -1788.62, 15.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 2125.74, -1780.48, 15.09,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 2125.67, -1768.72, 15.10,   0.00, 0.00, 90.00);
CreateDynamicObject(918, 2124.95, -1799.20, 12.93,   0.00, 0.00, -213.75);
CreateDynamicObject(918, 2128.59, -1796.91, 12.92,   0.00, 0.00, -180.00);
CreateDynamicObject(918, 2131.35, -1806.51, 12.93,   0.00, 0.00, 0.00);
CreateDynamicObject(2814, 2102.12, -1793.15, 13.29,   0.00, 0.00, -22.50);
CreateDynamicObject(2838, 2103.67, -1796.00, 13.29,   0.00, 0.00, -56.25);
CreateDynamicObject(2838, 2101.60, -1798.21, 13.29,   0.00, 0.00, 191.25);
CreateDynamicObject(2857, 2102.13, -1814.62, 13.18,   0.00, 0.00, -33.75);
CreateDynamicObject(2860, 2102.10, -1819.98, 13.29,   0.00, 0.00, -45.00);
CreateDynamicObject(996, 2091.94, -1802.43, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(625, 2100.07, -1810.47, 13.31,   0.00, 0.00, 0.00);
CreateDynamicObject(625, 2098.20, -1804.94, 13.26,   0.00, 0.00, -101.25);
CreateDynamicObject(625, 2093.28, -1808.67, 13.33,   0.00, 0.00, 67.50);
CreateDynamicObject(625, 2092.62, -1805.46, 13.33,   0.00, 0.00, -90.00);
///decoraciones de la hq de taxis por 4Games
CreateDynamicObject(996, 1788.31, -1950.32, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(996, 1796.38, -1950.33, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(997, 1806.99, -1950.33, 12.65,   0.00, 0.00, -180.00);
CreateDynamicObject(996, 1806.94, -1949.73, 13.30,   0.00, 0.00, 90.00);
CreateDynamicObject(640, 1806.58, -1945.60, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1806.58, -1948.92, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(640, 1803.95, -1949.96, 13.24,   0.00, 0.00, -90.00);
CreateDynamicObject(640, 1798.67, -1949.97, 13.24,   0.00, 0.00, -90.00);
CreateDynamicObject(640, 1793.39, -1949.97, 13.24,   0.00, 0.00, -90.00);
CreateDynamicObject(638, 1789.42, -1949.95, 13.24,   0.00, 0.00, -90.00);
CreateDynamicObject(638, 1789.02, -1949.94, 13.24,   0.00, 0.00, -90.00);
CreateDynamicObject(673, 1806.58, -1943.56, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1806.30, -1949.92, 12.87,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1799.35, -1949.95, 12.87,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1793.56, -1950.11, 12.85,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1787.95, -1949.98, 12.51,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1798.07, -1946.36, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1798.93, -1946.33, 12.95,   0.00, 0.00, -180.00);
CreateDynamicObject(1280, 1791.02, -1946.14, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1791.80, -1946.20, 12.95,   0.00, 0.00, -180.00);
CreateDynamicObject(1216, 1794.28, -1946.11, 13.24,   0.00, 0.00, -90.00);
CreateDynamicObject(1216, 1794.81, -1946.16, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(1234, 1794.50, -1946.15, 14.19,   0.00, 0.00, -180.00);
CreateDynamicObject(1234, 1794.51, -1946.17, 14.19,   0.00, 0.00, -90.00);
CreateDynamicObject(1234, 1794.52, -1946.19, 14.19,   0.00, 0.00, 0.00);
CreateDynamicObject(1234, 1794.52, -1946.16, 14.19,   0.00, 0.00, 90.00);
CreateDynamicObject(1232, 1794.51, -1946.18, 12.91,   0.00, 0.00, -11.25);
CreateDynamicObject(4697, 1782.28, -1924.59, 12.44,   0.00, 0.00, 0.00);
CreateDynamicObject(4697, 1799.00, -1927.61, 12.44,   0.00, 0.00, -630.00);
CreateDynamicObject(4697, 1839.11, -1921.16, -3.86,   0.00, 26.64, -360.00);
CreateDynamicObject(717, 1796.99, -1936.27, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1790.59, -1936.26, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1783.87, -1936.25, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1777.22, -1936.31, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 1806.88, -1903.04, 13.40,   0.00, 0.00, -90.00);
CreateDynamicObject(1269, 1806.72, -1907.92, 13.22,   0.00, 0.00, 78.75);
CreateDynamicObject(1269, 1806.76, -1912.44, 13.39,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1806.96, -1917.29, 13.21,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1806.82, -1920.94, 13.38,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1806.78, -1925.36, 13.38,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1803.17, -1935.91, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 1799.18, -1935.63, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 1794.28, -1935.70, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 1789.62, -1935.59, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 1785.75, -1935.67, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 1781.20, -1935.60, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 1775.85, -1935.66, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1269, 1774.31, -1929.46, 13.37,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1774.32, -1924.94, 13.37,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1774.27, -1920.24, 13.32,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1774.21, -1915.25, 13.37,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1774.23, -1910.94, 13.37,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1774.20, -1907.04, 13.37,   0.00, 0.00, 90.00);
CreateDynamicObject(1269, 1774.21, -1901.82, 13.37,   0.00, 0.00, 90.00);
CreateDynamicObject(19124, 1806.48, -1905.82, 12.96,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1806.45, -1910.22, 12.96,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1806.60, -1914.87, 12.96,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1806.60, -1914.81, 12.96,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1806.46, -1919.33, 12.96,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1806.51, -1923.85, 12.96,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1806.38, -1928.38, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1805.57, -1935.13, 13.01,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1801.13, -1935.22, 13.04,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1796.70, -1935.20, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1792.19, -1935.24, 13.04,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1787.71, -1935.25, 13.04,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1783.21, -1935.22, 13.04,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1778.67, -1935.29, 13.05,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1774.62, -1931.29, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1774.62, -1926.86, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1774.55, -1922.41, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1774.55, -1917.81, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1774.57, -1913.28, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1774.64, -1908.76, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1774.54, -1904.28, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1774.63, -1899.66, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(624, 1759.08, -1916.31, 12.05,   0.00, 0.00, 0.00);
CreateDynamicObject(624, 1758.91, -1924.64, 12.13,   0.00, 0.00, 0.00);
CreateDynamicObject(624, 1758.95, -1931.71, 11.98,   0.00, 0.00, 0.00);
CreateDynamicObject(18257, 1773.29, -1994.91, 12.67,   0.00, 0.00, -326.25);
CreateDynamicObject(18260, 1758.82, -1997.65, 14.27,   0.00, 0.00, -180.00);
CreateDynamicObject(10773, 1731.29, -1995.00, 15.47,   0.00, 0.00, 33.75);
CreateDynamicObject(8885, 1800.54, -2032.02, 15.94,   0.00, 0.00, -292.50);
CreateDynamicObject(8885, 1778.91, -2036.02, 15.94,   0.00, 0.00, -112.50);
CreateDynamicObject(8883, 1762.40, -2069.54, 16.04,   0.00, 0.00, -90.00);
CreateDynamicObject(5269, 1695.20, -2003.68, 15.43,   0.00, 0.00, -90.00);
CreateDynamicObject(3577, 1721.82, -1978.53, 13.90,   0.00, 0.00, -101.25);
CreateDynamicObject(3574, 1700.64, -1980.45, 15.81,   0.00, 0.00, -236.25);
CreateDynamicObject(1391, 1705.98, -2001.63, 23.05,   0.00, 0.00, 101.25);
CreateDynamicObject(1394, 1705.87, -2001.70, 35.31,   0.00, 0.00, -67.50);
CreateDynamicObject(11401, 1759.77, -1979.31, 36.66,   0.00, 0.00, 22.50);
CreateDynamicObject(8883, 1689.17, -2036.18, 16.57,   0.00, 0.00, -180.00);
CreateDynamicObject(996, 1658.84, -1877.40, 13.29,   0.00, 0.00, -180.00);
CreateDynamicObject(996, 1666.76, -1875.94, 13.28,   0.00, 0.00, -168.75);
CreateDynamicObject(994, 1673.47, -1874.60, 12.63,   0.00, 0.00, 191.25);
CreateDynamicObject(994, 1678.58, -1871.14, 12.63,   0.00, 0.00, 213.75);
CreateDynamicObject(994, 1683.75, -1867.73, 12.63,   0.00, 0.00, -146.25);
CreateDynamicObject(994, 1687.40, -1862.76, 12.58,   0.00, 0.00, 233.67);
CreateDynamicObject(994, 1690.82, -1857.61, 12.57,   0.00, 0.00, 236.25);
CreateDynamicObject(997, 1692.51, -1855.00, 12.63,   0.00, 0.00, -123.75);
CreateDynamicObject(994, 1693.69, -1848.95, 12.63,   0.00, 0.00, 258.75);
CreateDynamicObject(994, 1694.89, -1842.92, 12.64,   0.00, 0.00, 258.75);
CreateDynamicObject(994, 1694.86, -1836.74, 12.64,   0.00, 0.00, 270.00);
CreateDynamicObject(994, 1694.86, -1830.56, 12.64,   0.00, 0.00, 270.00);
CreateDynamicObject(996, 1650.79, -1877.40, 13.29,   0.00, 0.00, -180.00);
CreateDynamicObject(996, 1642.73, -1877.40, 13.29,   0.00, 0.00, -180.00);
CreateDynamicObject(994, 1694.91, -1824.34, 12.64,   0.00, 0.00, 270.00);
CreateDynamicObject(624, 1727.30, -1900.81, 12.25,   0.00, 0.00, 0.00);
CreateDynamicObject(624, 1727.04, -1923.42, 11.83,   0.00, 0.00, 0.00);
CreateDynamicObject(624, 1701.94, -1922.75, 11.82,   0.00, 0.00, 0.00);
CreateDynamicObject(624, 1701.80, -1895.44, 11.70,   0.00, 0.00, 0.00);
CreateDynamicObject(624, 1707.34, -1933.79, 9.98,   0.00, 0.00, -11.25);
CreateDynamicObject(624, 1721.39, -1934.18, 11.44,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1714.04, -1917.01, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1714.30, -1906.79, 13.65,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1718.89, -1893.73, 13.07,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1715.08, -1911.80, 15.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1359, 1770.00, -1907.77, 13.16,   0.00, 0.00, 0.00);
CreateDynamicObject(9833, 1705.05, -1928.60, 15.37,   0.00, 0.00, -78.75);
CreateDynamicObject(1360, 1703.68, -1926.11, 13.34,   0.00, 0.00, -90.00);
CreateDynamicObject(1364, 1706.94, -1925.95, 13.35,   0.00, 0.00, 180.00);
CreateDynamicObject(1360, 1708.46, -1926.49, 13.33,   0.00, 0.00, -180.00);
CreateDynamicObject(1364, 1708.22, -1929.65, 13.35,   0.00, 0.00, 90.00);
CreateDynamicObject(1360, 1708.34, -1932.83, 13.34,   0.00, 0.00, -180.00);
CreateDynamicObject(747, 1706.02, -1932.08, 12.96,   0.00, 0.00, -78.75);
CreateDynamicObject(747, 1706.30, -1928.53, 12.96,   0.00, 0.00, 45.00);
CreateDynamicObject(747, 1704.13, -1927.51, 12.09,   0.00, 0.00, 112.50);
CreateDynamicObject(747, 1703.90, -1929.80, 12.11,   0.00, 0.00, 123.75);
CreateDynamicObject(748, 1706.40, -1927.59, 13.24,   0.00, 0.00, 202.50);
CreateDynamicObject(658, 1702.01, -1938.88, 12.70,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1711.16, -1938.71, 12.71,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1721.89, -1938.76, 12.72,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1713.74, -1938.76, 13.26,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1707.35, -1941.97, 13.21,   0.00, 0.00, -90.00);
CreateDynamicObject(983, 1700.95, -1938.75, 13.25,   0.00, 0.00, -180.00);
CreateDynamicObject(983, 1717.78, -1938.71, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1724.17, -1941.90, 13.22,   0.00, 0.00, 90.00);
CreateDynamicObject(634, 1706.27, -1940.39, 12.44,   0.00, 0.00, -123.75);
CreateDynamicObject(634, 1718.64, -1940.57, 12.47,   0.00, 0.00, -90.00);
CreateDynamicObject(634, 1724.91, -1940.40, 12.47,   0.00, 0.00, -101.25);
CreateDynamicObject(870, 1708.90, -1938.82, 12.82,   0.00, 0.00, -45.00);
CreateDynamicObject(870, 1703.04, -1940.51, 12.81,   0.00, 0.00, -56.25);
CreateDynamicObject(870, 1712.33, -1937.22, 12.82,   0.00, 0.00, -146.25);
CreateDynamicObject(870, 1705.16, -1937.22, 12.82,   0.00, 0.00, 33.75);
CreateDynamicObject(870, 1706.45, -1940.61, 12.81,   0.00, 0.00, 123.75);
CreateDynamicObject(870, 1719.64, -1940.32, 12.82,   0.00, 0.00, -56.25);
CreateDynamicObject(870, 1722.62, -1936.92, 12.82,   0.00, 0.00, -56.25);
CreateDynamicObject(870, 1724.53, -1940.15, 12.82,   0.00, 0.00, -78.75);
CreateDynamicObject(870, 1718.91, -1936.78, 12.82,   0.00, 0.00, 33.75);
CreateDynamicObject(3462, 1707.37, -1939.68, 14.09,   0.00, 0.00, 90.00);
CreateDynamicObject(2745, 1721.92, -1939.88, 13.79,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1702.75, -1940.64, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1712.91, -1940.75, 15.21,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1719.25, -1940.81, 15.22,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1724.93, -1940.76, 15.22,   0.00, 0.00, 0.00);
CreateDynamicObject(910, 1857.49, -1852.73, 13.85,   0.00, 0.00, 90.00);
CreateDynamicObject(923, 1857.41, -1845.39, 13.46,   0.00, 0.00, -90.00);
CreateDynamicObject(1227, 1857.51, -1842.74, 13.43,   0.00, 0.00, 90.00);
CreateDynamicObject(1264, 1858.21, -1840.73, 13.05,   0.00, 0.00, -45.00);
CreateDynamicObject(1264, 1858.59, -1841.39, 13.05,   0.00, 0.00, -45.00);
CreateDynamicObject(1264, 1858.56, -1840.89, 13.05,   0.00, 0.00, 0.00);
CreateDynamicObject(1265, 1857.81, -1841.36, 13.05,   0.00, 0.00, 33.75);
CreateDynamicObject(1333, 1857.53, -1836.52, 13.50,   0.00, 0.00, -90.00);
CreateDynamicObject(1338, 1860.83, -1847.05, 13.29,   0.00, 0.00, -101.25);
CreateDynamicObject(1344, 1860.85, -1839.48, 13.38,   0.00, 0.00, 270.00);
///Mapa del aereopuerto arena por 4Game
CreateDynamicObject(620, 1443.96, -2676.69, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1419.23, -2673.07, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1392.56, -2662.62, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1372.34, -2647.38, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1354.77, -2624.24, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1342.57, -2593.35, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1340.16, -2567.66, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1339.76, -2544.72, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1339.89, -2513.24, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1340.73, -2479.34, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1339.93, -2449.08, 12.64,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1339.89, -2415.77, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1339.52, -2391.66, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1339.24, -2362.61, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1339.52, -2327.19, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1339.90, -2296.57, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1340.37, -2267.29, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1339.69, -2234.72, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1342.16, -2211.22, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1355.74, -2175.98, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1369.03, -2160.01, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1386.77, -2143.00, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1413.34, -2130.44, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1441.67, -2125.13, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1469.82, -2124.31, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1498.19, -2124.23, 13.01,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1525.56, -2123.83, 13.45,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1548.25, -2119.59, 14.23,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1580.91, -2106.37, 16.26,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1607.57, -2090.00, 18.28,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1628.19, -2071.74, 19.82,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1642.63, -2053.13, 20.66,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1655.23, -2030.54, 21.82,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1660.87, -2006.95, 22.56,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1662.45, -1978.76, 22.90,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1657.16, -1950.79, 23.11,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1647.86, -1915.53, 23.87,   0.00, 0.00, 0.00);
CreateDynamicObject(620, 1638.59, -1886.04, 24.29,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1308.24, -2457.24, 6.74,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1287.33, -2456.51, 7.00,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1264.10, -2454.62, 7.62,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1242.82, -2450.60, 8.00,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1219.21, -2443.39, 8.49,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1196.67, -2433.34, 8.95,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1172.67, -2420.22, 9.40,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1148.04, -2403.92, 9.99,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1129.06, -2389.04, 10.37,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1110.65, -2370.97, 10.83,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1092.79, -2352.26, 11.28,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1076.98, -2331.50, 11.64,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1059.11, -2303.95, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1047.39, -2281.58, 12.02,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1036.72, -2258.13, 12.05,   0.00, 0.00, 0.00);
CreateDynamicObject(621, 1030.22, -2235.16, 12.06,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1354.21, -2301.02, 12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1354.13, -2290.46, 12.56,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1354.18, -2282.17, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1354.20, -2272.03, 12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1359.68, -2278.47, 12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1364.86, -2282.72, 12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1369.35, -2284.80, 12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1372.78, -2286.31, 12.39,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1369.97, -2287.64, 12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1366.49, -2289.28, 12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1361.24, -2292.87, 12.41,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1357.68, -2296.18, 12.41,   0.00, 0.00, 0.00);
CreateDynamicObject(634, 1356.76, -2275.43, 12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(9833, 1359.45, -2287.03, 14.65,   0.00, 0.00, 112.50);
CreateDynamicObject(1214, 1371.52, -2286.30, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1369.30, -2285.26, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1366.39, -2284.01, 12.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1363.81, -2282.80, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1361.54, -2281.30, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1359.55, -2279.58, 12.25,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1357.68, -2277.98, 12.25,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1356.00, -2276.36, 12.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1354.64, -2274.53, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1353.42, -2272.72, 12.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.92, -2270.65, 12.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.92, -2274.26, 12.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.93, -2277.22, 12.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.88, -2280.19, 12.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.93, -2283.53, 12.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.89, -2286.81, 12.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.90, -2289.55, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.87, -2292.45, 12.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.90, -2295.28, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.95, -2298.35, 12.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1351.92, -2301.55, 12.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1369.54, -2287.26, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1367.39, -2288.33, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1365.44, -2289.17, 12.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1363.72, -2289.97, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1362.08, -2291.11, 12.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1360.26, -2292.68, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1358.23, -2294.44, 12.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1356.08, -2296.43, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1354.02, -2299.18, 12.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1369.93, -2286.45, 14.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1352.75, -2299.34, 14.96,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1352.83, -2273.09, 14.98,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1352.94, -2285.31, 14.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1362.43, -2290.04, 15.01,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1362.32, -2282.50, 14.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1357.75, -2293.90, 15.06,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1358.84, -2279.95, 15.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1616, 1339.39, -2222.54, 19.14,   0.00, 0.00, -90.00);
CreateDynamicObject(1616, 1339.47, -2224.84, 18.93,   0.00, 0.00, 101.25);
CreateDynamicObject(1616, 1325.47, -2464.97, 14.07,   0.00, 0.00, 33.75);
CreateDynamicObject(1616, 1325.43, -2452.04, 14.43,   0.00, 0.00, 45.00);
CreateDynamicObject(1616, 1038.21, -2230.36, 17.21,   0.00, 0.00, 146.25);
CreateDynamicObject(1616, 1024.34, -2233.90, 17.26,   0.00, 0.00, 135.00);
CreateDynamicObject(19124, 1068.67, -2372.18, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1056.05, -2362.94, 12.59,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1046.92, -2358.23, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1039.95, -2353.05, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1033.89, -2346.33, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1024.64, -2341.73, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1016.61, -2335.26, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1008.51, -2325.53, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1005.58, -2316.92, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1001.55, -2307.36, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 998.41, -2297.95, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 999.28, -2286.38, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 998.69, -2272.43, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1005.12, -2261.11, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1004.65, -2247.83, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1000.88, -2236.01, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 997.05, -2218.75, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 990.14, -2208.32, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 983.17, -2200.29, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 978.78, -2193.12, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 972.25, -2188.13, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 966.15, -2184.42, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 959.92, -2174.01, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 957.91, -2164.05, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 958.85, -2153.57, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 959.66, -2141.81, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 963.56, -2133.75, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 972.28, -2124.25, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 977.93, -2115.73, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 984.97, -2104.28, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 991.52, -2093.19, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 999.88, -2080.42, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1002.65, -2068.41, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1008.41, -2055.03, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1078.42, -2380.05, 12.59,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1090.59, -2389.43, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1101.78, -2399.49, 12.59,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1112.91, -2407.52, 12.58,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1123.30, -2413.88, 12.56,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1130.88, -2421.94, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1139.61, -2429.17, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1148.95, -2435.79, 12.58,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1158.11, -2444.22, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1164.28, -2452.57, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1172.64, -2458.69, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1183.09, -2464.86, 12.53,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1190.49, -2471.28, 12.58,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1200.91, -2475.66, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1211.55, -2479.71, 12.56,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1220.46, -2483.36, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1228.83, -2488.60, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1237.43, -2490.96, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1251.40, -2493.41, 12.44,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1261.52, -2496.84, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1271.57, -2496.86, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1282.36, -2499.87, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1364.48, -2287.37, 12.79,   0.00, 0.00, -56.25);
CreateDynamicObject(870, 1361.67, -2288.35, 12.79,   0.00, 0.00, 123.75);
CreateDynamicObject(870, 1358.91, -2289.89, 12.79,   0.00, 0.00, 123.75);
CreateDynamicObject(870, 1356.61, -2291.96, 12.79,   0.00, 0.00, 146.25);
CreateDynamicObject(870, 1354.77, -2294.73, 12.79,   0.00, 0.00, 168.75);
CreateDynamicObject(870, 1353.32, -2297.53, 12.79,   0.00, 0.00, 191.25);
CreateDynamicObject(870, 1352.73, -2294.60, 12.79,   0.00, 0.00, 45.00);
CreateDynamicObject(870, 1352.98, -2291.80, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1353.12, -2288.97, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1353.13, -2286.29, 12.80,   0.00, 0.00, 45.00);
CreateDynamicObject(870, 1353.04, -2283.62, 12.79,   0.00, 0.00, 22.50);
CreateDynamicObject(870, 1353.45, -2281.03, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1353.56, -2278.68, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1353.61, -2276.50, 12.79,   0.00, 0.00, 11.25);
CreateDynamicObject(870, 1352.88, -2274.10, 12.79,   0.00, 0.00, 33.75);
CreateDynamicObject(870, 1355.78, -2277.56, 12.80,   0.00, 0.00, -112.50);
CreateDynamicObject(870, 1357.18, -2279.31, 12.80,   0.00, 0.00, -22.50);
CreateDynamicObject(870, 1359.71, -2291.11, 12.79,   0.00, 0.00, -11.25);
CreateDynamicObject(870, 1361.96, -2289.49, 12.79,   0.00, 0.00, -11.25);
CreateDynamicObject(870, 1357.71, -2292.86, 12.79,   0.00, 0.00, -22.50);
CreateDynamicObject(870, 1356.00, -2294.51, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1354.17, -2296.65, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1355.20, -2292.28, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1354.40, -2290.19, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1356.37, -2289.52, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1356.79, -2281.83, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1356.25, -2284.23, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1356.02, -2286.96, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1355.23, -2280.44, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1354.58, -2288.20, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1354.74, -2282.52, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1354.49, -2285.23, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1358.05, -2287.96, 12.79,   0.00, 0.00, 33.75);
CreateDynamicObject(870, 1357.92, -2285.49, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1359.18, -2281.15, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1358.55, -2283.38, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1361.08, -2282.60, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1361.09, -2285.18, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1363.24, -2284.08, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1363.00, -2286.29, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1365.17, -2284.97, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1366.97, -2286.54, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1360.14, -2285.07, 12.79,   0.00, 0.00, 90.00);
CreateDynamicObject(870, 1359.54, -2287.06, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1369.11, -2286.29, 12.79,   0.00, 0.00, 33.75);
CreateDynamicObject(870, 1365.67, -2287.87, 12.79,   0.00, 0.00, 123.75);
CreateDynamicObject(870, 1363.42, -2288.31, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1361.26, -2287.13, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1418.11, -2296.76, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1405.72, -2296.63, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1394.70, -2296.62, 12.66,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1383.91, -2296.59, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1372.06, -2299.08, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1418.16, -2275.72, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1403.98, -2275.70, 12.64,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1395.22, -2275.54, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1384.79, -2275.80, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1375.38, -2274.23, 12.68,   0.00, 0.00, -11.25);
CreateDynamicObject(658, 1419.10, -2268.01, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1419.32, -2304.58, 12.68,   0.00, 0.00, 11.25);
CreateDynamicObject(658, 1500.57, -2233.31, 12.68,   0.00, 0.00, -22.50);
CreateDynamicObject(658, 1512.59, -2239.97, 12.68,   0.00, 0.00, -45.00);
CreateDynamicObject(658, 1522.27, -2249.85, 12.68,   0.00, 0.00, -45.00);
CreateDynamicObject(658, 1528.15, -2261.35, 12.68,   0.00, 0.00, -67.50);
CreateDynamicObject(658, 1530.73, -2275.86, 12.69,   0.00, 0.00, -78.75);
CreateDynamicObject(658, 1513.46, -2232.57, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1526.09, -2232.99, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1537.81, -2233.20, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1537.79, -2242.36, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1537.80, -2255.90, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1537.73, -2266.96, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1537.76, -2275.81, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1537.69, -2296.67, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1530.60, -2296.73, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1529.18, -2306.86, 12.68,   0.00, 0.00, -11.25);
CreateDynamicObject(658, 1525.21, -2318.47, 12.68,   0.00, 0.00, -123.75);
CreateDynamicObject(658, 1514.31, -2331.07, 12.68,   0.00, 0.00, -56.25);
CreateDynamicObject(658, 1500.65, -2339.33, 12.68,   0.00, 0.00, -67.50);
CreateDynamicObject(658, 1513.47, -2339.50, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1527.68, -2339.53, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1537.78, -2339.49, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1537.42, -2306.10, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(658, 1537.64, -2320.33, 12.68,   0.00, 0.00, 0.00);
CreateDynamicObject(689, 1575.75, -2223.06, 10.89,   0.00, 0.00, 0.00);
CreateDynamicObject(689, 1580.22, -2350.05, 10.39,   0.00, 0.00, 0.00);
////HQ de Hospital por Zc
CreateDynamicObject(976, 1038.90, -1026.00, 31.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1172.00, -1324.00, 16.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, 1172.00, -1322.50, 14.40,   0.00, 0.00, 270.00);
CreateDynamicObject(1569, 1172.00, -1325.40, 14.40,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1178.20, -1335.50, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1180.30, -1313.90, 13.70,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1180.30, -1333.40, 13.70,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1178.20, -1329.20, 13.60,   0.00, 358.00, 0.00);
CreateDynamicObject(970, 1174.10, -1335.50, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1178.20, -1318.40, 13.70,   0.00, 358.00, 0.00);
CreateDynamicObject(970, 1174.10, -1311.80, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1178.20, -1311.80, 13.60,   0.00, 358.00, 0.00);
CreateDynamicObject(970, 1180.30, -1331.30, 13.70,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1180.30, -1316.30, 13.70,   0.00, 0.00, 90.00);
CreateDynamicObject(869, 1177.80, -1332.30, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1177.80, -1315.20, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 1177.90, -1328.20, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1997, 1178.00, -1319.30, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1257, 1188.00, -1360.60, 13.80,   0.00, 0.00, 180.00);
CreateDynamicObject(1223, 1180.50, -1329.20, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1172.00, -1325.60, 15.00,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1172.00, -1322.30, 15.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 1180.50, -1318.30, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1338.50, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1331.70, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1304.60, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1324.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1318.10, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1311.40, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1352.10, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1345.30, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1365.80, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1359.00, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.50, -1372.70, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.50, -1379.40, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1293.70, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1190.40, -1297.80, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(776, 1231.20, -1348.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(776, 1231.10, -1334.60, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(776, 1231.50, -1319.70, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(776, 1231.40, -1361.00, 13.10,   0.00, 0.00, 0.00);
////Lugares para poner /mapa
CreateDynamicObject(1444, 1505.15, -1740.25, 13.39,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1757.51, -1865.24, 13.39,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 204.64, -1457.91, 12.86,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1006.72, -952.08, 42.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1413.72, -1025.69, 23.64,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1924.68, -1759.70, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1953.42, -2093.50, 13.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1673.36, -2242.31, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1608.49, -1878.95, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1180.13, -1387.50, 13.34,   0.00, 0.00, 0.00);
///Floreria
CreateDynamicObject(1491, 1286.26, -1652.45, 12.50,   0.00, 0.00, 89.94);
CreateDynamicObject(1482, 1272.10, -1644.30, 14.90,   0.00, 0.00, 270.00);
CreateDynamicObject(1482, 1278.80, -1644.30, 14.90,   0.00, 0.00, 269.99);
CreateDynamicObject(1482, 1272.10, -1644.30, 12.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1482, 1278.80, -1644.30, 12.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1622, 1269.50, -1659.40, 18.60,   0.00, 0.00, 192.00);
CreateDynamicObject(1984, 1271.80, -1651.10, 12.50,   0.00, 0.00, 270.00);
CreateDynamicObject(1482, 1282.00, -1658.90, 14.90,   0.00, 0.00, 90.00);
CreateDynamicObject(1482, 1277.10, -1658.90, 14.90,   0.00, 0.00, 89.99);
CreateDynamicObject(1482, 1282.00, -1659.30, 12.30,   0.00, 0.00, 89.99);
CreateDynamicObject(1482, 1276.60, -1659.30, 12.30,   0.00, 0.00, 89.99);
CreateDynamicObject(2424, 1271.80, -1654.00, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2424, 1271.80, -1654.90, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2424, 1271.80, -1650.20, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2423, 1271.80, -1649.30, 12.50,   0.00, 1.25, 89.50);
CreateDynamicObject(1514, 1271.90, -1651.00, 13.60,   0.00, 0.00, 89.00);
CreateDynamicObject(14872, 1270.30, -1659.10, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3920, 1268.65, -1654.45, 19.45,   0.00, 0.00, 269.88);
CreateDynamicObject(625, 1273.70, -1656.00, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(625, 1272.56, -1649.40, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(626, 1283.80, -1645.40, 14.60,   0.00, 0.00, 0.00);
CreateDynamicObject(628, 1280.70, -1645.50, 18.40,   0.00, 0.00, 0.00);
CreateDynamicObject(628, 1278.50, -1645.70, 18.40,   0.00, 0.00, 0.00);
CreateDynamicObject(630, 1281.50, -1645.60, 14.80,   0.00, 0.00, 0.00);
CreateDynamicObject(630, 1280.60, -1645.50, 14.80,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 1279.60, -1645.50, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(631, 1278.70, -1645.50, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(632, 1278.50, -1645.40, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(632, 1277.20, -1645.40, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(633, 1275.10, -1645.30, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(633, 1273.80, -1645.10, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1285.67, -1648.50, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1285.66, -1655.16, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(644, 1276.00, -1645.40, 16.70,   0.00, 0.00, 0.00);
CreateDynamicObject(644, 1274.10, -1645.40, 16.70,   0.00, 0.00, 0.00);
CreateDynamicObject(646, 1272.40, -1645.20, 17.70,   0.00, 0.00, 271.50);
CreateDynamicObject(646, 1270.40, -1645.20, 17.70,   0.00, 0.00, 271.50);
CreateDynamicObject(742, 1284.60, -1658.40, 16.80,   0.00, 0.00, 0.00);
CreateDynamicObject(742, 1283.00, -1658.40, 16.80,   0.00, 0.00, 0.00);
CreateDynamicObject(743, 1284.60, -1658.10, 14.20,   0.00, 0.00, 0.00);
CreateDynamicObject(743, 1283.50, -1658.10, 14.20,   0.00, 0.00, 0.00);
CreateDynamicObject(682, 1272.80, -1645.50, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(682, 1271.70, -1645.40, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(682, 1270.60, -1645.40, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(741, 1282.30, -1656.90, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(741, 1281.30, -1656.90, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(857, 1270.10, -1646.10, 14.10,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1280.60, -1658.60, 16.60,   0.00, 0.00, 0.00);
CreateDynamicObject(871, 1278.20, -1658.40, 16.60,   0.00, 0.00, 0.00);
CreateDynamicObject(948, 1279.80, -1658.50, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(948, 1278.90, -1658.40, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1278.00, -1658.50, 14.40,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1277.20, -1658.60, 14.40,   0.00, 0.00, 0.00);
CreateDynamicObject(950, 1276.20, -1658.30, 14.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1807, 1276.10, -1658.20, 16.90,   0.00, 0.00, 90.50);
CreateDynamicObject(1807, 1274.80, -1658.40, 16.90,   0.00, 0.00, 90.50);
CreateDynamicObject(2001, 1275.00, -1658.50, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1274.30, -1658.40, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2194, 1272.00, -1655.00, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2240, 1272.10, -1654.30, 14.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2242, 1280.50, -1658.40, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2244, 1271.90, -1652.00, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2251, 1271.90, -1650.00, 14.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3439, 1286.18, -1659.48, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3439, 1286.44, -1644.86, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3802, 1285.47, -1646.29, 17.90,   0.00, 0.00, 178.50);
CreateDynamicObject(3806, 1269.20, -1652.40, 15.30,   0.00, 0.00, 0.00);
CreateDynamicObject(3802, 1285.39, -1648.64, 17.90,   0.00, 0.00, 178.49);
CreateDynamicObject(3802, 1285.38, -1655.51, 17.90,   0.00, 0.00, 178.49);
CreateDynamicObject(19376, 1286.16, -1647.67, 20.22,   0.21, 0.00, 0.36);
CreateDynamicObject(3439, 1286.16, -1652.88, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3439, 1286.30, -1650.03, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(19376, 1268.78, -1655.03, 15.72,   0.21, 0.00, 0.00);
CreateDynamicObject(19376, 1268.89, -1645.48, 15.72,   0.21, 0.00, 0.00);
CreateDynamicObject(869, 1288.05, -1658.49, 12.91,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1288.42, -1659.50, 12.91,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1288.09, -1655.56, 12.91,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1287.95, -1654.59, 12.91,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1287.92, -1648.23, 12.91,   0.00, 0.00, -5.64);
CreateDynamicObject(869, 1287.91, -1646.81, 12.91,   0.00, 0.00, -5.64);
CreateDynamicObject(869, 1287.88, -1645.58, 12.91,   0.00, 0.00, -5.64);
CreateDynamicObject(3920, 1268.75, -1646.38, 19.45,   0.00, 0.00, 269.88);
CreateDynamicObject(3785, 1286.68, -1650.01, 13.16,   0.00, 0.00, 0.18);
CreateDynamicObject(3785, 1286.55, -1652.85, 13.16,   0.00, 0.00, 0.18);
CreateDynamicObject(3785, 1286.53, -1652.87, 14.50,   0.00, 0.00, 0.18);
CreateDynamicObject(3785, 1286.66, -1650.05, 14.50,   0.00, 0.00, 0.18);
CreateDynamicObject(1893, 1281.45, -1656.45, 20.26,   0.00, 0.00, 0.00);
CreateDynamicObject(1893, 1281.01, -1647.45, 20.26,   0.00, 0.00, 0.00);
CreateDynamicObject(1893, 1281.29, -1651.66, 20.26,   0.00, 0.00, 0.00);
CreateDynamicObject(1893, 1273.58, -1657.25, 20.26,   0.00, 0.00, 0.00);
CreateDynamicObject(1893, 1273.51, -1652.25, 20.26,   0.00, 0.00, 0.00);
CreateDynamicObject(1893, 1273.28, -1647.40, 20.26,   0.00, 0.00, 0.00);
CreateDynamicObject(1893, 1278.27, -1655.48, 20.26,   0.00, 0.00, 90.60);
CreateDynamicObject(1893, 1278.41, -1649.83, 20.26,   0.00, 0.00, 90.60);
CreateDynamicObject(3802, 1285.42, -1658.03, 17.90,   0.00, 0.00, 178.49);
CreateDynamicObject(19406, 1286.17, -1649.34, 13.82,   0.00, 0.00, 0.30);
CreateDynamicObject(19376, 1286.21, -1656.53, 20.22,   0.21, 0.00, -0.42);
CreateDynamicObject(19406, 1286.15, -1646.14, 13.82,   0.00, 0.00, 0.30);
CreateDynamicObject(19406, 1286.21, -1654.03, 13.82,   0.00, 0.00, -0.06);
CreateDynamicObject(19406, 1286.19, -1657.21, 13.82,   0.00, 0.00, -0.42);
CreateDynamicObject(19406, 1286.17, -1660.39, 13.82,   0.00, 0.00, -0.42);
CreateDynamicObject(1649, 1286.16, -1647.53, 14.30,   0.00, 0.00, 90.48);
CreateDynamicObject(1649, 1286.21, -1655.33, 14.30,   0.00, 0.00, 90.48);
CreateDynamicObject(1649, 1286.24, -1659.72, 14.30,   0.00, 0.00, 90.48);
CreateDynamicObject(1649, 1286.24, -1659.72, 14.30,   0.00, 0.00, 270.60);
CreateDynamicObject(1649, 1286.21, -1655.33, 14.30,   0.00, 0.00, 270.18);
CreateDynamicObject(1649, 1286.16, -1647.53, 14.30,   0.00, 0.00, 269.28);
CreateDynamicObject(970, 1288.41, -1650.48, 13.04,   0.00, 0.00, -3.42);
CreateDynamicObject(970, 1290.46, -1648.51, 13.04,   0.00, 0.00, 89.88);
CreateDynamicObject(970, 1290.44, -1644.36, 13.04,   0.00, 0.00, 90.72);
CreateDynamicObject(970, 1288.36, -1642.21, 13.05,   0.00, 0.00, 177.72);
CreateDynamicObject(970, 1288.39, -1652.64, 13.04,   0.00, 0.00, -0.78);
CreateDynamicObject(970, 1290.48, -1654.74, 13.04,   0.00, 0.00, 89.88);
CreateDynamicObject(970, 1290.45, -1658.92, 13.04,   0.00, 0.00, 89.88);
CreateDynamicObject(970, 1288.37, -1660.97, 13.04,   0.00, 0.00, -0.78);
CreateDynamicObject(869, 1288.22, -1659.38, 12.91,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1288.39, -1654.20, 12.91,   0.00, 0.00, -10.56);
CreateDynamicObject(869, 1288.86, -1656.51, 12.91,   0.00, 0.00, 74.34);
CreateDynamicObject(869, 1288.86, -1656.51, 12.91,   0.00, 0.00, 74.34);
CreateDynamicObject(869, 1287.98, -1656.67, 12.91,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1288.86, -1659.03, 12.91,   0.00, 0.00, 77.28);
CreateDynamicObject(869, 1288.28, -1643.90, 12.91,   0.00, 0.00, -5.64);
CreateDynamicObject(869, 1287.41, -1643.98, 12.91,   0.00, 0.00, -5.64);
CreateDynamicObject(869, 1288.38, -1645.72, 12.91,   0.00, 0.00, -7.26);
CreateDynamicObject(869, 1288.33, -1644.44, 12.91,   0.00, 0.00, -7.26);
CreateDynamicObject(869, 1288.94, -1648.61, 12.91,   0.00, 0.00, 81.30);
CreateDynamicObject(869, 1288.77, -1645.16, 12.91,   0.00, 0.00, 82.62);
////
    //·| Hospital >> ===============================================================================================|·
    CreateDynamicObject(7191, 258.38671875, 130.6845703125, 1030.9200439453, 0, 90, 89.999938964844);
    PuertaH1 = CreateDynamicObject(2987, 250.56510925293, 131.54936218262, 1032.2158203125, 0, 0, 90);
    PuertaH2 = CreateDynamicObject(2987, 250.67543029785, 131.59466552734, 1037.9182128906, 0, 0, 90);
	CreateDynamicObject(19129,482.57,-8.31,999.74,0.00,0.00,0.00);// Piso de Colores en Alhambra
	CreateDynamicObject(987,664.32916260,-1220.21582031,15.85455418,0.00000000,0.00000000,54.00000000); // Rusa Fix
//////////////////////////////////////////// Mapeo PaintBall /////////////////////////////////////////////////////

CreateDynamicObject(14784,1975.8000488281,1617.00000000,-3.50000000,0.00000000,0.00000000,0.00000000); //PvP Paintball

//embargadero by maxi
CreateDynamicObject(3578, 1621.74, -1861.83, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(3578, 1621.89, -1860.75, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(3578, 1622.00, -1859.62, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(3578, 1622.12, -1858.33, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(3578, 1622.42, -1856.87, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(3578, 1622.58, -1855.62, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(3578, 1622.70, -1854.27, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(3578, 1618.77, -1860.50, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(3578, 1622.90, -1853.26, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(3578, 1622.90, -1853.26, 11.77,   -2.00, 0.00, 179.00);
CreateDynamicObject(16500, 1624.00, -1862.14, 18.16,   0.00, 0.00, -92.00);
CreateDynamicObject(16500, 1628.93, -1862.28, 16.02,   0.00, 0.00, -92.00);
CreateDynamicObject(16500, 1628.93, -1862.28, 18.17,   0.00, 0.00, -92.00);
CreateDynamicObject(16500, 1628.93, -1862.28, 13.91,   0.00, 0.00, -92.00);
CreateDynamicObject(16500, 1580.47, -1945.68, 18.16,   0.00, 0.00, -92.00);
CreateDynamicObject(987, 1599.56, -1861.96, 18.67,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 1604.57, -1861.91, 18.67,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 1631.79, -1861.87, 16.06,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 1643.76, -1861.96, 16.36,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 1648.05, -1861.99, 16.37,   0.00, 0.00, 0.00);
CreateDynamicObject(16500, 1624.00, -1862.14, 20.35,   0.00, 0.00, -92.00);
CreateDynamicObject(16500, 1628.93, -1862.28, 20.24,   0.00, 0.00, -92.00);
CreateDynamicObject(16500, 1618.97, -1862.14, 14.53,   0.00, 0.00, -92.00);
CreateDynamicObject(16500, 1618.97, -1862.14, 17.95,   0.00, 0.00, -92.00);
CreateDynamicObject(16500, 1619.01, -1862.12, 20.52,   0.00, 0.00, -92.00);
CreateDynamicObject(3578, 1622.90, -1853.26, 11.77,   -2.00, 0.00, 176.00);
CreateDynamicObject(3864, 1617.24, -1860.70, 13.05,   0.00, 0.00, -131.00);
CreateDynamicObject(3864, 1618.74, -1853.34, 13.05,   0.00, 0.00, -227.00);
CreateDynamicObject(3864, 1605.68, -1802.95, 13.05,   0.00, 0.00, -227.00);
CreateDynamicObject(3864, 1627.48, -1797.38, 13.05,   0.00, 0.00, -324.00);
CreateDynamicObject(3864, 1629.10, -1797.81, 13.05,   0.00, 0.00, -244.00);
CreateDynamicObject(3864, 1638.79, -1846.35, 13.05,   0.00, 0.00, -69.00);
CreateDynamicObject(1597, 1620.11, -1857.12, 15.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3877, 1620.32, -1851.73, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3877, 1620.28, -1849.54, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3877, 1620.34, -1847.14, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3877, 1620.28, -1845.38, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3877, 1620.22, -1843.73, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3877, 1616.89, -1843.65, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3877, 1618.54, -1843.65, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3877, 1627.46, -1849.49, 18.65,   -91.00, 0.00, 0.00);
CreateDynamicObject(3877, 1629.48, -1849.41, 18.65,   -91.00, 0.00, 0.00);
CreateDynamicObject(987, 1603.41, -1776.06, 14.68,   0.00, 0.00, 165.00);
CreateDynamicObject(987, 1614.50, -1779.53, 14.68,   0.00, 0.00, 163.00);
CreateDynamicObject(987, 1625.46, -1782.01, 14.68,   0.00, 0.00, 167.00);
CreateDynamicObject(987, 1636.78, -1785.05, 14.68,   0.00, 0.00, 165.00);
CreateDynamicObject(987, 1648.04, -1788.05, 14.68,   0.00, 0.00, 165.00);
CreateDynamicObject(987, 1659.16, -1791.00, 14.68,   0.00, 0.00, 165.00);
CreateDynamicObject(987, 1661.16, -1791.57, 14.68,   0.00, 0.00, 165.00);
//fin embargadero

//nuevo by maxi
CreateDynamicObject(3538, 1597.46, -1757.70, 14.34,   0.00, 0.00, 0.00);
CreateDynamicObject(3538, 1621.80, -1766.50, 14.34,   0.00, 0.00, 0.00);
CreateDynamicObject(3538, 1613.78, -1754.61, 14.34,   0.00, 0.00, 0.00);
CreateDynamicObject(3538, 1646.30, -1768.53, 14.34,   0.00, 0.00, 0.00);
CreateDynamicObject(3538, 1663.09, -1780.68, 14.34,   0.00, 0.00, 0.00);
CreateDynamicObject(3538, 1664.09, -1772.24, 14.34,   0.00, 0.00, 0.00);
CreateDynamicObject(3538, 1599.26, -1756.42, 14.54,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1602.98, -1758.86, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1590.68, -1756.37, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1590.68, -1756.37, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1581.09, -1757.70, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1608.83, -1760.60, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1617.58, -1762.95, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1627.94, -1765.90, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1641.84, -1769.86, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1650.39, -1771.92, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1659.20, -1774.25, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1668.11, -1776.63, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1669.22, -1763.93, 14.74,   0.00, 0.00, -14.00);
CreateDynamicObject(3660, 1650.32, -1759.21, 14.74,   0.00, 0.00, -14.00);
CreateDynamicObject(3660, 1677.01, -1776.04, 14.74,   0.00, 0.00, 90.00);
CreateDynamicObject(3660, 1677.09, -1779.09, 14.74,   0.00, 0.00, 90.00);
CreateDynamicObject(3660, 1667.83, -1786.09, 14.74,   0.00, 0.00, 166.00);
CreateDynamicObject(3660, 1648.93, -1781.37, 14.74,   0.00, 0.00, 166.00);
CreateDynamicObject(3660, 1630.02, -1776.64, 14.74,   0.00, 0.00, 166.00);
CreateDynamicObject(3660, 1610.97, -1771.93, 14.74,   0.00, 0.00, 166.00);
CreateDynamicObject(3660, 1592.57, -1767.37, 14.74,   0.00, 0.00, 166.00);
CreateDynamicObject(3660, 1590.19, -1766.78, 14.74,   0.00, 0.00, 166.00);
CreateDynamicObject(672, 1624.64, -1743.66, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(672, 1617.03, -1743.62, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(672, 1626.21, -1749.61, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(672, 1627.82, -1754.06, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(672, 1633.35, -1756.90, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(672, 1636.61, -1757.84, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1580.30, -1747.60, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1580.30, -1749.53, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1580.32, -1751.52, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1580.32, -1753.41, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1580.08, -1761.19, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1580.17, -1759.27, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1580.18, -1757.38, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1581.54, -1751.12, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1581.44, -1749.32, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1581.15, -1746.88, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1581.14, -1759.90, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1581.04, -1761.89, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1696, 1583.14, -1754.89, 11.78,   0.00, 0.00, 90.00);
//fin nuevo by maxi

//////////////////////////////////////////////// Yakuza //////////////////////////////////////////////////////////

puertayakuza1 = CreateDynamicObject(980, 1241.4000244141, -741.70001220703, 97.199996948242, 0, 3, 30);
puertayakuza2 = CreateDynamicObject(980, 1308.1999511719, -725.20001220703, 94.599998474121, 0, 0, 296);
puertayakuza3 = CreateDynamicObject(980, 1316.0999755859, -819.90002441406, 75.699996948242, 0, 0, 68);

CreateDynamicObject(3749, 1241.70, -742.50, 100.00,   0.00, 1.00, 26.00);
CreateDynamicObject(987, 1249.70, -737.20, 93.70,   0.00, 1.00, 26.00);
CreateDynamicObject(987, 1260.20, -732.20, 93.00,   0.00, 1.00, 24.00);
CreateDynamicObject(987, 1271.30, -727.50, 92.50,   0.00, 1.00, 22.00);
CreateDynamicObject(987, 1282.60, -723.10, 92.10,   0.00, 0.00, 20.00);
CreateDynamicObject(987, 1293.80, -719.40, 91.70,   0.00, 0.00, 18.00);
CreateDynamicObject(987, 1310.40, -735.10, 92.70,   0.00, 2.00, 294.00);
CreateDynamicObject(987, 1220.60, -835.00, 77.00,   0.00, 15.00, 278.00);
CreateDynamicObject(987, 1223.50, -854.40, 70.60,   0.00, 345.00, 100.00);
CreateDynamicObject(3749, 1307.80, -725.40, 97.70,   0.00, 0.00, 296.00);
CreateDynamicObject(987, 1315.10, -746.20, 92.40,   0.00, 3.00, 260.00);
CreateDynamicObject(987, 1311.30, -767.50, 90.80,   0.00, 355.00, 78.00);
CreateDynamicObject(987, 1306.30, -777.90, 88.10,   0.00, 352.00, 64.00);
CreateDynamicObject(3749, 1316.20, -820.00, 78.70,   0.00, 0.00, 248.00);
CreateDynamicObject(987, 1312.30, -828.50, 72.40,   0.00, 6.00, 240.00);
CreateDynamicObject(987, 1306.40, -838.20, 71.30,   0.00, 6.00, 232.00);
CreateDynamicObject(987, 1299.20, -847.00, 69.90,   0.00, 6.00, 202.00);
CreateDynamicObject(987, 1318.40, -809.90, 77.20,   0.00, 354.00, 108.00);
CreateDynamicObject(987, 1314.70, -798.60, 78.20,   0.00, 345.00, 110.00);
CreateDynamicObject(987, 1310.40, -788.00, 81.10,   0.00, 345.00, 134.00);
CreateDynamicObject(970, 1308.60, -784.20, 91.60,   0.00, 0.00, 280.00);
CreateDynamicObject(970, 1307.30, -780.30, 91.60,   0.00, 0.00, 298.00);
CreateDynamicObject(984, 1229.80, -853.10, 71.30,   0.00, 0.00, 282.00);
CreateDynamicObject(984, 1239.20, -851.10, 71.30,   0.00, 0.00, 282.00);
CreateDynamicObject(984, 1250.30, -850.20, 71.40,   0.00, 0.00, 268.00);
CreateDynamicObject(984, 1263.10, -850.50, 71.40,   0.00, 0.00, 270.00);
CreateDynamicObject(984, 1275.80, -850.70, 70.80,   354.00, 0.00, 268.00);
CreateDynamicObject(984, 1288.40, -849.80, 70.20,   0.00, 0.00, 280.00);
CreateDynamicObject(987, 1234.90, -743.70, 96.50,   0.00, 9.00, 288.00);
CreateDynamicObject(987, 1238.80, -754.90, 94.60,   0.00, 9.50, 273.00);
CreateDynamicObject(987, 1239.30, -766.80, 92.60,   0.00, 6.00, 270.00);
CreateDynamicObject(987, 1239.10, -778.70, 91.40,   0.00, 6.00, 272.00);
///////////////////////////////////////// Mafia Española ////////////////////////////////////////////////////////////////
portonespanol = CreateDynamicObject(980, 2425.93, -2089.47, 15.14,   0.00, 0.00, 89.30); 	// Porton Cerrado
portonespanol2 = CreateDynamicObject(980, 2538.64, -2116.84, 15.27,   0.00, 0.00, 88.82);
portonespanol3 = CreateDynamicObject(980, 2625.12, -2116.98, 15.37,   0.00, 0.00, 90.02);
puertaespanola = CreateDynamicObject(3058, 923, -1210.5999755859, 18.799999237061, 0, 0, 296); 	// Puerta pequeña

CreateDynamicObject(3749, 922.80, -1221.00, 21.80,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 807.60, -1159.70, 23.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 807.60, -1171.60, 23.60,   0.00, 0.00, 272.00);
CreateDynamicObject(987, 807.90, -1182.50, 23.70,   0.00, 10.00, 270.00);
CreateDynamicObject(987, 807.60, -1194.40, 21.60,   0.00, 10.00, 272.00);
CreateDynamicObject(987, 807.80, -1206.00, 19.70,   0.00, 10.00, 270.00);
CreateDynamicObject(987, 807.90, -1217.30, 16.80,   0.00, 0.00, 272.00);
CreateDynamicObject(987, 808.60, -1229.20, 17.80,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 808.60, -1241.10, 17.80,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 808.60, -1253.00, 17.80,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 808.50, -1265.00, 17.80,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 808.50, -1277.00, 17.80,   0.00, 0.00, 272.00);
CreateDynamicObject(987, 807.50, -1159.10, 25.00,   0.00, 0.00, 2.00);
CreateDynamicObject(987, 819.30, -1158.90, 25.00,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 831.20, -1159.00, 25.00,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 843.10, -1159.00, 25.00,   0.00, 0.00, 358.00);
CreateDynamicObject(987, 855.10, -1159.40, 25.00,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 867.00, -1159.20, 25.00,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 879.00, -1159.20, 25.00,   0.00, 0.00, 358.00);
CreateDynamicObject(987, 891.00, -1159.60, 25.00,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 903.00, -1159.80, 25.00,   0.00, 0.00, 359.00);
CreateDynamicObject(987, 913.40, -1160.10, 25.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 847.90, -1307.80, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 853.00, -1307.80, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 858.30, -1307.80, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 863.60, -1307.80, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 868.90, -1307.80, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 874.20, -1307.80, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 879.50, -1307.80, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 884.80, -1307.80, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 890.10, -1307.80, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 895.40, -1307.90, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 900.60, -1307.90, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 905.90, -1307.90, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 911.10, -1307.90, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 916.40, -1307.90, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 921.70, -1307.90, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 927.00, -1307.90, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 930.10, -1304.70, 17.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.00, -1299.40, 17.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.00, -1294.20, 17.50,   0.00, 355.00, 90.00);
CreateDynamicObject(1411, 930.40, -1289.20, 18.00,   0.00, 0.00, 92.00);
CreateDynamicObject(1411, 930.30, -1284.00, 18.30,   0.00, 350.00, 90.00);
CreateDynamicObject(1411, 930.30, -1279.10, 19.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.00, -1273.90, 19.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.40, -1268.80, 19.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.20, -1263.60, 19.50,   0.00, 355.00, 90.00);
CreateDynamicObject(1411, 930.20, -1258.50, 19.70,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.00, -1253.40, 19.70,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 929.60, -1250.00, 21.90,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 929.60, -1244.80, 21.90,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 929.60, -1243.10, 21.90,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 927.20, -1240.70, 21.90,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 924.40, -1237.90, 21.90,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 924.40, -1232.70, 21.90,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 923.70, -1208.30, 22.80,   0.00, 20.00, 88.00);
CreateDynamicObject(1411, 923.70, -1203.80, 22.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 923.60, -1200.30, 22.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 926.50, -1197.50, 22.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 929.50, -1195.10, 22.10,   0.00, 0.00, 76.00);
CreateDynamicObject(1411, 930.70, -1189.90, 23.90,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.20, -1191.70, 22.40,   0.00, 0.00, 82.00);
CreateDynamicObject(1411, 930.70, -1184.70, 23.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.70, -1181.20, 22.90,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.70, -1179.50, 25.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.40, -1177.80, 28.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 930.40, -1172.50, 28.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 928.30, -1169.00, 28.40,   0.00, 0.00, 158.00);
CreateDynamicObject(1411, 925.70, -1165.20, 28.40,   0.00, 0.00, 92.00);
CreateDynamicObject(1411, 923.50, -1161.40, 28.40,   0.00, 0.00, 148.00);
CreateDynamicObject(10401, 913.20, -1175.80, 18.30,   0.00, 0.00, 224.00);
CreateDynamicObject(8535, 846.80, -1198.10, 22.30,   0.00, 0.00, 136.00);
CreateDynamicObject(10401, 893.00, -1164.10, 18.30,   0.00, 0.00, 44.00);
CreateDynamicObject(3928, 853.62, -1206.82, 15.81,   0.00, 0.00, 0.00);
CreateDynamicObject(3928, 889.00, -1285.20, 22.10,   0.00, 0.00, 0.00);
CreateDynamicObject(8613, 899.40, -1269.80, 18.10,   0.00, 0.00, 180.00);
CreateDynamicObject(8613, 876.60, -1269.70, 18.10,   0.00, 0.00, 178.00);
CreateDynamicObject(10401, 893.70, -1248.40, 16.80,   0.00, 0.00, 314.00);
CreateDynamicObject(1231, 896.50, -1238.20, 18.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 879.90, -1238.20, 17.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 879.80, -1248.30, 17.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 896.10, -1248.50, 17.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 879.70, -1258.40, 16.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 896.30, -1258.50, 16.70,   0.00, 0.00, 0.00);
CreateDynamicObject(9833, 880.40, -1222.60, 19.20,   0.00, 0.00, 0.00);

//////////////////////////////////Nuevo Al Qaeda /////////////////////////////////////////////////
portonalqaeda = CreateDynamicObject(988, 132.56851, 1941.33850, 19.34000,   0.00000, 0.00000, 180.00000);
portonalqaeda1 = CreateDynamicObject(988, 138.14885, 1941.32520, 19.34000,   0.00000, 0.00000, 180.00000);
portonalqaeda2 = CreateDynamicObject(975, 214.30409, 1875.37415, 13.81230,   0.00000, 0.00000, 0.00000);

CreateDynamicObject(3749, -1289.40, 2464.80, 92.30,   0.00, 0.00, 10.00);
CreateDynamicObject(3607, -1345.90, 2519.70, 92.20,   0.00, 0.00, 50.00);
CreateDynamicObject(3622, -1267.70, 2494.10, 89.00,   0.00, 0.00, 42.00);
CreateDynamicObject(3624, -1292.90, 2517.90, 91.50,   0.00, 0.00, 88.00);
CreateDynamicObject(987, -1366.70, 2467.20, 87.60,   0.00, 0.00, 348.00);
CreateDynamicObject(8210, -1327.40, 2464.00, 89.10,   0.00, 0.00, 358.00);
CreateDynamicObject(987, -1366.80, 2467.50, 87.60,   0.00, 0.00, 176.00);
CreateDynamicObject(3115, -1307.50, 2529.00, 86.50,   0.00, 0.00, 88.00);
CreateDynamicObject(3115, -1288.70, 2528.30, 86.50,   0.00, 0.00, 268.00);
CreateDynamicObject(3115, -1289.50, 2507.20, 86.50,   0.00, 0.00, 268.00);
CreateDynamicObject(3115, -1308.10, 2507.90, 86.50,   0.00, 0.00, 88.00);
CreateDynamicObject(3115, -1290.30, 2486.40, 84.70,   0.00, 10.00, 268.00);
CreateDynamicObject(996, -1316.80, 2498.10, 87.60,   0.00, 0.00, 358.00);
CreateDynamicObject(996, -1307.70, 2497.80, 87.60,   0.00, 0.00, 358.00);
CreateDynamicObject(996, -1317.60, 2499.20, 87.60,   0.00, 0.00, 88.00);
CreateDynamicObject(996, -1317.20, 2510.20, 87.60,   0.00, 0.00, 88.00);
CreateDynamicObject(8210, -1260.80, 2485.80, 89.10,   0.00, 0.00, 46.00);
CreateDynamicObject(8210, -1297.90, 2558.80, 88.40,   0.00, 0.00, 0.00);
CreateDynamicObject(8210, -1256.00, 2535.00, 91.00,   0.00, 355.00, 300.00);
CreateDynamicObject(987, -1335.50, 2559.60, 87.60,   0.00, 0.00, 356.00);
CreateDynamicObject(987, -1335.40, 2559.60, 87.60,   0.00, 0.00, 160.00);
CreateDynamicObject(3934, -1311.69, 2506.57, 86.63,   0.00, 0.00, 0.00);
CreateDynamicObject(3934, -1317.75, 2490.17, 85.88,   0.00, 0.00, 0.00);
CreateDynamicObject(3934, -1311.70, 2503.50, 86.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, -1342.90, 2504.60, 86.80,   0.00, 0.00, 320.00);
CreateDynamicObject(1360, -1331.70, 2517.30, 86.80,   0.00, 0.00, 318.00);
CreateDynamicObject(19124, -1338.10, 2508.70, 86.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, -1335.20, 2512.20, 86.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, -1307.90, 2506.80, 87.40,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, -1308.00, 2500.00, 87.40,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, -1315.60, 2500.00, 87.40,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, -1315.60, 2506.80, 87.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, -1337.10, 2495.60, 86.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, -1328.60, 2488.30, 86.00,   0.00, 0.00, 0.00);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///piso
new myobject4 = CreateObject(2885, 1554.99, -1675.62, 27.03,   0.00, 0.00, 89.46);
SetObjectMaterialText(myobject4, "\nDepartamento\n  Policial", 0,OBJECT_MATERIAL_SIZE_256x128,\
"Arial", 25, 1, 0xFFFF0000, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
//////////////LSPD
new myobject3 = CreateObject(3976, 1571.60, -1675.75, 35.64,   360.04, 0.00, 0.08);
SetObjectMaterial(myobject3, 1, 3967,"cj_airprt","Slabs");
SetObjectMaterial(myobject3, 2, 3967,"cj_airprt","Slabs");
SetObjectMaterial(myobject3, 3, 3967,"cj_airprt","Slabs");
SetObjectMaterial(myobject3, 4, 3967,"cj_airprt","ws_stationfloor");
SetObjectMaterial(myobject3, 5, 3922,"bistro","DinerFloor");
SetObjectMaterial(myobject3, 6, 19400,"all_walls","ab_clubloungewall");
SetObjectMaterial(myobject3, 7, 19400,"all_walls","ab_clubloungewall");
SetObjectMaterial(myobject3, 8, 19400,"all_walls","ab_clubloungewall");
SetObjectMaterial(myobject3, 9, 3922,"bistro","DinerFloor");
SetObjectMaterial(myobject3, 12, 3925,"weemap","sw_shedwindow1");
SetObjectMaterial(myobject3, 11, 19400,"all_walls","desgreengrass");
SetObjectMaterial(myobject3, 13, 3967,"cj_airprt","Slabs");
// -================================== Nuevo AyuntaMiento  LS (by Boxter)==========================================-
new myobject = CreateObject(3980, 1481.26, -1785.00, 22.38,   360.24, 0.00, -0.06);
SetObjectMaterial(myobject, 1, 3905,"libertyhi2","tenbeigebrick64");
SetObjectMaterial(myobject, 2, 3905,"libertyhi2","tenbeigebrick64");
SetObjectMaterial(myobject, 3, 3905,"libertyhi2","tenbeigebrick64");
SetObjectMaterial(myobject, 4, 3905,"libertyhi2","tenbeigebrick64");
new myobject2 = CreateObject(4002, 1479.81, -1790.40, 56.02,   359.36, 0.00, -0.04);
SetObjectMaterial(myobject2, 1, 3905,"libertyhi2","tenbeige128");
SetObjectMaterial(myobject2, 2, 9131,"vegashsetx","badhousewall01_128");
SetObjectMaterial(myobject2, 3, 9131,"vegashsetx","badhousewallc02_128");
SetObjectMaterial(myobject2, 4, 9131,"vegashsetx","badhousewallc01_128");
///////////////////////////////// Mapeo Capone por Charli Nabarro //////////////////////////////////////////////////
//Estos son donde van  las rejas moviles
puertacapone1 = CreateDynamicObject(980,2567.43,1484.18,12.46,0.00,0.00,180.48); //Abierta, yo le puse "Puertacapone1" por que no se me ocurrio nada ya tu le puedes poner otra cosa
puertacapone2 = CreateDynamicObject(980,2507.27,1603.04,12.46,0.00,0.00,-2.12);  //Abierta, igual a esta
CreateDynamicObject(3749, 2567.42, 1484.21, 15.67,   0.00, 0.00, 0.00);
CreateDynamicObject(3749, 2507.29, 1603.48, 15.54,   0.00, 0.00, -3.94);
//  Todos estos son  cercas de las que se pusieron alrededor de la hq
CreateDynamicObject(987, 2577.29, 1483.26, 9.79,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2586.06, 1483.22, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2597.97, 1483.11, 9.81,   0.00, 0.00, 90.46);
CreateDynamicObject(987, 2597.88, 1495.05, 9.81,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2597.88, 1506.96, 9.81,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2597.88, 1518.87, 9.81,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2597.89, 1530.79, 9.81,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2597.91, 1542.71, 9.81,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2597.91, 1554.63, 9.81,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2597.91, 1566.56, 9.81,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2597.92, 1578.49, 9.81,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2597.93, 1584.41, 9.81,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2597.91, 1591.56, 9.81,   0.00, 0.00, 90.21);
CreateDynamicObject(987, 2597.95, 1603.47, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2586.03, 1603.47, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2574.10, 1603.48, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2562.16, 1603.49, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2550.24, 1603.50, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2538.31, 1603.50, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2526.40, 1603.57, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2498.22, 1603.73, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2486.26, 1603.73, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2474.34, 1603.73, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2462.38, 1603.74, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2450.44, 1603.75, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2436.99, 1603.83, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2448.82, 1603.75, 9.81,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2436.99, 1591.91, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.98, 1580.01, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.96, 1568.11, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.96, 1556.18, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.96, 1544.24, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.96, 1532.31, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.96, 1520.38, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.96, 1508.44, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.94, 1499.44, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.93, 1494.58, 9.81,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2436.86, 1482.69, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2448.78, 1482.69, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2460.70, 1482.68, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2472.64, 1482.67, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2484.58, 1482.67, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2496.52, 1482.67, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2508.44, 1482.66, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2520.37, 1482.65, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2532.29, 1482.64, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2538.28, 1482.64, 9.81,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2547.27, 1482.62, 9.81,   0.00, 0.00, 0.00);
//////////////////////////////////////////// Familia Triadas ////////////////////////////////////////////////////////////////////
//Puertas

triada2 = CreateDynamicObject(980, 767.40002441406, -1420.3000488281, 15.300000190735, 0, 0, 0);
triada1 = CreateDynamicObject(980, 708.29998779297, -1417.3000488281, 15.300000190735, 0, 0, 0);
triada3 = CreateDynamicObject(980, 725, -1577, 3, 0, 0, 0);

CreateDynamicObject(987, 695.30, -1425.80, 14.90,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 694.90, -1437.90, 14.90,   0.00, 0.00, 265.00);
CreateDynamicObject(987, 693.80, -1449.90, 14.90,   0.00, 0.00, 265.00);
CreateDynamicObject(987, 692.50, -1461.90, 14.90,   0.00, 0.00, 264.00);
CreateDynamicObject(987, 691.10, -1474.00, 14.90,   0.00, 0.00, 266.00);
CreateDynamicObject(987, 690.20, -1485.90, 14.90,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 690.20, -1497.80, 14.90,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 690.20, -1509.70, 14.90,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 690.20, -1521.70, 14.90,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 690.20, -1533.60, 14.90,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 690.20, -1545.50, 14.90,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 695.30, -1425.70, 14.00,   0.00, 0.00, 60.00);
CreateDynamicObject(3749, 708.30, -1417.80, 18.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3749, 767.40, -1421.40, 18.40,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 783.00, -1446.20, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 778.10, -1488.40, 12.60,   0.00, 0.00, 79.00);
CreateDynamicObject(987, 751.80, -1544.70, 12.60,   0.00, 0.00, 75.00);
CreateDynamicObject(987, 755.00, -1533.20, 12.60,   0.00, 0.00, 75.00);
CreateDynamicObject(987, 690.10, -1557.20, 17.30,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 704.90, -1576.90, 14.40,   0.00, 0.00, 2.00);
CreateDynamicObject(3749, 725.00, -1577.10, 6.10,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 704.60, -1576.80, 13.50,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 702.20, -1557.20, 17.30,   0.00, 0.00, 285.00);
CreateDynamicObject(987, 716.80, -1576.60, 14.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 728.80, -1576.80, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 750.00, -1569.90, 12.60,   0.00, 0.00, 216.00);
CreateDynamicObject(987, 725.20, -1576.10, -12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 713.35, -1576.18, -13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 737.20, -1576.70, -8.57,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 713.40, -1576.50, -8.62,   0.00, 0.00, 0.00);
CreateDynamicObject(980, 739.10, -1576.20, 2.50,   0.00, 0.00, 0.00);
CreateDynamicObject(980, 710.80, -1576.30, 2.80,   0.00, 0.00, 0.00);
CreateDynamicObject(10244, 710.50, -1467.40, 17.97,   0.00, 0.00, 270.00);
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Hospital Esterior//detetado!
CreateDynamicObject(987, 1137.76, -1347.36, 12.88,   0.00, 0.00, 0.00);
CreateDynamicObject(3749, 1140.79, -1293.94, 18.56,   0.00, 0.00, -0.36);
samur = CreateDynamicObject(980, 1140.82, -1295.21, 15.41,   0.00, 0.00, 0.00);
	//====================================== Unity 24/7 ===========================================0
CreateDynamicObject(2942, 1834.40, -1851.01, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1835.12, -1852.11, 12.44,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1838.26, -1852.11, 12.44,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1841.49, -1852.13, 12.44,   0.00, 0.00, 0.00);
CreateDynamicObject(1359, 1843.45, -1860.29, 13.06,   0.00, 0.00, 0.00);
CreateDynamicObject(1226, 1841.62, -1853.00, 14.29,   356.86, 0.00, 347.95);
CreateDynamicObject(5130, 12505.24, -1978.74, 1304.67,   0.00, 0.00, 0.00);
CreateDynamicObject(3525, 1833.82, -1843.60, 15.88,   0.00, 0.00, 277.52);
CreateDynamicObject(3525, 1833.82, -1841.57, 15.88,   0.00, 0.00, 277.52);
CreateDynamicObject(3525, 1833.32, -1845.25, 15.88,   0.00, 0.00, 277.52);
CreateDynamicObject(3525, 1833.43, -1839.70, 15.88,   0.00, 0.00, 277.52);
CreateDynamicObject(1411, 1898.64, -1879.89, 14.28,   0.00, 0.00, 180.31);
CreateDynamicObject(970, 1826.88, -1838.81, 13.08,   0.00, 0.00, 89.94);
CreateDynamicObject(970, 1826.86, -1846.17, 13.08,   0.00, 0.00, 89.94);
CreateDynamicObject(970, 1826.86, -1850.32, 13.08,   0.00, 0.00, 89.94);
CreateDynamicObject(970, 1826.85, -1854.50, 13.08,   0.00, 0.00, 89.94);
CreateDynamicObject(970, 1826.86, -1857.90, 13.08,   0.00, 0.00, 89.94);
CreateDynamicObject(970, 1826.89, -1834.66, 13.08,   0.00, 0.00, 89.94);
CreateDynamicObject(970, 1826.88, -1830.49, 13.08,   0.00, 0.00, 89.94);
CreateDynamicObject(14537, 1849.08, -1843.10, 18.28,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1833.57, -1853.77, 13.08,   0.00, 0.00, 89.94);
CreateDynamicObject(970, 1833.58, -1857.92, 13.08,   0.00, 0.00, 89.94);
CreateDynamicObject(1256, 1730.21, -1860.35, 13.23,   0.00, 0.00, -89.34);
CreateDynamicObject(1256, 1740.35, -1860.34, 13.23,   0.00, 0.00, -89.58);
CreateDynamicObject(1256, 1751.79, -1860.43, 13.23,   0.00, 0.00, -90.36);
CreateDynamicObject(1256, 1762.73, -1860.45, 13.23,   0.00, 0.00, -90.00);
CreateDynamicObject(1256, 1772.29, -1860.42, 13.23,   0.00, 0.00, -89.34);
CreateDynamicObject(1256, 1783.54, -1860.37, 13.23,   0.00, 0.00, -89.40);
CreateDynamicObject(1256, 1794.48, -1860.55, 13.23,   0.00, 0.00, -89.70);
CreateDynamicObject(1256, 1735.95, -1849.57, 13.23,   0.00, 0.00, 89.64);
CreateDynamicObject(1256, 1756.27, -1849.55, 13.23,   0.00, 0.00, 90.18);
CreateDynamicObject(1256, 1767.31, -1849.57, 13.23,   0.00, 0.00, 90.18);
CreateDynamicObject(1256, 1778.51, -1849.52, 13.23,   0.00, 0.00, 90.18);
CreateDynamicObject(1256, 1787.77, -1849.33, 13.23,   0.00, 0.00, 90.18);
CreateDynamicObject(1256, 1799.25, -1849.54, 13.23,   0.00, 0.00, 90.18);
CreateDynamicObject(1256, 1804.21, -1860.50, 13.23,   0.00, 0.00, -89.70);
CreateDynamicObject(1257, 1788.44, -1837.10, 13.98,   0.00, 0.00, -105.18);
////Mapeo por Evolution
CreateDynamicObject(8843,1457.70000000,-1566.22000000,12.58000000,0.00000000,0.00000000,-88.02000000); //
CreateDynamicObject(4569,1514.99000000,-1540.82000000,27.27000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3851,1496.47000000,-1504.37000000,38.82000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3851,1496.48000000,-1515.64000000,38.82000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3851,1496.49000000,-1526.86000000,38.82000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3851,1496.47000000,-1538.16000000,38.82000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3851,1496.44000000,-1549.53000000,38.82000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3851,1496.39000000,-1560.76000000,38.82000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3851,1496.46000000,-1572.07000000,38.82000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3851,1496.39000000,-1577.47000000,38.82000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3851,1502.07000000,-1583.07000000,38.78000000,0.00000000,0.00000000,-90.00000000); //
CreateDynamicObject(3851,1513.37000000,-1583.09000000,38.78000000,0.00000000,0.00000000,-90.00000000); //
CreateDynamicObject(3851,1524.67000000,-1583.07000000,38.78000000,0.00000000,0.00000000,-90.00000000); //
CreateDynamicObject(3851,1529.33000000,-1583.06000000,38.78000000,0.00000000,0.00000000,-90.00000000); //
CreateDynamicObject(19124,1534.94000000,-1583.07000000,37.05000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1526.10000000,-1583.09000000,36.86000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1516.18000000,-1583.18000000,36.92000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1506.32000000,-1583.15000000,36.84000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1496.44000000,-1583.09000000,37.04000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1496.52000000,-1498.76000000,36.95000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1496.47000000,-1509.95000000,37.05000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1496.47000000,-1521.24000000,37.03000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1496.47000000,-1532.52000000,37.02000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1496.46000000,-1543.81000000,37.15000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1496.40000000,-1555.12000000,37.12000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1496.48000000,-1566.35000000,37.07000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(19124,1496.48000000,-1574.30000000,37.07000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(8645,1482.18000000,-1498.99000000,13.40000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(8645,1474.48000000,-1498.97000000,13.40000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(4638,1458.95000000,-1498.69000000,14.65000000,0.00000000,0.00000000,-1.02000000); //
CreateDynamicObject(717,1466.11000000,-1498.99000000,12.53000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(717,1473.79000000,-1498.91000000,12.53000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(717,1481.58000000,-1498.95000000,12.53000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(717,1489.20000000,-1498.93000000,12.53000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(8645,1482.02000000,-1582.11000000,13.40000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(8645,1458.98000000,-1582.11000000,13.40000000,0.00000000,0.00000000,-0.08000000); //
CreateDynamicObject(8645,1455.44000000,-1582.14000000,13.40000000,0.00000000,0.00000000,-0.08000000); //
CreateDynamicObject(8645,1485.91000000,-1582.09000000,13.40000000,0.00000000,0.00000000,-0.08000000); //
CreateDynamicObject(4638,1441.36000000,-1581.46000000,14.65000000,0.00000000,0.00000000,-179.76000000); //
CreateDynamicObject(717,1493.05000000,-1582.12000000,12.58000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(717,1485.30000000,-1582.17000000,12.58000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(717,1470.05000000,-1582.18000000,12.58000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(717,1477.52000000,-1582.13000000,12.58000000,0.00000000,0.00000000,-17.58000000); //
CreateDynamicObject(717,1462.53000000,-1582.17000000,12.58000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(717,1454.79000000,-1582.24000000,12.58000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(717,1447.00000000,-1582.14000000,12.58000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(10183,1476.49000000,-1577.63000000,12.64000000,0.00000000,0.00000000,225.06000000); //
CreateDynamicObject(10183,1461.37000000,-1577.55000000,12.64000000,0.00000000,0.00000000,225.06000000); //
CreateDynamicObject(1223,1489.12000000,-1582.19000000,13.10000000,0.00000000,0.00000000,84.78000000); //
CreateDynamicObject(1223,1481.37000000,-1582.08000000,13.10000000,0.00000000,0.00000000,84.78000000); //
CreateDynamicObject(1223,1473.58000000,-1582.08000000,13.10000000,0.00000000,0.00000000,84.78000000); //
CreateDynamicObject(1223,1466.06000000,-1582.04000000,13.10000000,0.00000000,0.00000000,84.78000000); //
CreateDynamicObject(1223,1458.34000000,-1582.05000000,13.10000000,0.00000000,0.00000000,84.78000000); //
CreateDynamicObject(1223,1450.58000000,-1582.05000000,13.10000000,0.00000000,0.00000000,84.78000000); //
CreateDynamicObject(10183,1481.20000000,-1503.43000000,12.64000000,0.00000000,0.00000000,45.60000000); //
CreateDynamicObject(1223,1486.10000000,-1498.99000000,12.38000000,0.00000000,0.00000000,-91.20000000); //
CreateDynamicObject(1223,1493.72000000,-1498.96000000,12.38000000,0.00000000,0.00000000,-91.20000000); //
CreateDynamicObject(1223,1478.07000000,-1498.90000000,12.38000000,0.00000000,0.00000000,-91.20000000); //
CreateDynamicObject(1223,1469.25000000,-1499.01000000,12.38000000,0.00000000,0.00000000,-91.20000000); //
CreateDynamicObject(1223,1462.77000000,-1498.90000000,12.38000000,0.00000000,0.00000000,-91.20000000); //
CreateDynamicObject(8843,1469.87000000,-1514.12000000,12.58000000,0.00000000,0.00000000,91.74000000); //
CreateDynamicObject(10183,1465.87000000,-1539.99000000,12.64000000,0.00000000,0.00000000,-44.82000000); //
CreateDynamicObject(10183,1478.75000000,-1539.98000000,12.64000000,0.00000000,0.00000000,135.36000000); //
CreateDynamicObject(3660,1472.33000000,-1547.69000000,13.97000000,0.00000000,0.00000000,90.06000000); //
CreateDynamicObject(3660,1472.33000000,-1550.57000000,13.97000000,0.00000000,0.00000000,90.18000000); //
CreateDynamicObject(1295,1472.60000000,-1520.56000000,17.84000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1295,1472.71000000,-1560.03000000,17.84000000,0.00000000,0.00000000,-174.00000000); //
CreateDynamicObject(1653,1471.55000000,-1553.93000000,13.18000000,0.00000000,0.00000000,90.66000000); //
CreateDynamicObject(1653,1471.49000000,-1541.14000000,13.18000000,0.00000000,0.00000000,89.94000000); //
CreateDynamicObject(1653,1471.52000000,-1529.98000000,13.18000000,0.00000000,0.00000000,89.94000000); //
CreateDynamicObject(1653,1471.53000000,-1526.80000000,13.18000000,0.00000000,0.00000000,89.94000000); //
CreateDynamicObject(3660,1472.32000000,-1530.22000000,13.97000000,0.00000000,0.00000000,90.06000000); //
CreateDynamicObject(1653,1473.56000000,-1526.83000000,13.18000000,0.00000000,0.00000000,89.94000000); //
CreateDynamicObject(1653,1471.53000000,-1526.80000000,13.18000000,0.00000000,0.00000000,89.94000000); //
CreateDynamicObject(1653,1473.58000000,-1539.50000000,13.18000000,0.00000000,0.00000000,89.94000000); //
CreateDynamicObject(1653,1473.58000000,-1552.40000000,13.18000000,0.00000000,0.00000000,89.94000000); //
CreateDynamicObject(1653,1473.60000000,-1553.90000000,13.18000000,0.00000000,0.00000000,89.94000000); //
CreateDynamicObject(717,1472.78000000,-1554.95000000,12.58000000,0.00000000,0.00000000,5.04000000); //
CreateDynamicObject(717,1472.34000000,-1544.84000000,12.58000000,0.00000000,0.00000000,5.88000000); //
CreateDynamicObject(717,1472.48000000,-1534.86000000,12.58000000,0.00000000,0.00000000,5.88000000); //
CreateDynamicObject(717,1472.50000000,-1525.08000000,12.58000000,0.00000000,0.00000000,5.88000000); //
/////
	//=================================== Mapeo Traficantes =========================================
CreateDynamicObject(4100,-24.18847656,153.59375000,3.22306848,0.00000000,0.00000000,29.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-29.73925781,122.36035156,3.81885719,0.00000000,0.00000000,87.98950195); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-28.92773438,140.72753906,3.41885710,0.00000000,0.00000000,29.98168945); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-31.31054688,134.27441406,3.81885719,0.00000000,0.00000000,29.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-19.13769531,114.45312500,3.81885719,0.00000000,0.00000000,119.98168945); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-6.89746094,108.57617188,3.81885719,0.00000000,0.00000000,107.97912598); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,3.89550781,100.15527344,3.81885719,0.00000000,0.00000000,95.98205566); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,11.02246094,88.94042969,3.81885719,0.00000000,0.00000000,67.98889160); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,11.37304688,75.82031250,3.81885719,0.00000000,0.00000000,33.98071289); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,6.53515625,63.07519531,3.81885719,0.00000000,0.00000000,23.98315430); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,0.70410156,50.65234375,3.81885719,0.00000000,0.00000000,25.98266602); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-23.38769531,6.39453125,3.81885719,0.00000000,0.00000000,27.98217773); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-28.76953125,-6.25976562,3.81106567,0.00000000,0.00000000,25.97717285); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-40.11190033,-33.44863892,3.81885695,0.00000000,0.00000000,27.97668457); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-34.76953125,-20.37695312,3.81885719,0.00000000,0.00000000,27.97668457); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-32.55665207,-14.90233326,3.81106567,0.00000000,0.00000000,25.97717285); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-142.79991150,-40.43000793,3.81885719,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (10)
CreateDynamicObject(4100,-153.13970947,-65.99372101,3.81885719,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (12)
CreateDynamicObject(4100,-163.55761719,-91.35253906,3.81885719,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (14)
CreateDynamicObject(4100,-159.22363281,-99.23046875,3.81885719,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (17)
CreateDynamicObject(4100,-45.27636719,-46.77441406,3.81885719,0.00000000,0.00000000,209.99023438); //object(meshfence1_lan) (19)
CreateDynamicObject(4100,-122.91992188,-105.71093750,3.81885719,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (20)
CreateDynamicObject(4100,-95.90429688,-110.53515625,3.81885719,0.00000000,0.00000000,309.98474121); //object(meshfence1_lan) (22)
CreateDynamicObject(4100,-82.29589844,-112.95800781,3.81106567,0.00000000,0.00000000,309.98474121); //object(meshfence1_lan) (23)
CreateDynamicObject(4100,-72.97949219,-114.61328125,3.81106567,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (24)
CreateDynamicObject(4100,-64.67480469,-109.42285156,3.81885719,0.00000000,0.00000000,213.98620605); //object(meshfence1_lan) (25)
CreateDynamicObject(4100,-60.87304688,-96.26269531,3.81106567,0.00000000,0.00000000,213.98071289); //object(meshfence1_lan) (26)
CreateDynamicObject(4100,-57.08789062,-83.10253906,6.51885700,0.00000000,0.00000000,213.98620605); //object(meshfence1_lan) (27)
CreateDynamicObject(4100,-53.28125000,-69.93652344,3.81885719,0.00000000,0.00000000,213.98620605); //object(meshfence1_lan) (28)
CreateDynamicObject(4100,-49.02929688,-56.93261719,3.81885719,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (29)
CreateDynamicObject(4100,-122.91992188,-105.71093750,6.51885700,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (31)
CreateDynamicObject(4100,-132.06347656,-104.06445312,3.81885719,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (32)
CreateDynamicObject(4100,-145.57812500,-101.66308594,3.81885719,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (33)
CreateDynamicObject(4100,-159.22363281,-99.23046875,6.51885700,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (34)
CreateDynamicObject(4100,-163.55761719,-91.35253906,6.51885700,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (35)
CreateDynamicObject(4100,-158.36328125,-78.69335938,3.81106567,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (36)
CreateDynamicObject(4100,-101.48242188,-109.52050781,3.81885719,0.00000000,0.00000000,309.98474121); //object(meshfence1_lan) (40)
CreateDynamicObject(4100,-95.90429688,-110.53515625,6.51885700,0.00000000,0.00000000,309.98474121); //object(meshfence1_lan) (41)
CreateDynamicObject(4100,-82.29589844,-112.95800781,6.51106548,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (42)
CreateDynamicObject(4100,-72.97949219,-114.61328125,6.51106548,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (43)
CreateDynamicObject(4100,-64.67480469,-109.42285156,6.51885700,0.00000000,0.00000000,213.98071289); //object(meshfence1_lan) (44)
CreateDynamicObject(4100,-60.87304688,-96.26269531,6.51106548,0.00000000,0.00000000,213.98620605); //object(meshfence1_lan) (45)
CreateDynamicObject(4100,-57.08789062,-83.10253906,3.81885719,0.00000000,0.00000000,213.98620605); //object(meshfence1_lan) (46)
CreateDynamicObject(4100,-53.28125000,-69.93652344,6.51885700,0.00000000,0.00000000,213.98620605); //object(meshfence1_lan) (47)
CreateDynamicObject(4100,-49.02929688,-56.93261719,6.51885700,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (48)
CreateDynamicObject(4100,-132.44921875,-14.97753906,3.81885719,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-137.61132812,-27.69433594,3.81885719,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (55)
CreateDynamicObject(4100,-142.79980469,-40.42968750,6.51885700,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (56)
CreateDynamicObject(4100,-148.00000000,-53.27539062,3.81885719,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (57)
CreateDynamicObject(4100,-153.13964844,-65.99316406,6.51885700,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (58)
CreateDynamicObject(4100,-132.44921875,-14.97753906,6.51885700,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (75)
CreateDynamicObject(4100,-137.61132812,-27.69433594,6.51885700,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (76)
CreateDynamicObject(4100,-148.00000000,-53.27539062,6.51885700,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (78)
CreateDynamicObject(4100,-158.36328125,-78.69335938,6.51106548,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (80)
CreateDynamicObject(4100,-145.57812500,-101.66308594,6.51885700,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (83)
CreateDynamicObject(4100,-132.06347656,-104.06445312,6.51885700,0.00000000,0.00000000,309.99023438); //object(meshfence1_lan) (84)
CreateDynamicObject(4100,-101.48242188,-109.52050781,6.51885700,0.00000000,0.00000000,309.98474121); //object(meshfence1_lan) (86)
CreateDynamicObject(4100,-45.27636719,-46.77441406,6.51885700,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (95)
CreateDynamicObject(4100,-34.76953125,-20.37695312,3.81885719,0.00000000,0.00000000,27.97668457); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-36.18088913,-23.80076408,3.81885719,0.00000000,0.00000000,27.97668457); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-28.76953125,-6.25976562,3.81106567,0.00000000,0.00000000,25.97717285); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-28.76953125,-6.25976562,3.81106567,0.00000000,0.00000000,25.97717285); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-23.38769531,6.39453125,3.81885719,0.00000000,0.00000000,27.98217773); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-12.14010620,28.00717163,6.41885710,0.00000000,0.00000000,17.98461914); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,0.70410156,50.65234375,3.81885719,0.00000000,0.00000000,25.98266602); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,6.53515625,63.07519531,6.51885748,0.00000000,0.00000000,23.98315430); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,11.37304688,75.82031250,3.81885719,0.00000000,0.00000000,33.98071289); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,11.02246094,88.94042969,3.81885719,0.00000000,0.00000000,67.98889160); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,3.89550781,100.15527344,3.81885719,0.00000000,0.00000000,95.98205566); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,3.89550781,100.15527344,3.81885719,0.00000000,0.00000000,95.98205566); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-6.89746094,108.57617188,3.81885719,0.00000000,0.00000000,107.97912598); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-6.89746094,108.57617188,6.51885700,0.00000000,0.00000000,107.97912598); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-19.13769531,114.45312500,3.81885719,0.00000000,0.00000000,119.98168945); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-29.73925781,122.36035156,6.01885700,0.00000000,0.00000000,87.98950195); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-31.31054688,134.27441406,6.01885700,0.00000000,0.00000000,29.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-28.92773438,140.72753906,6.01885700,0.00000000,0.00000000,29.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-24.18847656,153.59375000,6.02306843,0.00000000,0.00000000,29.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-19.13769531,114.45312500,6.51885700,0.00000000,0.00000000,119.98168945); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,3.89550781,100.15527344,6.51885700,0.00000000,0.00000000,95.98205566); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,11.02246094,88.94042969,6.51885700,0.00000000,0.00000000,67.98889160); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,11.37304688,75.82031250,6.51885700,0.00000000,0.00000000,33.98071289); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,6.53515625,63.07519531,3.81885719,0.00000000,0.00000000,23.98315430); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,0.70410156,50.65234375,6.51885700,0.00000000,0.00000000,25.98266602); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-23.38769531,6.39453125,6.51885700,0.00000000,0.00000000,27.98217773); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-28.76953125,-6.25976562,6.51106548,0.00000000,0.00000000,25.97717285); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-23.38769531,6.39453125,3.81885719,0.00000000,0.00000000,27.98217773); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-32.30175781,-14.27148438,6.51106548,0.00000000,0.00000000,25.97717285); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-36.20283890,-23.85466194,5.98194695,0.00000000,0.00000000,27.97119141); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-40.11132812,-33.44824219,6.51885700,0.00000000,0.00000000,27.97668457); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-5.67675781,38.56835938,6.51885700,0.00000000,0.00000000,17.98461914); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-17.55175781,18.75390625,3.81885719,0.00000000,0.00000000,21.98364258); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-17.55175781,18.75390625,6.71885729,0.00000000,0.00000000,21.98364258); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-38.33879089,149.10295105,6.54173470,0.00000000,0.00000000,29.99267578); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-34.55273438,159.70605469,3.17751384,0.00000000,0.00000000,29.99267578); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-47.25123596,145.50614929,6.51885700,0.00000000,0.00000000,113.99264526); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-71.96622467,157.54020691,3.81885719,0.00000000,0.00000000,113.98867798); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-59.62890625,151.51757812,3.81885719,0.00000000,0.00000000,113.98867798); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-99.02751923,102.05568695,6.51126957,0.00000000,0.00000000,211.98864746); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-80.33593750,153.72167969,3.81985927,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-85.05371094,140.87011719,3.81438041,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-89.77343750,128.00000000,3.81885719,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-94.50976562,115.05468750,3.81126976,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-103.27539062,88.97558594,3.81885719,0.00000000,0.00000000,211.98120117); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-90.40820312,43.23046875,6.51885700,0.00000000,0.00000000,209.97619629); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-34.55273438,159.70605469,6.57751369,0.00000000,0.00000000,29.99267578); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-38.33789062,149.10253906,3.04173446,0.00000000,0.00000000,29.99267578); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-47.25097656,145.50585938,3.81885719,0.00000000,0.00000000,113.98864746); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-59.62890625,151.51757812,6.51885700,0.00000000,0.00000000,113.98867798); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-71.96582031,157.54003906,6.51885700,0.00000000,0.00000000,113.98867798); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-80.33593750,153.72167969,6.51985931,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-85.05371094,140.87011719,6.51438046,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-89.77343750,128.00000000,6.51885700,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-94.50976562,115.05468750,6.51126957,0.00000000,0.00000000,209.98718262); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-99.02734375,102.05566406,3.81126976,0.00000000,0.00000000,211.98669434); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-103.27539062,88.97558594,6.51885700,0.00000000,0.00000000,211.98669434); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-38.33789062,149.10253906,4.04173470,0.00000000,0.00000000,29.99267578); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-34.55273438,159.70605469,4.17751360,0.00000000,0.00000000,29.99267578); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-137.61132812,-27.69433594,3.81885719,0.00000000,0.00000000,27.99316406); //object(meshfence1_lan) (55)
CreateDynamicObject(4100,-100.38281250,76.61621094,3.81885719,0.00000000,0.00000000,119.97619629); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-88.04003906,72.00097656,3.81885719,0.00000000,0.00000000,119.97619629); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-95.74227905,30.63999176,6.51885700,0.00000000,0.00000000,203.97619629); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-86.25000000,54.57324219,3.81885719,0.00000000,0.00000000,209.97619629); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-104.51738739,85.13684082,6.51885700,0.00000000,0.00000000,211.98120117); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-104.51660156,85.13671875,3.81885719,0.00000000,0.00000000,211.98120117); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-100.38281250,76.61621094,6.51885700,0.00000000,0.00000000,119.97619629); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-88.04003906,72.00097656,6.51885700,0.00000000,0.00000000,119.97619629); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-90.40820312,43.23046875,3.81885719,0.00000000,0.00000000,209.97619629); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-86.25000000,54.57324219,8.30085659,0.00000000,0.00000000,209.97619629); //object(meshfence1_lan) (4)
CreateDynamicObject(967,-84.79531860,61.55979919,2.11718750,0.00000000,0.00000000,344.00000000); //object(bar_gatebox01) (6)
CreateDynamicObject(11327,-118.46535492,-96.20757294,3.65211678,0.00000000,0.00000000,352.00000000); //object(sfse_hub_grgdoor02) (1)
CreateDynamicObject(2395,-118.45228577,-97.61875916,5.64062500,0.00000000,0.00000000,82.00000000); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,-118.34318542,-96.86096954,5.64062500,0.00000000,0.00000000,81.99645996); //object(cj_sports_wall) (3)
CreateDynamicObject(2395,-118.48073578,-97.50408173,7.14719677,0.00000000,0.00000000,81.99645996); //object(cj_sports_wall) (4)
CreateDynamicObject(2395,-121.90971375,-88.13680267,2.11808205,0.00000000,0.00000000,171.99645996); //object(cj_sports_wall) (5)
CreateDynamicObject(2395,-146.10461426,-98.89459229,2.11808205,0.00000000,0.00000000,351.99645996); //object(cj_sports_wall) (6)
CreateDynamicObject(2395,-147.28056335,-90.11779022,7.21070862,0.00000000,0.00000000,259.99096680); //object(cj_sports_wall) (7)
CreateDynamicObject(2395,-147.47070312,-90.65234375,2.11808205,0.00000000,0.00000000,259.98596191); //object(cj_sports_wall) (8)
CreateDynamicObject(2395,-147.15722656,-88.92968750,2.11808205,0.00000000,0.00000000,259.98596191); //object(cj_sports_wall) (9)
CreateDynamicObject(2395,-147.23437500,-89.60253906,5.64062500,0.00000000,0.00000000,259.98596191); //object(cj_sports_wall) (10)
CreateDynamicObject(2395,-147.37304688,-90.38769531,5.64062500,0.00000000,0.00000000,259.98596191); //object(cj_sports_wall) (11)
CreateDynamicObject(2395,-126.72649384,-97.08280182,7.05813980,0.00000000,0.00000000,349.99645996); //object(cj_sports_wall) (12)
CreateDynamicObject(2395,-123.72558594,-97.60280609,7.05813980,0.00000000,0.00000000,349.99145508); //object(cj_sports_wall) (13)
CreateDynamicObject(2395,-135.67268372,-95.52883911,7.16035986,0.00000000,0.00000000,349.99145508); //object(cj_sports_wall) (15)
CreateDynamicObject(2395,-132.40425110,-96.06036377,7.16035986,0.00000000,0.00000000,349.99145508); //object(cj_sports_wall) (16)
CreateDynamicObject(2395,-142.92138672,-94.35004425,7.05997944,0.00000000,0.00000000,349.99645996); //object(cj_sports_wall) (17)
CreateDynamicObject(2395,-145.51606750,-93.92809296,7.05997944,0.00000000,0.00000000,349.99645996); //object(cj_sports_wall) (18)
CreateDynamicObject(2395,-120.58946228,-93.43238831,6.46486378,0.00000000,0.00000000,167.99145508); //object(cj_sports_wall) (20)
CreateDynamicObject(2395,-122.45019531,-93.12890625,6.46486378,0.00000000,0.00000000,167.98645020); //object(cj_sports_wall) (19)
CreateDynamicObject(2395,-140.35951233,-90.21734619,6.57294369,0.00000000,0.00000000,167.98645020); //object(cj_sports_wall) (21)
CreateDynamicObject(2395,-130.04492188,-91.89453125,7.00399685,0.00000000,0.00000000,167.98645020); //object(cj_sports_wall) (22)
CreateDynamicObject(2395,-132.57226562,-91.48339844,7.00399685,0.00000000,0.00000000,167.98645020); //object(cj_sports_wall) (23)
CreateDynamicObject(2395,-142.90332031,-89.80273438,6.57294369,0.00000000,0.00000000,167.98645020); //object(cj_sports_wall) (24)
CreateDynamicObject(11327,-100.28320312,-99.60156250,3.65211678,0.00000000,0.00000000,349.99145508); //object(sfse_hub_grgdoor02) (2)
CreateDynamicObject(2395,-100.15982819,-98.41951752,6.57959366,0.00000000,0.00000000,259.99645996); //object(cj_sports_wall) (25)
CreateDynamicObject(2395,-100.17578125,-98.25585938,5.64062500,0.00000000,0.00000000,259.99145508); //object(cj_sports_wall) (26)
CreateDynamicObject(2395,-100.30468750,-99.00292969,5.64062500,0.00000000,0.00000000,259.99145508); //object(cj_sports_wall) (27)
CreateDynamicObject(2395,-74.88833618,-96.58451080,2.11808205,0.00000000,0.00000000,171.99145508); //object(cj_sports_wall) (28)
CreateDynamicObject(2395,-71.18672943,-104.07096100,2.11808205,0.00000000,0.00000000,79.99145508); //object(cj_sports_wall) (29)
CreateDynamicObject(2395,-98.99414062,-107.27246094,2.11808205,0.00000000,0.00000000,349.99145508); //object(cj_sports_wall) (31)
CreateDynamicObject(2395,-71.66015625,-106.70117188,2.11808205,0.00000000,0.00000000,79.99145508); //object(cj_sports_wall) (32)
CreateDynamicObject(2395,-71.43585205,-106.18848419,5.64062500,0.00000000,0.00000000,79.99145508); //object(cj_sports_wall) (33)
CreateDynamicObject(2395,-71.24547577,-105.29217529,5.64062500,0.00000000,0.00000000,79.99145508); //object(cj_sports_wall) (34)
CreateDynamicObject(2395,-71.41237640,-105.80149841,6.73354340,0.00000000,0.00000000,79.99145508); //object(cj_sports_wall) (35)
CreateDynamicObject(2395,-78.97064972,-105.53031921,6.91581059,0.00000000,0.00000000,349.99145508); //object(cj_sports_wall) (36)
CreateDynamicObject(2395,-75.81732178,-106.04312134,6.91581059,0.00000000,0.00000000,349.99145508); //object(cj_sports_wall) (37)
CreateDynamicObject(2395,-72.96414948,-101.95779419,6.79528427,0.00000000,0.00000000,169.99145508); //object(cj_sports_wall) (38)
CreateDynamicObject(2395,-75.62207031,-101.52539062,6.79528427,0.00000000,0.00000000,169.99145508); //object(cj_sports_wall) (39)
CreateDynamicObject(2395,-86.77889252,-104.26052856,6.79528427,0.00000000,0.00000000,349.99145508); //object(cj_sports_wall) (40)
CreateDynamicObject(2395,-88.60144806,-103.96414185,6.79528427,0.00000000,0.00000000,349.99145508); //object(cj_sports_wall) (41)
CreateDynamicObject(2395,-83.40319061,-100.11448669,6.79528427,0.00000000,0.00000000,175.99145508); //object(cj_sports_wall) (42)
CreateDynamicObject(2395,-96.84248352,-98.39217377,6.79528427,0.00000000,0.00000000,175.98999023); //object(cj_sports_wall) (43)
CreateDynamicObject(2395,-85.60449219,-99.90136719,6.79528427,0.00000000,0.00000000,175.98999023); //object(cj_sports_wall) (44)
CreateDynamicObject(2395,-93.26855469,-98.65527344,6.79528427,0.00000000,0.00000000,175.98999023); //object(cj_sports_wall) (45)
CreateDynamicObject(2395,-98.65664673,-102.34427643,6.79528427,0.00000000,0.00000000,347.98999023); //object(cj_sports_wall) (46)
CreateDynamicObject(2395,-96.26621246,-102.84765625,6.79528427,0.00000000,0.00000000,347.98645020); //object(cj_sports_wall) (47)
CreateDynamicObject(2969,-11.08886719,189.54687500,1.55598867,0.00000000,0.00000000,69.99938965); //object(level_ammobox) (3)
CreateDynamicObject(2969,-10.72363281,189.42480469,1.55598867,0.00000000,0.00000000,69.99938965); //object(level_ammobox) (14)
CreateDynamicObject(2969,-11.11322308,189.55589294,1.75598872,0.00000000,0.00000000,69.99389648); //object(level_ammobox) (17)
CreateDynamicObject(2969,-10.72363281,189.42480469,1.75598872,0.00000000,0.00000000,69.99938965); //object(level_ammobox) (18)
CreateDynamicObject(2969,-10.72363281,189.42480469,1.95598876,0.00000000,0.00000000,69.99389648); //object(level_ammobox) (20)
CreateDynamicObject(1224,-15.72045135,189.73199463,2.04460144,0.00000000,0.00000000,324.00000000); //object(woodenbox) (1)
CreateDynamicObject(1224,-16.80912781,190.59579468,2.04460144,0.00000000,0.00000000,323.99780273); //object(woodenbox) (2)
CreateDynamicObject(1224,-15.96386719,191.68554688,2.04460144,0.00000000,0.00000000,323.99780273); //object(woodenbox) (10)
CreateDynamicObject(1224,-14.94238281,190.86816406,2.04460144,0.00000000,0.00000000,323.99780273); //object(woodenbox) (12)
CreateDynamicObject(1224,-15.84991837,190.89978027,3.27404547,0.00000000,0.00000000,3.74230957); //object(woodenbox) (13)
CreateDynamicObject(12990,-2.84082031,195.50585938,1.62478554,0.00000000,0.00000000,153.99536133); //object(sw_jetty) (1)
CreateDynamicObject(12990,-19.61621094,205.47753906,1.66893554,0.00000000,0.00000000,329.99633789); //object(sw_jetty) (2)
CreateDynamicObject(3796,-0.95312500,181.24121094,1.42968750,0.00000000,0.00000000,0.00000000); //object(acbox1_sfs) (1)
CreateDynamicObject(3798,-13.93148041,180.28387451,1.42968750,0.00000000,0.00000000,13.99658203); //object(acbox3_sfs) (2)
CreateDynamicObject(3798,-14.38574219,182.15234375,1.42968750,0.00000000,0.00000000,13.99658203); //object(acbox3_sfs) (3)
CreateDynamicObject(3798,-14.56835938,182.12890625,3.43314362,0.00000000,0.00000000,13.99658203); //object(acbox3_sfs) (5)
CreateDynamicObject(3798,-16.58709717,181.42254639,1.42968750,0.00000000,0.00000000,13.99658203); //object(acbox3_sfs) (9)
CreateDynamicObject(3633,-33.67578125,194.75000000,1.90448952,0.00000000,0.00000000,331.99584961); //object(imoildrum4_las) (1)
CreateDynamicObject(3633,-34.79751968,195.45753479,1.90448952,0.00000000,0.00000000,331.99584961); //object(imoildrum4_las) (2)
CreateDynamicObject(3276,2.33418274,173.70993042,2.33220577,0.00000000,0.00000000,237.99998474); //object(cxreffencesld) (1)
CreateDynamicObject(3276,-39.64204407,197.48332214,2.33220577,0.00000000,0.00000000,237.99682617); //object(cxreffencesld) (3)
CreateDynamicObject(2359,-15.77448845,215.52145386,2.15570998,0.00000000,0.00000000,0.00000000); //object(ammo_box_c5) (1)
CreateDynamicObject(4100,-112.70407104,-107.57881165,3.81106567,0.00000000,0.00000000,309.98474121); //object(meshfence1_lan) (40)
CreateDynamicObject(4100,-112.70312500,-107.57812500,6.51106548,0.00000000,0.00000000,309.98474121); //object(meshfence1_lan) (40)
CreateDynamicObject(4100,-5.67675781,38.56835938,3.81885719,0.00000000,0.00000000,17.98461914); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-12.13964844,28.00683594,3.81885719,0.00000000,0.00000000,17.98461914); //object(meshfence1_lan) (4)
CreateDynamicObject(3655,-66.65824127,144.46469116,4.91281033,0.00000000,0.00000000,330.00000000); //object(ganghous03_lax) (1)
CreateDynamicObject(4100,-123.81717682,-11.13048935,3.81885719,0.00000000,0.00000000,119.99316406); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-121.31903076,-12.06323624,3.81885719,0.00000000,0.00000000,119.99267578); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-111.92285156,-7.86914062,3.81885719,0.00000000,0.00000000,27.99865723); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-106.71191406,4.84667969,6.51885700,0.00000000,0.00000000,27.99865723); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-95.74218750,30.63964844,3.81885719,0.00000000,0.00000000,203.97216797); //object(meshfence1_lan) (4)
CreateDynamicObject(4100,-101.50878906,17.55859375,3.81885719,0.00000000,0.00000000,27.99865723); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-101.08170319,18.65011978,6.51885700,0.00000000,0.00000000,27.99865723); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-101.08105469,18.64941406,3.81885719,0.00000000,0.00000000,27.99865723); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-123.81640625,-11.12988281,6.51885700,0.00000000,0.00000000,119.99267578); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-121.31835938,-12.06250000,6.51885700,0.00000000,0.00000000,119.99267578); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-111.92285156,-7.86914062,6.51885700,0.00000000,0.00000000,27.99865723); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-106.71191406,4.84667969,3.81885719,0.00000000,0.00000000,27.99865723); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-101.50878906,17.55859375,6.51885700,0.00000000,0.00000000,27.99865723); //object(meshfence1_lan) (54)
CreateDynamicObject(4100,-86.25000000,54.57324219,6.51885700,0.00000000,0.00000000,209.97619629); //object(meshfence1_lan) (4)
reja1 = CreateDynamicObject(988,-24.91601562,161.30957031,2.22968745,0.00000000,0.00000000,150.99609375); //object(ws_apgate) (3)
reja2 = CreateDynamicObject(988,-29.87773514,164.10839844,2.22968745,0.00000000,0.00000000,150.99609375); //object(ws_apgate) (3)
reja3 = CreateDynamicObject(986,-82.58573151,65.67722321,4.01718760,0.00000000,0.00000000,72.00000000); //object(gate_autol)(5)
CreateDynamicObject(2988,2571.29345703,-1299.64404297,1043.12500000,0.00000000,0.00000000,0.00000000); //object(comp_wood_gate)(1)
CreateDynamicObject(2988,2522.41625977,-1299.97534180,1047.28906250,0.00000000,0.00000000,0.00000000); //object(comp_wood_gate)(2)
CreateDynamicObject(1556,2522.45312500,-1285.90039062,1053.64062500,0.00000000,0.00000000,90.00000000); //object(gen_doorext18)(2)
CreateDynamicObject(1556,2522.46728516,-1287.39843750,1053.65332031,0.00000000,0.00000000,90.00000000); //object(gen_doorext18)(3)
	//========================================== Mapeo interior FBI =======================================
CreateDynamicObject(18553,1564.22558594,-1714.01367188,1724.79541016,0.00000000,0.00000000,90.00000000); //object(count_ammundoor)(1)
CreateDynamicObject(14847,1560.67871094,-1684.51171875,1725.49560547,0.00000000,0.00000000,90.00000000); //object(mp_sfpd_big)(1)
CreateDynamicObject(14848,1563.08154297,-1682.91552734,1723.49731445,0.00000000,0.00000000,90.00000000); //object(mp_sfpd_stairs1)(1)
CreateDynamicObject(14852,1549.56201172,-1684.63476562,1727.57714844,0.00000000,0.00000000,90.00000000); //object(mp_sfpd_win1)(1)
CreateDynamicObject(14892,1571.11718750,-1688.10839844,1728.37902832,0.00000000,0.00000000,90.00000000); //object(mp_sfpd_win2)(1)
CreateDynamicObject(14851,1561.02319336,-1684.53466797,1726.22973633,0.00000000,0.00000000,90.00000000); //object(mp_sfpd_signa)(1)
CreateDynamicObject(1569,1549.71093750,-1686.18164062,1722.09899902,0.00000000,0.00000000,88.49487305); //object(adam_v_door)(1)
CreateDynamicObject(1569,1549.71557617,-1683.17382812,1722.09899902,0.00000000,0.00000000,271.24487305); //object(adam_v_door)(2)
CreateDynamicObject(3859,1555.90722656,-1678.08691406,1722.76074219,0.00000000,0.00000000,287.24853516); //object(ottosmash04)(1)
CreateDynamicObject(3859,1559.60937500,-1691.30297852,1722.76074219,0.00000000,0.00000000,287.24853516); //object(ottosmash04)(2)
CreateDynamicObject(1811,1554.60144043,-1690.62145996,1722.73132324,0.00000000,0.00000000,272.00000000); //object(med_din_chair_5)(1)
CreateDynamicObject(1811,1555.37988281,-1690.60839844,1722.73132324,0.00000000,0.00000000,271.99951172); //object(med_din_chair_5)(2)
CreateDynamicObject(1811,1558.58203125,-1690.55700684,1722.73132324,0.00000000,0.00000000,271.99951172); //object(med_din_chair_5)(3)
CreateDynamicObject(1811,1557.82836914,-1690.57202148,1722.73132324,0.00000000,0.00000000,271.99951172); //object(med_din_chair_5)(4)

CreateDynamicObject(2635,1556.52087402,-1690.45764160,1722.50976562,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table)(1)

CreateDynamicObject(1811,1553.99255371,-1678.78698730,1722.73132324,0.00000000,359.75000000,88.99951172); //object(med_din_chair_5)(5)
CreateDynamicObject(1811,1553.18713379,-1678.82019043,1722.73132324,0.00000000,359.74731445,88.99475098); //object(med_din_chair_5)(6)
CreateDynamicObject(1811,1550.67114258,-1678.90185547,1722.73132324,0.00000000,359.74731445,90.99475098); //object(med_din_chair_5)(7)
CreateDynamicObject(2635,1551.87829590,-1678.84997559,1722.50976562,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table)(2)
CreateDynamicObject(3858,1562.23535156,-1684.42773438,1725.90527344,0.00000000,0.00000000,135.00000000); //object(ottosmash1)(1)
CreateDynamicObject(2208,1565.36889648,-1688.96423340,1722.10498047,0.00000000,0.00000000,89.25000000); //object(med_office7_unit_1)(1)
CreateDynamicObject(2208,1565.45605469,-1683.59582520,1722.10498047,0.00000000,0.00000000,89.24743652); //object(med_office7_unit_1)(2)
CreateDynamicObject(2204,1563.88122559,-1678.12280273,1722.10498047,0.00000000,0.00000000,0.25000000); //object(med_office8_cabinet)(1)
CreateDynamicObject(2894,1565.49291992,-1683.29516602,1722.97021484,0.00000000,0.00000000,120.00000000); //object(kmb_rhymesbook)(1)
CreateDynamicObject(1892,1550.46374512,-1683.38977051,1722.10498047,0.00000000,0.00000000,270.00000000); //object(security_gatsh)(1)
CreateDynamicObject(1892,1550.45471191,-1684.99426270,1722.10498047,0.00000000,0.00000000,270.00000000); //object(security_gatsh)(2)
CreateDynamicObject(2163,1565.64904785,-1691.24816895,1723.45227051,0.00000000,359.25000000,179.75000000); //object(med_office_unit_2)(1)
CreateDynamicObject(2164,1551.26379395,-1677.60095215,1722.09509277,0.00000000,0.00000000,180.00000000); //object(med_office_unit_5)(1)
CreateDynamicObject(2163,1553.00988770,-1677.60412598,1722.09301758,0.00000000,0.00000000,180.00000000); //object(med_office_unit_2)(2)
CreateDynamicObject(2197,1563.92395020,-1671.61145020,1722.10498047,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(1)
CreateDynamicObject(2197,1563.28356934,-1671.61022949,1722.10498047,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(2)
CreateDynamicObject(2197,1564.56152344,-1671.60937500,1722.10498047,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(3)
CreateDynamicObject(2197,1565.20214844,-1671.60644531,1722.10498047,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(4)
CreateDynamicObject(2197,1565.20214844,-1671.60644531,1722.63476562,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(5)
CreateDynamicObject(2197,1564.56103516,-1671.60437012,1722.63476562,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(6)
CreateDynamicObject(2197,1563.92175293,-1671.60449219,1722.63476562,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(7)
CreateDynamicObject(2197,1563.28332520,-1671.60644531,1722.63476562,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(8)
CreateDynamicObject(2200,1550.11230469,-1672.30175781,1722.11193848,0.00000000,0.00000000,89.49462891); //object(med_office5_unit_1)(1)
CreateDynamicObject(2165,1558.02124023,-1674.03515625,1722.10498047,0.00000000,0.00000000,180.00000000); //object(med_office_desk_1)(1)
CreateDynamicObject(2166,1555.07031250,-1675.10742188,1722.10498047,0.00000000,0.00000000,0.00000000); //object(med_office_desk_2)(1)
CreateDynamicObject(2165,1555.13513184,-1672.00854492,1722.10595703,0.00000000,0.00000000,90.00000000); //object(med_office_desk_1)(2)
CreateDynamicObject(2165,1552.86853027,-1674.35095215,1722.10595703,0.00000000,0.00000000,180.00000000); //object(med_office_desk_1)(3)
CreateDynamicObject(1671,1552.44641113,-1673.10852051,1722.57214355,0.00000000,0.00000000,0.00000000); //object(swivelchair_a)(1)
CreateDynamicObject(1671,1557.53015137,-1672.96813965,1722.57214355,0.00000000,0.00000000,0.00000000); //object(swivelchair_a)(2)
CreateDynamicObject(1671,1556.13818359,-1671.47106934,1722.57214355,0.00000000,0.00000000,268.50000000); //object(swivelchair_a)(3)
CreateDynamicObject(2616,1558.61608887,-1672.31823730,1724.08886719,0.00000000,0.00000000,270.00000000); //object(police_nb04)(1)
CreateDynamicObject(2165,1556.96826172,-1661.60632324,1722.10595703,0.00000000,0.00000000,179.24755859); //object(med_office_desk_1)(9)
CreateDynamicObject(2165,1555.09472656,-1668.48510742,1722.10595703,0.00000000,0.00000000,268.75000000); //object(med_office_desk_1)(4)
CreateDynamicObject(2165,1558.15429688,-1668.49707031,1722.10595703,0.00000000,0.00000000,268.49487305); //object(med_office_desk_1)(5)
CreateDynamicObject(2166,1557.20959473,-1667.03186035,1722.10498047,0.00000000,0.00000000,269.50000000); //object(med_office_desk_2)(2)
CreateDynamicObject(2165,1552.27856445,-1668.44860840,1722.10595703,0.00000000,0.00000000,268.74755859); //object(med_office_desk_1)(6)
CreateDynamicObject(2165,1555.14013672,-1665.05358887,1722.10595703,0.00000000,0.00000000,268.74755859); //object(med_office_desk_1)(7)
CreateDynamicObject(2165,1552.28320312,-1665.08496094,1722.10595703,0.00000000,0.00000000,268.74755859); //object(med_office_desk_1)(8)
CreateDynamicObject(2164,1550.50207520,-1662.55798340,1722.09509277,0.00000000,0.00000000,359.49450684); //object(med_office_unit_5)(2)
CreateDynamicObject(2164,1552.24707031,-1662.56738281,1722.09509277,0.00000000,0.00000000,359.48913574); //object(med_office_unit_5)(3)
CreateDynamicObject(2202,1555.80017090,-1662.99975586,1722.11193848,0.00000000,0.00000000,0.00000000); //object(photocopier_2)(1)
CreateDynamicObject(1671,1550.97363281,-1668.96655273,1722.57214355,0.00000000,0.00000000,88.00000000); //object(swivelchair_a)(4)
CreateDynamicObject(1671,1554.09204102,-1668.97534180,1722.57214355,0.00000000,0.00000000,87.99499512); //object(swivelchair_a)(5)
CreateDynamicObject(1671,1557.09179688,-1668.98339844,1722.57214355,0.00000000,0.00000000,87.99499512); //object(swivelchair_a)(6)
CreateDynamicObject(1671,1554.09863281,-1665.59521484,1722.57214355,0.00000000,0.00000000,87.99499512); //object(swivelchair_a)(7)
CreateDynamicObject(1671,1551.09765625,-1665.63964844,1722.57214355,0.00000000,0.00000000,87.99499512); //object(swivelchair_a)(8)
CreateDynamicObject(2616,1554.22375488,-1670.05114746,1724.08886719,0.00000000,0.00000000,180.00000000); //object(police_nb04)(2)

CreateDynamicObject(2165,1553.59130859,-1661.62695312,1722.10595703,0.00000000,0.00000000,178.99743652); //object(med_office_desk_1)(10)
CreateDynamicObject(2165,1554.63964844,-1657.53906250,1722.10595703,0.00000000,0.00000000,178.74206543); //object(med_office_desk_1)(11)
CreateDynamicObject(2166,1555.08886719,-1660.65332031,1722.10498047,0.00000000,0.00000000,179.48913574); //object(med_office_desk_2)(3)
CreateDynamicObject(2165,1558.06982422,-1657.43542480,1722.10595703,0.00000000,0.00000000,179.74450684); //object(med_office_desk_1)(12)
CreateDynamicObject(2165,1551.46459961,-1657.67517090,1722.10595703,0.00000000,0.00000000,178.74206543); //object(med_office_desk_1)(13)
CreateDynamicObject(2165,1554.61657715,-1654.03405762,1722.10595703,0.00000000,0.00000000,178.74206543); //object(med_office_desk_1)(14)
CreateDynamicObject(2165,1557.94995117,-1654.09509277,1722.10595703,0.00000000,0.00000000,179.74182129); //object(med_office_desk_1)(15)
CreateDynamicObject(2202,1550.44824219,-1652.50781250,1722.10498047,0.00000000,0.00000000,0.00000000); //object(photocopier_2)(2)
CreateDynamicObject(1671,1552.93164062,-1660.57617188,1722.57214355,0.00000000,0.00000000,359.99450684); //object(swivelchair_a)(9)

CreateDynamicObject(1671,1556.23864746,-1660.68273926,1722.57214355,0.00000000,0.00000000,9.74450684); //object(swivelchair_a)(10)
CreateDynamicObject(1671,1557.42492676,-1656.22497559,1722.57214355,0.00000000,0.00000000,3.98937988); //object(swivelchair_a)(11)

CreateDynamicObject(1671,1557.28015137,-1652.87011719,1722.57214355,0.00000000,0.00000000,1.73803711); //object(swivelchair_a)(12)
CreateDynamicObject(1671,1554.05676270,-1652.89294434,1722.57214355,0.00000000,0.00000000,1.73583984); //object(swivelchair_a)(13)
CreateDynamicObject(1671,1554.07971191,-1656.48229980,1722.57214355,0.00000000,0.00000000,1.73583984); //object(swivelchair_a)(14)
CreateDynamicObject(1671,1550.89208984,-1656.58325195,1722.57214355,0.00000000,0.00000000,1.73583984); //object(swivelchair_a)(15)
CreateDynamicObject(2612,1558.60974121,-1657.33557129,1724.08398438,0.00000000,0.00000000,270.00000000); //object(police_nb2)(1)
CreateDynamicObject(2616,1558.62170410,-1654.39282227,1723.90185547,0.00000000,0.00000000,270.00000000); //object(police_nb04)(3)
CreateDynamicObject(2165,1566.85058594,-1662.05688477,1717.90258789,0.00000000,0.00000000,180.74743652); //object(med_office_desk_1)(16)
CreateDynamicObject(2165,1563.57568359,-1662.06884766,1717.90258789,0.00000000,0.00000000,180.74707031); //object(med_office_desk_1)(17)
CreateDynamicObject(2166,1565.03710938,-1661.09033203,1717.90039062,0.00000000,0.00000000,179.48913574); //object(med_office_desk_2)(4)
CreateDynamicObject(1671,1562.97119141,-1661.10998535,1718.33410645,0.00000000,0.00000000,359.99450684); //object(swivelchair_a)(16)
CreateDynamicObject(1671,1566.34143066,-1661.01708984,1718.33410645,0.00000000,0.00000000,359.99450684); //object(swivelchair_a)(17)
CreateDynamicObject(1671,1565.24084473,-1663.15148926,1718.33410645,0.00000000,0.00000000,152.99450684); //object(swivelchair_a)(18)
CreateDynamicObject(2400,1568.16894531,-1673.77148438,1722.10144043,0.00000000,0.00000000,180.00000000); //object(cj_sports_wall01)(1)
CreateDynamicObject(2164,1560.85058594,-1665.88928223,1717.88818359,0.00000000,0.00000000,179.98913574); //object(med_office_unit_5)(4)
CreateDynamicObject(2164,1562.59265137,-1665.89270020,1717.88818359,0.00000000,0.00000000,179.98901367); //object(med_office_unit_5)(5)
CreateDynamicObject(2200,1567.18298340,-1665.71594238,1717.86193848,0.00000000,0.00000000,178.74462891); //object(med_office5_unit_1)(2)
CreateDynamicObject(2612,1558.60937500,-1657.33496094,1724.08398438,0.00000000,0.00000000,270.00000000); //object(police_nb2)(2)
CreateDynamicObject(2612,1567.60974121,-1661.83984375,1720.26574707,0.00000000,0.00000000,270.00000000); //object(police_nb2)(3)
CreateDynamicObject(1502,1562.38964844,-1661.97949219,1729.10498047,0.00000000,0.00000000,90.00000000); //object(gen_doorint04)(1)
CreateDynamicObject(2637,1568.85449219,-1661.02807617,1729.50976562,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table2)(1)
CreateDynamicObject(2637,1566.82617188,-1661.02929688,1729.50976562,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table2)(2)
CreateDynamicObject(2637,1564.79687500,-1661.03125000,1729.50976562,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table2)(3)
CreateDynamicObject(1714,1571.22265625,-1660.99121094,1729.10498047,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair1)(1)
CreateDynamicObject(2165,1555.18725586,-1657.52490234,1729.08923340,0.00000000,0.00000000,269.49206543); //object(med_office_desk_1)(18)
CreateDynamicObject(1671,1550.94506836,-1657.08251953,1729.53503418,0.00000000,0.00000000,359.99450684); //object(swivelchair_a)(19)
CreateDynamicObject(2165,1555.17871094,-1660.27441406,1729.08923340,0.00000000,0.00000000,269.48364258); //object(med_office_desk_1)(19)
CreateDynamicObject(2165,1551.54284668,-1664.74694824,1729.08923340,0.00000000,0.00000000,178.73913574); //object(med_office_desk_1)(20)
CreateDynamicObject(2165,1551.51000977,-1661.49548340,1729.08923340,0.00000000,0.00000000,178.73657227); //object(med_office_desk_1)(21)
CreateDynamicObject(2165,1551.55664062,-1658.24426270,1729.08923340,0.00000000,0.00000000,178.73657227); //object(med_office_desk_1)(22)
CreateDynamicObject(1671,1550.96008301,-1660.39660645,1729.53503418,0.00000000,0.00000000,359.99450684); //object(swivelchair_a)(20)
CreateDynamicObject(1671,1550.94238281,-1663.42187500,1729.53503418,0.00000000,0.00000000,359.98901367); //object(swivelchair_a)(21)
CreateDynamicObject(1671,1553.99121094,-1660.98046875,1729.53503418,0.00000000,0.00000000,89.99450684); //object(swivelchair_a)(22)
CreateDynamicObject(1671,1554.04858398,-1658.04028320,1729.53503418,0.00000000,0.00000000,89.99450684); //object(swivelchair_a)(23)
CreateDynamicObject(2164,1555.03417969,-1666.21386719,1729.09753418,0.00000000,0.00000000,230.48767090); //object(med_office_unit_5)(6)
CreateDynamicObject(2202,1555.19531250,-1663.53906250,1729.10498047,0.00000000,0.00000000,269.24743652); //object(photocopier_2)(3)
CreateDynamicObject(2166,1564.09912109,-1667.91748047,1729.10290527,0.00000000,0.00000000,89.99996948); //object(med_office_desk_2)(5)
CreateDynamicObject(2165,1563.09326172,-1665.98962402,1729.10278320,0.00000000,0.00000000,90.74157715); //object(med_office_desk_1)(23)
CreateDynamicObject(2166,1570.81274414,-1667.06982422,1729.10290527,0.00000000,0.00000000,179.99450684); //object(med_office_desk_2)(6)
CreateDynamicObject(2165,1568.83337402,-1668.05993652,1729.10278320,0.00000000,0.00000000,179.73608398); //object(med_office_desk_1)(24)
CreateDynamicObject(2202,1564.51293945,-1670.48559570,1729.10498047,0.00000000,0.00000000,179.99737549); //object(photocopier_2)(4)
CreateDynamicObject(1714,1564.19824219,-1665.58056641,1729.10498047,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair1)(2)
CreateDynamicObject(1714,1568.41882324,-1666.94763184,1729.10498047,0.00000000,0.00000000,352.75000000); //object(kb_swivelchair1)(3)
CreateDynamicObject(2197,1570.26977539,-1665.21313477,1729.10498047,0.00000000,0.00000000,270.00000000); //object(filling_cabinet)(9)
CreateDynamicObject(2204,1555.85485840,-1671.84680176,1729.10498047,0.00000000,0.00000000,270.00000000); //object(med_office8_cabinet)(2)
CreateDynamicObject(1713,1568.62573242,-1663.83117676,1729.10498047,0.00000000,0.00000000,359.00000000); //object(kb_couch04)(1)
CreateDynamicObject(3858,1569.68664551,-1671.14611816,1730.57495117,0.00000000,0.00000000,224.99993896); //object(ottosmash1)(2)
CreateDynamicObject(1811,1570.93518066,-1670.21801758,1729.72436523,0.00000000,0.00000000,0.48886108); //object(med_din_chair_5)(18)
CreateDynamicObject(1811,1567.56677246,-1669.09143066,1729.72436523,0.00000000,0.00000000,254.48339844); //object(med_din_chair_5)(19)
CreateDynamicObject(2010,1563.31860352,-1663.95764160,1729.07836914,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc)(1)
CreateDynamicObject(2010,1567.71154785,-1663.95092773,1729.07836914,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc)(2)
CreateDynamicObject(2010,1570.78747559,-1666.11303711,1729.07836914,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc)(3)
CreateDynamicObject(2166,1550.47351074,-1674.75744629,1729.10290527,0.00000000,0.00000000,359.24450684); //object(med_office_desk_2)(7)
CreateDynamicObject(2165,1552.46960449,-1673.77941895,1729.10278320,0.00000000,0.00000000,359.48083496); //object(med_office_desk_1)(25)
CreateDynamicObject(1671,1553.13488770,-1675.05920410,1729.53503418,0.00000000,0.00000000,181.23902893); //object(swivelchair_a)(24)
CreateDynamicObject(2010,1550.34545898,-1671.81848145,1729.07836914,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc)(4)
CreateDynamicObject(2010,1555.36083984,-1677.02685547,1729.07836914,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc)(5)
CreateDynamicObject(2164,1552.93688965,-1677.52697754,1729.09753418,0.00000000,0.00000000,179.98767090); //object(med_office_unit_5)(7)
CreateDynamicObject(1811,1553.69689941,-1672.69104004,1729.72436523,0.00000000,0.00000000,70.48181152); //object(med_din_chair_5)(20)
CreateDynamicObject(2197,1550.92651367,-1676.40063477,1729.10498047,0.00000000,0.00000000,89.25000000); //object(filling_cabinet)(10)
CreateDynamicObject(2165,1563.97583008,-1677.99914551,1729.10278320,0.00000000,0.00000000,268.73608398); //object(med_office_desk_1)(26)
CreateDynamicObject(2166,1564.83581543,-1676.18847656,1729.10290527,0.00000000,0.00000000,268.99194336); //object(med_office_desk_2)(8)
CreateDynamicObject(2165,1563.98999023,-1680.21582031,1729.10278320,0.00000000,0.00000000,268.73107910); //object(med_office_desk_1)(27)
CreateDynamicObject(2165,1564.09350586,-1686.01293945,1729.10278320,0.00000000,0.00000000,268.73107910); //object(med_office_desk_1)(28)
CreateDynamicObject(2165,1564.11413574,-1688.25317383,1729.10278320,0.00000000,0.00000000,268.73107910); //object(med_office_desk_1)(29)
CreateDynamicObject(2166,1565.70495605,-1682.07421875,1729.10290527,0.00000000,0.00000000,178.98925781); //object(med_office_desk_2)(9)
CreateDynamicObject(2166,1566.06127930,-1690.03576660,1729.10290527,0.00000000,0.00000000,178.98925781); //object(med_office_desk_2)(10)
CreateDynamicObject(2166,1564.66357422,-1684.21777344,1729.10290527,0.00000000,0.00000000,268.98925781); //object(med_office_desk_2)(11)
CreateDynamicObject(1671,1562.96496582,-1678.51074219,1729.53503418,0.00000000,0.00000000,89.99450684); //object(swivelchair_a)(25)
CreateDynamicObject(1671,1562.99230957,-1680.67138672,1729.53503418,0.00000000,0.00000000,89.99450684); //object(swivelchair_a)(26)
CreateDynamicObject(1671,1563.07397461,-1686.56530762,1729.53503418,0.00000000,0.00000000,89.99450684); //object(swivelchair_a)(27)
CreateDynamicObject(1671,1563.09814453,-1688.88549805,1729.53503418,0.00000000,0.00000000,89.99450684); //object(swivelchair_a)(28)
CreateDynamicObject(2202,1570.84106445,-1680.05163574,1729.10498047,0.00000000,0.00000000,269.24450684); //object(photocopier_2)(5)
CreateDynamicObject(2637,1570.28344727,-1686.41467285,1729.50976562,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table2)(4)
CreateDynamicObject(1811,1570.86206055,-1685.16345215,1729.72436523,0.00000000,0.00000000,91.99951172); //object(med_din_chair_5)(21)
CreateDynamicObject(1811,1569.86132812,-1685.17285156,1729.72436523,0.00000000,0.00000000,91.99951172); //object(med_din_chair_5)(22)
CreateDynamicObject(1811,1569.88574219,-1687.74462891,1729.72436523,0.00000000,0.00000000,268.24954224); //object(med_din_chair_5)(23)
CreateDynamicObject(1811,1570.83312988,-1687.75476074,1729.72436523,0.00000000,0.00000000,268.24768066); //object(med_din_chair_5)(24)
CreateDynamicObject(1502,1555.55541992,-1703.46484375,1727.68750000,0.00000000,0.00000000,180.00000000); //object(gen_doorint04)(2)
CreateDynamicObject(1502,1560.51257324,-1699.00195312,1727.68750000,0.00000000,0.00000000,270.24450684); //object(gen_doorint04)(3)
CreateDynamicObject(1502,1560.55126953,-1696.82739258,1727.68750000,0.00000000,0.00000000,269.49169922); //object(gen_doorint04)(4)
CreateDynamicObject(2165,1559.92236328,-1701.77014160,1727.70568848,0.00000000,0.00000000,268.73107910); //object(med_office_desk_1)(30)
CreateDynamicObject(2165,1557.22229004,-1699.42358398,1727.70568848,0.00000000,0.00000000,359.73107910); //object(med_office_desk_1)(31)
CreateDynamicObject(2010,1556.46069336,-1699.55273438,1727.69555664,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc)(6)
CreateDynamicObject(1671,1558.94177246,-1702.38269043,1728.10327148,0.00000000,0.00000000,88.49450684); //object(swivelchair_a)(29)
CreateDynamicObject(1671,1557.73034668,-1700.51599121,1728.10327148,0.00000000,0.00000000,178.48937988); //object(swivelchair_a)(30)
CreateDynamicObject(2165,1556.57360840,-1696.36376953,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(32)
CreateDynamicObject(2165,1556.55566406,-1693.10668945,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(33)
CreateDynamicObject(1671,1556.95153809,-1697.51831055,1728.10327148,0.00000000,0.00000000,177.98937988); //object(swivelchair_a)(31)
CreateDynamicObject(1671,1557.01550293,-1694.22863770,1728.10327148,0.00000000,0.00000000,177.98400879); //object(swivelchair_a)(32)
CreateDynamicObject(2164,1560.36413574,-1693.96228027,1727.69921875,0.00000000,0.00000000,269.98773193); //object(med_office_unit_5)(8)
CreateDynamicObject(2010,1560.12915039,-1692.20458984,1727.69555664,0.00000000,0.00000000,28.00000000); //object(nu_plant3_ofc)(7)
CreateDynamicObject(1811,1550.41918945,-1697.64538574,1728.29858398,0.00000000,0.00000000,89.48889160); //object(med_din_chair_5)(25)
CreateDynamicObject(1811,1551.36059570,-1697.62988281,1728.29858398,0.00000000,0.00000000,89.48364258); //object(med_din_chair_5)(26)
CreateDynamicObject(1811,1552.34851074,-1697.62097168,1728.29858398,0.00000000,0.00000000,89.48364258); //object(med_din_chair_5)(27)
CreateDynamicObject(1811,1553.27636719,-1697.59448242,1728.29858398,0.00000000,0.00000000,89.48364258); //object(med_din_chair_5)(28)
CreateDynamicObject(1811,1553.34362793,-1699.33972168,1728.29858398,0.00000000,0.00000000,89.48364258); //object(med_din_chair_5)(29)
CreateDynamicObject(1811,1552.45385742,-1699.31408691,1728.29858398,0.00000000,0.00000000,89.48364258); //object(med_din_chair_5)(30)
CreateDynamicObject(1811,1551.41674805,-1699.34790039,1728.29858398,0.00000000,0.00000000,89.48364258); //object(med_din_chair_5)(31)
CreateDynamicObject(1811,1550.41564941,-1699.30688477,1728.29858398,0.00000000,0.00000000,89.48364258); //object(med_din_chair_5)(32)
CreateDynamicObject(1811,1555.23352051,-1697.96667480,1728.29858398,0.00000000,0.00000000,358.98364258); //object(med_din_chair_5)(33)
CreateDynamicObject(1811,1555.22460938,-1699.00317383,1728.29858398,0.00000000,0.00000000,358.97827148); //object(med_din_chair_5)(34)
CreateDynamicObject(1811,1555.23779297,-1699.99145508,1728.29858398,0.00000000,0.00000000,358.97827148); //object(med_din_chair_5)(35)
CreateDynamicObject(2165,1556.34033203,-1708.96752930,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(34)
CreateDynamicObject(2165,1556.36914062,-1712.15747070,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(35)
CreateDynamicObject(2165,1556.32128906,-1715.24072266,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(36)
CreateDynamicObject(2165,1553.96179199,-1715.19323730,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(37)
CreateDynamicObject(2165,1553.91027832,-1712.17639160,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(38)
CreateDynamicObject(2165,1553.94628906,-1709.06250000,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(39)
CreateDynamicObject(2165,1550.50402832,-1709.05920410,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(40)
CreateDynamicObject(2165,1550.53540039,-1712.21887207,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(41)
CreateDynamicObject(2165,1550.52099609,-1715.19445801,1727.70568848,0.00000000,0.00000000,359.73083496); //object(med_office_desk_1)(42)
CreateDynamicObject(1671,1554.54992676,-1710.11706543,1728.10327148,0.00000000,0.00000000,180.73937988); //object(swivelchair_a)(33)
CreateDynamicObject(1671,1554.47595215,-1713.19519043,1728.10327148,0.00000000,0.00000000,180.73608398); //object(swivelchair_a)(34)
CreateDynamicObject(1671,1554.58459473,-1716.15759277,1728.10327148,0.00000000,0.00000000,180.73608398); //object(swivelchair_a)(35)
CreateDynamicObject(1671,1550.96459961,-1716.22766113,1728.10327148,0.00000000,0.00000000,180.73608398); //object(swivelchair_a)(36)
CreateDynamicObject(1671,1551.02905273,-1713.20361328,1728.10327148,0.00000000,0.00000000,180.73608398); //object(swivelchair_a)(37)
CreateDynamicObject(1671,1551.03234863,-1710.08715820,1728.10327148,0.00000000,0.00000000,180.73608398); //object(swivelchair_a)(38)
CreateDynamicObject(1671,1556.97546387,-1709.91760254,1728.10327148,0.00000000,0.00000000,180.73608398); //object(swivelchair_a)(39)
CreateDynamicObject(1671,1556.96923828,-1713.21887207,1728.10327148,0.00000000,0.00000000,180.73608398); //object(swivelchair_a)(40)
CreateDynamicObject(1671,1556.91247559,-1716.20727539,1728.10327148,0.00000000,0.00000000,180.73608398); //object(swivelchair_a)(41)
CreateDynamicObject(2164,1560.36865234,-1709.06640625,1727.69921875,0.00000000,0.00000000,269.98352051); //object(med_office_unit_5)(9)
CreateDynamicObject(2200,1560.23205566,-1713.51513672,1727.69921875,0.00000000,0.00000000,269.49462891); //object(med_office5_unit_1)(3)
CreateDynamicObject(2010,1560.00378418,-1711.35083008,1727.69555664,0.00000000,0.00000000,27.99865723); //object(nu_plant3_ofc)(8)
CreateDynamicObject(2010,1555.24536133,-1707.18579102,1727.69555664,0.00000000,0.00000000,27.99865723); //object(nu_plant3_ofc)(9)
CreateDynamicObject(2010,1550.46569824,-1707.02551270,1727.69555664,0.00000000,0.00000000,27.99865723); //object(nu_plant3_ofc)(10)
CreateDynamicObject(2202,1550.36169434,-1705.73962402,1727.70544434,0.00000000,0.00000000,90.49450684); //object(photocopier_2)(6)
CreateDynamicObject(2165,1554.75500488,-1715.59631348,1723.50708008,0.00000000,0.00000000,180.73088074); //object(med_office_desk_1)(43)
CreateDynamicObject(2165,1554.76123047,-1713.09399414,1723.50708008,0.00000000,0.00000000,180.73059082); //object(med_office_desk_1)(44)
CreateDynamicObject(2165,1551.54870605,-1710.19433594,1723.50708008,0.00000000,0.00000000,180.73083496); //object(med_office_desk_1)(45)
CreateDynamicObject(2165,1551.70288086,-1713.09582520,1723.50708008,0.00000000,0.00000000,180.73059082); //object(med_office_desk_1)(46)
CreateDynamicObject(2165,1551.73364258,-1715.59692383,1723.50708008,0.00000000,0.00000000,180.73059082); //object(med_office_desk_1)(47)
CreateDynamicObject(1671,1550.99096680,-1709.08154297,1723.95495605,0.00000000,0.00000000,0.73608398); //object(swivelchair_a)(42)
CreateDynamicObject(1671,1551.14685059,-1712.15881348,1723.95495605,0.00000000,0.00000000,0.73059082); //object(swivelchair_a)(43)
CreateDynamicObject(1671,1551.20996094,-1714.50878906,1723.95495605,0.00000000,0.00000000,0.73059082); //object(swivelchair_a)(44)
CreateDynamicObject(1671,1554.14843750,-1714.80114746,1723.95495605,0.00000000,0.00000000,0.73059082); //object(swivelchair_a)(45)
CreateDynamicObject(1671,1554.24291992,-1712.05639648,1723.95495605,0.00000000,0.00000000,0.73059082); //object(swivelchair_a)(46)
CreateDynamicObject(2165,1551.59545898,-1705.86572266,1723.50708008,0.00000000,0.00000000,180.73059082); //object(med_office_desk_1)(48)
CreateDynamicObject(2165,1551.56079102,-1703.24438477,1723.50708008,0.00000000,0.00000000,180.73059082); //object(med_office_desk_1)(49)
CreateDynamicObject(2165,1551.52880859,-1700.73095703,1723.50708008,0.00000000,0.00000000,180.73059082); //object(med_office_desk_1)(50)
CreateDynamicObject(1671,1550.88586426,-1704.79602051,1723.95495605,0.00000000,0.00000000,0.73059082); //object(swivelchair_a)(47)
CreateDynamicObject(1671,1550.89514160,-1702.12268066,1723.95495605,0.00000000,0.00000000,0.73059082); //object(swivelchair_a)(48)
CreateDynamicObject(1671,1550.89086914,-1699.62768555,1723.95495605,0.00000000,0.00000000,0.73059082); //object(swivelchair_a)(49)
CreateDynamicObject(2164,1555.23779297,-1700.37329102,1723.47546387,0.00000000,0.00000000,269.98352051); //object(med_office_unit_5)(10)
CreateDynamicObject(2010,1554.79101562,-1705.70849609,1723.46228027,0.00000000,0.00000000,27.99865723); //object(nu_plant3_ofc)(11)
CreateDynamicObject(2165,1559.51269531,-1695.15136719,1722.10278320,0.00000000,0.00000000,0.72509766); //object(med_office_desk_1)(51)
CreateDynamicObject(2165,1564.22070312,-1695.09863281,1722.08239746,0.00000000,0.00000000,0.71960449); //object(med_office_desk_1)(52)
CreateDynamicObject(1671,1559.88916016,-1696.42578125,1722.59252930,0.00000000,0.00000000,182.73060608); //object(swivelchair_a)(50)
CreateDynamicObject(1671,1564.95690918,-1696.31433105,1722.59252930,0.00000000,0.00000000,182.73010254); //object(swivelchair_a)(51)
CreateDynamicObject(2010,1559.31213379,-1698.00671387,1722.10815430,0.00000000,0.00000000,27.99865723); //object(nu_plant3_ofc)(12)
CreateDynamicObject(2010,1565.54541016,-1697.92346191,1722.10815430,0.00000000,0.00000000,27.99865723); //object(nu_plant3_ofc)(13)
CreateDynamicObject(2164,1562.66052246,-1698.42578125,1722.08435059,0.00000000,0.00000000,179.73352051); //object(med_office_unit_5)(11)
CreateDynamicObject(1811,1555.14758301,-1698.07312012,1722.73132324,0.00000000,0.00000000,357.99951172); //object(med_din_chair_5)(36)
CreateDynamicObject(1811,1555.14929199,-1697.20678711,1722.73132324,0.00000000,0.00000000,357.99499512); //object(med_din_chair_5)(37)
CreateDynamicObject(1811,1555.11437988,-1696.42077637,1722.73132324,0.00000000,0.00000000,357.99499512); //object(med_din_chair_5)(38)
CreateDynamicObject(2197,1567.90209961,-1671.60644531,1722.10498047,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(15)
CreateDynamicObject(2197,1568.59130859,-1671.60644531,1722.10498047,0.00000000,0.00000000,0.00000000); //object(filling_cabinet)(16)
CreateDynamicObject(1714,1564.56591797,-1662.65783691,1729.10498047,0.00000000,0.00000000,180.00000000); //object(kb_swivelchair1)(1)
CreateDynamicObject(1714,1565.67639160,-1662.66125488,1729.10498047,0.00000000,0.00000000,179.99450684); //object(kb_swivelchair1)(1)
CreateDynamicObject(1714,1566.93347168,-1662.60681152,1729.10498047,0.00000000,0.00000000,179.99450684); //object(kb_swivelchair1)(1)
CreateDynamicObject(1714,1568.61083984,-1662.66491699,1729.10498047,0.00000000,0.00000000,179.99450684); //object(kb_swivelchair1)(1)
CreateDynamicObject(1714,1568.92687988,-1659.36267090,1729.10498047,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair1)(1)
CreateDynamicObject(1714,1567.41259766,-1659.36865234,1729.10498047,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair1)(1)
CreateDynamicObject(1714,1565.94946289,-1659.36059570,1729.10498047,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair1)(1)
CreateDynamicObject(1714,1564.44006348,-1659.37072754,1729.10498047,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair1)(1)

//////////////////////////////////////////////// FBI Exterior ///////////////////////////////////////////////////////

PuertaFBI = CreateDynamicObject(980, 940.33, -1027.58, 33.36,   0.00, 0.00, 0.00);
CreateDynamicObject(6959, 904.32, -1034.17, 30.61,   0.00, 0.00, 0.00);
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// -==================================== PRISIÓN by N3tB4utu$ ===============================- //
    CreateDynamicObject(980,2772.14160156,423.47741699,2.84985399,0.00000000,0.00000000,270.00000000); //object(airportgate) (1)
    CreateDynamicObject(980,2772.14160156,435.09915161,2.84985399,0.00000000,0.00000000,270.00000000); //object(airportgate) (2)
    CreateDynamicObject(980,2761.52636719,423.47741699,2.84985399,0.00000000,0.00000000,90.00000000); //object(airportgate) (3)
    CreateDynamicObject(980,2761.52636719,434.95144653,2.84985399,0.00000000,0.00000000,90.00000000); //object(airportgate) (4)
    CreateDynamicObject(980,2772.14160156,446.54803467,2.84985399,0.00000000,0.00000000,270.00000000); //object(airportgate) (5)
    CreateDynamicObject(980,2761.52636719,446.42642212,2.84985399,0.00000000,0.00000000,90.00000000); //object(airportgate) (6)
    CreateDynamicObject(980,2766.86279297,452.27990723,2.84985399,0.00000000,0.00000000,0.00000000); //object(airportgate) (7)
    CreateDynamicObject(10828,2761.90429688,434.44531250,-6.38496542,90.00000000,178.69812012,91.29638672); //object(drydock1_sfse) (1)
    CreateDynamicObject(980,2772.14160156,423.47656250,-2.65014601,0.00000000,0.00000000,270.00000000); //object(airportgate) (8)
    CreateDynamicObject(980,2772.14160156,435.09863281,-2.65014601,0.00000000,0.00000000,270.00000000); //object(airportgate) (9)
    CreateDynamicObject(980,2772.14160156,446.54785156,-2.65014601,0.00000000,0.00000000,270.00000000); //object(airportgate) (10)
    CreateDynamicObject(980,2766.86230469,452.27929688,-2.65014601,0.00000000,0.00000000,0.00000000); //object(airportgate) (11)
    CreateDynamicObject(980,2761.52636719,446.42578125,-2.65014601,0.00000000,0.00000000,90.00000000); //object(airportgate) (12)
    CreateDynamicObject(980,2761.52636719,434.95117188,-2.65014601,0.00000000,0.00000000,90.00000000); //object(airportgate) (13)
    CreateDynamicObject(980,2761.52636719,423.47656250,-2.65014601,0.00000000,0.00000000,90.00000000); //object(airportgate) (14)
    CreateDynamicObject(3092,2766.52392578,417.99725342,3.02500200,0.00000000,0.00000000,0.00000000); //object(dead_tied_cop) (1)
    // Exterior VIP
    CreateDynamicObject(18651,1801.69775391,-1580.07006836,16.20111656,0.00000000,0.00000000,310.50000000); //object(?) (1)
    CreateDynamicObject(18649,1802.29785156,-1578.30346680,16.21812439,0.00000000,0.00000000,9.74658203); //object(?) (4)
    CreateDynamicObject(1231,1811.30334473,-1601.99914551,15.27726746,0.00000000,0.00000000,0.00000000); //object(streetlamp2) (2)
    CreateDynamicObject(2773,1799.42272949,-1580.08850098,13.59138870,0.00000000,0.00000000,111.99993896); //object(cj_airprt_bar) (1)
    CreateDynamicObject(18651,1800.25659180,-1581.27722168,16.20872498,0.00000000,0.00000000,310.49560547); //object(?) (3)
    CreateDynamicObject(18649,1802.00158691,-1576.67321777,16.20733261,0.00000000,0.00000000,9.74487305); //object(?) (11)
    CreateDynamicObject(18649,1801.76110840,-1575.22558594,16.20807266,0.00000000,0.00000000,9.74487305); //object(?) (12)
    CreateDynamicObject(997,1812.56103516,-1578.55871582,12.54687500,0.00000000,0.00000000,256.00000000); //object(lhouse_barrier3) (1)
    CreateDynamicObject(997,1814.05090332,-1572.83923340,12.54687500,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (2)
    CreateDynamicObject(997,1815.62902832,-1566.97583008,12.54582596,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (3)
    CreateDynamicObject(997,1817.38867188,-1560.39196777,12.54559422,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (4)
    CreateDynamicObject(997,1818.94812012,-1554.78149414,12.54675865,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (5)
    CreateDynamicObject(997,1792.78674316,-1601.26025391,12.54468727,0.00000000,0.00000000,167.24792480); //object(lhouse_barrier3) (6)
    CreateDynamicObject(997,1787.48547363,-1600.02307129,12.54336357,0.00000000,0.00000000,166.99743652); //object(lhouse_barrier3) (7)
    CreateDynamicObject(18647,1797.10388184,-1578.98486328,15.54859447,0.00000000,0.00000000,9.50000000); //object(bar2) (2)
    CreateDynamicObject(1280,1807.01550293,-1584.59997559,12.91286850,0.00000000,0.00000000,309.75000000); //object(parkbench1) (1)
    CreateDynamicObject(1280,1801.79589844,-1588.47436523,12.93736362,0.00000000,0.00000000,309.74853516); //object(parkbench1) (2)
    CreateDynamicObject(1280,1796.06933594,-1593.20556641,12.93888855,0.00000000,0.00000000,309.74853516); //object(parkbench1) (3)
    CreateDynamicObject(6462,1794.72363281,-1576.30712891,14.55592728,0.00000000,0.00000000,130.25000000); //object(pier04a_law2) (1)
//Peaje 3
CreateDynamicObject(4638,-178.46434021,327.51763916,12.77470493,0.00000000,0.00000000,72.25000000); //object(paypark_lan01) (1)
CreateDynamicObject(966,-186.32562256,327.84649658,11.12812424,0.00000000,0.00000000,164.50000000); //object(bar_gatebar01) (1)
CreateDynamicObject(966,-171.64302063,323.80487061,11.07812500,0.00000000,0.00000000,345.74841309); //object(bar_gatebar01) (2)
// Interior VIP by Ale
CreateDynamicObject(14614, 1756.654296, -1560.980712, -44.358551, 0.000000, 0.000000, 359.997558);
CreateDynamicObject(14563, 1756.693359, -1560.914062, -44.385906, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(14607, 1755.629882, -1561.629882, -44.342460, 0.000000, 0.000000, 359.494628);
CreateDynamicObject(9339,1723.33618164,-1579.47045898,-52.21807861,0.00000000,0.00000000,270.50000000); //object(sfnvilla001_cm) (1)
CreateDynamicObject(9339,1722.85351562,-1579.46459961,-50.81413651,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (2)
CreateDynamicObject(9339,1722.98706055,-1579.46081543,-49.43519592,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (3)
CreateDynamicObject(9339,1722.92724609,-1579.46740723,-48.05278778,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (4)
CreateDynamicObject(9339,1722.91821289,-1579.46569824,-46.66991043,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (5)
CreateDynamicObject(9339,1726.56652832,-1579.44494629,-45.26596832,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (6)
CreateDynamicObject(9339,1744.67492676,-1578.91503906,-44.02746582,0.00000000,312.00000000,270.49987793); //object(sfnvilla001_cm) (7)
CreateDynamicObject(9339,1753.93103027,-1579.24230957,-52.21807861,0.00000000,0.00000000,269.99987793); //object(sfnvilla001_cm) (8)
CreateDynamicObject(9339,1753.90161133,-1579.24560547,-50.81413651,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (9)
CreateDynamicObject(9339,1753.90307617,-1579.25439453,-49.41019440,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (10)
CreateDynamicObject(9339,1753.86999512,-1579.25659180,-48.00625229,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (11)
CreateDynamicObject(9339,1753.84350586,-1579.25756836,-46.60231018,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (12)
CreateDynamicObject(9339,1752.61437988,-1579.24645996,-45.24837112,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (13)
CreateDynamicObject(9339,1760.40637207,-1579.13586426,-45.34318161,0.00000000,0.00000000,270.49450684); //object(sfnvilla001_cm) (14)
CreateDynamicObject(9339,1722.93310547,-1543.16198730,-50.99047852,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (15)
CreateDynamicObject(9339,1723.53173828,-1543.16223145,-52.34073257,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (16)
CreateDynamicObject(9339,1716.26562500,-1543.21655273,-49.58653641,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (17)
CreateDynamicObject(9339,1719.88659668,-1543.17553711,-48.18259430,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (18)
CreateDynamicObject(9339,1719.48815918,-1543.17443848,-46.77865219,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (19)
CreateDynamicObject(9339,1720.07470703,-1543.13696289,-45.53613663,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (20)
CreateDynamicObject(9339,1739.07739258,-1542.98815918,-44.70337677,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (21)
CreateDynamicObject(9339,1753.71435547,-1543.23950195,-46.11571884,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (22)
CreateDynamicObject(9339,1753.70471191,-1543.24023438,-47.40096664,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (23)
CreateDynamicObject(9339,1743.43286133,-1543.38964844,-43.49567413,0.00000000,42.75000000,270.49450684); //object(sfnvilla001_cm) (24)
CreateDynamicObject(9339,1753.71533203,-1543.22583008,-48.68606949,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (25)
CreateDynamicObject(9339,1753.58325195,-1543.21289062,-50.07004166,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (26)
CreateDynamicObject(9339,1753.59875488,-1543.19665527,-51.36567307,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (27)
CreateDynamicObject(9339,1753.85510254,-1543.18823242,-52.71574020,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (28)
CreateDynamicObject(9339,1744.54150391,-1544.29248047,-42.56487274,0.00000000,42.74780273,270.49438477); //object(sfnvilla001_cm) (29)
CreateDynamicObject(9339,1744.68347168,-1578.20092773,-43.20279312,0.00000000,311.99523926,270.49438477); //object(sfnvilla001_cm) (30)
CreateDynamicObject(9339,1744.67944336,-1577.16113281,-42.73591614,0.00000000,274.74520874,270.49438477); //object(sfnvilla001_cm) (31)
CreateDynamicObject(9339,1744.56311035,-1545.24462891,-41.90493393,0.21133423,64.99862671,270.79129028); //object(sfnvilla001_cm) (32)
CreateDynamicObject(2946,1763.73449707,-1579.15490723,-50.91715622,0.00000000,0.00000000,270.00000000); //object(cr_door_03) (1)
CreateDynamicObject(2773,1761.89160156,-1577.60656738,-50.39992905,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
CreateDynamicObject(14537, 1777.017578, -1561.868164, -48.855495, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(8483, 1737.828125, -1540.638671, -47.408531, 0.000000, 0.000000, 264.495849);
CreateDynamicObject(8483, 1736.311035, -1582.308959, -47.785827, 0.000000, 0.000000, 85.745849);
CreateDynamicObject(2780, 1737.717407, -1575.394653, -53.317180, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2780, 1736.742919, -1547.453857, -52.672538, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1544, 1773.926513, -1557.407348, -49.685646, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1544, 1776.820434, -1556.658203, -49.685646, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1544, 1780.669311, -1557.399047, -49.685646, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1664, 1781.539550, -1562.406982, -49.518943, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1664, 1777.341186, -1567.209716, -49.518943, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1551, 1777.486816, -1566.983886, -49.445381, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1543, 1776.769409, -1566.958129, -49.685646, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(16091, 1748.570678, -1560.265136, -52.917156, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19129, 1734.949340, -1561.346313, -52.854656, 0.000000, 0.000000, 270.000000);
CreateDynamicObject(16091, 1722.751708, -1560.720581, -52.889801, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2291, 1775.048217, -1548.383422, -50.873710, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2291, 1773.435180, -1550.069702, -50.873710, 0.000000, 0.000000, 60.000000);
CreateDynamicObject(2292, 1777.541137, -1549.728759, -50.873710, 0.000000, 0.000000, 240.000000);
CreateDynamicObject(2291, 1780.779296, -1549.945068, -50.873710, 0.000000, 0.000000, 59.996337);
CreateDynamicObject(2291, 1782.733154, -1548.048095, -50.873710, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2292, 1784.962646, -1549.972167, -50.873710, 0.000000, 0.000000, 239.996337);
CreateDynamicObject(1823, 1774.962036, -1550.476684, -50.873710, 0.000000, 0.000000, 350.000000);
CreateDynamicObject(1823, 1782.536621, -1550.483886, -50.873710, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1754, 1767.680541, -1549.752441, -50.889801, 0.000000, 0.000000, 48.000000);
CreateDynamicObject(1754, 1770.095947, -1548.707275, -50.873710, 0.000000, 0.000000, 331.999267);
CreateDynamicObject(1754, 1770.734008, -1551.121704, -50.873710, 0.000000, 0.000000, 245.995849);
CreateDynamicObject(1823, 1768.289916, -1550.603393, -50.873710, 0.000000, 0.000000, 322.000000);
CreateDynamicObject(1753, 1769.782958, -1574.273437, -50.873710, 0.000000, 0.000000, 178.000000);
CreateDynamicObject(2291, 1766.751220, -1572.608032, -50.873710, 0.000000, 0.000000, 82.000000);
CreateDynamicObject(2292, 1771.477783, -1571.641479, -50.873710, 0.000000, 0.000000, 239.996337);
CreateDynamicObject(1823, 1768.228515, -1572.204833, -50.873710, 0.000000, 0.000000, 321.998291);
CreateDynamicObject(2292, 1785.365356, -1573.401489, -50.873710, 0.000000, 0.000000, 191.996337);
CreateDynamicObject(1753, 1782.083374, -1575.933959, -50.873710, 0.000000, 0.000000, 123.994995);
CreateDynamicObject(2291, 1781.850097, -1572.248779, -50.873710, 0.000000, 0.000000, 81.996459);
CreateDynamicObject(1823, 1782.505371, -1573.966430, -50.873710, 0.000000, 0.000000, 321.998291);
CreateDynamicObject(2072, 1786.391723, -1571.535766, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2072, 1779.221679, -1572.719726, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2072, 1773.023559, -1574.571166, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2072, 1767.088378, -1570.514526, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2072, 1773.610595, -1551.813110, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3533, 1712.319946, -1571.557373, -46.671592, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3533, 1711.994750, -1549.417724, -46.644241, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(18092, 1713.892700, -1560.475463, -50.628379, 0.000000, 0.000000, 270.500000);
CreateDynamicObject(3503, 1712.026367, -1561.656860, -45.583934, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3503, 1712.045776, -1559.111938, -45.606567, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1957, 1714.052734, -1559.864746, -50.045673, 0.000000, 0.000000, 0.250000);
CreateDynamicObject(1954, 1714.064453, -1561.095825, -50.045673, 0.000000, 0.000000, 0.250000);
CreateDynamicObject(1958, 1713.949829, -1560.467773, -50.077945, 0.000000, 0.000000, 270.750000);
CreateDynamicObject(1960, 1714.017822, -1559.844604, -49.977870, 271.820068, 105.930908, 21.188507);
CreateDynamicObject(1960, 1714.011962, -1561.098388, -49.977870, 271.818237, 105.930175, 21.187133);
CreateDynamicObject(18102, 1721.777221, -1565.780029, -46.981742, 40.000000, 0.000000, 270.000000);
CreateDynamicObject(18102, 1749.444580, -1555.725341, -46.964904, 39.995727, 0.000000, 89.750000);
CreateDynamicObject(2104, 1710.061767, -1561.303344, -50.892154, 0.000000, 0.000000, 92.000000);
CreateDynamicObject(2104, 1710.031738, -1560.722900, -50.889801, 0.000000, 0.000000, 91.999511);
CreateDynamicObject(2104, 1710.033203, -1560.150024, -50.889801, 0.000000, 0.000000, 91.999511);
CreateDynamicObject(2104, 1710.000122, -1559.573486, -50.889801, 0.000000, 0.000000, 91.999511);
CreateDynamicObject(2100, 1710.025634, -1560.815917, -49.539718, 0.000000, 0.000000, 90.750000);
CreateDynamicObject(2229, 1748.017578, -1554.542724, -50.389801, 0.000000, 0.000000, 290.000000);
CreateDynamicObject(2229, 1748.003295, -1554.516601, -48.988533, 0.000000, 0.000000, 289.995117);
CreateDynamicObject(2231, 1784.912109, -1546.933715, -47.542537, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2231, 1771.169189, -1546.812500, -47.451492, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2231, 1776.116455, -1546.856201, -47.446346, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2231, 1769.739868, -1576.905273, -47.992053, 0.000000, 0.000000, 180.500000);
CreateDynamicObject(2231, 1776.279296, -1576.758666, -47.913700, 0.000000, 0.000000, 180.499877);
CreateDynamicObject(2231, 1784.588012, -1576.832031, -47.989543, 0.000000, 0.000000, 180.499877);
CreateDynamicObject(2233, 1713.778686, -1562.320800, -50.141529, 0.000000, 0.000000, 118.000000);
CreateDynamicObject(2233, 1714.064575, -1558.067504, -50.127861, 0.000000, 0.000000, 59.998657);
CreateDynamicObject(2230, 1710.362792, -1562.573486, -50.917156, 0.000000, 0.000000, 100.250000);
CreateDynamicObject(2230, 1710.381958, -1562.563476, -49.620571, 0.000000, 0.000000, 100.244750);
CreateDynamicObject(2230, 1710.644287, -1557.820800, -50.889801, 0.000000, 0.000000, 72.244750);
CreateDynamicObject(2230, 1710.648437, -1557.824218, -49.641395, 0.000000, 0.000000, 70.990600);
CreateDynamicObject(2229, 1747.811645, -1566.676391, -49.225425, 0.000000, 0.000000, 228.000000);
CreateDynamicObject(2229, 1747.845825, -1566.670532, -50.577480, 0.000000, 0.000000, 227.999282);
CreateDynamicObject(2230, 1723.526123, -1554.125122, -46.196075, 0.000000, 0.000000, 64.988159);
CreateDynamicObject(2230, 1723.526123, -1554.130981, -47.472583, 0.000000, 0.000000, 64.984130);
CreateDynamicObject(2230, 1723.526123, -1554.128417, -48.768112, 0.000000, 0.000000, 64.984130);
CreateDynamicObject(2230, 1723.518432, -1554.137817, -50.063522, 0.000000, 0.000000, 64.984130);
CreateDynamicObject(2230, 1723.507202, -1566.626098, -46.103874, 0.000000, 0.000000, 122.244750);
CreateDynamicObject(2230, 1723.354980, -1566.713989, -47.424285, 0.000000, 0.000000, 122.239379);
CreateDynamicObject(2230, 1723.370483, -1566.712646, -48.708675, 0.000000, 0.000000, 122.239379);
CreateDynamicObject(2230, 1723.384277, -1566.711425, -49.970153, 0.000000, 0.000000, 122.239379);
CreateDynamicObject(19124, 1748.609008, -1553.640625, -52.325477, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1748.580932, -1566.879150, -52.352832, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1722.706542, -1567.489135, -52.352832, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1722.731689, -1553.971557, -52.325477, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19149, 1711.744628, -1561.698364, -46.783248, 0.000000, 0.000000, 279.500000);
CreateDynamicObject(19149, 1712.009033, -1559.119384, -46.847427, 0.000000, 0.000000, 244.247924);
CreateDynamicObject(19151, 1761.757690, -1564.397216, -45.386569, 0.000000, 0.000000, 86.000000);
CreateDynamicObject(19151, 1761.726684, -1557.484497, -45.388141, 5.750030, 0.000000, 92.245483);
CreateDynamicObject(19159, 1736.467041, -1560.246704, -45.122871, 0.000000, 0.000000, 292.000000);
CreateDynamicObject(3503, 1736.457641, -1560.208862, -43.672954, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19148, 1747.693603, -1564.571289, -45.658233, 0.000000, 0.000000, 67.500000);
CreateDynamicObject(19148, 1747.638061, -1555.799316, -45.483207, 0.000000, 0.000000, 73.497436);
CreateDynamicObject(19147, 1723.366210, -1565.841552, -45.766925, 0.000000, 0.000000, 276.000000);
CreateDynamicObject(19147, 1723.545410, -1557.462768, -45.582569, 0.000000, 0.000000, 265.996093);
CreateDynamicObject(19151, 1761.942016, -1561.371093, -45.396717, 0.000000, 0.000000, 85.995483);
CreateDynamicObject(19122, 1714.033203, -1571.224853, -50.352832, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1713.216918, -1549.317504, -50.325477, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1763.462036, -1550.094726, -50.325477, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1764.052368, -1571.952392, -50.254489, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2946, 1803.782836, -1563.728881, -48.450771, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2946, 1803.806884, -1560.548217, -48.442459, 0.000000, 0.000000, 178.000000);
//Peaje Principal
CreateDynamicObject(7522,1734.53063965,510.67129517,32.14699554,355.99548340,0.00000000,339.99938965); //object(vgnhsegate1) (4)
CreateDynamicObject(3851,1717.88562012,516.65197754,32.15283203,356.75000000,0.00000000,339.50000000); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,1717.80957031,516.46520996,28.47251129,356.74804688,0.00000000,339.49951172); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,1751.12756348,504.76992798,32.15789413,356.74804688,0.00000000,339.49951172); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,1751.01477051,504.58544922,28.40093231,356.74804688,0.00000000,339.49951172); //object(carshowwin_sfsx) (5)
CreateDynamicObject(3920,1741.84741211,514.58184814,31.99756432,0.00000000,0.00000000,342.00000000); //object(lib_veg3) (1)
CreateDynamicObject(3920,1730.35070801,518.97283936,31.80419159,0.00000000,0.00000000,341.99890137); //object(lib_veg3) (2)
CreateDynamicObject(3920,1739.13635254,502.53961182,32.80576324,0.00000000,0.00000000,159.99890137); //object(lib_veg3) (3)
CreateDynamicObject(3920,1726.79956055,506.74310303,32.71912384,0.00000000,0.00000000,159.99389648); //object(lib_veg3) (4)
CreateDynamicObject(638,1720.85021973,511.23519897,28.31233597,357.49755859,359.74975586,251.73400879); //object(kb_planter_bush) (3)
CreateDynamicObject(638,1719.88940430,520.37664795,27.82375336,356.24755859,0.00000000,338.24487305); //object(kb_planter_bush) (5)
CreateDynamicObject(638,1748.67065430,500.63357544,28.28552246,2.73840332,0.00000000,160.49377441); //object(kb_planter_bush) (10)
CreateDynamicObject(1237,1744.39074707,499.05343628,28.04047394,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (2)
CreateDynamicObject(1237,1748.68969727,510.93167114,27.41461182,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (3)
CreateDynamicObject(1237,1724.42675781,521.88134766,27.23392868,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (4)
CreateDynamicObject(3749,1719.64501953,515.95593262,32.53154755,359.75024414,357.24993896,249.98797607); //object(clubgate01_lax) (1)
CreateDynamicObject(3749,1749.28527832,505.35165405,32.72765732,359.74731445,357.24792480,249.98291016); //object(clubgate01_lax) (2)
CreateDynamicObject(8168,1720.70947266,515.77081299,29.44019127,359.50097656,3.50012207,86.78051758); //object(vgs_guardhouse01) (1)
CreateDynamicObject(8168,1748.43798828,505.49218750,29.53178024,359.25018311,356.99877930,266.70556641); //object(vgs_guardhouse01) (3)
CreateDynamicObject(638,1718.40039062,512.05651855,28.41301727,357.49511719,359.74731445,251.72973633); //object(kb_planter_bush) (12)
CreateDynamicObject(1237,1719.72851562,508.91601562,27.99460793,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(638,1747.98962402,509.82730103,27.80553436,357.49511719,359.74731445,249.72973633); //object(kb_planter_bush) (13)
CreateDynamicObject(638,1750.18115234,509.03182983,27.77998924,359.74511719,359.74755859,249.73455811); //object(kb_planter_bush) (14)
CreateDynamicObject(1231,1742.59069824,497.36105347,30.82483101,0.00000000,0.00000000,342.00000000); //object(streetlamp2) (1)
CreateDynamicObject(1231,1719.64270020,505.87384033,30.85145569,0.00000000,0.00000000,341.99890137); //object(streetlamp2) (2)
CreateDynamicObject(1231,1726.26489258,523.94793701,29.82937241,0.00000000,0.00000000,341.99890137); //object(streetlamp2) (3)
CreateDynamicObject(1231,1749.24548340,515.52655029,29.86758041,0.00000000,0.00000000,341.99890137); //object(streetlamp2) (4)
CreateDynamicObject(1319,1734.52221680,515.25524902,27.93953896,0.00000000,0.00000000,74.00000000); //object(ws_ref_bollard) (5)
CreateDynamicObject(1319,1734.26013184,514.58416748,27.98063087,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (7)
CreateDynamicObject(1319,1734.74743652,515.87677002,27.90203285,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (8)
CreateDynamicObject(1319,1737.62023926,514.83935547,27.90540504,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (9)
CreateDynamicObject(1319,1737.38293457,514.20434570,27.94361496,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (10)
CreateDynamicObject(1319,1737.16137695,513.49359131,27.98629761,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (11)
CreateDynamicObject(1269,1725.61096191,519.44012451,28.17633820,0.00000000,0.00000000,278.00000000); //object(parkingmeter) (1)
CreateDynamicObject(1269,1743.27661133,501.52035522,28.77410126,0.00000000,0.00000000,277.99804688); //object(parkingmeter) (2)
CreateDynamicObject(7662,1757.11669922,520.45324707,27.29666138,356.50000000,0.00000000,340.75000000); //object(miragehedge14) (1)
CreateDynamicObject(7662,1722.98400879,532.91369629,27.51205444,356.24536133,0.00000000,341.24645996); //object(miragehedge14) (2)
CreateDynamicObject(1319,1731.58703613,507.48901367,28.41566086,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (12)
CreateDynamicObject(1319,1731.34985352,506.75735474,28.44856453,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (13)
CreateDynamicObject(1319,1731.11682129,505.89208984,28.48619080,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (14)
CreateDynamicObject(1319,1734.74328613,506.26354980,28.41332245,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (15)
CreateDynamicObject(1319,1734.48413086,505.59411621,28.44406509,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (16)
CreateDynamicObject(1319,1734.12329102,504.84600830,28.47859383,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (17)
CreateDynamicObject(7662,1734.56909180,456.59658813,30.26617432,357.99536133,0.00000000,340.74652100); //object(miragehedge14) (3)
CreateDynamicObject(7662,1699.64965820,468.77502441,30.30495453,357.99658203,357.74865723,339.91772461); //object(miragehedge14) (5)
CreateDynamicObject(966,1746.27075195,513.30554199,27.28900146,0.00000000,0.00000000,339.50000000); //object(bar_gatebar01) (1)
CreateDynamicObject(966,1722.63073730,507.59747314,28.02780533,0.00000000,0.00000000,161.49951172); //object(bar_gatebar01) (2)
CreateDynamicObject(1237,1721.83825684,507.92312622,28.00804901,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (6)
CreateDynamicObject(1237,1747.07910156,512.95410156,27.27249527,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (7)
CreateDynamicObject(1237,1729.95117188,505.17480469,27.99683952,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (8)
CreateDynamicObject(1237,1739.17480469,515.84863281,27.30348587,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (9)
CreateDynamicObject(1346,1742.52221680,434.89068604,19.12241745,0.00000000,0.00000000,0.00000000); //object(cj_phone_kiosk2) (2)
CreateDynamicObject(1237,1713.72546387,507.94091797,28.15727997,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(1237,1720.20654297,525.78100586,27.11544418,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(1237,1755.01977539,513.09460449,27.15516853,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(1237,1748.57165527,495.36611938,28.12929916,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(1554,1740.34033203,527.16510010,26.63312531,0.00000000,0.00000000,0.00000000); //object(cj_water_barrier) (1)
CreateDynamicObject(1554,1738.29052734,520.85583496,27.01563454,0.00000000,0.00000000,0.00000000); //object(cj_water_barrier) (2)
CreateDynamicObject(1554,1736.77880859,516.35937500,27.28455353,0.00000000,0.00000000,0.00000000); //object(cj_water_barrier) (3)
CreateDynamicObject(792,1738.75891113,522.33557129,27.09619713,0.00000000,0.00000000,339.25000000); //object(aw_streettree1) (1)
CreateDynamicObject(792,1741.56005859,530.53411865,26.63008308,0.00000000,0.00000000,340.00000000); //object(aw_streettree1) (2)
//Rejas transfender LV
CreateDynamicObject(980,2385.96093750,1043.56250000,12.59370422,0.00000000,0.00000000,0.00000000); //object(airportgate) (1)
CreateDynamicObject(980,1968.78955078,2162.33325195,12.59370422,0.00000000,0.00000000,270.00000000); //object(airportgate) (2)
CreateDynamicObject(980,-1421.79968262,2590.89697266,56.80568314,0.00000000,0.00000000,0.00000000); //object(airportgate) (3)
CreateDynamicObject(980,-1935.38757324,239.34281921,36.12965393,0.00000000,0.00000000,0.00000000); //object(airportgate) (4)
CreateDynamicObject(980,-2425.79125977,1028.10961914,52.17105103,0.00000000,0.00000000,0.00000000); //object(airportgate) (5)
CreateDynamicObject(971,-99.74066925,1111.51843262,20.36210823,0.00000000,0.00000000,0.00000000); //object(subwaygate) (1)
//Casino
CreateDynamicObject(14624,2238.12060547,1661.44689941,11.92551899,0.00000000,0.00000000,0.00000000); //object(mafcasmain2) (1)
CreateDynamicObject(7191,2231.32543945,1665.34802246,7.88457251,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (1)
CreateDynamicObject(7191,2231.35815430,1665.27746582,11.77499008,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (2)
CreateDynamicObject(8378,2239.27001953,1683.58288574,14.61774826,0.00000000,0.00000000,181.75000000); //object(vgsbighngrdoor) (1)
CreateDynamicObject(8378,2247.72924805,1655.11437988,15.61944771,0.00000000,0.00000000,0.00000000); //object(vgsbighngrdoor) (2)
CreateDynamicObject(7191,2263.94091797,1667.23913574,10.06425953,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (3)
CreateDynamicObject(8659,2264.07153320,1663.41174316,11.94925117,0.00000000,0.00000000,270.00000000); //object(shbbyhswall11_lvs) (1)
CreateDynamicObject(8659,2264.17236328,1692.89587402,11.93328667,0.00000000,0.00000000,269.50000000); //object(shbbyhswall11_lvs) (2)
CreateDynamicObject(1978,2238.26245117,1673.50781250,6.96686316,0.00000000,0.00000000,0.00000000); //object(roulette_tbl) (1)
CreateDynamicObject(1978,2242.91113281,1673.49926758,6.96686316,0.00000000,0.00000000,180.00000000); //object(roulette_tbl) (2)
CreateDynamicObject(1978,2242.90747070,1678.85717773,6.96051788,0.00000000,0.00000000,179.00000000); //object(roulette_tbl) (3)
CreateDynamicObject(1978,2238.14355469,1678.53393555,6.96051788,0.00000000,0.00000000,0.00000000); //object(roulette_tbl) (4)
CreateDynamicObject(2188,2254.72900391,1682.07080078,6.89541054,0.00000000,0.00000000,0.25000000); //object(blck_jack) (1)
CreateDynamicObject(1979,2243.11059570,1672.12707520,6.89041710,0.00000000,0.00000000,0.00000000); //object(wheel_wee) (1)
CreateDynamicObject(1979,2243.09326172,1677.49182129,6.88407135,0.00000000,0.00000000,0.00000000); //object(wheel_wee) (2)
CreateDynamicObject(1979,2237.94970703,1679.90527344,6.88407135,0.00000000,0.00000000,0.00000000); //object(wheel_wee) (3)
CreateDynamicObject(1979,2238.05004883,1674.85424805,6.89041710,0.00000000,0.00000000,0.00000000); //object(wheel_wee) (4)
CreateDynamicObject(1895,2254.70800781,1683.26818848,7.96865606,0.00000000,0.00000000,1.50000000); //object(wheel_o_fortune) (1)
CreateDynamicObject(2188,2260.32714844,1682.19433594,6.89541054,0.00000000,0.00000000,0.24719238); //object(blck_jack) (2)
CreateDynamicObject(1895,2260.33129883,1683.43200684,8.07095814,0.00000000,0.00000000,1.49963379); //object(wheel_o_fortune) (2)
CreateDynamicObject(3437,2232.03271484,1682.23937988,11.77049637,0.00000000,0.00000000,44.00000000); //object(ballypllr01_lvs) (1)
CreateDynamicObject(3437,2263.07397461,1656.52893066,11.77049637,0.00000000,0.00000000,52.49475098); //object(ballypllr01_lvs) (2)
CreateDynamicObject(3437,2231.80517578,1656.68798828,11.77049637,0.00000000,0.00000000,129.99267578); //object(ballypllr01_lvs) (3)
CreateDynamicObject(3437,2263.22460938,1683.15356445,11.76828003,0.00000000,0.00000000,129.99023438); //object(ballypllr01_lvs) (4)
CreateDynamicObject(3441,2233.34887695,1665.24438477,7.88556719,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (1)
CreateDynamicObject(3441,2233.48120117,1670.89404297,7.89191246,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (2)
CreateDynamicObject(3441,2233.45825195,1670.87670898,11.84692955,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (3)
CreateDynamicObject(3441,2233.35815430,1665.22595215,11.84058380,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (4)
CreateDynamicObject(3494,2252.35351562,1676.35107422,9.93001556,0.00000000,0.00000000,0.00000000); //object(luxorpillar04_lvs) (1)
CreateDynamicObject(14582,2246.60180664,1656.23022461,9.39402580,0.00000000,0.00000000,268.75000000); //object(mafiacasinobar1) (1)
CreateDynamicObject(1905,2238.10961914,1672.14135742,6.86254692,0.00000000,0.00000000,0.00000000); //object(pkr_chplo08) (2)
CreateDynamicObject(1905,2238.35717773,1672.30114746,6.86254692,0.00000000,0.00000000,0.00000000); //object(pkr_chplo08) (3)
CreateDynamicObject(2946,2231.43750000,1668.14685059,5.90989399,0.00000000,0.00000000,0.00000000); //object(cr_door_03) (1)
CreateDynamicObject(2946,2231.44140625,1668.17456055,5.89203167,0.00000000,0.00000000,180.00000000); //object(cr_door_03) (2)
CreateDynamicObject(1214,2250.99829102,1657.52880859,5.58489275,0.00000000,0.00000000,0.00000000); //object(bollard) (1)
CreateDynamicObject(1214,2250.42773438,1658.82507324,5.55989265,0.00000000,0.00000000,0.00000000); //object(bollard) (2)
CreateDynamicObject(1214,2249.55273438,1659.69482422,5.53489256,0.00000000,0.00000000,0.00000000); //object(bollard) (3)
CreateDynamicObject(1214,2248.50952148,1660.39550781,5.65989304,0.00000000,0.00000000,0.00000000); //object(bollard) (4)
CreateDynamicObject(1214,2247.29736328,1660.55566406,5.63489294,0.00000000,0.00000000,0.00000000); //object(bollard) (5)
CreateDynamicObject(1214,2245.90405273,1660.55151367,5.60989285,0.00000000,0.00000000,0.00000000); //object(bollard) (6)
CreateDynamicObject(1214,2244.49536133,1660.16247559,5.55989265,0.00000000,0.00000000,0.00000000); //object(bollard) (7)
CreateDynamicObject(1214,2243.52709961,1659.55700684,5.50989246,0.00000000,0.00000000,0.00000000); //object(bollard) (8)
CreateDynamicObject(1214,2242.31225586,1657.50549316,5.60989285,0.00000000,0.00000000,0.00000000); //object(bollard) (9)
CreateDynamicObject(1214,2242.62084961,1658.49133301,5.65989304,0.00000000,0.00000000,0.00000000); //object(bollard) (10)
CreateDynamicObject(3441,2247.35302734,1656.44934082,7.88556719,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (5)
CreateDynamicObject(3441,2245.87182617,1656.39453125,7.88556719,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (6)
CreateDynamicObject(1214,2246.63916016,1657.41540527,5.90989399,0.00000000,0.00000000,0.00000000); //object(bollard) (11)
CreateDynamicObject(18014,2232.09936523,1678.85314941,6.34844208,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (1)
CreateDynamicObject(18014,2232.10839844,1674.23193359,6.34209681,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (2)
CreateDynamicObject(18014,2232.15747070,1662.15563965,6.34844208,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (3)
CreateDynamicObject(1361,2235.78491211,1656.76098633,6.65323734,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (1)
CreateDynamicObject(1361,2258.67749023,1656.53796387,6.65323734,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (2)
CreateDynamicObject(2785,2254.01318359,1666.48547363,6.75436735,0.00000000,0.00000000,0.00000000); //object(cj_slot_bank) (1)
CreateDynamicObject(2785,2258.33496094,1666.51196289,6.75436735,0.00000000,0.00000000,0.00000000); //object(cj_slot_bank) (2)
CreateDynamicObject(2785,2254.00830078,1667.51208496,6.75436735,0.00000000,0.00000000,180.75000000); //object(cj_slot_bank) (3)
CreateDynamicObject(2785,2258.31054688,1667.56457520,6.75436735,0.00000000,0.00000000,180.74707031); //object(cj_slot_bank) (4)
CreateDynamicObject(2785,2254.51831055,1672.59411621,6.75436735,0.00000000,0.00000000,0.00000000); //object(cj_slot_bank) (5)
CreateDynamicObject(2785,2258.71728516,1672.59704590,6.75436735,0.00000000,0.00000000,0.00000000); //object(cj_slot_bank) (6)
CreateDynamicObject(2785,2258.72216797,1673.56152344,6.75436735,0.00000000,0.00000000,180.74707031); //object(cj_slot_bank) (7)
CreateDynamicObject(2785,2254.51391602,1673.50439453,6.75436735,0.00000000,0.00000000,180.74707031); //object(cj_slot_bank) (8)
///Lugar adonde estan los aviones
CreateDynamicObject(3114, 2625.79, -2379.67, 30.76,   0.00, 0.00, 0.19);
CreateDynamicObject(3115, 2625.83, -2365.90, 31.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2625.79, -2352.18, 30.76,   0.00, 0.00, 180.73);
CreateDynamicObject(3115, 2646.78, -2365.94, 31.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2667.56, -2365.92, 31.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2688.48, -2365.93, 31.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2709.46, -2365.99, 31.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2730.47, -2365.98, 31.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2646.64, -2351.85, 30.76,   0.00, 0.00, 180.73);
CreateDynamicObject(3114, 2667.59, -2351.63, 30.76,   0.00, 0.00, 180.73);
CreateDynamicObject(3114, 2688.67, -2351.34, 30.76,   0.00, 0.00, 180.73);
CreateDynamicObject(3114, 2709.79, -2351.07, 30.76,   0.00, 0.00, 180.73);
CreateDynamicObject(3114, 2730.79, -2350.89, 30.76,   0.00, 0.00, 180.25);
CreateDynamicObject(3114, 2647.00, -2379.62, 30.76,   0.00, 0.00, 0.19);
CreateDynamicObject(3114, 2668.00, -2379.52, 30.76,   0.00, 0.00, 0.19);
CreateDynamicObject(3114, 2689.11, -2379.45, 30.76,   0.00, 0.00, 0.19);
CreateDynamicObject(3114, 2709.97, -2379.42, 30.76,   0.00, 0.00, 0.19);
CreateDynamicObject(3114, 2730.77, -2379.36, 30.76,   0.00, 0.00, 0.19);
CreateDynamicObject(3114, 2744.04, -2379.24, 30.76,   0.00, 0.00, 0.19);
CreateDynamicObject(3115, 2744.08, -2365.91, 31.17,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2744.00, -2350.89, 30.76,   0.00, 0.00, 180.25);
CreateDynamicObject(12950, 2755.34, -2355.00, 23.33,   0.00, 0.00, 179.34);
CreateDynamicObject(12950, 2755.33, -2342.70, 14.30,   0.00, 0.00, 180.96);
CreateDynamicObject(12950, 2755.44, -2348.83, 18.92,   0.00, 0.00, 179.22);
CreateDynamicObject(12950, 2755.22, -2361.26, 27.85,   0.00, 0.00, 180.72);
// Militares
CreateDynamicObject(3749,2338.48437500,-2354.23095703,18.24122620,0.00000000,0.00000000,44.00000000); //object(clubgate01_lax) (1)
CreateDynamicObject(3749,2274.45410156,-2663.34277344,18.26918793,0.00000000,0.00000000,90.00000000); //object(clubgate01_lax) (2)
CreateDynamicObject(3749,2459.12500000,-2256.07739258,29.92091370,0.00000000,0.00000000,45.99475098); //object(clubgate01_lax) (3)
saem1 = CreateDynamicObject(980,2273.59570312,-2663.29052734,15.29697227,0.00000000,0.00000000,90.00000000); //object(airportgate) (1)
saem2 = CreateDynamicObject(980,2338.10571289,-2353.88281250,15.15620422,0.00000000,0.00000000,44.00000000); //object(airportgate) (2)
saem3 = CreateDynamicObject(980,2458.59448242,-2255.52441406,26.83589172,0.00000000,0.00000000,45.99475098); //object(airportgate) (3)
saem4 = CreateDynamicObject(3115,2787.02954102,-2299.03149414,9.41190529,0.00000000,0.00000000,180.00000000); //object(carrier_lift1_sfse) (3)
//saem5 = CreateDynamicObject(980, 2289.22, -2663.36, 15.20,   0.00, 0.00, 88.98);

CreateDynamicObject(10771,2697.39941406,-2298.39941406,-0.80000001,0.00000000,0.00000000,0.49987793); //object(carrier_hull_sfse) (1)
CreateDynamicObject(10770,2700.69995117,-2305.80004883,32.29999924,0.00000000,0.00000000,0.50000000); //object(carrier_bridge_sfse) (1)
CreateDynamicObject(11146,2688.39990234,-2297.89990234,6.00000000,0.00000000,0.00000000,0.49987793); //object(carrier_hangar_sfs) (1)
CreateDynamicObject(3885,2729.30004883,-2305.39990234,14.60000038,0.00000000,0.00000000,0.00000000); //object(sambase_sfxrf) (1)
CreateDynamicObject(3885,2700.60009766,-2304.80004883,24.60000038,0.00000000,0.00000000,0.00000000); //object(sambase_sfxrf) (2)
CreateDynamicObject(11237,2703.50000000,-2305.60009766,32.00000000,0.00000000,0.00000000,0.00000000); //object(carrier_bits_sfse) (1)
CreateDynamicObject(3884,2729.50000000,-2305.50000000,14.60000038,0.00000000,0.00000000,0.00000000); //object(samsite_sfxrf) (1)
CreateDynamicObject(3884,2700.60009766,-2304.50000000,24.60000038,0.00000000,0.00000000,0.00000000); //object(samsite_sfxrf) (2)
CreateDynamicObject(3934,2754.00000000,-2305.80004883,11.00000000,0.00000000,0.00000000,0.00000000); //object(helipad01) (1)
CreateDynamicObject(16644,2752.50000000,-2331.30004883,12.50000000,0.00000000,0.00000000,89.25000000); //object(a51_ventsouth) (1)
CreateDynamicObject(16644,2752.69995117,-2313.89990234,11.30000019,0.00000000,8.75000000,89.74743652); //object(a51_ventsouth) (2)
CreateDynamicObject(3934,2780.69995117,-2304.80004883,11.00000000,0.00000000,0.00000000,0.00000000); //object(helipad01) (2)
CreateDynamicObject(3550,2720.60009766,-2398.39990234,16.39999962,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (2)
CreateDynamicObject(3550,2720.60009766,-2392.39990234,16.39999962,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (3)
CreateDynamicObject(3550,2720.50000000,-2386.39990234,16.39999962,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (4)
CreateDynamicObject(3550,2720.50000000,-2380.50000000,16.39999962,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (5)
CreateDynamicObject(3550,2720.80004883,-2412.69995117,16.39999962,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (6)
CreateDynamicObject(3550,2720.80004883,-2418.69995117,16.39999962,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (7)
CreateDynamicObject(3550,2720.69995117,-2491.00000000,16.10000038,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (8)
CreateDynamicObject(3550,2720.69995117,-2496.89990234,16.10000038,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (9)
CreateDynamicObject(3550,2720.60009766,-2511.39990234,16.00000000,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (10)
CreateDynamicObject(3550,2720.60009766,-2517.39990234,16.00000000,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_msh) (11)
CreateDynamicObject(3109,2749.29980469,-2451.89941406,13.89999962,0.00000000,0.00000000,91.99951172); //object(imy_la_door) (1)
CreateDynamicObject(11489,2708.39990234,-2391.50000000,12.80000019,0.00000000,0.00000000,324.00000000); //object(dam_statues) (1)
CreateDynamicObject(19124,2751.60009766,-2330.30004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(19124,2754.19995117,-2330.30004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(19124,2751.80004883,-2310.80004883,11.50000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
CreateDynamicObject(19124,2754.30004883,-2310.80004883,11.50000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
CreateDynamicObject(19124,2776.39990234,-2308.60009766,11.39999962,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
CreateDynamicObject(19124,2784.60009766,-2301.19995117,11.39999962,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
CreateDynamicObject(19124,2784.60009766,-2308.50000000,11.39999962,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
CreateDynamicObject(19124,2776.60009766,-2301.39990234,11.39999962,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (4)
CreateDynamicObject(19124,2757.89990234,-2302.30004883,11.39999962,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (5)
CreateDynamicObject(19124,2757.80004883,-2309.50000000,11.39999962,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (6)
CreateDynamicObject(19124,2749.89990234,-2309.50000000,11.39999962,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (7)
CreateDynamicObject(19124,2750.00000000,-2302.39990234,11.39999962,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (8)
CreateDynamicObject(19124,2621.60009766,-2298.80004883,11.39999962,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (9)
CreateDynamicObject(3526,2622.00000000,-2304.80004883,11.10000038,0.00000000,0.00000000,0.00000000); //object(vegasairportlight) (1)
CreateDynamicObject(3526,2621.89990234,-2292.30004883,11.10000038,0.00000000,0.00000000,0.00000000); //object(vegasairportlight) (2)
CreateDynamicObject(8613,2604.10009766,-2293.89990234,7.50000000,0.00000000,0.00000000,0.00000000); //object(vgssstairs03_lvs) (1)
CreateDynamicObject(1477,2608.10009766,-2298.39990234,2.09999990,0.00000000,0.00000000,270.00000000); //object(dyn_porch_4b) (1)
CreateDynamicObject(3877,2720.19995117,-2507.80004883,14.00000000,0.00000000,0.00000000,0.00000000); //object(sf_rooflite) (1)
CreateDynamicObject(3877,2720.19995117,-2500.19995117,14.00000000,0.00000000,0.00000000,0.00000000); //object(sf_rooflite) (2)
CreateDynamicObject(3877,2720.19995117,-2409.19995117,13.89999962,0.00000000,0.00000000,0.00000000); //object(sf_rooflite) (3)
CreateDynamicObject(3877,2720.19995117,-2401.60009766,13.89999962,0.00000000,0.00000000,0.00000000); //object(sf_rooflite) (4)
CreateDynamicObject(19124,2750.69995117,-2451.69995117,13.19999981,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
CreateDynamicObject(19124,2742.00000000,-2451.69995117,13.19999981,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
CreateDynamicObject(19124,2736.50000000,-2439.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
CreateDynamicObject(19124,2747.19995117,-2474.19995117,13.19999981,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
CreateDynamicObject(19124,2747.00000000,-2485.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
CreateDynamicObject(974,2706.89990234,-2300.19995117,13.69999981,0.00000000,0.00000000,0.00000000); //object(tall_fence) (1)
CreateDynamicObject(974,2714.19995117,-2301.60009766,4.19999981,0.00000000,0.00000000,268.00000000); //object(tall_fence) (2)
CreateDynamicObject(974,2709.80004883,-2298.30004883,6.69999981,0.00000000,0.00000000,359.99499512); //object(tall_fence) (3)
CreateDynamicObject(994,2754.19995117,-2323.89990234,12.60000038,0.00000000,0.00000000,269.75000000); //object(lhouse_barrier2) (1)
CreateDynamicObject(994,2751.69995117,-2323.80004883,12.60000038,0.00000000,0.00000000,269.24731445); //object(lhouse_barrier2) (2)
CreateDynamicObject(994,2754.30004883,-2311.00000000,11.00000000,0.00000000,351.00000000,270.49194336); //object(lhouse_barrier2) (4)
CreateDynamicObject(994,2751.80004883,-2311.10009766,11.10000038,0.00000000,350.99670410,270.48889160); //object(lhouse_barrier2) (5)

// Cuarteles
CreateDynamicObject(16150, 2911.39, 2132.03, -0.68,   0.00, 0.00, 357.99);
CreateDynamicObject(14842, 2918.42, 2132.08, -0.08,   0.00, 0.00, 269.00);
CreateDynamicObject(2738, 2919.19, 2125.80, -0.07,   0.00, 0.00, 178.00);
CreateDynamicObject(2738, 2917.96, 2125.77, -0.07,   0.00, 0.00, 177.99);
CreateDynamicObject(2738, 2916.62, 2125.78, -0.07,   0.00, 0.00, 177.99);
CreateDynamicObject(2739, 2915.72, 2130.08, -0.64,   0.00, 0.00, 86.00);
CreateDynamicObject(2603, 2909.25, 2136.75, -0.22,   0.00, 0.00, 266.25);
CreateDynamicObject(2603, 2909.20, 2134.43, -0.22,   0.00, 0.00, 266.25);
CreateDynamicObject(2603, 2909.06, 2131.93, -0.22,   0.00, 0.00, 266.25);
CreateDynamicObject(2603, 2913.97, 2136.76, -0.22,   0.00, 0.00, 266.25);
CreateDynamicObject(2603, 2913.87, 2133.77, -0.22,   0.00, 0.00, 266.25);
CreateDynamicObject(2603, 2913.85, 2131.59, -0.22,   0.00, 0.00, 266.25);
CreateDynamicObject(2603, 2908.91, 2129.16, -0.22,   0.00, 0.00, 266.25);
CreateDynamicObject(2596, 2911.75, 2137.87, 1.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2331, 2907.95, 2130.54, -0.43,   0.00, 0.00, 0.00);
CreateDynamicObject(2331, 2907.88, 2133.12, -0.43,   0.00, 0.00, 0.00);
CreateDynamicObject(2331, 2908.11, 2135.67, -0.43,   0.00, 0.00, 0.00);
CreateDynamicObject(2331, 2914.83, 2135.27, -0.43,   0.00, 0.00, 0.00);
CreateDynamicObject(2331, 2914.93, 2132.68, -0.43,   0.00, 0.00, 0.00);
CreateDynamicObject(2002, 2912.04, 2119.22, -0.08,   0.00, 0.00, 178.00);
CreateDynamicObject(1828, 2909.48, 2126.71, -0.68,   0.00, 0.00, 0.00);
CreateDynamicObject(1481, 2914.12, 2119.21, 0.62,   0.00, 0.00, 219.75);
CreateDynamicObject(2762, 2909.51, 2121.49, 0.32,   0.00, 0.00, 0.00);
CreateDynamicObject(2762, 2909.52, 2122.53, 0.32,   0.00, 0.00, 0.00);
CreateDynamicObject(2762, 2911.59, 2122.53, 0.33,   0.00, 0.00, 0.00);
CreateDynamicObject(2762, 2911.58, 2121.49, 0.32,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 2911.64, 2120.16, 0.43,   0.00, 0.00, 180.00);
CreateDynamicObject(2121, 2910.44, 2120.16, 0.43,   0.00, 0.00, 179.99);
CreateDynamicObject(2121, 2909.41, 2120.12, 0.43,   0.00, 0.00, 179.99);
CreateDynamicObject(2121, 2909.31, 2124.02, 0.43,   0.00, 0.00, 358.24);
CreateDynamicObject(2121, 2910.71, 2124.04, 0.43,   0.00, 0.00, 358.24);
CreateDynamicObject(2121, 2911.97, 2124.01, 0.43,   0.00, 0.00, 358.24);
CreateDynamicObject(1506, 2907.19, 2125.90, -0.69,   0.00, 0.00, 86.82);
//===== Prisión Militar
CreateDynamicObject(14412,615.78137207,847.28698730,-81.85933685,0.00000000,0.00000000,0.00000000); //object(carter_drugfloor) (1)
CreateDynamicObject(2951,633.22283936,839.21752930,-91.25302887,0.00000000,0.00000000,269.50000000); //object(a51_labdoor) (2)
CreateDynamicObject(974,606.24859619,860.64294434,-90.20045471,0.00000000,0.00000000,270.00000000); //object(tall_fence) (1)
CreateDynamicObject(974,615.07238770,860.68023682,-89.92543793,0.00000000,0.00000000,270.00000000); //object(tall_fence) (2)
CreateDynamicObject(974,624.01391602,860.53326416,-90.20039368,0.00000000,0.00000000,270.00000000); //object(tall_fence) (3)
CreateDynamicObject(10244,600.36383057,839.32269287,-90.67967224,0.00000000,0.00000000,180.25000000); //object(vicjump_sfe) (1)
CreateDynamicObject(1998,632.31713867,857.31060791,-91.20308685,0.00000000,0.00000000,179.50000000); //object(officedesk1l) (2)
CreateDynamicObject(1998,628.27124023,858.33392334,-91.20308685,0.00000000,0.00000000,89.99450684); //object(officedesk1l) (3)
CreateDynamicObject(2309,628.80157471,859.26489258,-91.20308685,0.00000000,0.00000000,90.00000000); //object(med_office_chair2) (1)
CreateDynamicObject(2309,631.39935303,857.62768555,-91.20308685,0.00000000,0.00000000,179.00000000); //object(med_office_chair2) (2)
CreateDynamicObject(15038,632.41613770,860.59429932,-90.58589935,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (1)
CreateDynamicObject(15038,628.83160400,852.79248047,-90.58589935,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (2)
CreateDynamicObject(3851,592.82928467,844.12921143,-82.97804260,0.00000000,0.00000000,358.50000000); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,592.86151123,849.48962402,-82.96470642,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(5856,584.18750000,839.34197998,-85.03285217,0.00000000,0.00000000,0.00000000); //object(lawnspraydoor1) (1)
CreateDynamicObject(982,615.98748779,837.23931885,-86.36843872,0.00000000,0.00000000,270.00000000); //object(fenceshit) (3)
CreateDynamicObject(982,616.12329102,857.30126953,-86.36559296,0.00000000,0.00000000,270.00000000); //object(fenceshit) (4)
CreateDynamicObject(983,629.09228516,840.83258057,-86.35546875,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
CreateDynamicObject(983,629.07537842,847.23492432,-86.35546875,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (5)
CreateDynamicObject(983,629.06280518,853.64178467,-86.35546875,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (6)
CreateDynamicObject(983,600.14123535,857.22741699,-86.37047577,0.00000000,0.00000000,270.75000000); //object(fenceshit3) (7)
CreateDynamicObject(983,596.14746094,857.14874268,-86.35546875,0.00000000,0.00000000,270.74707031); //object(fenceshit3) (8)
CreateDynamicObject(983,601.59661865,837.24938965,-86.35546875,0.00000000,0.00000000,270.74707031); //object(fenceshit3) (9)
CreateDynamicObject(19124,629.11126709,837.23767090,-86.47470093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
CreateDynamicObject(19124,629.08911133,857.16937256,-86.47470093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
CreateDynamicObject(19124,593.76672363,837.14868164,-86.47470093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
CreateDynamicObject(1216,597.79144287,850.98852539,-90.51108551,0.00000000,0.00000000,91.75000000); //object(phonebooth1) (2)
CreateDynamicObject(1216,597.75109863,851.58166504,-90.51108551,0.00000000,0.00000000,91.74682617); //object(phonebooth1) (3)
CreateDynamicObject(1216,597.72137451,852.15960693,-90.51108551,0.00000000,0.00000000,91.74682617); //object(phonebooth1) (4)
CreateDynamicObject(2606,587.20196533,861.26373291,-83.88135529,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (2)
CreateDynamicObject(2606,589.18109131,861.26373291,-83.87923431,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (3)
CreateDynamicObject(2606,589.16925049,861.26373291,-84.32472992,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (4)
CreateDynamicObject(2606,587.18566895,861.26373291,-84.33766174,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (5)
CreateDynamicObject(2609,585.38281250,861.26373291,-86.32429504,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (1)
CreateDynamicObject(2609,585.84710693,861.24859619,-86.30731201,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (2)
CreateDynamicObject(2609,586.30236816,861.25897217,-86.30731201,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (3)
CreateDynamicObject(2609,586.75256348,861.25360107,-86.30731201,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (4)
CreateDynamicObject(2604,589.21783447,860.75445557,-86.24214935,0.00000000,0.00000000,0.00000000); //object(cj_police_counter) (1)
CreateDynamicObject(1703,588.35546875,844.76611328,-87.03902435,0.00000000,0.00000000,181.00000000); //object(kb_couch02) (1)
CreateDynamicObject(1703,586.39172363,849.75042725,-87.03902435,0.00000000,0.00000000,358.99975586); //object(kb_couch02) (2)
CreateDynamicObject(2074,602.54382324,859.65155029,-87.64872742,0.00000000,0.00000000,0.00000000); //object(cj_mlight8) (1)
CreateDynamicObject(2109,587.43835449,846.94415283,-86.64791870,0.00000000,0.00000000,0.00000000); //object(low_dinning_3) (1)
CreateDynamicObject(2106,587.45599365,846.86895752,-86.22494507,0.00000000,0.00000000,0.00000000); //object(cj_mlight15) (1)
CreateDynamicObject(2256,591.50878906,861.23937988,-83.41544342,0.00000000,0.00000000,0.00000000); //object(frame_clip_3) (1)
CreateDynamicObject(2239,585.50231934,849.75665283,-87.03902435,0.00000000,0.00000000,0.00000000); //object(cj_mlight16) (1)
CreateDynamicObject(1671,590.48974609,859.27911377,-86.57881165,0.00000000,0.00000000,182.00000000); //object(swivelchair_a) (1)
CreateDynamicObject(2165,584.96478271,854.24078369,-87.03902435,0.00000000,0.00000000,88.75000000); //object(med_office_desk_1) (1)
CreateDynamicObject(1671,586.52288818,854.71789551,-86.57881165,0.00000000,0.00000000,263.99951172); //object(swivelchair_a) (2)
CreateDynamicObject(1670,586.98498535,847.14306641,-86.22494507,0.00000000,0.00000000,0.00000000); //object(propcollecttable) (1)
CreateDynamicObject(2922,592.47760010,838.94757080,-85.86143494,0.00000000,0.00000000,90.00000000); //object(kmb_keypad) (1)
CreateDynamicObject(2921,592.50012207,836.91625977,-82.11330414,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (1)
CreateDynamicObject(2921,632.99652100,837.03424072,-88.60442352,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (2)
CreateDynamicObject(2921,597.24102783,855.04864502,-87.35303497,354.04174805,353.21316528,223.29225159); //object(kmb_cam) (3)
CreateDynamicObject(3387,592.18200684,857.08758545,-87.03902435,0.00000000,0.00000000,0.00000000); //object(a51_srack3_) (1)
CreateDynamicObject(3387,592.19024658,856.08770752,-87.03902435,0.00000000,0.00000000,0.00000000); //object(a51_srack3_) (2)
CreateDynamicObject(3387,592.16955566,855.12414551,-87.03902435,0.00000000,0.00000000,0.00000000); //object(a51_srack3_) (3)
CreateDynamicObject(14855,629.89465332,856.10174561,-88.05695343,0.00000000,0.00000000,261.50000000); //object(counterb) (1)
CreateDynamicObject(8957,593.48791504,857.30523682,-90.28941345,0.00000000,0.00000000,270.00000000); //object(vgsespdr01) (1)
CreateDynamicObject(8957,593.59973145,854.81341553,-91.23956299,0.02835083,270.49926758,269.99987793); //object(vgsespdr01) (2)
CreateDynamicObject(2776,595.00518799,856.38317871,-90.64956665,0.00000000,0.00000000,0.00000000); //object(lee_stripchair2) (1)
CreateDynamicObject(3657,593.42749023,844.82995605,-90.68487549,0.00000000,0.00000000,90.00000000); //object(airseata_las) (1)
CreateDynamicObject(19124,593.27801514,846.91503906,-90.63876343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
CreateDynamicObject(19124,606.20446777,838.54064941,-90.63876343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
CreateDynamicObject(2603,598.73052979,859.89050293,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (1)
CreateDynamicObject(2603,605.04431152,860.02496338,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (2)
CreateDynamicObject(2603,607.45782471,859.71130371,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (3)
CreateDynamicObject(2603,612.94519043,859.16772461,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (4)
CreateDynamicObject(2603,615.77783203,859.77984619,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (5)
CreateDynamicObject(2603,622.72192383,859.67974854,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (6)
CreateDynamicObject(2596,584.77294922,847.07635498,-83.84789276,12.75000000,0.00000000,90.00000000); //object(cj_sex_tv) (1)
//grooti
CreateDynamicObject(19378, 561.56, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 552.06, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 542.56, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 533.06, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 523.56, -1294.37, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(19378, 523.03, -1294.38, 19.21,   0.00, 0.00, 90.00);
CreateDynamicObject(13187, 560.66, -1294.33, 17.53,   0.00, 0.00, 90.00);
CreateDynamicObject(13187, 523.78, -1294.33, 17.53,   0.00, 0.00, 90.00);
CreateDynamicObject(13187, 552.14, -1294.30, 17.53,   0.00, 0.00, 90.00);
CreateDynamicObject(13187, 532.28, -1294.33, 17.53,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 540.66, -1294.34, 16.23,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, 543.64, -1294.28, 16.23,   0.00, 0.00, 180.00);
CreateDynamicObject(948, 544.12, -1293.95, 16.24,   0.00, 0.00, 0.00);
CreateDynamicObject(948, 540.45, -1293.98, 16.24,   0.00, 0.00, 0.00);
/////
/////////////////////////////////// Hitman /////////////////////////////////////////////

hitmanreja = CreateDynamicObject(16773, 2234.40, -2215.74, 15.17,   0.00, 0.00, -45.00);
///interior
CreateDynamicObject(3029,2415.30004883,-1429.40002441,22.89999962,0.00000000,0.00000000,0.00000000); //object(cr1_door) (1)
CreateDynamicObject(14746,-2794.19921875,252.89941406,23.29999924,0.00000000,0.00000000,0.00000000); //object(rylounge) (1)
CreateDynamicObject(18553,-2799.39990234,269.00000000,23.39999962,0.00000000,0.00000000,0.00000000); //object(count_ammundoor) (1)
CreateDynamicObject(18553,-2799.39990234,264.89999390,23.39999962,0.00000000,0.00000000,0.00000000); //object(count_ammundoor) (2)
CreateDynamicObject(18553,-2799.39990234,260.89999390,23.39999962,0.00000000,0.00000000,0.00000000); //object(count_ammundoor) (3)
CreateDynamicObject(14556,-2794.10009766,259.50000000,23.00000000,0.00000000,0.00000000,90.75000000); //object(zerowardrobe) (1)
CreateDynamicObject(2708,-2793.39990234,262.60000610,21.50000000,0.00000000,0.00000000,271.25000000); //object(zip_shelf1) (1)
CreateDynamicObject(2063,-2793.60009766,264.50000000,22.39999962,0.00000000,0.00000000,271.00000000); //object(cj_greenshelves) (1)
CreateDynamicObject(1421,-2798.30004883,269.70001221,22.29999924,0.00000000,0.00000000,0.00000000); //object(dyn_boxes) (1)
CreateDynamicObject(1710,-2795.60009766,257.50000000,21.50000000,0.00000000,0.00000000,0.00000000); //object(kb_couch07) (1)
CreateDynamicObject(14720,-2798.80004883,249.50000000,21.50000000,0.00000000,0.00000000,0.00000000); //object(int2lasmone02) (1)
CreateDynamicObject(2297,-2789.60009766,254.89999390,21.50000000,0.00000000,0.00000000,225.00000000); //object(tv_unit_2) (1)
CreateDynamicObject(1710,-2790.00000000,251.80000305,21.50000000,0.00000000,0.00000000,180.00000000); //object(kb_couch07) (2)
CreateDynamicObject(643,-2796.39990234,251.19999695,22.00000000,0.00000000,0.00000000,0.00000000); //object(kb_chr_tbl_test) (1)
CreateDynamicObject(1711,-2798.69995117,252.50000000,21.50000000,0.00000000,0.00000000,89.50000000); //object(kb_chair01) (1)
CreateDynamicObject(1711,-2798.69995117,253.89999390,21.50000000,0.00000000,0.00000000,89.49462891); //object(kb_chair01) (2)
CreateDynamicObject(1711,-2798.69995117,255.30000305,21.50000000,0.00000000,0.00000000,89.49462891); //object(kb_chair01) (3)
CreateDynamicObject(2401,-2793.50000000,260.00000000,23.39999962,0.00000000,0.00000000,274.50000000); //object(cj_trackies_white) (1)
CreateDynamicObject(2399,-2793.50000000,259.39999390,23.39999962,0.00000000,0.00000000,266.00000000); //object(cj_4_s_sweater_2) (1)
CreateDynamicObject(2398,-2793.39990234,258.70001221,23.39999962,0.00000000,0.00000000,270.00000000); //object(cj_trackies_light) (1)
CreateDynamicObject(2396,-2793.39990234,260.00000000,22.29999924,0.00000000,0.00000000,269.50000000); //object(cj_4_s_sweater) (1)
CreateDynamicObject(2389,-2793.39990234,259.39999390,22.29999924,0.00000000,0.00000000,272.00000000); //object(cj_4_sweaters) (1)
CreateDynamicObject(2383,-2793.30004883,258.60000610,22.29999924,0.00000000,0.00000000,181.00000000); //object(cj_6_sweater) (1)
CreateDynamicObject(2386,-2793.50000000,262.70001221,21.70000076,0.00000000,0.00000000,0.00000000); //object(cj_sweater_f_1) (1)
CreateDynamicObject(2386,-2793.50000000,262.10000610,21.70000076,0.00000000,0.00000000,270.50000000); //object(cj_sweater_f_1) (2)
CreateDynamicObject(2386,-2793.50000000,261.60000610,21.70000076,0.00000000,0.00000000,270.49987793); //object(cj_sweater_f_1) (3)
CreateDynamicObject(2386,-2793.50000000,261.10000610,21.70000076,0.00000000,0.00000000,270.49987793); //object(cj_sweater_f_1) (4)
CreateDynamicObject(2384,-2793.39990234,262.70001221,22.00000000,0.00000000,0.00000000,269.75000000); //object(cj_8_jeans_dark) (1)
CreateDynamicObject(2384,-2793.39990234,262.10000610,22.00000000,0.00000000,0.00000000,269.74731445); //object(cj_8_jeans_dark) (2)
CreateDynamicObject(2384,-2793.39990234,261.60000610,22.00000000,0.00000000,0.00000000,269.74731445); //object(cj_8_jeans_dark) (3)
CreateDynamicObject(2384,-2793.39990234,261.10000610,22.00000000,0.00000000,0.00000000,269.74731445); //object(cj_8_jeans_dark) (4)
CreateDynamicObject(2392,-2793.50000000,262.60000610,23.29999924,0.00000000,0.00000000,0.00000000); //object(cj_8_jeans_med) (1)
CreateDynamicObject(2045,-2793.60009766,265.39999390,21.89999962,0.00000000,0.00000000,0.00000000); //object(cj_bbat_nails) (1)
CreateDynamicObject(2036,-2793.69995117,264.00000000,21.89999962,0.00000000,0.00000000,271.50000000); //object(cj_psg1) (1)
CreateDynamicObject(2036,-2793.69995117,263.89999390,22.39999962,0.00000000,0.00000000,271.49963379); //object(cj_psg1) (2)
CreateDynamicObject(2036,-2793.69995117,265.20001221,22.79999924,0.00000000,0.00000000,271.49963379); //object(cj_psg1) (3)
CreateDynamicObject(2035,-2793.69995117,265.29998779,22.39999962,0.00000000,0.00000000,269.25000000); //object(cj_m16) (1)
CreateDynamicObject(2035,-2793.69995117,265.29998779,23.20000076,0.00000000,0.00000000,269.24743652); //object(cj_m16) (2)
CreateDynamicObject(2035,-2793.69995117,263.89999390,23.20000076,0.00000000,0.00000000,269.24743652); //object(cj_m16) (3)
CreateDynamicObject(2035,-2793.69995117,263.89999390,22.79999924,0.00000000,0.00000000,269.24743652); //object(cj_m16) (4)
CreateDynamicObject(2392,-2793.50000000,261.70001221,23.29999924,0.00000000,0.00000000,0.00000000); //object(cj_8_jeans_med) (2)
CreateDynamicObject(14819,2436.30004883,-1417.50000000,24.20000076,0.00000000,0.00000000,0.00000000); //object(og_door) (4)
CreateDynamicObject(1557,-2789.10009766,256.00000000,21.50000000,0.00000000,0.00000000,90.00000000); //object(gen_doorext19) (1)
CreateDynamicObject(13007,-592.29980469,2588.69921875,66.69999695,0.00000000,0.00000000,0.00000000); //object(sw_bankbits) (1)
CreateDynamicObject(2946,-600.90002441,2596.30004883,64.90000153,0.00000000,0.00000000,267.75000000); //object(cr_door_03) (1)
CreateDynamicObject(2946,-597.79998779,2596.19995117,64.90000153,0.00000000,0.00000000,89.00000000); //object(cr_door_03) (2)
CreateDynamicObject(2596,-583.19921875,2588.29980469,67.59999847,0.00000000,0.00000000,270.00000000); //object(cj_sex_tv) (1)
CreateDynamicObject(1616,-583.29998779,2584.30004883,68.59999847,0.00000000,0.00000000,358.25000000); //object(nt_securecam1_01) (1)
CreateDynamicObject(2942,-589.40002441,2589.69995117,65.50000000,0.00000000,0.00000000,0.00000000); //object(kmb_atm1) (1)
CreateDynamicObject(2942,-588.59997559,2589.69995117,65.50000000,0.00000000,0.00000000,0.00000000); //object(kmb_atm1) (2)
CreateDynamicObject(2942,-587.79998779,2589.69995117,65.50000000,0.00000000,0.00000000,0.00000000); //object(kmb_atm1) (3)
CreateDynamicObject(2942,-587.00000000,2589.69995117,65.50000000,0.00000000,0.00000000,0.00000000); //object(kmb_atm1) (4)
CreateDynamicObject(2951,-580.19921875,2585.00000000,64.80000305,0.00000000,0.00000000,0.00000000); //object(a51_labdoor) (1)
CreateDynamicObject(2951,-580.20001221,2586.69995117,64.80000305,0.00000000,0.00000000,0.00000000); //object(a51_labdoor) (2)
CreateDynamicObject(2951,-578.50000000,2585.80004883,64.80000305,0.00000000,0.00000000,91.50000000); //object(a51_labdoor) (3)
CreateDynamicObject(2951,-580.20001221,2587.60009766,68.00000000,88.99984741,180.00000000,179.99963379); //object(a51_labdoor) (4)
CreateDynamicObject(1491,-582.40002441,2586.60009766,64.59999847,0.00000000,0.00000000,270.00000000); //object(gen_doorint01) (1)
CreateDynamicObject(2332,-578.50000000,2585.89990234,65.80000305,0.00000000,0.00000000,271.99951172); //object(kev_safe) (13)
CreateDynamicObject(2332,-578.40002441,2585.89990234,66.69999695,0.00000000,0.00000000,271.99951172); //object(kev_safe) (14)
CreateDynamicObject(2332,-579.29998779,2586.80004883,66.69999695,0.00000000,0.00000000,359.74951172); //object(kev_safe) (16)
CreateDynamicObject(2332,-579.29998779,2586.80004883,65.69999695,0.00000000,0.00000000,359.74731445); //object(kev_safe) (17)
CreateDynamicObject(2332,-579.29998779,2584.89990234,65.69999695,0.00000000,0.00000000,179.99731445); //object(kev_safe) (18)
CreateDynamicObject(2332,-579.29998779,2584.89990234,66.59999847,0.00000000,0.00000000,179.99450684); //object(kev_safe) (19)
CreateDynamicObject(2951,-582.40002441,2586.10009766,67.09999847,0.00000000,0.00000000,91.49963379); //object(a51_labdoor) (6)
CreateDynamicObject(14639,-569.00000000,2608.39990234,66.19999695,0.00000000,0.00000000,0.00000000); //object(tr_man_main) (1)
CreateDynamicObject(3851,-558.50000000,2585.89990234,67.19999695,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx) (1)
CreateDynamicObject(3851,-558.50000000,2585.89941406,67.19999695,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,-558.50000000,2585.80004883,67.19999695,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,-558.50000000,2585.79980469,67.19999695,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx) (4)
CreateDynamicObject(2205,-564.00000000,2604.30004883,64.80000305,0.00000000,0.00000000,90.25000000); //object(med_office8_desk_1) (1)
CreateDynamicObject(2205,-564.00000000,2602.00000000,64.80000305,0.00000000,0.00000000,90.00000000); //object(med_office8_desk_1) (2)
CreateDynamicObject(2205,-564.00000000,2599.69921875,64.80000305,0.00000000,0.00000000,90.00000000); //object(med_office8_desk_1) (3)
CreateDynamicObject(2205,-564.00000000,2597.39990234,64.80000305,0.00000000,0.00000000,90.00000000); //object(med_office8_desk_1) (4)
CreateDynamicObject(2205,-561.59997559,2597.39990234,64.80000305,0.00000000,0.00000000,180.00000000); //object(med_office8_desk_1) (5)
CreateDynamicObject(2205,-559.29998779,2597.39990234,64.80000305,0.00000000,0.00000000,179.99450684); //object(med_office8_desk_1) (6)
CreateDynamicObject(2205,-557.00000000,2597.39990234,64.80000305,0.00000000,0.00000000,179.99450684); //object(med_office8_desk_1) (7)
CreateDynamicObject(2205,-554.70001221,2597.39990234,64.80000305,0.00000000,0.00000000,179.99450684); //object(med_office8_desk_1) (8)
CreateDynamicObject(2205,-552.40002441,2597.39990234,64.80000305,0.00000000,0.00000000,179.99450684); //object(med_office8_desk_1) (9)
CreateDynamicObject(18001,-564.50000000,2601.00000000,66.40000153,0.00000000,0.00000000,270.00000000); //object(int_barbera07) (2)
CreateDynamicObject(18001,-564.50000000,2601.00000000,66.40000153,0.00000000,0.00000000,90.50000000); //object(int_barbera07) (3)
CreateDynamicObject(18001,-560.40002441,2596.89990234,66.40000153,0.00000000,0.00000000,359.99731445); //object(int_barbera07) (4)
CreateDynamicObject(18001,-552.40002441,2596.89990234,66.40000153,0.00000000,0.00000000,359.99462891); //object(int_barbera07) (5)
CreateDynamicObject(18001,-552.40002441,2596.89990234,66.40000153,0.00000000,0.00000000,359.49462891); //object(int_barbera07) (6)
CreateDynamicObject(18001,-560.39941406,2596.89941406,66.40000153,0.00000000,0.00000000,179.49450684); //object(int_barbera07) (7)
CreateDynamicObject(18001,-552.29998779,2596.89990234,66.40000153,0.00000000,0.00000000,180.48913574); //object(int_barbera07) (8)
CreateDynamicObject(2190,-555.29998779,2597.10009766,65.69999695,0.00000000,0.00000000,181.00000000); //object(pc_1) (1)
CreateDynamicObject(2190,-557.70001221,2597.19995117,65.69999695,0.00000000,0.00000000,179.99975586); //object(pc_1) (2)
CreateDynamicObject(2190,-560.00000000,2597.19995117,65.69999695,0.00000000,0.00000000,179.99450684); //object(pc_1) (3)
CreateDynamicObject(2190,-562.29998779,2597.19995117,65.69999695,0.00000000,0.00000000,179.99450684); //object(pc_1) (4)
CreateDynamicObject(2190,-564.29998779,2598.50000000,65.69999695,0.00000000,0.00000000,90.24450684); //object(pc_1) (5)
CreateDynamicObject(2190,-564.29998779,2600.30004883,65.69999695,0.00000000,0.00000000,90.99169922); //object(pc_1) (6)
CreateDynamicObject(2190,-564.29998779,2602.69995117,65.69999695,0.00000000,0.00000000,90.98876953); //object(pc_1) (7)
CreateDynamicObject(2190,-564.29998779,2605.00000000,65.69999695,0.00000000,0.00000000,90.98876953); //object(pc_1) (8)
CreateDynamicObject(1715,-555.09997559,2598.89990234,64.90000153,0.00000000,0.00000000,357.75000000); //object(kb_swivelchair2) (1)
CreateDynamicObject(1715,-558.00000000,2598.80004883,64.90000153,0.00000000,0.00000000,37.74780273); //object(kb_swivelchair2) (2)
CreateDynamicObject(1715,-559.59997559,2598.80004883,64.90000153,0.00000000,0.00000000,313.74353027); //object(kb_swivelchair2) (3)
CreateDynamicObject(1715,-561.79998779,2599.00000000,64.90000153,0.00000000,0.00000000,336.74206543); //object(kb_swivelchair2) (4)
CreateDynamicObject(1715,-562.90002441,2599.19995117,64.90000153,0.00000000,0.00000000,313.99194336); //object(kb_swivelchair2) (5)
CreateDynamicObject(1715,-562.79998779,2600.50000000,64.90000153,0.00000000,0.00000000,269.98925781); //object(kb_swivelchair2) (6)
CreateDynamicObject(1715,-562.59997559,2602.50000000,64.90000153,0.00000000,0.00000000,269.98901367); //object(kb_swivelchair2) (7)
CreateDynamicObject(1715,-562.59997559,2604.89990234,64.90000153,0.00000000,0.00000000,275.48901367); //object(kb_swivelchair2) (8)
CreateDynamicObject(2773,-573.90002441,2598.00000000,65.50000000,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
CreateDynamicObject(2773,-572.09997559,2598.00000000,65.50000000,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (2)
CreateDynamicObject(2773,-572.09997559,2599.89990234,65.50000000,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (3)
CreateDynamicObject(2773,-573.90002441,2599.89990234,65.50000000,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (4)
CreateDynamicObject(2773,-573.90002441,2601.80004883,65.50000000,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (5)
CreateDynamicObject(2773,-573.90002441,2603.69995117,65.50000000,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (6)
CreateDynamicObject(2773,-572.90002441,2604.60009766,65.50000000,0.00000000,0.00000000,87.00000000); //object(cj_airprt_bar) (7)
CreateDynamicObject(2773,-572.09997559,2601.80004883,65.50000000,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (8)
CreateDynamicObject(2773,-571.00000000,2604.50000000,65.50000000,0.00000000,0.00000000,86.99523926); //object(cj_airprt_bar) (10)
CreateDynamicObject(2773,-570.09997559,2603.50000000,65.50000000,0.00000000,0.00000000,358.00000000); //object(cj_airprt_bar) (11)
CreateDynamicObject(2773,-570.20001221,2601.60009766,65.50000000,0.00000000,0.00000000,355.74499512); //object(cj_airprt_bar) (12)
CreateDynamicObject(2773,-570.29998779,2599.69995117,65.50000000,0.00000000,0.00000000,358.24279785); //object(cj_airprt_bar) (13)
CreateDynamicObject(2773,-571.09997559,2597.10009766,65.50000000,0.00000000,0.00000000,93.99523926); //object(cj_airprt_bar) (14)
CreateDynamicObject(2773,-569.20001221,2597.19995117,65.50000000,0.00000000,0.00000000,91.49353027); //object(cj_airprt_bar) (15)
CreateDynamicObject(2773,-568.20001221,2598.19995117,65.50000000,0.00000000,0.00000000,356.49218750); //object(cj_airprt_bar) (16)
CreateDynamicObject(2773,-568.09997559,2600.10009766,65.50000000,0.00000000,0.00000000,356.48986816); //object(cj_airprt_bar) (17)
CreateDynamicObject(2773,-568.00000000,2602.00000000,65.50000000,0.00000000,0.00000000,357.98986816); //object(cj_airprt_bar) (18)
CreateDynamicObject(2773,-569.09997559,2604.39990234,65.50000000,0.00000000,0.00000000,86.99523926); //object(cj_airprt_bar) (19)
CreateDynamicObject(2001,-575.00000000,2597.50000000,64.90000153,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (1)
CreateDynamicObject(2001,-575.29998779,2606.19995117,64.90000153,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (2)
CreateDynamicObject(2001,-572.70001221,2608.39990234,64.90000153,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (3)
CreateDynamicObject(2001,-565.00000000,2608.19995117,64.90000153,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (4)
CreateDynamicObject(2251,-575.20001221,2598.30004883,68.30000305,0.00000000,0.00000000,88.50000000); //object(plant_pot_20) (1)
CreateDynamicObject(2251,-575.09997559,2605.19995117,68.30000305,0.00000000,0.00000000,88.49487305); //object(plant_pot_20) (2)
CreateDynamicObject(2254,-571.50000000,2608.89990234,68.19999695,0.00000000,0.00000000,0.00000000); //object(frame_clip_1) (1)
CreateDynamicObject(3439,-571.40002441,2585.60009766,67.69999695,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (1)
CreateDynamicObject(3439,-565.59997559,2585.60009766,67.69999695,0.00000000,0.00000000,106.75000000); //object(aprtree01_lvs) (2)
CreateDynamicObject(18014,-553.09997559,2593.69995117,65.30000305,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (1)
CreateDynamicObject(18014,-553.09997559,2589.10009766,65.30000305,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (2)
CreateDynamicObject(3657,-562.20001221,2594.19995117,65.40000153,0.00000000,0.00000000,179.25000000); //object(airseata_las) (1)
CreateDynamicObject(3657,-556.79998779,2594.19995117,65.40000153,0.00000000,0.00000000,179.99462891); //object(airseata_las) (2)
CreateDynamicObject(3657,-562.20001221,2592.60009766,65.40000153,0.00000000,0.00000000,179.24743652); //object(airseata_las) (3)
CreateDynamicObject(3657,-562.20001221,2591.19995117,65.40000153,0.00000000,0.00000000,179.24743652); //object(airseata_las) (4)
CreateDynamicObject(3657,-562.20001221,2589.69995117,65.40000153,0.00000000,0.00000000,179.24743652); //object(airseata_las) (5)
CreateDynamicObject(3657,-556.79998779,2592.69995117,65.40000153,0.00000000,0.00000000,179.99450684); //object(airseata_las) (6)
CreateDynamicObject(3657,-556.79998779,2591.19995117,65.40000153,0.00000000,0.00000000,179.99450684); //object(airseata_las) (7)
CreateDynamicObject(3657,-556.79998779,2589.69995117,65.40000153,0.00000000,0.00000000,179.99450684); //object(airseata_las) (8)
CreateDynamicObject(2700,-569.29998779,2608.60009766,68.59999847,0.00000000,0.00000000,268.00000000); //object(cj_sex_tv2) (1)
CreateDynamicObject(2942,-555.09997559,2586.39990234,65.50000000,0.00000000,0.00000000,180.75000000); //object(kmb_atm1) (5)
CreateDynamicObject(2942,-557.59997559,2586.30004883,65.50000000,0.00000000,0.00000000,180.74707031); //object(kmb_atm1) (6)
CreateDynamicObject(2942,-562.29998779,2586.30004883,65.50000000,0.00000000,0.00000000,180.74707031); //object(kmb_atm1) (7)
CreateDynamicObject(2942,-559.79998779,2586.30004883,65.50000000,0.00000000,0.00000000,180.74707031); //object(kmb_atm1) (8)
CreateDynamicObject(1616,-565.00000000,2586.30004883,69.00000000,0.00000000,0.00000000,264.00000000); //object(nt_securecam1_01) (2)
CreateDynamicObject(3851,-570.00000000,2585.19995117,67.19999695,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-576.09997559,2582.89990234,67.19999695,0.00000000,0.00000000,0.25000000); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-576.79998779,2590.00000000,67.19999695,0.00000000,0.00000000,0.24719238); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-575.59997559,2602.00000000,67.19999695,0.00000000,0.00000000,0.24719238); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-575.29998779,2607.00000000,67.59999847,0.00000000,0.00000000,317.49719238); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-568.09997559,2609.00000000,67.19999695,0.00000000,0.00000000,270.24389648); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-568.09960938,2609.00000000,67.19999695,0.00000000,0.00000000,270.24169922); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-558.29998779,2607.60009766,67.19999695,0.00000000,0.00000000,247.74169922); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-556.29998779,2606.30004883,67.19999695,0.00000000,0.00000000,235.73620605); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-553.59997559,2603.39990234,67.19999695,0.00000000,0.00000000,194.48364258); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-553.90002441,2603.30004883,67.19999695,0.00000000,0.00000000,216.22998047); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-559.70001221,2585.80004883,67.19999695,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-576.50000000,2583.50000000,67.19999695,0.00000000,0.00000000,0.24719238); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-575.50000000,2581.19995117,67.19999695,0.00000000,0.00000000,0.24719238); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-576.09997559,2599.89990234,67.19999695,0.00000000,0.00000000,0.24719238); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-576.40002441,2599.89990234,67.19999695,0.00000000,0.00000000,0.24719238); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,-575.90002441,2601.60009766,67.19999695,0.00000000,0.00000000,0.24719238); //object(carshowwin_sfsx) (4)

// Banco LS - Int
CreateDynamicObject(14576,2396.55761719,2472.64550781,-11.84003258,0.00000000,0.00000000,0.00000000); //object(vault_door) (1)
CreateDynamicObject(2332,2394.93286133,2496.37695312,-17.36824226,0.00000000,0.00000000,0.00000000); //object(kev_safe) (3)
CreateDynamicObject(2332,2394.91870117,2496.37695312,-18.40102005,0.00000000,0.00000000,0.00000000); //object(kev_safe) (4)
CreateDynamicObject(2332,2395.89355469,2496.37695312,-17.36824226,0.00000000,0.00000000,0.00000000); //object(kev_safe) (5)
CreateDynamicObject(2332,2395.95166016,2496.37695312,-18.40102005,0.00000000,0.00000000,0.00000000); //object(kev_safe) (6)
CreateDynamicObject(2332,2396.95336914,2496.37695312,-17.36824226,0.00000000,0.00000000,0.00000000); //object(kev_safe) (7)
CreateDynamicObject(2332,2396.99707031,2496.37695312,-18.40102005,0.00000000,0.00000000,0.00000000); //object(kev_safe) (8)
CreateDynamicObject(2332,2398.00732422,2496.37695312,-17.36824226,0.00000000,0.00000000,0.00000000); //object(kev_safe) (9)
CreateDynamicObject(2332,2398.09594727,2496.37695312,-18.40102005,0.00000000,0.00000000,0.00000000); //object(kev_safe) (10)
CreateDynamicObject(7191,2402.85937500,2467.68334961,-18.05999947,0.00000000,0.00000000,0.25000000); //object(vegasnnewfence2b) (2)
CreateDynamicObject(1649,2388.46972656,2468.13867188,-18.44393349,0.00000000,0.00000000,90.49987793); //object(wglasssmash) (1)
CreateDynamicObject(1649,2388.46972656,2473.35156250,-18.44393349,0.00000000,0.00000000,90.49438477); //object(wglasssmash) (2)
CreateDynamicObject(1649,2388.46972656,2462.79101562,-18.39393425,0.00000000,0.00000000,90.48889160); //object(wglasssmash) (3)
CreateDynamicObject(2591,2386.72851562,2466.11401367,-18.20777702,0.00000000,0.00000000,271.75000000); //object(ab_partition1) (1)
CreateDynamicObject(1649,2388.46972656,2473.16992188,-18.44393349,0.00000000,0.00000000,269.24194336); //object(wglasssmash) (2)
CreateDynamicObject(1649,2388.46972656,2468.13427734,-18.44393349,0.00000000,0.00000000,269.24438477); //object(wglasssmash) (2)
CreateDynamicObject(1649,2388.24145508,2462.81762695,-18.24393654,0.00000000,0.00000000,269.24194336); //object(wglasssmash) (2)
CreateDynamicObject(2591,2383.22509766,2466.06030273,-18.23277664,0.00000000,0.00000000,90.99682617); //object(ab_partition1) (2)
CreateDynamicObject(2606,2387.92163086,2470.72021484,-17.13435555,0.00000000,0.00000000,268.00000000); //object(cj_police_counter2) (1)
CreateDynamicObject(2608,2386.55981445,2467.04223633,-19.19820786,0.00000000,0.00000000,180.00000000); //object(polce_shelf) (1)
CreateDynamicObject(2608,2384.02856445,2467.04223633,-19.19820786,0.00000000,0.00000000,179.99450684); //object(polce_shelf) (2)
CreateDynamicObject(2610,2382.32373047,2469.44506836,-19.20921707,0.00000000,0.00000000,90.00000000); //object(cj_p_fileing2) (1)
CreateDynamicObject(2610,2382.31982422,2469.93920898,-19.20921707,0.00000000,0.00000000,90.00000000); //object(cj_p_fileing2) (2)
CreateDynamicObject(2610,2382.32153320,2470.42797852,-19.20921707,0.00000000,0.00000000,90.00000000); //object(cj_p_fileing2) (3)
CreateDynamicObject(2610,2382.32348633,2470.90771484,-19.20921707,0.00000000,0.00000000,90.00000000); //object(cj_p_fileing2) (4)
CreateDynamicObject(2610,2382.32543945,2471.40576172,-19.20921707,0.00000000,0.00000000,90.00000000); //object(cj_p_fileing2) (5)
CreateDynamicObject(2610,2382.32739258,2471.88549805,-19.20921707,0.00000000,0.00000000,90.00000000); //object(cj_p_fileing2) (6)
CreateDynamicObject(2610,2382.31567383,2468.94311523,-19.20921707,0.00000000,0.00000000,90.00000000); //object(cj_p_fileing2) (7)
CreateDynamicObject(1757,2383.93408203,2479.66625977,-19.90967941,0.00000000,0.00000000,0.24755859); //object(low_couch_5) (1)
CreateDynamicObject(644,2382.26245117,2473.02661133,-19.90967941,0.00000000,0.00000000,0.00000000); //object(pot_02) (2)
CreateDynamicObject(646,2388.73706055,2460.84912109,-18.64315224,0.00000000,0.00000000,0.00000000); //object(veg_palmkb14) (2)
CreateDynamicObject(2435,2392.09082031,2475.25952148,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (1)
CreateDynamicObject(2435,2393.02832031,2475.25952148,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (2)
CreateDynamicObject(2435,2393.91699219,2475.25952148,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (3)
CreateDynamicObject(2435,2394.85717773,2475.25952148,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (4)
CreateDynamicObject(2435,2395.79174805,2475.25952148,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (5)
CreateDynamicObject(2435,2396.71801758,2475.25952148,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (6)
CreateDynamicObject(2435,2397.65966797,2475.26879883,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (7)
CreateDynamicObject(2435,2398.58544922,2475.27197266,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (8)
CreateDynamicObject(2435,2399.50634766,2475.27783203,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (9)
CreateDynamicObject(2435,2400.42187500,2475.28588867,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (10)
CreateDynamicObject(2434,2401.33154297,2475.29663086,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2b) (1)
CreateDynamicObject(2435,2391.14868164,2475.25854492,-19.90967941,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (13)
CreateDynamicObject(1649,2388.48730469,2480.25512695,-18.35404205,0.00000000,0.00000000,269.24194336); //object(wglasssmash) (2)
CreateDynamicObject(1649,2388.51269531,2480.18920898,-18.35404205,0.00000000,0.00000000,90.49438477); //object(wglasssmash) (3)
CreateDynamicObject(1491,2388.50317383,2478.04443359,-19.90967941,0.00000000,0.00000000,270.00000000); //object(gen_doorint01) (1)
CreateDynamicObject(1361,2401.82934570,2470.69482422,-19.29133415,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (1)
CreateDynamicObject(1361,2401.75073242,2465.76098633,-19.29133415,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (2)
CreateDynamicObject(1361,2401.91772461,2460.77221680,-19.29133415,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (3)
CreateDynamicObject(2773,2401.66650391,2468.16748047,-19.39245033,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
CreateDynamicObject(2773,2401.64404297,2463.16967773,-19.39245033,0.00000000,0.00000000,359.50000000); //object(cj_airprt_bar) (2)
CreateDynamicObject(2773,2401.43139648,2473.01635742,-19.39245033,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (3)
CreateDynamicObject(1557,2395.14038086,2460.06494141,-20.10967636,0.00000000,0.00000000,359.25000000); //object(gen_doorext19) (1)
CreateDynamicObject(1557,2398.16943359,2460.01513672,-20.10967636,0.00000000,0.00000000,179.24743652); //object(gen_doorext19) (2)
CreateDynamicObject(1649,2396.66284180,2460.03247070,-16.31896591,0.00000000,0.00000000,180.23889160); //object(wglasssmash) (3)
CreateDynamicObject(3851,2396.38427734,2475.29663086,-16.25970459,0.00000000,0.00000000,90.24719238); //object(carshowwin_sfsx) (2)
CreateDynamicObject(2190,2400.23510742,2475.10375977,-18.85411072,0.00000000,0.00000000,202.00000000); //object(pc_1) (1)
CreateDynamicObject(2190,2396.80517578,2475.38061523,-18.85411072,0.00000000,0.00000000,132.24462891); //object(pc_1) (2)
CreateDynamicObject(2190,2392.82153320,2475.32324219,-18.85411072,0.00000000,0.00000000,132.24243164); //object(pc_1) (3)
CreateDynamicObject(2894,2393.99462891,2475.35766602,-18.85411072,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook) (1)
CreateDynamicObject(2894,2398.81372070,2475.38208008,-18.85411072,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook) (2)
CreateDynamicObject(2356,2393.61694336,2477.12841797,-19.90967941,0.00000000,0.00000000,180.00000000); //object(police_off_chair) (1)
CreateDynamicObject(2356,2397.32836914,2477.10351562,-19.90967941,0.00000000,0.00000000,179.99450684); //object(police_off_chair) (2)
CreateDynamicObject(2356,2399.65234375,2477.15478516,-19.90967941,0.00000000,0.00000000,179.99450684); //object(police_off_chair) (3)
CreateDynamicObject(2605,2383.99707031,2473.26708984,-19.51124191,0.00000000,0.00000000,0.00000000); //object(polce_desk1) (1)
CreateDynamicObject(2194,2401.14770508,2475.88452148,-18.59814072,0.00000000,0.00000000,0.00000000); //object(plant_pot_2) (1)
CreateDynamicObject(2194,2395.47412109,2475.50756836,-18.57314110,0.00000000,0.00000000,0.00000000); //object(plant_pot_2) (2)
CreateDynamicObject(638,2388.77368164,2468.22338867,-19.61264038,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (2)
CreateDynamicObject(638,2388.90136719,2473.19824219,-19.61264038,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (3)
CreateDynamicObject(2942,2388.82104492,2462.00488281,-19.26678085,0.00000000,0.00000000,89.25000000); //object(kmb_atm1) (1)
CreateDynamicObject(2942,2388.84204102,2463.08447266,-19.26678085,0.00000000,0.00000000,89.24743652); //object(kmb_atm1) (2)
CreateDynamicObject(2942,2388.80151367,2464.22631836,-19.26678085,0.00000000,0.00000000,89.24743652); //object(kmb_atm1) (3)
CreateDynamicObject(3657,2398.07421875,2470.46459961,-19.39146805,0.00000000,0.00000000,180.00000000); //object(airseata_las) (1)
CreateDynamicObject(3657,2398.03320312,2467.84155273,-19.39146805,0.00000000,0.00000000,179.99450684); //object(airseata_las) (3)
CreateDynamicObject(3657,2398.09228516,2465.45043945,-19.39146805,0.00000000,0.00000000,179.99450684); //object(airseata_las) (4)
CreateDynamicObject(19124,2400.60595703,2465.10205078,-19.34535599,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(19124,2400.64794922,2467.69409180,-19.34535599,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(19124,2400.62524414,2470.29931641,-19.34535599,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1627,2402.40527344,2475.83105469,-18.63280106,0.00000000,0.00000000,0.00000000); //object(nt_alarm3_01) (1)
CreateDynamicObject(2921,2394.34985352,2460.00024414,-15.64488029,0.00000000,0.00000000,275.00000000); //object(kmb_cam) (1)
CreateDynamicObject(2921,2399.89355469,2480.73535156,-15.97041988,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (2)
CreateDynamicObject(2921,2402.71215820,2479.25000000,-16.33339500,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (4)
CreateDynamicObject(2921,2388.44531250,2466.41308594,-17.06624794,0.00000000,0.00000000,350.00000000); //object(kmb_cam) (3)
CreateDynamicObject(2356, 2383.64, 2472.07, -19.91,   0.00, 0.00, 317.40);
//CAJEROS AYUNYA
CreateDynamicObject(2942, 1505.34, -1755.39, 13.00,   0.00, 0.00, 178.88);
CreateDynamicObject(2942, 1457.01, -1755.32, 13.00,   0.00, 0.00, 180.23);
// Iglesia
CreateDynamicObject(9931,1486.55859375,837.69335938,-53.95624542,0.00000000,0.00000000,180.99975586); //object(church_sfe) (2)
CreateDynamicObject(9931,1485.95117188,870.78906250,-53.95635223,0.00000000,0.00000000,180.99975586); //object(church_sfe) (3)
CreateDynamicObject(3976,1489.52539062,835.36523438,-53.31316376,0.00000000,0.00000000,90.98876953); //object(policest02_lan) (1)
CreateDynamicObject(3976,1448.45214844,854.00976562,-49.58849335,0.00000000,0.00000000,180.24719238); //object(policest02_lan) (2)
CreateDynamicObject(11472,1492.43750000,854.27636719,-70.11368561,0.00000000,268.49768066,0.99975586); //object(des_swtstairs1) (2)
CreateDynamicObject(11472,1489.43359375,854.22167969,-70.18869019,0.00000000,268.24768066,0.99975586); //object(des_swtstairs1) (3)
CreateDynamicObject(6959,1480.74401855,851.49420166,-54.48571777,0.00000000,0.00000000,0.00000000); //object(vegasnbball1) (1)
CreateDynamicObject(2960,1491.72595215,854.18212891,-64.32915497,0.02041626,270.74963379,1.99993896); //object(kmb_beam) (2)
CreateDynamicObject(2960,1491.72863770,854.18023682,-65.28768158,0.02041626,270.74963379,1.99993896); //object(kmb_beam) (3)
CreateDynamicObject(2960,1491.70715332,854.12542725,-63.57369995,88.52954102,210.79498291,60.94931030); //object(kmb_beam) (4)
CreateDynamicObject(1698,1486.35900879,853.74407959,-70.09292603,0.00000000,0.00000000,0.25000000); //object(esc_step8) (1)
CreateDynamicObject(1698,1486.70971680,853.75299072,-69.92232513,0.00000000,0.00000000,0.25000000); //object(esc_step8) (2)
CreateDynamicObject(2946,1464.31726074,852.26568604,-70.05713654,0.00000000,0.00000000,359.75000000); //object(cr_door_03) (1)
CreateDynamicObject(2946,1464.34863281,855.48071289,-70.06368256,0.00000000,0.00000000,179.75000000); //object(cr_door_03) (2)
CreateDynamicObject(3872,1494.89172363,854.16369629,-60.79240799,0.00000000,145.24475098,0.00000000); //object(ws_floodbeams) (1)
CreateDynamicObject(3657,1478.32458496,857.01525879,-69.59547424,0.00000000,0.00000000,88.75000000); //object(airseata_las) (1)
CreateDynamicObject(3657,1476.19604492,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (2)
CreateDynamicObject(3657,1473.94482422,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (3)
CreateDynamicObject(3657,1471.98486328,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (4)
CreateDynamicObject(3657,1471.85913086,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (5)
CreateDynamicObject(3657,1473.80468750,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (6)
CreateDynamicObject(3657,1475.80883789,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (7)
CreateDynamicObject(3657,1478.21154785,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (8)
CreateDynamicObject(3439,1491.20922852,861.81793213,-66.00033569,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (1)
CreateDynamicObject(3439,1491.57543945,846.41058350,-66.00033569,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (2)
CreateDynamicObject(3462,1489.42199707,850.11035156,-67.92717743,0.00000000,0.00000000,0.25000000); //object(csrangel_lvs) (1)
CreateDynamicObject(3462,1489.32116699,857.82922363,-67.92613983,0.00000000,0.00000000,1.00000000); //object(csrangel_lvs) (2)
CreateDynamicObject(2868,1488.90454102,854.85382080,-68.58234406,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (1)
CreateDynamicObject(2868,1488.88110352,852.93615723,-68.55734253,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (2)
CreateDynamicObject(2207,1488.21228027,854.76940918,-69.36368561,0.00000000,0.00000000,269.75000000); //object(med_office7_desk_1) (1)
CreateDynamicObject(2894,1488.26757812,853.82714844,-68.58631134,0.00000000,0.00000000,270.00000000); //object(kmb_rhymesbook) (2)
CreateDynamicObject(2842,1484.55505371,853.26849365,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (1)
CreateDynamicObject(2842,1482.72216797,853.27215576,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (2)
CreateDynamicObject(2842,1480.89453125,853.28710938,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (3)
CreateDynamicObject(2842,1479.06896973,853.28985596,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (4)
CreateDynamicObject(2842,1477.25146484,853.28991699,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (5)
CreateDynamicObject(2842,1475.41406250,853.28125000,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (6)
CreateDynamicObject(2842,1473.60546875,853.27435303,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (7)
CreateDynamicObject(2842,1471.76989746,853.27740479,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (8)
CreateDynamicObject(2842,1469.94689941,853.26287842,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (9)
CreateDynamicObject(2842,1468.12060547,853.26165771,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (10)
CreateDynamicObject(2842,1466.29992676,853.25488281,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (11)
CreateDynamicObject(2842,1464.47155762,853.24865723,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (12)
CreateDynamicObject(1720,1491.69433594,852.16210938,-69.39298248,0.00000000,0.00000000,269.24743652); //object(rest_chair) (1)
CreateDynamicObject(1720,1491.70898438,851.42382812,-69.39285278,0.00000000,0.00000000,268.74462891); //object(rest_chair) (2)
CreateDynamicObject(948,1556.50170898,907.01184082,-83.20445251,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (1)
CreateDynamicObject(948,1486.81567383,858.92468262,-69.51581573,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (2)
CreateDynamicObject(948,1486.97290039,848.90582275,-69.51637268,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (3)
CreateDynamicObject(949,1472.10925293,861.92718506,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (1)
CreateDynamicObject(949,1478.15686035,861.93243408,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (2)
CreateDynamicObject(949,1477.97363281,846.08349609,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (3)
CreateDynamicObject(949,1471.76525879,845.77685547,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (4)
CreateDynamicObject(949,1467.48242188,856.13964844,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (5)
CreateDynamicObject(949,1467.33996582,851.61102295,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (6)
CreateDynamicObject(2842,1486.79052734,853.30078125,-69.51958466,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (13)
CreateDynamicObject(2842,1487.91479492,853.29595947,-69.48745728,0.00000000,356.00000000,0.00000000); //object(gb_bedrug04) (14)
CreateDynamicObject(3440,1468.04956055,846.46435547,-67.73719025,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (1)
CreateDynamicObject(3440,1468.30798340,861.13378906,-67.73719025,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (2)
CreateDynamicObject(19124,1468.03002930,846.44238281,-65.06007385,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(19124,1468.33190918,861.07635498,-65.01007080,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(3657,1481.19042969,857.01464844,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (10)
CreateDynamicObject(3657,1481.05957031,850.52734375,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (11)
CreateDynamicObject(970,1488.38928223,860.21148682,-68.91707611,0.00000000,0.00000000,0.25000000); //object(fencesmallb) (1)
CreateDynamicObject(970,1488.60888672,847.72064209,-68.99224854,0.00000000,0.00000000,1.74682617); //object(fencesmallb) (2)
CreateDynamicObject(970,1486.54992676,849.75415039,-68.98716736,0.00000000,0.00000000,270.99682617); //object(fencesmallb) (3)
CreateDynamicObject(970,1486.34521484,858.05175781,-68.97917175,0.00000000,0.00000000,270.99426270); //object(fencesmallb) (4)
CreateDynamicObject(19124,1491.28063965,859.75567627,-68.83144379,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(19124,1491.49182129,848.65087891,-68.83090973,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	// -====================== LSPD Interior (by CodeMan) =============================-
	CreateDynamicObject(2886, 244.84130859375, 77.09822845459, 1003.8363037109, 0, 0, 90, 0, 6);
	CreateDynamicObject(2886, 247.96560668945, 74.597625732422, 1003.8363037109, 0, 0, 270, 0, 6);
	CreateDynamicObject(2886, 226.36407470703, 73.719345092773, 1005.2398681641, 0, 0, 90, 0, 6);
	CreateDynamicObject(2615, 216.92349243164, 67.561538696289, 1005.8748779297, 0, 0, 90.030029296875, 0, 6);
	CreateDynamicObject(2612, 220.72543334961, 72.770309448242, 1006.1749267578, 0, 0, 0, 0, 6);
	CreateDynamicObject(2616, 216.97341918945, 70.674957275391, 1005.9150390625, 0, 0, 90.060028076172, 0, 6);
	CreateDynamicObject(2614, 221.81564331055, 67.515487670898, 1005.6319580078, 0, 0, 269.96008300781, 0, 6);
	CreateDynamicObject(1810, 220.21421813965, 67.719902038574, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.2138671875, 69.069717407227, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.2138671875, 70.769348144531, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.2138671875, 72.093589782715, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 72.0927734375, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 70.667762756348, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 69.016967773438, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 67.666595458984, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 66.266036987305, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.18887329102, 66.265625, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(2180, 255.23165893555, 82.261199951172, 1001.4453125, 0, 0, 90, 0, 6);
	CreateDynamicObject(2180, 255.2314453125, 84.18579864502, 1001.4453125, 0, 0, 90, 0, 6);
	CreateDynamicObject(2180, 255.2314453125, 86.085540771484, 1001.4453125, 0, 0, 90, 0, 6);
	CreateDynamicObject(2073, 255.19268798828, 83.772262573242, 1004.3923950195, 0, 0, 0, 0, 6);
	CreateDynamicObject(2073, 255.1923828125, 87.521484375, 1004.3923950195, 0, 0, 0, 0, 6);
	CreateDynamicObject(2121, 256.74890136719, 82.969360351563, 1001.9585571289, 0, 0, 270, 0, 6);
	CreateDynamicObject(2121, 256.748046875, 84.793815612793, 1001.9585571289, 0, 0, 270, 0, 6);
	CreateDynamicObject(2121, 256.748046875, 86.717994689941, 1001.9585571289, 0, 0, 270, 0, 6);
	CreateDynamicObject(2121, 253.64807128906, 82.96875, 1001.9585571289, 0, 0, 90, 0, 6);
	CreateDynamicObject(2121, 253.6474609375, 84.69376373291, 1001.9585571289, 0, 0, 90, 0, 6);
	CreateDynamicObject(2121, 253.6474609375, 86.593383789063, 1001.9585571289, 0, 0, 90, 0, 6);
	CreateDynamicObject(1649, 255.92436218262, 83.734672546387, 1003.0633544922, 0, 0, 0, 0, 6);
	CreateDynamicObject(1649, 255.923828125, 83.909400939941, 1003.0633544922, 0, 0, 180, 0, 6);
	CreateDynamicObject(1649, 255.923828125, 85.683441162109, 1003.0633544922, 0, 0, 179.99450683594, 0, 6);
	CreateDynamicObject(1649, 255.923828125, 85.859474182129, 1003.0633544922, 0, 0, 0, 0, 6);
	CreateDynamicObject(2922, 250.87344360352, 88.255447387695, 1003.1617431641, 0, 0, 272.65997314453, 0, 6);
	CreateDynamicObject(2966, 255.19311523438, 86.556129455566, 1002.2766723633, 0, 0, 0, 0, 6);
	CreateDynamicObject(2967, 255.20861816406, 84.935287475586, 1002.2469482422, 0, 0, 0, 0, 6);
	CreateDynamicObject(2967, 255.14236450195, 82.912994384766, 1002.2469482422, 0, 0, 0, 0, 6);
	CreateDynamicObject(1649, 255.31187438965, 84.655776977539, 1003.1110839844, 0, 0, 89.325012207031, 0, 6);
	CreateDynamicObject(1649, 255.3115234375, 84.6552734375, 1003.1110839844, 0, 0, 272.01943969727, 0, 6);
	CreateDynamicObject(1892, 246.2585144043, 63.024715423584, 1002.640625, 0, 0, 0, 0, 6);
	CreateDynamicObject(1737, 217.97715759277, 76.868797302246, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1649, 218.17239379883, 73.885864257813, 1007.0811767578, 0, 0, 179.98498535156, 0, 6);
	CreateDynamicObject(1737, 217.9765625, 78.418212890625, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.9765625, 79.918060302734, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.02679443359, 79.91796875, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.0263671875, 76.86784362793, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.0263671875, 78.392280578613, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1810, 217.42031860352, 75.677513122559, 1004.0390625, 0, 0, 180, 0, 6);
	CreateDynamicObject(1616, 221.47817993164, 74.085952758789, 1007.4117431641, 0, 0, 0, 0, 6);
	CreateDynamicObject(2595, 217.28680419922, 79.932136535645, 1005.1920166016, 0, 0, 316.32998657227, 0, 6);
	CreateDynamicObject(1665, 217.67994689941, 76.964950561523, 1004.8448486328, 0, 0, 0, 0, 6);
	// -================================= Umbrella 7 HQ (by CodeMan) Interior ==================================-
	CreateDynamicObject(4100, 246.36463928223, 119.71284484863, 1005.1206054688, 0, 0, 320.05004882813, 0, 10);
	CreateDynamicObject(1649, 239.71058654785, 112.79557800293, 1004.1369018555, 0, 0, 87.529998779297, 0, 10);
	CreateDynamicObject(1649, 253.23483276367, 117.16996002197, 1004.1369018555, 0, 0, 270, 0, 10);
	CreateDynamicObject(2412, 247.86611938477, 107.81639862061, 1002.21875, 0, 0, 0, 0, 10);
	CreateDynamicObject(2422, 251.03385925293, 119.36734771729, 1003.4171142578, 0, 0, 135.25006103516, 0, 10);
	CreateDynamicObject(1616, 252.55616760254, 107.15997314453, 1006.358215332, 0, 0, 0, 0, 10);
	CreateDynamicObject(11319, 247.77908325195, 107.32563018799, 1001.8242797852, 0, 0, 0, 0, 10);
	CreateDynamicObject(11319, 244.82836914063, 107.3251953125, 1001.8493041992, 0, 0, 0, 0, 10);
	CreateDynamicObject(2412, 245.49084472656, 107.81639862061, 1002.21875, 0, 0, 0, 0, 10);
	CreateDynamicObject(1649, 246.3212890625, 108.83835601807, 1004.6840820313, 270, 90, 0, 0, 10);
	CreateDynamicObject(1569, 247.81130981445, 110.8671875, 1002.21875, 0, 0, 179.73498535156, 0, 10);
	// -=============================== LSPD Exterior by (Boxter) ==================================-
CreateDynamicObject(19313, 1546.74, -1602.41, 18.99,   0.00, 0.00, 0.00);
CreateDynamicObject(19313, 1560.71, -1602.42, 18.99,   0.00, 0.00, 0.00);
CreateDynamicObject(19313, 1574.72, -1602.48, 18.99,   0.00, 0.00, 0.00);
CreateDynamicObject(19313, 1588.72, -1602.49, 18.99,   0.00, 0.00, 0.00);
CreateDynamicObject(19313, 1608.04, -1609.48, 18.99,   0.00, 0.00, 90.00);
CreateDynamicObject(19313, 1601.06, -1602.45, 18.99,   0.00, 0.00, 0.00);
CreateDynamicObject(19313, 1608.03, -1623.45, 18.99,   0.00, 0.00, 90.00);
CreateDynamicObject(19313, 1604.78, -1638.00, 18.99,   0.00, 90.00, 0.00);
CreateDynamicObject(19313, 1608.04, -1631.00, 18.99,   0.00, 0.00, 90.00);
CreateDynamicObject(19313, 1539.69, -1609.49, 18.99,   0.00, 0.00, 90.00);
CreateDynamicObject(19313, 1539.75, -1636.21, 19.12,   0.00, 90.00, 90.00);
CreateDynamicObject(10401, 1570.03, -1604.84, 14.26,   0.00, 0.00, 44.73);
CreateDynamicObject(10401, 1550.05, -1604.75, 14.26,   0.00, 0.00, 44.73);
CreateDynamicObject(10401, 1593.26, -1613.09, 14.50,   0.00, 0.00, 133.86);
CreateDynamicObject(3660, 1571.55, -1619.35, 14.88,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1553.39, -1619.38, 14.88,   0.00, 0.00, 0.00);
CreateDynamicObject(966, 1588.33, -1619.21, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(968, 1588.38, -1619.13, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1603.40, -1632.74, 12.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1590.53, -1607.78, 12.94,   0.00, 0.00, 90.00);
CreateDynamicObject(3578, 1593.14, -1637.40, 12.94,   0.00, 0.00, 118.11);
CreateDynamicObject(3578, 1595.38, -1632.73, 12.94,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1589.21, -1618.97, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1583.38, -1619.23, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1580.12, -1618.50, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1590.65, -1632.81, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1599.79, -1632.74, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1606.97, -1632.67, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1567.53, -1633.58, 14.88,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1559.40, -1633.58, 14.88,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1573.66, -1633.68, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1563.29, -1633.68, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1553.07, -1633.69, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(3388, 1581.61, -1637.16, 13.69,   0.00, 0.00, 0.00);
CreateDynamicObject(3388, 1581.61, -1636.19, 13.68,   0.00, 0.00, 0.00);
CreateDynamicObject(3386, 1581.61, -1635.25, 13.66,   0.00, 0.00, 0.00);
CreateDynamicObject(3386, 1581.61, -1634.22, 13.66,   0.00, 0.00, 0.00);
CreateDynamicObject(3387, 1577.87, -1633.40, 13.66,   0.00, 0.00, 90.00);
CreateDynamicObject(3387, 1578.86, -1633.36, 13.66,   0.00, 0.00, 90.00);
CreateDynamicObject(2232, 1581.14, -1633.44, 16.22,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 1579.73, -1633.39, 16.24,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 1580.45, -1633.39, 16.19,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 1579.73, -1633.39, 14.21,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 1580.45, -1633.39, 14.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 1581.14, -1633.44, 14.19,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 1579.73, -1633.39, 15.34,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 1580.45, -1633.39, 15.28,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 1581.14, -1633.44, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1671, 1577.84, -1634.37, 12.90,   0.00, 0.00, 182.22);
CreateDynamicObject(1251, 1540.10, -1605.93, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1540.08, -1612.77, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1540.10, -1614.41, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1575.15, -1618.52, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1570.19, -1618.43, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1565.12, -1618.46, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1560.10, -1618.42, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1555.22, -1618.43, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1550.16, -1618.35, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1540.14, -1617.35, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.02, -1618.35, 17.14,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.03, -1619.29, 17.19,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.02, -1620.26, 17.22,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.02, -1621.20, 17.19,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.03, -1622.16, 17.21,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.03, -1622.32, 17.25,   0.00, 0.00, 0.00);
CreateDynamicObject(18766, 1544.62, -1642.81, 16.88,   0.00, 0.00, 359.59);
CreateDynamicObject(18766, 1540.11, -1637.92, 16.72,   0.00, 0.00, 90.00);
CreateDynamicObject(18766, 1544.64, -1642.82, 14.67,   0.00, 0.00, 359.59);
CreateDynamicObject(18766, 1540.11, -1637.90, 14.50,   0.00, 0.00, 90.00);
CreateDynamicObject(18762, 1540.02, -1618.35, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.03, -1619.29, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.02, -1620.26, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.02, -1621.20, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.03, -1622.16, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(18762, 1540.03, -1622.32, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(19313, 1539.66, -1615.60, 18.99,   0.00, 0.00, 90.00);
CreateDynamicObject(19313, 1543.02, -1643.03, 19.06,   0.00, 90.00, 0.00);
CreateDynamicObject(19313, 1539.75, -1639.74, 19.10,   0.00, 90.00, 90.00);
CreateDynamicObject(3578, 1590.53, -1618.06, 12.94,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1542.53, -1640.44, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1553.59, -1653.97, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1550.37, -1650.78, 28.10,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1553.54, -1660.34, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1553.56, -1666.71, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1553.54, -1673.08, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1553.55, -1679.46, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1553.54, -1685.76, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1553.54, -1692.15, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1550.31, -1700.32, 28.10,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1553.54, -1697.09, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1542.58, -1703.60, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1545.75, -1700.32, 28.10,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1542.61, -1710.00, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1542.60, -1711.18, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(982, 1577.84, -1701.61, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1571.44, -1714.40, 28.10,   0.00, 0.00, 90.00);
CreateDynamicObject(982, 1555.42, -1714.40, 28.10,   0.00, 0.00, 90.00);
CreateDynamicObject(982, 1565.03, -1637.23, 28.10,   0.00, 0.00, 90.00);
CreateDynamicObject(982, 1577.82, -1675.98, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(982, 1577.82, -1650.32, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(982, 1577.82, -1650.04, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(982, 1555.32, -1637.26, 28.10,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1545.77, -1650.81, 28.10,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1542.53, -1646.91, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1542.52, -1647.61, 28.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1536, 1558.46, -1675.45, 27.34,   0.00, 0.00, 90.00);
CreateDynamicObject(1536, 1558.47, -1676.97, 27.34,   0.00, 0.00, 90.00);
CreateDynamicObject(18766, 1542.96, -1622.33, 16.72,   0.00, -91.00, 0.06);
CreateDynamicObject(750, 1546.72, -1689.06, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(736, 1546.71, -1692.19, 23.38,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1546.28, -1661.27, 12.65,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1546.04, -1686.53, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1545.95, -1689.86, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1545.92, -1692.77, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1547.27, -1693.70, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1547.56, -1691.62, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1547.75, -1688.28, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1547.48, -1686.27, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1547.52, -1664.89, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1545.90, -1664.96, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1545.89, -1662.46, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1547.53, -1661.98, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1545.66, -1659.85, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1547.43, -1659.09, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1545.81, -1657.48, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1547.56, -1657.50, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(906, 1545.86, -1663.29, 12.92,   0.00, 0.00, -13.38);
CreateDynamicObject(906, 1545.69, -1658.83, 12.92,   0.00, 0.00, 35.82);
CreateDynamicObject(869, 1541.03, -1649.63, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1541.17, -1646.96, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1541.30, -1645.33, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1541.14, -1701.92, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1541.34, -1704.70, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1541.43, -1707.38, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1541.26, -1710.25, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1541.32, -1712.38, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1541.55, -1713.99, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(18766, 1542.98, -1633.40, 16.72,   0.00, -91.00, 0.06);

//=========================biblioteca======================================
CreateDynamicObject(14593,918.29516602,-1019.47717285,15.94318390,0.00000000,0.00000000,182.00000000); //object(paperchase04) (1)
CreateDynamicObject(1533,910.64465332,-1012.42669678,13.62933350,0.00000000,0.00000000,6.00000000); //object(gen_doorext12) (1)
CreateDynamicObject(1753,916.95635986,-1025.74060059,13.59005928,0.00000000,0.00000000,2.00000000); //object(swank_couch_1) (1)
CreateDynamicObject(16780,919.62860107,-1022.84338379,17.08652687,0.00000000,0.00000000,0.00000000); //object(ufo_light03) (1)
CreateDynamicObject(1819,917.45355225,-1028.36352539,13.61505890,0.00000000,0.00000000,0.00000000); //object(coffee_swank_4) (1)
CreateDynamicObject(2291,920.31762695,-1025.57849121,13.61505890,0.00000000,358.00000000,2.00000000); //object(swk_single_1) (1)
CreateDynamicObject(2292,922.28509521,-1029.25915527,13.61505890,0.00000000,0.00000000,182.75000000); //object(swk_single_1b) (1)
CreateDynamicObject(14455,916.75408936,-1030.04028320,15.28681946,0.00000000,0.00000000,1.75000000); //object(gs_bookcase) (1)
CreateDynamicObject(3859,916.03015137,-1027.74230957,14.12677956,0.00000000,0.00000000,17.49572754); //object(ottosmash04) (2)
CreateDynamicObject(3859,918.63269043,-1025.08325195,14.12677956,0.00000000,0.00000000,288.24023438); //object(ottosmash04) (3)
CreateDynamicObject(2280,918.29046631,-1025.58728027,15.76805019,0.00000000,0.00000000,0.00000000); //object(frame_thick_1) (1)
CreateDynamicObject(2267,920.22259521,-1025.08728027,16.06175613,0.00000000,0.00000000,0.00000000); //object(frame_wood_3) (1)
CreateDynamicObject(2256,916.05700684,-1027.85253906,16.28766060,0.00000000,0.00000000,90.75000000); //object(frame_clip_3) (1)
CreateDynamicObject(2509,921.06671143,-1030.24096680,15.87615013,0.00000000,0.00000000,1.99951172); //object(cj_hobby_shelf_6) (8)
CreateDynamicObject(2509,919.76739502,-1030.28637695,15.87851334,0.00000000,0.00000000,1.99951172); //object(cj_hobby_shelf_6) (9)
CreateDynamicObject(2509,918.52972412,-1030.35327148,15.88470840,0.00000000,0.00000000,1.99951172); //object(cj_hobby_shelf_6) (10)
CreateDynamicObject(2509,917.21173096,-1030.39929199,15.88510132,0.00000000,0.00000000,1.99951172); //object(cj_hobby_shelf_6) (11)
CreateDynamicObject(2509,921.02825928,-1030.22802734,14.78109932,0.00000000,0.00000000,2.24951172); //object(cj_hobby_shelf_6) (12)
CreateDynamicObject(2509,919.76812744,-1030.28295898,14.78193951,0.00000000,0.00000000,1.99951172); //object(cj_hobby_shelf_6) (13)
CreateDynamicObject(2509,918.48095703,-1030.34155273,14.75693989,0.00000000,0.00000000,1.99951172); //object(cj_hobby_shelf_6) (14)
CreateDynamicObject(2509,917.20806885,-1030.38647461,14.76907444,0.00000000,0.00000000,1.99951172); //object(cj_hobby_shelf_6) (15)
CreateDynamicObject(2069,919.84429932,-1025.54016113,13.66505814,0.00000000,0.00000000,0.00000000); //object(cj_mlight7) (1)
CreateDynamicObject(1808,924.72491455,-1026.60253906,13.61505890,0.00000000,0.00000000,272.00000000); //object(cj_watercooler2) (1)
CreateDynamicObject(2244,917.83184814,-1027.78515625,14.40714550,0.00000000,0.00000000,0.00000000); //object(plant_pot_9) (1)
CreateDynamicObject(2010,924.81768799,-1029.46899414,13.61785698,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
CreateDynamicObject(949,924.51495361,-1025.29541016,14.25134277,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (1)
CreateDynamicObject(3859,915.88848877,-1020.24841309,13.62675285,0.00000000,0.00000000,288.48730469); //object(ottosmash04) (5)
CreateDynamicObject(2165,915.29577637,-1019.71380615,13.61505890,0.00000000,0.00000000,182.00000000); //object(med_office_desk_1) (1)
CreateDynamicObject(2165,913.77307129,-1017.27801514,13.61505890,0.00000000,0.00000000,91.25000000); //object(med_office_desk_1) (2)
CreateDynamicObject(1806,915.00878906,-1016.61645508,13.61505890,0.00000000,0.00000000,92.00000000); //object(med_office_chair) (1)
CreateDynamicObject(1806,914.73492432,-1018.49310303,13.61505890,0.00000000,0.00000000,183.99951172); //object(med_office_chair) (2)
CreateDynamicObject(1808,917.98718262,-1019.99523926,13.61505890,0.00000000,0.00000000,179.99951172); //object(cj_watercooler2) (2)
CreateDynamicObject(3859,920.10754395,-1017.26855469,13.59774017,0.00000000,0.00000000,18.49023438); //object(ottosmash04) (6)
CreateDynamicObject(949,918.53405762,-1015.33905029,14.25134277,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (2)
CreateDynamicObject(1723,915.69293213,-1015.38385010,13.61505890,0.00000000,0.00000000,3.00000000); //object(mrk_seating1) (1)
CreateDynamicObject(2010,914.66973877,-1015.37365723,13.59285736,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (2)
CreateDynamicObject(18014,909.53576660,-1014.88006592,14.04726219,0.00000000,0.00000000,2.00000000); //object(int_rest_veg03) (1)
CreateDynamicObject(18014,910.30249023,-1031.24902344,14.04726219,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (2)
CreateDynamicObject(18014,927.04711914,-1014.26928711,14.04726219,0.00000000,0.00000000,1.99951172); //object(int_rest_veg03) (3)
CreateDynamicObject(18014,927.51647949,-1030.72521973,14.04726219,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (4)
CreateDynamicObject(1361,914.22711182,-1030.21215820,14.35840225,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (1)
CreateDynamicObject(1723,924.06005859,-1016.78704834,13.61505890,0.00000000,0.00000000,272.99926758); //object(mrk_seating1) (2)
CreateDynamicObject(1723,919.51220703,-1024.54467773,13.61505890,0.00000000,0.00000000,182.49926758); //object(mrk_seating1) (3)
CreateDynamicObject(2253,919.84356689,-1024.83630371,14.76882648,0.00000000,0.00000000,2.25000000); //object(plant_pot_22) (1)
CreateDynamicObject(2254,916.65838623,-1020.25976562,15.65327168,0.00000000,0.00000000,0.00000000); //object(frame_clip_1) (1)
CreateDynamicObject(2010,924.45898438,-1020.22650146,13.61785698,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (3)
CreateDynamicObject(14455,920.22100830,-1015.28942871,15.08682251,0.00000000,0.00000000,272.99682617); //object(gs_bookcase) (3)
CreateDynamicObject(2010,924.26605225,-1014.90747070,13.59284210,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (4)
CreateDynamicObject(14455,920.07714844,-1019.65179443,15.08682251,0.00000000,0.00000000,92.74670410); //object(gs_bookcase) (4)
CreateDynamicObject(2010,913.90240479,-1021.17437744,13.64285660,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (5)
CreateDynamicObject(2509,920.02459717,-1019.53967285,14.55694294,0.00000000,0.00000000,273.49951172); //object(cj_hobby_shelf_6) (16)
CreateDynamicObject(2509,919.87274170,-1015.63647461,14.55694294,0.00000000,0.00000000,273.24670410); //object(cj_hobby_shelf_6) (17)
CreateDynamicObject(2509,919.96368408,-1018.10882568,14.55694294,0.00000000,0.00000000,273.49914551); //object(cj_hobby_shelf_6) (18)
CreateDynamicObject(2509,920.37634277,-1018.87988281,14.55694294,0.00000000,0.00000000,93.24645996); //object(cj_hobby_shelf_6) (19)
CreateDynamicObject(2509,920.33703613,-1016.68414307,14.55694294,0.00000000,0.00000000,93.24645996); //object(cj_hobby_shelf_6) (20)
CreateDynamicObject(2509,920.26098633,-1015.30084229,14.55694294,0.00000000,0.00000000,93.24645996); //object(cj_hobby_shelf_6) (21)
CreateDynamicObject(2010,920.36212158,-1020.78619385,13.59285736,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (6)
CreateDynamicObject(14455,919.81036377,-1033.14331055,15.28681946,0.00000000,0.00000000,2.25000000); //object(gs_bookcase) (2)
CreateDynamicObject(14455,914.17791748,-1033.26916504,15.31794548,0.00000000,0.00000000,1.50000000); //object(gs_bookcase) (5)
CreateDynamicObject(14455,909.49664307,-1021.33239746,15.44404602,0.00000000,0.00000000,272.49963379); //object(gs_bookcase)
CreateDynamicObject(14455,927.88732910,-1024.83740234,15.26905251,0.00000000,0.00000000,92.24963379); //object(gs_bookcase) (7)
CreateDynamicObject(14455,919.91619873,-1012.32257080,15.26905632,0.00000000,0.00000000,181.74938965); //object(gs_bookcase) (8)
CreateDynamicObject(14455,924.33532715,-1012.17144775,15.28681946,0.00000000,0.00000000,181.74682617); //object(gs_bookcase) (9)
CreateDynamicObject(2010,927.51727295,-1027.16699219,13.59285736,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (4)
CreateDynamicObject(2256,909.20465088,-1017.15545654,17.34849739,0.00000000,0.00000000,91.24707031); //object(frame_clip_3) (1)
CreateDynamicObject(2010,913.88403320,-1012.89819336,13.61785698,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (4)
//========================ammu================================================
CreateDynamicObject(2047,1367.59350586,-1279.90527344,15.86694527,0.00000000,0.00000000,270.00000000); //object(cj_flag1) (1)
CreateDynamicObject(1251,1366.05517578,-1266.16882324,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (1)
CreateDynamicObject(1251,1366.05517578,-1262.91943359,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (2)
CreateDynamicObject(1251,1366.05517578,-1259.67529297,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (3)
CreateDynamicObject(1251,1366.05517578,-1256.17651367,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (4)
CreateDynamicObject(1251,1366.05517578,-1286.14843750,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (5)
CreateDynamicObject(1251,1366.05517578,-1289.39526367,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (6)
CreateDynamicObject(1251,1366.05517578,-1292.64135742,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (7)
CreateDynamicObject(1251,1366.05517578,-1295.62744141,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (8)
CreateDynamicObject(1251,1366.05517578,-1298.55078125,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (9)
CreateDynamicObject(1251,1366.05517578,-1301.59936523,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (10)
CreateDynamicObject(1280,1367.09094238,-1284.11254883,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (1)
CreateDynamicObject(1280,1367.09094238,-1275.11230469,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (2)
CreateDynamicObject(1280,1367.09094238,-1267.90014648,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (3)
CreateDynamicObject(1280,1367.09094238,-1304.78930664,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (4)
CreateDynamicObject(10236,1363.70874023,-1294.72070312,30.58548737,0.00000000,0.00000000,0.00000000); //object(hotelbits_sfe06) (1)
CreateDynamicObject(10236,1363.70874023,-1262.82409668,30.58548737,0.00000000,0.00000000,0.00000000); //object(hotelbits_sfe06) (3)
CreateDynamicObject(970,1365.57482910,-1285.63012695,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
CreateDynamicObject(970,1365.57482910,-1273.58715820,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (2)
CreateDynamicObject(970,1365.57482910,-1266.47985840,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (3)
CreateDynamicObject(970,1365.57482910,-1302.76013184,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
CreateDynamicObject(2035,1369.34790039,-1280.56286621,14.44631386,63.67941284,85.95184326,2.51452637); //object(cj_m16) (1)
CreateDynamicObject(2035,1369.23596191,-1279.04162598,14.44631386,63.67675781,85.95153809,192.51039124); //object(cj_m16) (2)
// Hospital ext
CreateDynamicObject(2942,1186.34655762,-1371.99816895,13.18383884,0.00000000,0.00000000,90.00000000); //object(kmb_atm1) (2)
	// -====================================== Floristeria ===================================- //
	Portontaller = CreateDynamicObject(2990, 1419.59998, -1648.69995, 16.30000,   0.00000, 0.00000, 89.75000); //REJA
CreateDynamicObject(8661, 1393.09961, -1715.50000, 12.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 1353.98694, -1711.54810, 12.29389,   0.00000, 0.00000, 1.22120);
CreateDynamicObject(8661, 1359.40698, -1693.52124, 12.30308,   0.00000, 0.00000, 359.59393);
CreateDynamicObject(8661, 1360.00000, -1674.59961, 12.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 1411.30005, -1715.30005, 8.70000,   0.00000, 0.00000, 262.00000);
CreateDynamicObject(980, 1363.00000, -1592.30005, 9.10000,   0.00000, 0.00000, 342.00000);
CreateDynamicObject(987, 1419.40002, -1639.90002, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1419.50000, -1628.50000, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1419.39941, -1616.69922, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1419.50000, -1669.40002, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1419.50000, -1680.90002, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1419.50000, -1692.19995, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1419.59998, -1704.19995, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1419.69995, -1716.00000, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(987, 1419.90002, -1722.19995, 12.50000,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(987, 1407.90002, -1722.09998, 12.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1396.00000, -1722.19995, 12.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1384.30005, -1722.09998, 12.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1373.00000, -1722.19995, 12.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1361.00000, -1722.09998, 12.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1349.50000, -1722.19995, 12.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1337.50000, -1722.00000, 12.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1419.50000, -1602.19922, 12.50000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(987, 1408.00000, -1602.19995, 12.50000,   0.00000, 0.00000, 175.99500);
CreateDynamicObject(987, 1396.50000, -1601.50000, 12.50000,   0.00000, 0.00000, 165.99001);
CreateDynamicObject(987, 1385.09998, -1598.80005, 12.50000,   0.00000, 0.00000, 165.98700);
CreateDynamicObject(987, 1373.90002, -1596.00000, 12.50000,   0.00000, 0.00000, 163.98700);
CreateDynamicObject(987, 1362.59998, -1592.90002, 12.50000,   0.00000, 0.00000, 163.98199);
CreateDynamicObject(987, 1351.50000, -1589.59998, 12.50000,   0.00000, 0.00000, 167.98199);
CreateDynamicObject(3749, 1417.79980, -1648.59961, 18.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(7520, 1403.59961, -1682.69922, 12.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8947, 1408.90002, -1618.19995, 15.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8947, 1392.50000, -1618.09961, 15.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3096, 1408.59998, -1630.50000, 17.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3096, 1392.19995, -1630.69995, 17.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 1410.30005, -1674.40002, 18.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 1410.30005, -1688.09998, 18.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 1410.30005, -1701.90002, 18.70000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1412.09998, -1659.59998, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1223, 1403.69995, -1659.59998, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1223, 1394.40002, -1659.40002, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1413.30005, -1658.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1409.00000, -1658.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1404.69995, -1658.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1400.30005, -1658.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1395.90002, -1658.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1391.50000, -1658.09998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9192, 1387.39941, -1658.69922, 17.40000,   0.00000, 0.00000, 19.99500);
CreateDynamicObject(987, 1419.50000, -1613.90002, 12.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(10281, 1420.80005, -1656.30005, 15.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(10281, 1420.69922, -1640.89941, 15.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16362, 1357.19922, -1703.39941, 15.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1171, 1408.90002, -1606.09998, 16.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1170, 1406.90002, -1606.00000, 14.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1080, 1403.80005, -1606.30005, 16.30000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1079, 1405.09998, -1606.30005, 14.30000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1077, 1403.09998, -1606.40002, 14.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1075, 1406.00000, -1606.40002, 17.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1073, 1412.69995, -1606.40002, 17.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1081, 1410.69995, -1606.69995, 15.50000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1082, 1412.69995, -1606.09998, 14.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1078, 1408.80005, -1606.50000, 17.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1348, 1414.50000, -1617.90002, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3761, 1414.40002, -1613.80005, 14.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3761, 1414.40002, -1624.59998, 14.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1348, 1414.50000, -1620.09998, 13.20000,   0.00000, 0.00000, 265.99500);
CreateDynamicObject(1893, 1405.50000, -1615.30005, 18.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1409.19995, -1616.40002, 18.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1409.00000, -1621.90002, 18.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1405.59998, -1622.59998, 18.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1394.30005, -1623.59998, 18.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1389.80005, -1626.30005, 18.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1388.00000, -1617.09998, 18.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1392.19995, -1617.40002, 18.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1391.00000, -1613.40002, 18.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16360, 1410.19995, -1715.30005, 12.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2567, 1386.80005, -1623.19995, 14.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2567, 1387.00000, -1612.69995, 14.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(922, 1386.80005, -1617.90002, 13.40000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2921, 1415.29980, -1640.89941, 18.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11292, 1359.69922, -1681.09961, 14.00000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(14826, 1394.50000, -1608.30005, 13.30000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8167, 1352.50000, -1667.90002, 14.40000,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(8167, 1352.19995, -1675.30005, 14.40000,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(8167, 1368.50000, -1681.50000, 14.40000,   0.00000, 0.00000, 359.99500);
CreateDynamicObject(8167, 1363.90002, -1684.09998, 14.40000,   0.00000, 0.00000, 269.99500);
CreateDynamicObject(8167, 1356.59998, -1684.09998, 14.40000,   0.00000, 0.00000, 269.98901);
CreateDynamicObject(14532, 1355.69995, -1681.80005, 13.80000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16378, 1357.59998, -1681.80005, 13.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1766, 1363.50000, -1680.40002, 12.80000,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(1491, 1361.19995, -1679.50000, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 1351.30005, -1646.59998, 12.10000,   0.00000, 0.00000, 269.99200);
CreateDynamicObject(2930, 1419.59998, -1653.69995, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2930, 1419.59998, -1653.69995, 17.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2930, 1419.59998, -1642.00000, 15.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2930, 1419.59998, -1642.00000, 17.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1359.19995, -1682.19995, 13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1736, 1358.80005, -1682.90002, 14.50000,   0.00000, 0.00000, 172.00000);
CreateDynamicObject(16780, 1359.09998, -1681.59998, 15.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1415.50000, -1654.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1420.00000, -1654.59998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1420.00000, -1642.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1412.00000, -1654.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1408.00000, -1654.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1402.00000, -1654.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1397.50000, -1654.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1391.00000, -1654.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1386.00000, -1654.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1402.19995, -1668.30005, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1402.19995, -1674.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1402.09998, -1679.90002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1402.09998, -1685.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1402.09998, -1691.19995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5130, 1406.40002, -1662.19995, 15.50000,   0.00000, 0.00000, 44.50000);
CreateDynamicObject(1215, 1415.50000, -1642.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1414.30005, -1630.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1403.40002, -1630.59998, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1398.09998, -1630.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1387.00000, -1630.50000, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3511, 1422.40002, -1660.69995, 12.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3511, 1422.50000, -1636.50000, 12.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1406.30005, -1671.00000, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1414.09998, -1670.90002, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1414.09998, -1677.90002, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1406.30005, -1678.00000, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1406.19995, -1684.80005, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1414.09998, -1684.80005, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1414.09998, -1691.69995, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1406.19995, -1691.69995, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1414.19995, -1698.50000, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1414.19995, -1705.30005, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1406.40002, -1705.50000, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1406.30005, -1698.50000, 19.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1376.09998, -1702.80005, 12.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1372.80005, -1630.69995, 12.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(12957, 1356.30005, -1608.40002, 13.00000,   0.00000, 0.00000, 346.00000);
CreateDynamicObject(13591, 1360.00000, -1618.50000, 14.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3594, 1362.80005, -1608.80005, 12.70000,   0.00000, 0.00000, 16.00000);
CreateDynamicObject(18248, 1355.59998, -1605.59998, 20.80000,   0.00000, 0.00000, 340.00000);
CreateDynamicObject(853, 1364.19995, -1614.50000, 12.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(851, 1359.59998, -1609.59998, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1358, 1366.09998, -1601.00000, 13.30000,   0.00000, 0.00000, 52.00000);
CreateDynamicObject(3593, 1356.09998, -1600.69995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1352.90002, -1610.50000, 12.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1358, 1359.09998, -1613.50000, 13.30000,   0.00000, 0.00000, 359.99799);
CreateDynamicObject(3594, 1362.80005, -1608.80005, 13.70000,   0.00000, 0.00000, 15.99600);
CreateDynamicObject(3593, 1356.09998, -1600.69995, 13.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(12957, 1354.50000, -1608.30005, 13.00000,   0.00000, 0.00000, 345.99799);
CreateDynamicObject(13591, 1360.00000, -1618.50000, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1440, 1353.90002, -1615.09998, 12.70000,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(1571, 1422.13293, -1717.50195, 13.87769,   0.00000, 0.00000, 84.00000);
CreateDynamicObject(638, 1421.59900, -1720.10583, 13.24391,   0.00000, 0.00000, 264.00000);
CreateDynamicObject(638, 1410.89612, -1714.25330, 12.99391,   0.00000, 0.00000, 173.99597);
CreateDynamicObject(638, 1411.52563, -1714.32129, 12.99391,   0.00000, 0.00000, 354.49597);
CreateDynamicObject(638, 1420.45007, -1710.30347, 12.99391,   0.00000, 0.00000, 352.74597);
CreateDynamicObject(638, 1420.37085, -1710.53052, 12.99391,   0.00000, 0.00000, 352.74353);
CreateDynamicObject(638, 1421.31677, -1710.17419, 12.99391,   0.00000, 0.00000, 352.74597);
CreateDynamicObject(638, 1420.72144, -1710.25171, 12.99391,   0.00000, 0.00000, 352.74597);
CreateDynamicObject(949, 1423.40784, -1719.57202, 13.14824,   0.00000, 0.00000, 326.00000);
CreateDynamicObject(1361, 1423.13806, -1714.55640, 13.29022,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1807, 1422.31226, -1710.32825, 13.09504,   0.00000, 0.00000, 172.00000);
CreateDynamicObject(1570, 1422.20898, -1712.20886, 13.87800,   0.00000, 0.00000, 87.99500);
CreateDynamicObject(2010, 1423.43066, -1713.07935, 12.78392,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2195, 1422.52271, -1712.20215, 13.90500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 1422.65454, -1712.68591, 13.79287,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2251, 1422.66504, -1711.70142, 14.14998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 1423.06165, -1713.60486, 13.81470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2345, 1423.22119, -1712.68933, 14.64688,   0.00000, 0.00000, 88.00000);
CreateDynamicObject(2811, 1423.00024, -1713.09424, 13.44913,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3802, 1421.57397, -1715.17651, 14.90940,   0.00000, 0.00000, 18.23990);
CreateDynamicObject(2895, 1420.87720, -1714.47095, 13.92856,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, 1420.64136, -1713.60535, 13.18401,   0.00000, 0.00000, 267.75000);
CreateDynamicObject(1359, 1423.05566, -1710.56763, 13.24543,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2369, 1422.54517, -1718.09595, 13.66831,   0.00000, 0.00000, 86.50000);
CreateDynamicObject(2194, 1420.34302, -1713.65833, 13.89698,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 1420.52600, -1713.10632, 13.95284,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 1423.04529, -1716.52234, 13.95879,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2194, 1420.69958, -1713.78894, 13.99495,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1414.95972, -1719.68066, 13.11120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 1348.86670, -1646.88123, 12.49630,   0.00000, 0.00000, 270.57831);
	// -=========================== [Bowling Interior] by Greate FelipekxD! =======================================-
	CreateDynamicObject(6066,-2338.11230469,907.33886719,95.13129425,0.00000000,0.00000000,0.00000000); //convertffs(1)
	CreateDynamicObject(6066,-2337.96484375,918.02246094,95.13129425,0.00000000,0.00000000,0.00000000); //convertffs(2)
	CreateDynamicObject(3819,-2363.83105469,904.21765137,92.63438416,0.00000000,0.00000000,179.91210938); //convertffs(4)
	CreateDynamicObject(7617,-2336.66894531,906.78698730,94.02362061,0.00000000,0.00000000,89.32434082); //convertffs(5)
	CreateDynamicObject(1251,-2345.10791016,923.32342529,92.73552704,0.00000000,0.00000000,269.95434570); //convertffs(6)
	CreateDynamicObject(1251,-2351.31958008,923.32366943,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(7)
	CreateDynamicObject(1251,-2344.53515625,918.07617188,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(8)
	CreateDynamicObject(1251,-2351.43286133,918.07012939,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(9)
	CreateDynamicObject(1251,-2354.90722656,920.69732666,92.73552704,0.00000000,0.00000000,180.63439941); //convertffs(10)
	CreateDynamicObject(1251,-2345.32104492,912.64587402,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(11)
	CreateDynamicObject(1251,-2351.53417969,912.63867188,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(12)
	CreateDynamicObject(1251,-2344.61425781,907.32592773,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(13)
	CreateDynamicObject(1251,-2351.40795898,907.32751465,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(14)
	CreateDynamicObject(1251,-2354.78662109,910.73162842,92.73552704,0.00000000,0.00000000,180.63172913); //convertffs(15)
	CreateDynamicObject(1251,-2354.85449219,916.02441406,92.73552704,0.00000000,0.00000000,180.63172913); //convertffs(16)
	CreateDynamicObject(1251,-2345.33227539,901.95989990,92.73749542,0.00000000,0.00000000,269.95056152); //convertffs(17)
	CreateDynamicObject(1251,-2351.36083984,901.95697021,92.73749542,0.00000000,0.00000000,269.95056152); //convertffs(18)
	CreateDynamicObject(1251,-2354.72534180,905.39117432,92.73552704,0.00000000,0.00000000,180.63171387); //convertffs(19)
	CreateDynamicObject(1251,-2359.10205078,920.70440674,92.90537262,0.00000000,0.00000000,179.91467285); //convertffs(21)
	CreateDynamicObject(1251,-2359.10107422,913.88238525,92.90537262,0.00000000,0.00000000,179.91210938); //convertffs(22)
	CreateDynamicObject(1251,-2359.11181641,905.00335693,92.90537262,0.00000000,0.00000000,179.91210938); //convertffs(23)
	CreateDynamicObject(1251,-2359.10937500,909.07714844,92.90537262,0.00000000,0.00000000,179.91210938); //convertffs(24)
	CreateDynamicObject(19124,-2354.56811523,923.55108643,93.22747803,0.00000000,0.00000000,0.00000000); //convertffs(25)
	CreateDynamicObject(19124,-2354.46582031,912.80676270,93.20095062,0.00000000,0.00000000,0.00000000); //convertffs(26)
	CreateDynamicObject(19124,-2354.51269531,917.86425781,93.20659637,0.00000000,0.00000000,0.00000000); //convertffs(27)
	CreateDynamicObject(19124,-2354.41992188,907.54614258,93.20095062,0.00000000,0.00000000,0.00000000); //convertffs(28)
	CreateDynamicObject(19124,-2354.37255859,902.13873291,93.20095062,0.00000000,0.00000000,0.00000000); //convertffs(29)
	CreateDynamicObject(1231,-2337.74609375,915.55566406,92.82028961,0.00000000,0.00000000,89.32434082); //convertffs(30)
	CreateDynamicObject(1231,-2341.42871094,907.36718750,94.07028961,0.00000000,0.00000000,89.31884766); //convertffs(31)
	CreateDynamicObject(19124,-2336.19287109,912.65063477,97.48706055,0.00000000,0.00000000,0.00000000); //convertffs(32)
	CreateDynamicObject(3526,-2337.56933594,920.52166748,96.05293274,0.00000000,0.00000000,0.00000000); //convertffs(33)
	CreateDynamicObject(3526,-2337.57763672,915.46704102,96.05138397,0.00000000,0.00000000,0.00000000); //convertffs(34)
	CreateDynamicObject(3526,-2337.72167969,909.78729248,96.05220032,0.00000000,0.00000000,0.00000000); //convertffs(35)
	CreateDynamicObject(3526,-2337.72998047,904.65997314,96.05060577,0.00000000,0.00000000,0.00000000); //convertffs(36)
	CreateDynamicObject(16475,-2360.24316406,892.80078125,92.63662720,0.00000000,0.00000000,0.00000000); //convertffs(37)
	CreateDynamicObject(16475,-2348.56396484,926.14044189,92.63662720,0.00000000,0.00000000,180.62622070); //convertffs(38)
	CreateDynamicObject(1775,-2358.21386719,901.44531250,93.62271118,0.00000000,0.00000000,180.63171387); //convertffs(39)
	CreateDynamicObject(1598,-2339.79052734,916.47283936,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1946,-2362.83178711,923.20263672,92.94399261,0.00000000,0.00000000,0.00000000); //convertffs(48)
	CreateDynamicObject(3819,-2363.83105469,915.14257812,92.63438416,0.00000000,0.00000000,179.91210938); //convertffs(4)
	CreateDynamicObject(8378,-2344.10766602,915.36987305,92.00922394,90.00000000,180.00000000,270.00000000); //object(vgsbighngrdoor) (1)
	CreateDynamicObject(8378,-2349.45507812,915.36914062,91.95915985,90.00000000,179.99450684,270.00000000); //object(vgsbighngrdoor) (2)
	CreateDynamicObject(8378,-2367.60351562,915.36914062,91.95915985,0.00000000,0.00000000,90.00000000); //object(vgsbighngrdoor) (3)
	CreateDynamicObject(8378,-2335.92138672,915.36914062,91.95915985,0.00000000,0.00000000,90.00000000); //object(vgsbighngrdoor) (4)
	CreateDynamicObject(8378,-2344.77929688,947.33978271,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (5)
	CreateDynamicObject(8378,-2358.49951172,947.33886719,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (6)
	CreateDynamicObject(8378,-2358.49902344,900.23864746,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (7)
	CreateDynamicObject(8378,-2345.24902344,900.23828125,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (8)
	CreateDynamicObject(8378,-2358.46020508,914.66418457,101.08418274,90.00000000,180.00549316,269.98901367); //object(vgsbighngrdoor) (9)
	CreateDynamicObject(8378,-2345.34765625,915.06835938,101.08418274,90.00000000,180.00549316,269.98901367); //object(vgsbighngrdoor) (10)
	CreateDynamicObject(9507,-2350.76806641,879.70959473,88.41332245,0.00000000,0.00000000,0.00000000); //object(bigboxtmp03) (1)
	CreateDynamicObject(9507,-2350.49316406,879.70898438,69.64332581,0.00000000,0.00000000,0.00000000); //object(bigboxtmp03) (2)
	CreateDynamicObject(1697,-2337.80249023,910.09875488,92.73693085,301.98464966,0.00000000,90.00000000); //object(roofstuff16) (1)
	CreateDynamicObject(1697,-2337.80175781,905.34863281,92.73693085,301.98120117,0.00000000,90.00000000); //object(roofstuff16) (2)
	CreateDynamicObject(1697,-2337.67724609,914.84863281,92.73693085,301.98120117,0.00000000,90.00000000); //object(roofstuff16) (3)
	CreateDynamicObject(1598,-2339.79003906,915.74743652,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,914.87121582,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79394531,914.87109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79394531,915.72192383,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79394531,916.44738770,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,909.12109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,910.12109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,910.87109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79003906,910.87109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79003906,910.07080078,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79003906,909.21948242,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,904.02099609,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,904.79479980,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,905.66882324,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.76416016,905.66796875,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.76367188,904.79333496,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.76367188,903.99316406,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1231,-2337.87060547,909.80541992,92.82028961,0.00000000,0.00000000,89.32434082); //convertffs(30)
	CreateDynamicObject(1231,-2337.87011719,904.77941895,92.82028961,0.00000000,0.00000000,89.32434082); //convertffs(30)
	CreateDynamicObject(1231,-2364.45068359,909.86718750,94.07028961,0.00000000,0.00000000,89.31884766); //convertffs(31)
	// -============================ Fireman  (FelipekxD)  =============================================- //
	CreateDynamicObject(18065, -2193.8771972656, 892.71276855469, 98.174057006836, 0, 0, 0);
	CreateDynamicObject(1522, -2176.5981445313, 886.3740234375, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(1999, -2174.1484375, 898.10949707031, 95.946952819824, 0, 0, 0);
	CreateDynamicObject(2174, -2173.3610839844, 895.73248291016, 95.939682006836, 0, 0, 268.69067382813);
	CreateDynamicObject(2184, -2184.2431640625, 891.57647705078, 95.939682006836, 0, 0, 91.309509277344);
	CreateDynamicObject(2293, -2178.8688964844, 887.33514404297, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2293, -2177.6787109375, 887.3232421875, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2293, -2180.0266113281, 887.32574462891, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2293, -2181.1298828125, 887.34436035156, 95.946952819824, 0, 0, 0);
	CreateDynamicObject(2293, -2182.2946777344, 887.33673095703, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(19124, -2185.8562011719, 886.79803466797, 96.511276245117, 0, 0, 0);
	CreateDynamicObject(1649, -2180.0737304688, 886.61254882813, 97.894485473633, 0, 0, 179.91760253906);
	CreateDynamicObject(1663, -2173.9267578125, 895.05578613281, 96.399894714355, 0, 0, 0);
	CreateDynamicObject(1663, -2173.4548339844, 897.18884277344, 96.399894714355, 0, 0, 230.97595214844);
	CreateDynamicObject(2754, -2184.4289550781, 887.07269287109, 96.841827392578, 0, 0, 268.69067382813);
	CreateDynamicObject(2206, -2175.02734375, 891.24420166016, 95.946952819824, 0, 0, 0);
	CreateDynamicObject(2198, -2173.7641601563, 887.45593261719, 95.939682006836, 0, 0, 91.309387207031);
	CreateDynamicObject(2638, -2180.6213378906, 892.71490478516, 96.59992980957, 0, 0, 0);
	CreateDynamicObject(2638, -2179.0993652344, 892.70678710938, 96.607200622559, 0, 0, 0);
	CreateDynamicObject(2198, -2174.58203125, 889.3056640625, 95.939682006836, 0, 0, 91.307373046875);
	CreateDynamicObject(2941, -2174.1728515625, 891.42767333984, 97.230201721191, 0, 0, 0);
	CreateDynamicObject(1671, -2173.5131835938, 889.94970703125, 96.381889343262, 0, 0, 316.33032226563);
	CreateDynamicObject(2994, -2185.2575683594, 894.85638427734, 96.441940307617, 0, 0, 0);
	CreateDynamicObject(2994, -2182.2893066406, 897.91247558594, 96.441940307617, 0, 0, 89.324493408203);
	CreateDynamicObject(2961, -2177.3269042969, 886.68933105469, 97.453025817871, 0, 0, 0);
	CreateDynamicObject(2961, -2172.765625, 897.09210205078, 97.259765625, 0, 0, 276.63061523438);
	CreateDynamicObject(8378, -2205.0441894531, 892.69964599609, 96.903060913086, 0, 0, 270.67565917969);
	CreateDynamicObject(1649, -2193.4782714844, 895.63592529297, 97.605422973633, 0, 0, 268.69067382813);
	CreateDynamicObject(1649, -2193.6352539063, 891.1318359375, 97.605422973633, 0, 0, 268.68713378906);
	CreateDynamicObject(19124, -2194.0158691406, 898.28594970703, 96.504005432129, 0, 0, 0);
	CreateDynamicObject(19124, -2193.9243164063, 886.64398193359, 96.504005432129, 0, 0, 0);
	CreateDynamicObject(19124, -2204.2143554688, 892.65100097656, 96.504005432129, 0, 0, 0);
	CreateDynamicObject(2193, -2203.9675292969, 897.07208251953, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2185, -2199.5012207031, 898.20733642578, 95.939682006836, 0, 0, 180.63439941406);
	CreateDynamicObject(2205, -2198.5461425781, 886.70471191406, 95.939682006836, 0, 0, 179.36633300781);
	CreateDynamicObject(2171, -2200.7026367188, 887.58215332031, 95.939682006836, 0, 0, 89.324493408203);
	CreateDynamicObject(2370, -2203.1550292969, 888.9189453125, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(1781, -2203.0754394531, 889.59063720703, 96.786582946777, 0, 0, 142.91955566406);
	CreateDynamicObject(1783, -2202.3388671875, 888.9287109375, 96.857246398926, 0, 0, 0);
	CreateDynamicObject(1714, -2199.1745605469, 888.44299316406, 95.939682006836, 0, 0, 358.01501464844);
	CreateDynamicObject(1811, -2203.1760253906, 897.30023193359, 96.565986633301, 0, 0, 0);
	CreateDynamicObject(16151, -2194.6708984375, 892.61865234375, 95.939682006836, 0, 0, 1.9849853515625);
	CreateDynamicObject(2964, -2199.5324707031, 892.44152832031, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2997, -2200.2822265625, 892.46173095703, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(2998, -2198.7873535156, 892.74084472656, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(3002, -2198.9201660156, 892.12805175781, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(3004, -2199.7509765625, 891.9716796875, 96.861106872559, 0, 0, 0);
	CreateDynamicObject(2997, -2199.4382324219, 892.16156005859, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(3000, -2199.2399902344, 892.587890625, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(2941, -2199.4523925781, 886.91577148438, 97.222930908203, 0, 0, 0);
	CreateDynamicObject(2714, -2186.0070800781, 897.51013183594, 99.281356811523, 0, 0, 89.324493408203);
	// -======================================== Oficina Taxi ===========================================- //
    CreateDynamicObject(15048,-1847.26660156,130.09179688,17.91591644,0.00000000,0.00000000,1.98303223); //object(labigsavehouse) (2)
	CreateDynamicObject(8378,-1838.76965332,137.72085571,15.08056259,0.00000000,0.00000000,271.94372559); //object(vgsbighngrdoor) (1)
	CreateDynamicObject(8378,-1830.25524902,132.49530029,21.44179153,270.67492676,0.00082397,1.98583984); //object(vgsbighngrdoor) (2)
	CreateDynamicObject(1505,-1837.91516113,133.00282288,14.11904144,0.00000000,0.00000000,91.30950928); //object(gen_doorext07) (1)
	CreateDynamicObject(1505,-1837.97460938,134.50097656,14.11904144,0.00000000,0.00000000,91.30187988); //object(gen_doorext07) (2)
	CreateDynamicObject(1251,-1837.90771484,132.94523621,13.22372627,89.32507324,0.00000000,358.01501465); //object(smashbar) (2)
	CreateDynamicObject(1251,-1837.99609375,136.05401611,13.23061371,89.32434082,0.00000000,358.01147461); //object(smashbar) (4)
	CreateDynamicObject(1502,-1830.90417480,130.59469604,17.93154144,0.00000000,0.00000000,1.98498535); //object(gen_doorint04) (1)
	CreateDynamicObject(1502,-1828.23742676,137.67831421,17.93154144,0.00000000,0.00000000,272.66064453); //object(gen_doorint04) (2)
	CreateDynamicObject(1966,-1837.54431152,125.16722870,16.87911987,0.00000000,0.00000000,1.98498535); //object(imcompmovedr1_las) (1)
	CreateDynamicObject(1726,-1832.87695312,137.29244995,14.11904144,0.00000000,0.00000000,272.66064453); //object(mrk_seating2) (1)
	CreateDynamicObject(1726,-1832.76196289,134.54702759,14.11904144,0.00000000,0.00000000,272.65869141); //object(mrk_seating2) (2)
	CreateDynamicObject(1727,-1834.83276367,138.21939087,14.11904144,0.00000000,0.00000000,3.96997070); //object(mrk_seating2b) (1)
	CreateDynamicObject(2010,-1833.95129395,134.78808594,14.02182579,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
	CreateDynamicObject(2010,-1828.13281250,126.00619507,14.23276329,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (2)
	CreateDynamicObject(1318,-1835.76171875,140.69116211,17.53564644,295.13000488,180.00000000,269.32458496); //object(arrow) (1)
	CreateDynamicObject(1502,-1830.73498535,130.81321716,14.32997894,0.00000000,0.00000000,1.98303223); //object(gen_doorint04) (3)
	CreateDynamicObject(2714,-1837.92504883,134.47752380,16.77673340,0.00000000,0.00000000,91.30950928); //object(cj_open_sign_2) (1)
	CreateDynamicObject(16151,-1825.98730469,137.88882446,14.58419514,0.00000000,0.00000000,1.98498535); //object(ufo_bar) (1)
	CreateDynamicObject(1835,-1831.95251465,140.74246216,14.32997894,0.00000000,0.00000000,0.00000000); //object(kb_bandit5) (1)
	CreateDynamicObject(1832,-1831.30505371,140.77842712,14.32997894,0.00000000,0.00000000,0.00000000); //object(kb_bandit3) (1)
	CreateDynamicObject(1838,-1830.73852539,140.78631592,14.32997894,0.00000000,0.00000000,0.00000000); //object(kb_bandit11) (2)
	CreateDynamicObject(1978,-1831.16174316,135.09967041,15.13754177,0.00000000,0.00000000,0.00000000); //object(roulette_tbl) (1)
	CreateDynamicObject(1708,-1825.24865723,132.54393005,14.32997894,0.00000000,0.00000000,270.67565918); //object(kb_chair02) (2)
	CreateDynamicObject(1708,-1826.72033691,131.47663879,14.32997894,0.00000000,0.00000000,181.35131836); //object(kb_chair02) (3)
	CreateDynamicObject(2700,-1825.06616211,134.61700439,16.99137306,356.05145264,5.96920776,179.77880859); //object(cj_sex_tv2) (1)
	CreateDynamicObject(2738,-1826.86767578,129.96408081,18.53439140,0.00000000,0.00000000,0.00000000); //object(cj_toilet_bs) (1)
	CreateDynamicObject(2523,-1828.19274902,128.16580200,17.93154144,0.00000000,0.00000000,181.35131836); //object(cj_b_sink3) (1)
	CreateDynamicObject(2738,-1827.86669922,129.99584961,18.53439140,0.00000000,0.00000000,3.96997070); //object(cj_toilet_bs) (2)
	CreateDynamicObject(2317,-1826.78833008,128.14688110,20.18757057,19.85000610,0.00000000,238.91589355); //object(cj_tele_3) (1)
	CreateDynamicObject(2742,-1829.52844238,127.73543549,19.10096169,0.00000000,0.00000000,183.33630371); //object(cj_handdrier) (1)
	CreateDynamicObject(2523,-1830.00488281,128.10546875,17.93154144,0.00000000,0.00000000,181.35131836); //object(cj_b_sink3) (3)
	CreateDynamicObject(2841,-1828.61486816,136.36718750,17.93154144,0.00000000,0.00000000,89.32449341); //object(gb_bedrug03) (1)
	CreateDynamicObject(2308,-1823.85876465,139.46894836,17.93154144,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_4) (1)
	CreateDynamicObject(2309,-1822.82617188,139.22218323,17.93154144,0.00000000,0.00000000,41.68478394); //object(med_office_chair2) (1)
	CreateDynamicObject(2205,-1822.54675293,133.47082520,17.93154144,0.00000000,0.00000000,181.35131836); //object(med_office8_desk_1) (1)
	CreateDynamicObject(2182,-1826.62036133,133.32373047,17.92373085,0.00000000,0.00000000,91.30950928); //object(med_office5_desk_1) (1)
	CreateDynamicObject(2309,-1826.65026855,134.08982849,17.93154144,0.00000000,0.00000000,0.00000000); //object(med_office_chair2) (2)
	CreateDynamicObject(2190,-1826.71069336,132.91610718,18.68379974,0.00000000,0.00000000,184.60437012); //object(pc_1) (1)
	CreateDynamicObject(3017,-1822.80358887,134.11898804,18.71482658,336.17999268,0.00000000,0.00000000); //object(arch_plans) (1)
	CreateDynamicObject(3031,-1822.98803711,132.83242798,19.72175980,0.00000000,0.00000000,89.32449341); //object(wong_dish) (1)
	CreateDynamicObject(1792,-1823.68310547,133.27235413,18.86800385,0.00000000,0.00000000,182.61938477); //object(swank_tv_1) (1)
	CreateDynamicObject(1216,-1827.55700684,140.47621155,18.62354469,0.00000000,0.00000000,1.98498535); //object(phonebooth1) (1)
	CreateDynamicObject(1216,-1830.10949707,125.84490967,15.02198124,0.00000000,0.00000000,181.35131836); //object(phonebooth1) (2)
	CreateDynamicObject(1216,-1831.43530273,125.78923798,15.02198124,0.00000000,0.00000000,181.35131836); //object(phonebooth1) (3)
	CreateDynamicObject(1808,-1824.79077148,140.72697449,17.93154144,0.00000000,0.00000000,0.00000000); //object(cj_watercooler2) (1)
	CreateDynamicObject(2186,-1822.51586914,136.33161926,17.93154144,0.00000000,0.00000000,272.66064453); //object(photocopier_1) (1)
	//==================================== Farmacia gg ===================================
	CreateDynamicObject(4022,900.88867188,-1664.02832031,15.67765999,0.00000000,0.00000000,270.00000000); //object(foodmart1_lan) (2)
CreateDynamicObject(2955,896.07067871,-1664.25903320,13.66353989,0.00000000,0.00000000,0.00000000); //object(imy_compin) (1)
CreateDynamicObject(984,901.05371094,-1684.49804688,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(984,888.28302002,-1684.49890137,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (2)
CreateDynamicObject(984,875.50561523,-1684.49890137,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (3)
CreateDynamicObject(984,862.71960449,-1684.49890137,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (4)
CreateDynamicObject(984,849.91394043,-1684.49890137,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (6)
CreateDynamicObject(984,907.44335938,-1646.70410156,13.19133663,0.00000000,0.00000000,179.99450684); //object(fenceshit2) (8)
CreateDynamicObject(983,904.24407959,-1653.13500977,13.23042965,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (1)
CreateDynamicObject(983,904.24407959,-1674.93457031,13.23042965,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (2)
CreateDynamicObject(3578,907.12597656,-1679.36230469,12.02492809,0.00000000,0.00000000,270.00000000); //object(dockbarr1_la) (4)
CreateDynamicObject(3578,902.87805176,-1679.36230469,12.02492809,0.00000000,0.00000000,270.00000000); //object(dockbarr1_la) (4)
CreateDynamicObject(3927,907.32568359,-1684.84631348,15.14818287,0.00000000,0.00000000,270.00000000); //object(d_sign01) (2)
CreateDynamicObject(1318,907.33093262,-1684.65917969,15.95313835,0.00000000,180.00000000,0.00000000); //object(arrow) (7)
CreateDynamicObject(1241,907.38525391,-1685.31799316,15.83653450,0.00000000,20.00000000,0.00000000); //object(adrenaline) (1)
CreateDynamicObject(1241,907.38952637,-1684.02233887,15.83653450,0.00000000,19.99511719,0.00000000); //object(adrenaline) (2)
CreateDynamicObject(8843,892.93005371,-1677.30957031,12.80617809,0.00000000,0.00000000,90.00000000); //object(arrows01_lvs) (1)
CreateDynamicObject(8843,893.10784912,-1682.55700684,12.80617809,0.00000000,0.00000000,270.00000000); //object(arrows01_lvs) (2)
CreateDynamicObject(984,901.05981445,-1679.49804688,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(984,888.26135254,-1679.49804688,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(984,875.43615723,-1679.49804688,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(983,865.95684814,-1678.57482910,13.23042965,0.00000000,0.00000000,72.74996948); //object(fenceshit3) (3)
CreateDynamicObject(983,861.19683838,-1674.91308594,13.23042965,0.00000000,0.00000000,212.24601746); //object(fenceshit3) (4)
CreateDynamicObject(983,859.38562012,-1669.01196289,13.23042965,0.00000000,0.00000000,182.24487305); //object(fenceshit3) (5)
CreateDynamicObject(910,854.51904297,-1631.05761719,13.82384300,0.00000000,0.00000000,0.00000000); //object(bust_cabinet_4) (1)
CreateDynamicObject(1216,856.19714355,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (1)
CreateDynamicObject(1216,856.94573975,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (2)
CreateDynamicObject(1216,857.69476318,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (3)
CreateDynamicObject(1216,858.44378662,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (4)
CreateDynamicObject(1216,859.19281006,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (5)
CreateDynamicObject(1216,859.94183350,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (6)
CreateDynamicObject(1256,870.43487549,-1644.67871094,13.13354778,0.00000000,0.00000000,90.00000000); //object(stonebench1) (1)
CreateDynamicObject(1256,873.06335449,-1644.67871094,13.13354778,0.00000000,0.00000000,90.00000000); //object(stonebench1) (2)
CreateDynamicObject(1256,876.56353760,-1644.67871094,13.13354778,0.00000000,0.00000000,90.00000000); //object(stonebench1) (3)
CreateDynamicObject(1256,879.11193848,-1644.67871094,13.13354778,0.00000000,0.00000000,90.00000000); //object(stonebench1) (4)
CreateDynamicObject(3433,896.03051758,-1664.95727539,15.31035233,0.00000000,0.00000000,0.00000000); //object(htlcnpy01_lvs) (2)
CreateDynamicObject(3851,895.41796875,-1658.71777344,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,895.41503906,-1669.32714844,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,901.04492188,-1674.95117188,20.70676041,0.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,901.04357910,-1653.07336426,20.70676041,0.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx) (5)
CreateDynamicObject(10245,897.80621338,-1651.38000488,14.04867172,0.00000000,0.00000000,43.99475098); //object(ottos_ramp) (2)
CreateDynamicObject(3851,908.21423340,-1655.30749512,18.80676270,0.00000000,90.00000000,0.00000000); //object(carshowwin_sfsx) (6)
CreateDynamicObject(3851,908.21423340,-1666.46838379,18.80676270,0.00000000,90.00000000,0.00000000); //object(carshowwin_sfsx) (9)
CreateDynamicObject(3851,904.58575439,-1675.02221680,20.70676041,0.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx) (4)
CreateDynamicObject(12842,900.39508057,-1668.89733887,18.61670685,0.00000000,0.00000000,0.00000000); //object(cos_pizseats) (1)
CreateDynamicObject(12842,900.39508057,-1661.62121582,18.61670685,0.00000000,0.00000000,0.00000000); //object(cos_pizseats) (2)
CreateDynamicObject(3851,908.21423340,-1669.34509277,18.80676270,0.00000000,90.00000000,0.00000000); //object(carshowwin_sfsx) (9)
CreateDynamicObject(3851,908.21386719,-1669.34472656,18.80676270,0.00000000,90.00000000,0.00000000); //object(carshowwin_sfsx) (9)
CreateDynamicObject(3851,910.18432617,-1669.36425781,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,910.18432617,-1658.18652344,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,910.18432617,-1655.31115723,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(1649,907.97418213,-1649.60034180,20.37354469,0.00000000,0.00000000,180.00000000); //object(wglasssmash) (3)
CreateDynamicObject(1649,907.97363281,-1649.59960938,21.04853439,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (4)
CreateDynamicObject(1649,907.97363281,-1649.59960938,20.37354469,0.00000000,0.00000000,359.99450684); //object(wglasssmash) (5)
CreateDynamicObject(1649,907.97363281,-1649.59960938,21.04853439,0.00000000,0.00000000,359.99450684); //object(wglasssmash) (6)
CreateDynamicObject(640,896.49218750,-1656.81628418,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (1)
CreateDynamicObject(640,896.49218750,-1656.81542969,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (2)
CreateDynamicObject(640,896.49218750,-1662.19238281,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (3)
CreateDynamicObject(640,896.49218750,-1667.53234863,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (4)
CreateDynamicObject(640,896.49218750,-1672.03222656,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (5)
CreateDynamicObject(640,899.23449707,-1674.18676758,18.85906792,0.00000000,0.00000000,270.00000000); //object(kb_planter_bush2) (6)
CreateDynamicObject(640,903.03442383,-1674.17065430,18.85906792,0.00000000,0.00000000,270.00000000); //object(kb_planter_bush2) (7)
CreateDynamicObject(640,899.54980469,-1654.41967773,18.85906792,0.00000000,0.00000000,90.00000000); //object(kb_planter_bush2) (8)
CreateDynamicObject(640,903.11279297,-1654.41967773,18.85906792,0.00000000,0.00000000,90.00000000); //object(kb_planter_bush2) (9)
CreateDynamicObject(640,905.60015869,-1660.06884766,18.85906792,0.00000000,0.00000000,180.00000000); //object(kb_planter_bush2) (10)
CreateDynamicObject(640,905.60015869,-1665.42114258,18.85906792,0.00000000,0.00000000,179.99450684); //object(kb_planter_bush2) (11)
CreateDynamicObject(640,905.60015869,-1670.74743652,18.85906792,0.00000000,0.00000000,179.99450684); //object(kb_planter_bush2) (12)
CreateDynamicObject(640,905.60015869,-1671.62097168,18.85906792,0.00000000,0.00000000,179.99450684); //object(kb_planter_bush2) (13)
CreateDynamicObject(13593,903.78009033,-1656.26953125,18.12990570,320.00729370,358.69467163,88.16101074); //object(kickramp03) (1)
	// -================================== Umbrella 7 Exterior============================- //
	CreateDynamicObject(966,2005.42419434,-1439.16503906,12.57566929,0.00000000,0.00000000,0.00000000); //object(bar_gatebar01) (1)
	CreateDynamicObject(966,2008.71911621,-1442.55725098,12.57566929,0.00000000,0.00000000,90.00000000); //object(bar_gatebar01) (2)
	CreateDynamicObject(968,1998.13256836,-1439.18676758,12.56996632,90.00000000,162.45159912,287.54846191); //object(barrierturn) (2)
	CreateDynamicObject(968,2008.66784668,-1449.87536621,12.58436680,90.00000000,180.00000000,0.00000000); //object(barrierturn) (3)
	CreateDynamicObject(968,1996.90661621,-1350.93920898,22.99389076,90.00000000,194.47875977,255.51576233); //object(barrierturn) (4)
	CreateDynamicObject(968,2102.69018555,-1451.09802246,23.00639153,90.00000000,179.99450684,359.82000732); //object(barrierturn) (5)
	CreateDynamicObject(4726,2068.63793945,-1423.04028320,46.32153320,0.00000000,0.00000000,0.00000000); //object(libtwrhelipd_lan2) (1)
	CreateDynamicObject(2795,2022.79174805,-1401.24548340,19.37174034,0.00000000,0.00000000,0.00000000); //object(cj_air_d_4) (1)
	CreateDynamicObject(2793,2031.66711426,-1401.22338867,19.42084885,0.00000000,0.00000000,0.00000000); //object(cj_air_d_2) (1)
	CreateDynamicObject(3526,2044.11401367,-1408.62561035,20.56345749,0.00000000,276.75994873,0.00000000); //object(vegasairportlight) (1)
	CreateDynamicObject(19124,2008.58007812,-1439.26171875,12.05037212,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
	CreateDynamicObject(19124,2013.31445312,-1434.67382812,12.07917309,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
	CreateDynamicObject(19124,2019.19824219,-1429.17382812,12.02918816,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)

	// -================================ Mafia Russa ================================- //
	CreateDynamicObject(2922,691.09985352,-1278.80432129,13.91715717,0.00000000,0.00000000,24.32000732); //object(kmb_keypad) (1)
	CreateDynamicObject(1498,717.47729492,-1277.13317871,16.64843750,0.00000000,0.00000000,90.00000000); //object(gen_doorext03) (1)
	CreateDynamicObject(2922,726.40637207,-1279.64062500,13.83479691,0.00000000,0.00000000,0.00000000); //object(kmb_keypad) (2)
	CreateDynamicObject(19124,691.15765381,-1272.97705078,13.24332333,14.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(19124,691.15722656,-1278.89697266,13.24332333,349.99658203,0.00000000,8.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1641,731.07824707,-1276.21704102,16.64843750,0.00000000,0.00000000,76.00000000); //object(beachtowel03) (1)
	CreateDynamicObject(1643,725.01770020,-1270.85168457,16.64843750,0.00000000,0.00000000,112.00000000); //object(beachtowel01) (1)
	CreateDynamicObject(2405,717.77966309,-1263.99194336,17.89867020,0.00000000,0.00000000,90.00000000); //object(cj_surf_board2) (1)
	CreateDynamicObject(2404,717.84307861,-1263.15954590,17.89598083,0.00000000,334.00000000,90.00000000); //object(cj_surf_board) (1)
	CreateDynamicObject(1640,727.83715820,-1276.76123047,16.64843750,0.00000000,0.00000000,30.00000000); //object(beachtowel04) (1)
	CreateDynamicObject(1432,724.94519043,-1289.78710938,16.64843750,0.00000000,0.00000000,0.00000000); //object(dyn_table_2) (1)
	CreateDynamicObject(1594,721.34100342,-1296.81494141,17.12542915,0.00000000,0.00000000,0.00000000); //object(chairsntable) (1)
	CreateDynamicObject(2802,721.07275391,-1257.71325684,16.97869682,0.00000000,0.00000000,0.00000000); //object(castable1) (1)
	CreateDynamicObject(2964,724.85620117,-1283.22668457,16.64843750,0.00000000,0.00000000,0.00000000); //object(k_pooltablesm) (1)
	CreateDynamicObject(3004,725.04772949,-1279.48059082,18.07147598,294.07824707,265.51800537,265.09283447); //object(k_poolq2) (1)
	CreateDynamicObject(3106,724.81201172,-1283.33447266,17.57838821,0.00000000,0.00000000,0.00000000); //object(k_poolball8) (1)
	CreateDynamicObject(3104,725.27197266,-1283.48815918,17.57838821,0.00000000,0.00000000,0.00000000); //object(k_poolballspt06) (1)
	CreateDynamicObject(3103,725.14416504,-1282.74340820,17.57838821,0.00000000,0.00000000,0.00000000); //object(k_poolballspt05) (1)
	CreateDynamicObject(2996,724.16949463,-1283.59277344,17.57838631,0.00000000,0.00000000,0.00000000); //object(k_poolballstp02) (1)
	CreateDynamicObject(3003,725.69842529,-1283.63867188,17.57878494,0.00000000,0.00000000,0.00000000); //object(k_poolballcue) (1)
	CreateDynamicObject(1689,715.16619873,-1291.31481934,24.28232765,332.00000000,0.00000000,268.84570312); //object(gen_roofbit3) (1)
	CreateDynamicObject(19124,724.95434570,-1274.91198730,14.36644459,0.00000000,14.00000000,0.00000000); //object(bollardlight) (3)

	// -============================= Interiores sólidos, debugged ================================- //
	CreateDynamicObject(2395,680.76300049,-450.74395752,-26.61718750,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,680.76269531,-450.74316406,-23.87632751,298.00000000,359.95739746,359.96234131); //object(cj_sports_wall) (2)
	CreateDynamicObject(1493,680.87274170,-450.71969604,-26.61718750,0.00000000,0.00000000,0.00000000); //object(gen_doorshop01) (1)
	CreateDynamicObject(2765,677.88525391,-450.36499023,-23.68194962,0.00000000,0.00000000,0.00000000); //object(cj_cb_list1) (1)
	CreateDynamicObject(2766,686.85430908,-451.71658325,-23.59758568,0.00000000,0.00000000,0.00000000); //object(cj_cb_list2) (1)
	CreateDynamicObject(1966,661.82586670,-568.60437012,15.66175652,0.00000000,0.00000000,90.00000000); //object(imcompmovedr1_las) (1)
	CreateDynamicObject(2395,669.83331299,-565.27886963,15.32873726,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (3)
	CreateDynamicObject(2395,666.63330078,-565.37335205,15.33593750,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (4)
	CreateDynamicObject(2395,662.89569092,-565.37304688,15.33593750,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (5)
	CreateDynamicObject(2395,670.37353516,-568.61584473,15.32873726,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (7)
	CreateDynamicObject(2395,665.79125977,-570.59216309,14.15433979,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (8)
	CreateDynamicObject(2395,665.79101562,-574.91839600,14.15433979,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (9)
	CreateDynamicObject(2837,682.87695312,-457.86511230,-25.55373001,0.00000000,0.00000000,0.00000000); //object(gb_takeaway02) (1)
	CreateDynamicObject(2838,679.94616699,-456.98199463,-25.55373001,0.00000000,0.00000000,0.00000000); //object(gb_takeaway03) (1)
	CreateDynamicObject(2839,680.39288330,-454.61041260,-25.55373001,0.00000000,0.00000000,0.00000000); //object(gb_takeaway04) (1)
	CreateDynamicObject(2395,461.40478516,-15.44111538,1000.13281250,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (10)
	CreateDynamicObject(2395,461.40429688,-19.17049217,1000.13281250,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (13)
	CreateDynamicObject(2395,461.10028076,-20.19733238,1000.14001465,0.00000000,0.00000000,236.00000000); //object(cj_sports_wall) (14)
	CreateDynamicObject(2395,459.67370605,-22.85202980,1000.14001465,0.00000000,0.00000000,180.00000000); //object(cj_sports_wall) (15)
	CreateDynamicObject(2395,456.48413086,-22.65886497,1000.14001465,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (16)
	CreateDynamicObject(2395,456.32592773,-19.92231560,1000.14001465,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (17)
	CreateDynamicObject(2395,456.87603760,-23.08882332,998.38281250,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (18)
	CreateDynamicObject(2395,455.93872070,-23.30822563,1000.88281250,46.00000000,0.00000000,179.99456787); //object(cj_sports_wall) (20)
	CreateDynamicObject(1532,456.00756836,-23.12667274,998.52563477,0.00000000,0.00000000,180.00000000); //object(gen_doorext11) (1)
	CreateDynamicObject(2945,1.11733890,34.35177612,1199.92248535,0.00000000,0.00000000,0.00000000); //object(kmb_netting) (1)
	CreateDynamicObject(17951,608.95489502,-128.31036377,998.63360596,0.00000000,0.00000000,0.00000000); //object(cjgaragedoor) (1)
	CreateDynamicObject(17951,608.95410156,-122.15434265,998.63360596,0.00000000,0.00000000,0.00000000); //object(cjgaragedoor) (2)
	// -============================= DMV Los Santos ======================- //
	CreateDynamicObject(12957, 2420.26, -1677.36, 13.59,   0.00, 0.00, 0.00);
	CreateDynamicObject(1328, 2490.26, -1684.86, 13.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1328, 2509.03, -1682.32, 13.06,   0.00, 0.00, 0.00);
	CreateDynamicObject(2114, 2531.37, -1667.29, 14.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2071.74, -1920.57, 13.10,   0.00, 0.00, 271.20);
	CreateDynamicObject(970, 2071.76, -1908.30, 13.10,   0.00, 0.00, 90.80);
	CreateDynamicObject(970, 2071.71, -1919.46, 13.10,   0.00, 0.00, 90.83);
	CreateDynamicObject(966, 2071.68, -1917.33, 12.60,   0.00, 0.00, 269.93);
	CreateDynamicObject(968, 2071.69, -1917.46, 13.47,   1.00, 26.00, 90.00);
	CreateDynamicObject(1358, 2070.43, -1900.33, 13.76,   0.00, 0.00, 271.17);
	CreateDynamicObject(970, 2071.69, -1904.17, 13.10,   0.00, 0.00, 90.08);
	CreateDynamicObject(970, 2071.63, -1899.98, 13.10,   0.00, 0.00, 90.08);
	CreateDynamicObject(970, 2071.63, -1895.91, 13.10,   0.00, 0.00, 90.08);
	CreateDynamicObject(3095, 2038.30, -1915.20, 18.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(3928, 2038.60, -1915.20, 19.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(10244, 2030.00, -1909.20, 15.20,   0.00, 0.00, 270.00);
	CreateDynamicObject(970, 2049.30, -1920.20, 13.10,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2049.30, -1916.10, 13.10,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2049.30, -1911.90, 13.10,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2049.20, -1902.70, 13.10,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2071.70, -1902.70, 13.10,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2051.20, -1900.60, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2055.30, -1900.60, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2059.40, -1900.60, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2063.50, -1900.60, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2067.60, -1900.60, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(1361, 2070.70, -1900.40, 13.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2069.80, -1922.40, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2065.70, -1922.40, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2061.60, -1922.30, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2051.40, -1922.30, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(1280, 2045.40, -1921.00, 12.90,   0.00, 358.00, 180.25);
	CreateDynamicObject(1280, 2045.40, -1915.90, 12.90,   0.00, 357.99, 180.25);
	CreateDynamicObject(1280, 2045.40, -1904.30, 13.00,   0.00, 357.99, 180.25);
	CreateDynamicObject(1280, 2051.20, -1897.50, 12.90,   0.00, 357.99, 90.25);
	CreateDynamicObject(1280, 2065.50, -1897.50, 13.00,   0.00, 357.99, 90.25);
	CreateDynamicObject(1361, 2054.10, -1897.60, 13.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(1361, 2049.20, -1904.90, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(1361, 2049.20, -1909.40, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(3920, 2045.40, -1916.30, 15.90,   0.00, 0.00, 269.75);
	CreateDynamicObject(3920, 2045.40, -1903.90, 15.90,   0.00, 0.00, 269.75);
	CreateDynamicObject(3920, 2052.10, -1897.50, 15.80,   0.00, 0.00, 180.25);
	CreateDynamicObject(3920, 2064.80, -1897.50, 15.90,   0.00, 0.00, 180.25);
	CreateDynamicObject(2656, 2045.20, -1909.80, 13.60,   0.00, 0.00, 90.50);
	CreateDynamicObject(2714, 2045.20, -1910.60, 14.10,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2034.10, -1921.70, 19.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2038.20, -1921.70, 19.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2042.30, -1921.70, 19.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2044.40, -1919.60, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2044.40, -1915.50, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2044.40, -1911.40, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2044.40, -1907.30, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2044.40, -1903.20, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2044.40, -1899.10, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2032.00, -1919.60, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2032.00, -1907.40, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2070.80, -1894.60, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2070.80, -1890.50, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2070.80, -1887.10, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2068.70, -1896.70, 19.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2064.60, -1896.70, 19.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2060.50, -1896.70, 19.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2056.40, -1896.70, 19.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2052.30, -1896.70, 19.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2048.20, -1896.70, 19.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(1361, 2044.80, -1896.20, 19.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2032.00, -1886.90, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2032.00, -1891.00, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2032.00, -1895.10, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2032.00, -1899.20, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(970, 2032.00, -1903.30, 19.60,   0.00, 0.00, 89.75);
	CreateDynamicObject(1361, 2032.50, -1910.60, 19.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(1361, 2032.50, -1916.40, 19.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2034.10, -1884.80, 19.60,   0.00, 0.00, 0.25);
	CreateDynamicObject(970, 2038.20, -1884.80, 19.60,   0.00, 0.00, 0.25);
	CreateDynamicObject(970, 2042.30, -1884.80, 19.60,   0.00, 0.00, 0.25);
	CreateDynamicObject(970, 2046.40, -1884.80, 19.60,   0.00, 0.00, 0.25);
	CreateDynamicObject(970, 2050.40, -1884.80, 19.60,   0.00, 0.00, 0.25);
	CreateDynamicObject(970, 2054.50, -1884.80, 19.60,   0.00, 0.00, 0.25);
	CreateDynamicObject(970, 2058.60, -1884.80, 19.60,   0.00, 0.00, 0.25);
	CreateDynamicObject(970, 2062.70, -1884.80, 19.60,   0.00, 0.00, 0.25);
	CreateDynamicObject(970, 2066.80, -1884.80, 19.60,   0.00, 0.00, 0.25);
	CreateDynamicObject(1361, 2069.80, -1885.40, 19.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(19124, 2028.30, -1915.10, 19.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(19124, 2030.70, -1902.40, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(19124, 2027.90, -1902.50, 13.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(19124, 2034.70, -1911.90, 19.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(19124, 2034.70, -1918.70, 19.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(19124, 2042.30, -1918.70, 19.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(19124, 2042.30, -1911.90, 19.70,   0.00, 0.00, 0.00);
//////CNN Por Gabriel
CreateDynamicObject(3851, 647.60, -1366.50, 18.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 647.50, -1377.70, 18.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 647.55, -1371.82, 14.60,   0.00, 0.00, -0.42);
CreateDynamicObject(3851, 647.50, -1377.70, 14.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 647.70, -1336.90, 18.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 647.64, -1348.08, 18.60,   0.00, 0.00, -0.36);
CreateDynamicObject(3851, 647.69, -1342.17, 14.60,   0.00, 0.00, -0.24);
CreateDynamicObject(3851, 647.70, -1336.90, 14.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 647.60, -1352.20, 18.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 647.60, -1358.40, 18.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3437, 648.19, -1350.54, 13.00,   0.00, 0.00, 272.00);
CreateDynamicObject(3437, 648.18, -1352.10, 13.00,   0.00, 0.00, 272.00);
CreateDynamicObject(3437, 648.14, -1364.85, 13.00,   0.00, 0.00, 272.00);
CreateDynamicObject(3437, 648.25, -1362.29, 13.00,   0.00, 0.00, 272.00);
CreateDynamicObject(3851, 653.30, -1353.60, 14.60,   0.00, 0.00, 92.00);
CreateDynamicObject(3851, 655.16, -1354.56, 14.60,   0.00, 0.00, 268.00);
CreateDynamicObject(3498, 647.80, -1353.70, 12.40,   0.00, 0.00, 354.00);
CreateDynamicObject(3498, 647.70, -1360.70, 12.40,   0.00, 0.00, 354.00);
CreateDynamicObject(2946, 649.60, -1358.70, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2946, 649.60, -1355.60, 12.60,   0.00, 0.00, 180.00);
CreateDynamicObject(2773, 648.60, -1355.20, 13.10,   0.00, 0.00, 270.00);
CreateDynamicObject(2773, 648.50, -1359.10, 13.10,   0.00, 0.00, 269.99);
CreateDynamicObject(3851, 647.54, -1371.91, 18.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 646.60, -1353.70, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 646.40, -1360.60, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1257, 644.20, -1345.10, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1258, 643.20, -1360.90, 13.30,   0.00, 0.00, 86.00);
CreateDynamicObject(1346, 646.60, -1330.30, 13.90,   0.00, 0.00, 270.00);
CreateDynamicObject(3920, 647.78, -1376.11, 19.70,   0.00, 0.00, 89.38);
CreateDynamicObject(3920, 647.25, -1338.80, 19.80,   0.00, 0.00, 270.00);
CreateDynamicObject(1290, 633.10, -1299.60, 19.50,   0.00, 0.00, 0.00);
CreateDynamicObject(5837, 771.10, -1379.50, 14.30,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 784.50, -1382.50, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 784.50, -1378.30, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 784.50, -1374.10, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 784.50, -1369.90, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 784.50, -1365.70, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 784.50, -1361.50, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 784.50, -1357.30, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 784.60, -1353.10, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 784.60, -1349.00, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(870, 785.90, -1350.60, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.90, -1350.60, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 786.00, -1352.60, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 786.10, -1354.80, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 786.20, -1357.50, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.70, -1357.50, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.80, -1360.00, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.90, -1362.50, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.70, -1364.80, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.70, -1364.80, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.80, -1367.30, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.90, -1369.00, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.50, -1371.30, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.60, -1373.50, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.50, -1376.50, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.90, -1375.00, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.50, -1378.30, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.60, -1380.00, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.70, -1382.00, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.50, -1383.50, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.40, -1382.00, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.30, -1380.30, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(870, 785.30, -1380.30, 12.80,   0.00, 0.00, 43.99);
CreateDynamicObject(871, 786.10, -1351.30, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(871, 786.00, -1355.60, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(871, 785.90, -1360.60, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(871, 785.80, -1365.90, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(871, 786.20, -1371.20, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(871, 785.80, -1377.20, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(871, 786.00, -1381.50, 12.80,   0.00, 0.00, 0.00);
CreateDynamicObject(858, 786.00, -1349.60, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(858, 785.70, -1356.50, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(858, 785.90, -1362.70, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(858, 786.00, -1370.10, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(858, 785.80, -1378.50, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(858, 785.60, -1383.40, 12.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3934, 742.70, -1369.10, 24.70,   0.00, 0.00, 270.00);
CreateDynamicObject(1682, 720.70, -1372.80, 34.50,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 739.10, -1365.20, 25.20,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 746.00, -1365.20, 25.20,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 746.10, -1372.90, 25.20,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 739.10, -1372.90, 25.20,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 782.60, -1385.60, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 773.40, -1385.50, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(16613, 695.40, -1355.90, 27.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1319, 782.11, -1383.90, 13.18,   0.00, 0.00, 88.57);
CreateDynamicObject(2614, 772.19, -1385.22, 15.71,   0.00, 0.00, 359.35);
CreateDynamicObject(2614, 783.24, -1385.12, 15.71,   0.00, 0.00, 359.35);
CreateDynamicObject(3851, 754.70, -1379.04, 18.79,   0.00, 0.00, 0.21);
CreateDynamicObject(3851, 754.75, -1379.07, 22.72,   0.00, 0.00, 0.21);
CreateDynamicObject(3851, 754.72, -1369.51, 18.79,   0.00, 0.00, -0.03);
CreateDynamicObject(3851, 754.73, -1367.79, 22.71,   0.00, 0.00, 359.88);
CreateDynamicObject(3851, 754.75, -1365.21, 18.74,   0.00, 0.00, 359.88);
CreateDynamicObject(3851, 754.74, -1365.22, 14.72,   0.00, 0.00, 359.88);
CreateDynamicObject(3851, 754.78, -1365.17, 22.71,   0.00, 0.00, 359.88);
CreateDynamicObject(1232, 618.10, -1417.80, 6.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 654.20, -1411.10, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 673.60, -1389.90, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 686.10, -1411.30, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 697.30, -1389.70, 15.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 716.60, -1411.00, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 728.60, -1389.70, 15.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 747.00, -1411.20, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 757.20, -1389.50, 15.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 755.33, -1382.92, 22.97,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 757.53, -1380.70, 22.97,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1376.40, 22.97,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1372.10, 22.97,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1367.74, 22.97,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1363.40, 22.97,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1359.05, 22.97,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1359.05, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1363.40, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1367.74, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1372.10, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1376.40, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1380.70, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1359.05, 16.45,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1363.40, 16.45,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1367.74, 16.45,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1372.10, 16.45,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1376.40, 16.45,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1380.70, 16.45,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1359.05, 19.70,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 755.86, -1359.05, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1363.40, 19.70,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1367.74, 19.70,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1372.10, 19.70,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1376.40, 19.70,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 757.53, -1380.70, 19.70,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 755.86, -1363.40, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 755.86, -1372.10, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 755.86, -1367.74, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 755.86, -1376.40, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 755.86, -1380.70, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 755.33, -1382.92, 19.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 755.32, -1356.82, 13.20,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 750.99, -1356.82, 13.20,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 746.65, -1356.82, 13.20,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 734.60, -1353.62, 13.20,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 755.32, -1356.82, 22.97,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 742.80, -1355.33, 13.20,   0.00, 0.00, 137.99);
CreateDynamicObject(1649, 730.25, -1353.47, 13.20,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 755.32, -1356.82, 16.45,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 755.32, -1356.82, 19.70,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 750.99, -1356.82, 16.45,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 746.65, -1356.82, 16.45,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 742.80, -1355.33, 16.45,   0.00, 0.00, 137.99);
CreateDynamicObject(1649, 738.94, -1353.76, 16.45,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 734.60, -1353.62, 16.45,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 730.25, -1353.47, 16.45,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 750.99, -1356.82, 22.97,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 746.65, -1356.82, 19.70,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 742.80, -1355.33, 19.70,   0.00, 0.00, 137.99);
CreateDynamicObject(1649, 738.94, -1353.76, 22.97,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 734.60, -1353.62, 22.97,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 730.25, -1353.47, 19.70,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 750.99, -1356.82, 19.70,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 746.65, -1356.82, 22.97,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 752.55, -1359.05, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 749.30, -1359.05, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 746.05, -1359.05, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 742.80, -1355.33, 22.97,   0.00, 0.00, 137.99);
CreateDynamicObject(1649, 738.94, -1353.76, 19.70,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 734.60, -1353.62, 19.70,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 730.25, -1353.47, 22.97,   0.00, 0.00, 177.99);
CreateDynamicObject(1649, 742.78, -1359.05, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 739.50, -1359.05, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 736.20, -1359.05, 24.63,   270.00, 0.00, 90.00);
CreateDynamicObject(1649, 741.68, -1356.55, 24.50,   270.00, 0.00, 137.99);
CreateDynamicObject(1649, 738.90, -1355.41, 24.62,   270.00, 0.00, 177.99);
CreateDynamicObject(1649, 736.80, -1355.34, 24.62,   270.00, 180.00, 177.99);
CreateDynamicObject(14387, 732.26, -1358.60, 23.60,   0.00, 0.00, 94.00);
CreateDynamicObject(3660, 758.01, -1364.93, 15.17,   0.00, 0.00, 90.00);
CreateDynamicObject(3660, 754.30, -1356.06, 15.17,   0.00, 0.00, 180.00);
CreateDynamicObject(3660, 758.01, -1373.00, 15.17,   0.00, 0.00, 90.00);
CreateDynamicObject(3920, 757.23, -1363.20, 23.65,   0.00, 0.00, 270.00);
CreateDynamicObject(3920, 757.23, -1376.40, 23.65,   0.00, 0.00, 270.00);
CreateDynamicObject(3920, 757.23, -1364.00, 23.65,   0.00, 0.00, 270.00);
CreateDynamicObject(3920, 757.23, -1376.00, 23.65,   0.00, 0.00, 270.00);
CreateDynamicObject(3920, 750.70, -1357.00, 23.65,   0.00, 0.00, 0.00);
CreateDynamicObject(3920, 751.20, -1357.00, 23.65,   0.00, 0.00, 0.00);
CreateDynamicObject(640, 734.90, -1356.30, 25.39,   0.00, 0.00, 178.00);
CreateDynamicObject(640, 734.81, -1358.60, 25.39,   0.00, 0.00, 177.99);
CreateDynamicObject(640, 737.06, -1360.97, 25.39,   0.00, 0.00, 270.00);
CreateDynamicObject(640, 742.06, -1360.97, 25.39,   0.00, 0.00, 269.99);
CreateDynamicObject(640, 746.88, -1360.97, 25.39,   0.00, 0.00, 269.99);
CreateDynamicObject(640, 751.97, -1360.97, 25.39,   0.00, 0.00, 269.99);
CreateDynamicObject(640, 754.30, -1363.29, 25.39,   0.00, 0.00, 179.99);
CreateDynamicObject(640, 754.30, -1368.31, 25.39,   0.00, 0.00, 179.99);
CreateDynamicObject(640, 754.30, -1373.55, 25.39,   0.00, 0.00, 179.99);
CreateDynamicObject(640, 754.30, -1378.84, 25.39,   0.00, 0.00, 179.99);
CreateDynamicObject(640, 754.30, -1382.13, 25.39,   0.00, 0.00, 179.99);
CreateDynamicObject(3763, 661.02, -1358.06, 53.95,   0.00, 0.00, 42.00);
CreateDynamicObject(1596, 720.45, -1380.21, 30.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1596, 699.58, -1379.97, 30.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1596, 677.49, -1380.11, 30.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1596, 676.68, -1331.58, 30.55,   0.00, 0.00, 178.00);
CreateDynamicObject(1596, 698.73, -1330.66, 30.55,   0.00, 0.00, 177.99);
CreateDynamicObject(1596, 720.50, -1330.59, 30.55,   0.00, 0.00, 177.99);
CreateDynamicObject(710, 758.40, -1355.80, 25.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 734.70, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 739.88, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 745.12, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 750.35, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 758.25, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 763.49, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 768.74, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 773.99, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 779.24, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 784.36, -1348.00, 13.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 769.56, -1381.90, 13.80,   0.00, 0.00, 270.00);
CreateDynamicObject(1412, 769.56, -1376.65, 13.80,   0.00, 0.00, 270.00);
CreateDynamicObject(8838, 784.70, -1366.49, 14.00,   0.00, 0.00, 269.40);
CreateDynamicObject(1251, 783.50, -1352.33, 12.65,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 783.50, -1359.70, 12.65,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 783.50, -1366.70, 12.65,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 783.50, -1373.70, 12.65,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 783.50, -1380.70, 12.65,   0.00, 0.00, 90.00);
CreateDynamicObject(18014, 784.50, -1384.10, 13.13,   0.00, 0.00, 92.00);
CreateDynamicObject(9697, 721.64, -1333.74, 12.56,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 779.98, -1352.33, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 779.98, -1359.70, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 779.98, -1366.70, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 779.98, -1373.70, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 782.00, -1384.21, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 762.21, -1357.29, 12.92,   0.00, 0.00, 92.00);
CreateDynamicObject(1280, 759.70, -1359.25, 12.92,   0.00, 0.00, 180.00);
CreateDynamicObject(1280, 759.70, -1365.50, 12.92,   0.00, 0.00, 179.99);
CreateDynamicObject(1280, 759.70, -1372.24, 12.92,   0.00, 0.00, 179.99);
CreateDynamicObject(1280, 759.70, -1378.74, 12.92,   0.00, 0.00, 179.99);
CreateDynamicObject(628, 760.07, -1381.53, 14.66,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 759.84, -1357.40, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 759.84, -1362.43, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 759.84, -1368.94, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 759.84, -1375.24, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1998, 771.99, -1380.77, 12.94,   0.00, 0.00, 178.00);
CreateDynamicObject(1663, 771.04, -1380.59, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, 771.18, -1376.07, 15.41,   0.00, 0.00, 0.00);
CreateDynamicObject(1557, 731.96, -1352.30, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1557, 732.01, -1349.27, 12.50,   0.00, 0.00, 268.00);
CreateDynamicObject(1566, 754.00, -1359.59, 17.81,   0.00, 0.00, 180.00);
CreateDynamicObject(1566, 750.83, -1359.59, 17.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2001, 739.86, -1357.38, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 733.10, -1352.70, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 733.10, -1348.80, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1257, 770.58, -1326.01, 13.83,   0.00, 0.00, 268.00);
CreateDynamicObject(1229, 768.00, -1324.98, 14.11,   0.00, 0.00, 270.00);
CreateDynamicObject(1363, 789.52, -1328.78, 13.38,   0.00, 0.00, 344.00);
CreateDynamicObject(18009, -2710.78, 524.81, 51.42,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2720.50, 519.55, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 515.22, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 519.55, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 515.22, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 523.90, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 528.24, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 532.60, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 536.97, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 523.90, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 528.24, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 532.60, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2713.96, 513.03, 51.01,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, -2718.30, 513.03, 47.75,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 521.23, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 513.03, 47.75,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 513.03, 51.01,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 514.70, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 517.96, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 514.70, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 517.96, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 521.23, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2719.10, 520.67, 51.01,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.52, 522.47, 50.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2707.51, 533.97, 50.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2707.51, 517.79, 54.24,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, -2700.92, 519.99, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2707.51, 517.79, 50.99,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 517.79, 50.99,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 517.79, 54.24,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2700.92, 537.35, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 519.99, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 524.33, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 528.66, 50.99,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2700.92, 533.00, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 524.33, 54.24,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 528.66, 54.24,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 533.00, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2700.92, 537.35, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2703.15, 536.40, 50.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 536.40, 50.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2703.15, 536.40, 54.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 536.40, 54.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 525.90, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 519.40, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 529.20, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 522.80, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 532.43, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 535.70, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 519.40, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 522.63, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 532.43, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 529.20, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 535.70, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1523, -2706.96, 524.53, 48.17,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2700.55, 524.40, 52.31,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2704.90, 524.47, 52.31,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2700.55, 524.40, 52.31,   0.00, 0.00, 179.99);
CreateDynamicObject(2591, -2702.66, 524.43, 48.11,   359.50, 180.00, 89.00);
CreateDynamicObject(2591, -2703.76, 524.47, 48.13,   359.49, 179.99, 88.99);
CreateDynamicObject(1649, -2703.14, 522.63, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.46, 522.80, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2704.90, 524.47, 52.31,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 525.90, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 519.53, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.46, 519.53, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(2184, -2703.32, 520.12, 48.18,   0.00, 0.00, 180.00);
CreateDynamicObject(1998, -2702.40, 522.80, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(2190, -2704.80, 519.90, 48.96,   0.00, 0.00, 18.00);
CreateDynamicObject(1663, -2701.49, 522.85, 48.64,   0.00, 0.00, 178.00);
CreateDynamicObject(1714, -2704.37, 518.30, 48.20,   0.00, 0.00, 182.00);
CreateDynamicObject(2894, -2704.11, 519.48, 48.96,   0.00, 0.00, 344.00);
CreateDynamicObject(1962, -2700.95, 519.20, 49.79,   0.00, 0.00, 90.00);
CreateDynamicObject(1961, -2700.95, 521.17, 49.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1960, -2700.95, 522.03, 50.47,   0.00, 0.00, 90.00);
CreateDynamicObject(14860, -2703.91, 518.92, 49.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2066, -2705.05, 523.60, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(14493, -2704.80, 531.20, 50.48,   0.00, 0.00, 180.00);
CreateDynamicObject(2637, -2704.07, 533.90, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, -2706.78, 535.97, 51.37,   0.00, 0.00, 40.00);
CreateDynamicObject(2813, -2704.06, 533.87, 48.99,   0.00, 0.00, 0.00);
CreateDynamicObject(2828, -2702.60, 522.74, 48.99,   0.00, 0.00, 286.00);
CreateDynamicObject(14391, -2712.40, 528.10, 49.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1670, -2704.77, 533.62, 49.02,   0.00, 0.00, 0.00);
CreateDynamicObject(625, -2703.78, 524.84, 48.99,   0.00, 0.00, 228.00);
CreateDynamicObject(638, -2706.96, 534.01, 48.88,   0.00, 0.00, 0.00);
CreateDynamicObject(3386, -2708.90, 519.30, 48.18,   0.00, 0.00, 90.00);
CreateDynamicObject(3386, -2708.90, 520.32, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(3387, -2709.91, 519.30, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3388, -2710.90, 519.30, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3389, -2711.90, 519.29, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3387, -2712.89, 519.29, 48.18,   0.00, 0.00, 90.00);
CreateDynamicObject(1714, -2710.08, 528.15, 48.18,   0.00, 0.00, 274.00);
CreateDynamicObject(1663, -2717.84, 529.74, 49.04,   0.00, 0.00, 44.00);
CreateDynamicObject(1663, -2717.83, 526.97, 49.04,   0.00, 0.00, 140.00);
CreateDynamicObject(1827, -2716.56, 528.35, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 529.11, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(646, -2719.20, 524.70, 49.99,   0.00, 0.00, 0.00);
CreateDynamicObject(646, -2719.20, 532.21, 49.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1557, -2719.06, 520.38, 47.08,   0.00, 0.00, 208.00);
CreateDynamicObject(1557, -2720.42, 518.09, 47.08,   0.00, 0.00, 90.00);
CreateDynamicObject(638, -2718.17, 517.72, 49.28,   0.00, 0.00, 90.00);
CreateDynamicObject(638, -2718.99, 517.72, 49.28,   0.00, 0.00, 90.00);
CreateDynamicObject(629, -2714.90, 515.60, 48.50,   0.00, 0.00, 220.00);
CreateDynamicObject(741, -2712.05, 516.10, 48.90,   0.00, 0.00, 248.00);
CreateDynamicObject(2572, -2717.70, 514.10, 48.50,   0.00, 0.00, 120.00);
CreateDynamicObject(2266, -2714.87, 519.25, 50.95,   0.00, 0.00, 270.00);
CreateDynamicObject(2179, -2719.80, 524.81, 50.29,   0.00, 0.00, 0.00);
CreateDynamicObject(2179, -2719.80, 531.82, 50.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1892, -2716.11, 520.57, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(18075, -2713.50, 528.47, 51.77,   0.00, 0.00, 0.00);
CreateDynamicObject(1776, -2710.81, 536.21, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(2700, -2708.35, 535.81, 51.29,   0.00, 0.00, 226.00);
CreateDynamicObject(3031, -2713.24, 514.25, 50.18,   0.00, 0.00, 132.00);
CreateDynamicObject(2295, -2719.82, 535.15, 48.58,   0.00, 0.00, 44.00);
CreateDynamicObject(1510, -2717.00, 528.53, 49.02,   0.00, 0.00, 0.00);
CreateDynamicObject(1667, -2717.00, 528.00, 49.02,   0.00, 0.00, 0.00);
CreateDynamicObject(18648, 647.68, -1352.64, 16.49,   0.00, 0.00, 0.78);
CreateDynamicObject(18648, 647.64, -1350.67, 12.71,   0.00, 0.00, 0.78);
CreateDynamicObject(18648, 647.64, -1350.67, 16.49,   0.00, 0.00, 0.78);
CreateDynamicObject(18648, 647.68, -1352.64, 12.54,   0.00, 0.00, 0.78);
CreateDynamicObject(18648, 647.74, -1361.99, 12.61,   0.00, 0.00, 0.78);
CreateDynamicObject(18648, 647.60, -1363.97, 12.77,   0.00, 0.00, -9.24);
CreateDynamicObject(18648, 647.71, -1365.88, 12.76,   0.00, 0.00, 17.34);
CreateDynamicObject(18648, 647.71, -1365.88, 16.52,   0.00, 0.00, 17.34);
CreateDynamicObject(18648, 647.60, -1363.97, 16.52,   0.00, 0.00, -9.24);
CreateDynamicObject(18648, 647.74, -1361.99, 16.52,   0.00, 0.00, 0.78);
		// -================================  Curva LS =============================================- //
CreateDynamicObject(984, 1415.31, -1409.76, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1415.32, -1422.58, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1415.19, -1432.14, 13.41,   0.00, 0.00, 358.00);
CreateDynamicObject(984, 1402.49, -1414.37, 13.35,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1402.49, -1427.20, 13.35,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1402.43, -1433.60, 13.39,   0.00, 0.00, 359.99);
CreateDynamicObject(983, 1409.03, -1440.57, 13.40,   0.00, 0.00, 89.99);
CreateDynamicObject(983, 1415.44, -1440.58, 13.38,   0.00, 0.00, 89.99);
CreateDynamicObject(983, 1417.05, -1440.57, 13.40,   0.00, 0.00, 89.99);
CreateDynamicObject(983, 1418.01, -1437.97, 13.40,   0.00, 0.00, 67.99);
CreateDynamicObject(983, 1415.18, -1433.63, 13.41,   0.00, 0.00, 357.99);
CreateDynamicObject(984, 1406.38, -1400.70, 13.35,   0.00, 0.00, 270.00);
CreateDynamicObject(824, 1406.64, -1411.29, 15.24,   0.00, 0.00, 0.00);
CreateDynamicObject(823, 1409.33, -1423.49, 16.06,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1414.37, -1402.96, 13.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1413.24, -1401.72, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1419.47, -1439.66, 13.51,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1402.97, -1437.03, 13.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1405.64, -1439.89, 13.52,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1400.58, -1401.83, 13.45,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1401.07, -1405.01, 13.39,   0.00, 0.00, 23.99);
CreateDynamicObject(19124, 1399.67, -1402.56, 13.28,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1400.02, -1401.05, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1413.88, -1402.14, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1415.03, -1403.52, 13.29,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1412.56, -1401.16, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1420.30, -1440.31, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1420.49, -1439.35, 13.28,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1420.96, -1440.02, 13.28,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1403.17, -1437.85, 13.33,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1405.06, -1439.74, 13.33,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1404.58, -1438.42, 13.42,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 1423.41, -1446.38, 12.55,   0.00, 0.00, 86.00);
CreateDynamicObject(1223, 1401.35, -1446.56, 12.55,   0.00, 0.00, 86.00);
CreateDynamicObject(1223, 1391.52, -1425.13, 12.56,   0.00, 0.00, 4.00);
CreateDynamicObject(1223, 1425.15, -1391.20, 12.57,   0.00, 0.00, 222.00);
CreateDynamicObject(1223, 1396.91, -1389.83, 12.55,   0.00, 0.00, 271.99);
CreateDynamicObject(1223, 1426.46, -1426.80, 12.55,   0.00, 0.00, 180.00);
CreateDynamicObject(8674, 1401.77, -1450.84, 14.31,   0.00, 0.00, 0.00);
CreateDynamicObject(17969, 1382.19, -1467.58, 14.57,   0.00, 0.00, 164.00);
CreateDynamicObject(1490, 1382.77, -1465.55, 15.03,   0.00, 0.00, 158.00);
CreateDynamicObject(8674, 1379.87, -1484.24, 14.01,   0.00, 0.00, 344.00);
CreateDynamicObject(3091, 1385.47, -1549.75, 13.26,   0.00, 0.00, 348.00);
CreateDynamicObject(5069, 1378.32, -1468.30, 14.84,   0.00, 0.00, 162.00);
CreateDynamicObject(3265, 1391.80, -1452.73, 12.55,   0.00, 0.00, 170.00);
CreateDynamicObject(17037, 1381.50, -1482.27, 15.04,   0.00, 0.00, 74.00);
CreateDynamicObject(1431, 1378.53, -1483.23, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1431, 1378.85, -1482.44, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1362, 1379.76, -1483.53, 13.15,   0.00, 0.00, 0.00);
CreateDynamicObject(3497, 1381.20, -1472.13, 16.16,   0.00, 0.00, 256.00);
CreateDynamicObject(1439, 1383.58, -1484.74, 12.55,   0.00, 0.00, 164.00);
CreateDynamicObject(1329, 1382.33, -1484.18, 13.00,   0.00, 0.00, 168.00);
CreateDynamicObject(2670, 1383.17, -1482.47, 12.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2670, 1379.70, -1481.44, 12.64,   0.00, 0.00, 0.00);
CreateDynamicObject(3594, 1385.71, -1476.13, 13.18,   0.00, 0.00, 346.00);
CreateDynamicObject(3035, 1385.00, -1480.18, 13.07,   0.00, 0.00, 344.00);
CreateDynamicObject(3119, 1384.94, -1480.30, 14.12,   0.00, 0.00, 4.82);
CreateDynamicObject(2953, 1383.96, -1480.05, 13.84,   0.00, 0.00, 0.00);
CreateDynamicObject(1442, 1380.23, -1482.75, 13.15,   0.00, 0.00, 0.00);
CreateDynamicObject(1369, 1380.88, -1483.51, 13.17,   0.00, 0.00, 118.00);
CreateDynamicObject(1237, 1388.07, -1550.29, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 1383.32, -1548.87, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(1257, 1371.85, -1386.70, 13.95,   0.00, 0.00, 90.00);
CreateDynamicObject(1361, 1374.79, -1386.58, 13.39,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 1377.64, -1389.38, 12.63,   0.00, 0.00, 271.99);
CreateDynamicObject(1216, 1376.72, -1386.09, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1216, 1377.41, -1386.09, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1216, 1376.00, -1386.13, 13.33,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1371.71, -1400.58, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1319, 1367.87, -1400.58, 12.93,   0.00, 0.00, 270.00);
CreateDynamicObject(1290, 1369.80, -1400.58, 18.41,   0.00, 0.00, 90.00);
CreateDynamicObject(19124, 1400.12, -1400.48, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1389.44, -1400.32, 14.29,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1381.67, -1400.39, 14.30,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1392.76, -1401.73, 13.03,   0.00, 0.00, 270.00);
CreateDynamicObject(984, 1379.91, -1401.74, 13.02,   0.00, 0.00, 270.00);
CreateDynamicObject(984, 1392.82, -1399.54, 13.02,   0.00, 0.00, 270.00);
CreateDynamicObject(984, 1379.98, -1399.52, 13.03,   0.00, 0.00, 270.00);
CreateDynamicObject(983, 1375.12, -1401.74, 13.07,   0.00, 0.00, 269.99);
CreateDynamicObject(983, 1375.17, -1399.52, 13.07,   0.00, 0.00, 269.99);
CreateDynamicObject(19124, 1368.62, -1400.62, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1367.95, -1385.96, 13.26,   0.00, 0.00, 0.00);

///MAPEO HOSPITAL!!!!!!!!
CreateDynamicObject(10932, 1191.12, -1332.69, 23.82,   0.00, 0.00, 0.00);
CreateDynamicObject(11353, 1210.46, -1332.73, 20.99,   0.00, 0.00, 0.00);
CreateDynamicObject(11353, 1210.47, -1332.73, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1210.37, -1345.37, 13.83,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1210.39, -1354.34, 13.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1210.41, -1332.98, 13.85,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1210.49, -1322.03, 13.66,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1210.40, -1311.47, 13.65,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1178.06, -1330.90, 13.01,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1177.55, -1333.89, 13.04,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1175.77, -1333.02, 12.97,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1175.27, -1330.92, 12.98,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1177.91, -1332.50, 13.06,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1178.49, -1333.80, 13.14,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1178.43, -1332.21, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1178.36, -1330.87, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1174.46, -1333.92, 12.97,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1173.70, -1332.87, 12.97,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1173.61, -1330.04, 12.98,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1177.25, -1316.13, 13.06,   0.00, 0.00, -0.36);
CreateDynamicObject(869, 1178.29, -1315.09, 13.08,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1178.42, -1313.27, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1174.87, -1313.20, 12.97,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1174.81, -1314.00, 12.97,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1175.00, -1315.77, 12.97,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1178.24, -1316.38, 12.97,   0.00, 0.00, 102.66);
CreateDynamicObject(869, 1176.53, -1315.00, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(8556, 1200.72, -1378.00, 16.69,   0.00, 0.18, 0.48);
CreateDynamicObject(4641, 1200.77, -1382.70, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(966, 1197.72, -1384.84, 12.17,   0.00, 0.00, 0.00);
CreateDynamicObject(966, 1203.63, -1384.73, 12.19,   0.00, 0.00, 180.78);
CreateDynamicObject(968, 1203.65, -1384.73, 12.82,   0.00, 0.00, 0.00);
CreateDynamicObject(968, 1197.72, -1384.83, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1210.60, -1362.12, 12.97,   0.00, 0.00, 90.30);
CreateDynamicObject(970, 1210.56, -1366.25, 13.02,   0.00, 0.00, 89.28);
CreateDynamicObject(970, 1210.51, -1370.35, 13.02,   0.00, 0.00, 89.28);
CreateDynamicObject(970, 1210.44, -1378.52, 13.02,   0.00, 0.00, 89.28);
CreateDynamicObject(970, 1210.48, -1374.46, 13.02,   0.00, 0.00, 89.28);
CreateDynamicObject(970, 1210.45, -1382.65, 13.02,   0.00, 0.00, 89.28);
CreateDynamicObject(8556, 1200.78, -1294.56, 16.78,   -3.44, 0.18, 0.48);
CreateDynamicObject(4641, 1200.69, -1290.05, 13.82,   0.00, 0.00, 180.84);
CreateDynamicObject(966, 1197.09, -1287.88, 12.37,   0.00, 0.00, 0.00);
CreateDynamicObject(966, 1204.08, -1287.70, 12.37,   0.00, 0.00, 183.84);
CreateDynamicObject(968, 1197.06, -1287.84, 13.31,   0.00, 0.00, 0.00);
CreateDynamicObject(968, 1204.02, -1287.68, 13.31,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1210.17, -1303.80, 13.14,   0.00, 0.00, 88.98);
CreateDynamicObject(970, 1210.42, -1291.42, 13.14,   0.00, 0.00, 88.98);
CreateDynamicObject(970, 1210.33, -1295.53, 13.14,   0.00, 0.00, 88.98);
CreateDynamicObject(970, 1210.22, -1299.70, 13.14,   0.00, 0.00, 88.98);
	// -================================  Gasolinera Alhambra =============================================- //
	CreateDynamicObject(638,1951.32080078,-1775.40502930,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(2)
	CreateDynamicObject(638,1951.30432129,-1772.74841309,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(3)
	CreateDynamicObject(638,1951.29138184,-1770.06665039,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(4)
	CreateDynamicObject(638,1951.27941895,-1767.38989258,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(6)
	CreateDynamicObject(638,1952.02014160,-1767.41088867,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(7)
	CreateDynamicObject(638,1952.04418945,-1770.08251953,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(8)
	CreateDynamicObject(638,1952.02844238,-1772.74719238,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(9)
	CreateDynamicObject(638,1952.04797363,-1775.41003418,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(10)
	CreateDynamicObject(638,1951.25585938,-1764.71081543,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(11)
	CreateDynamicObject(638,1952.02209473,-1764.72583008,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(12)
	CreateDynamicObject(984,1952.63757324,-1770.74938965,13.18355465,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(1)
	CreateDynamicObject(984,1950.59020996,-1770.60546875,13.18355465,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(2)
	CreateDynamicObject(983,1950.61010742,-1764.22058105,13.23042965,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(2)
	CreateDynamicObject(983,1952.64660645,-1764.33203125,13.23042965,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(3)
	CreateDynamicObject(19124,1950.96203613,-1777.19238281,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(19124,1952.31225586,-1777.19860840,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
	CreateDynamicObject(19124,1951.60314941,-1777.96948242,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(19124,1952.38696289,-1761.12927246,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(19124,1950.56372070,-1761.09838867,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(19124,1951.59301758,-1760.65686035,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(19124,1951.54003906,-1762.75256348,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(984,1931.43420410,-1779.62329102,13.18355465,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(3)
	CreateDynamicObject(983,1928.25524902,-1786.13696289,13.23042965,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(4)
	CreateDynamicObject(1216,1928.60339355,-1770.35729980,13.23887730,0.00000000,0.00000000,92.00000000); //object(phonebooth1)(2)
	CreateDynamicObject(1231,1930.81140137,-1763.06945801,15.26946449,0.00000000,0.00000000,0.00000000); //object(streetlamp2)(1)
	CreateDynamicObject(983,1931.64233398,-1765.58142090,13.23042965,0.00000000,0.00000000,180.00000000); //object(fenceshit3)(5)
	CreateDynamicObject(983,1928.41772461,-1762.35717773,13.22262669,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(6)
	CreateDynamicObject(983,1922.01318359,-1762.36254883,13.22262669,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(7)
	CreateDynamicObject(983,1918.79614258,-1765.53662109,13.23042965,0.00000000,0.00000000,179.99450684); //object(fenceshit3)(9)
	CreateDynamicObject(19124,1931.22290039,-1773.35241699,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(8)
	CreateDynamicObject(19124,1931.35827637,-1768.63757324,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(19124,1919.00341797,-1762.68029785,13.10339546,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1286,1919.11901855,-1765.60803223,13.12594604,0.00000000,0.00000000,272.00000000); //object(newstandnew4)(1)
	CreateDynamicObject(1286,1919.10998535,-1765.08264160,13.12594604,0.00000000,0.00000000,271.99951172); //object(newstandnew4)(2)
	CreateDynamicObject(1286,1919.09777832,-1764.54174805,13.12594604,0.00000000,0.00000000,271.99951172); //object(newstandnew4)(3)
	CreateDynamicObject(1288,1919.17626953,-1763.91149902,13.12594604,0.00000000,0.00000000,270.00000000); //object(newstandnew2)(1)
	CreateDynamicObject(3657,1924.19543457,-1765.67480469,13.06508732,0.00000000,0.00000000,180.00000000); //object(airseata_las)(1)
	CreateDynamicObject(19124,1926.28845215,-1765.98498535,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(11)
	CreateDynamicObject(17969,1908.01550293,-1776.28540039,14.37443447,0.00000000,0.00000000,0.00000000); //object(hub_graffitti)(1)
	CreateDynamicObject(646,1921.84472656,-1765.75158691,13.96339893,0.00000000,0.00000000,0.00000000); //object(veg_palmkb14)(1)
//==========================================LCN===========================================================//
CreateDynamicObject(3499,1298.40002441,-2057.00000000,56.90000153,0.00000000,270.25024414,268.50000000); //object(wdpillar02_lvs) (1)
CreateDynamicObject(3499,1299.19921875,-2057.00000000,56.90000153,359.99890137,269.74978638,268.73934937); //object(wdpillar02_lvs) (2)
CreateDynamicObject(3475,1293.80004883,-2066.10009766,60.09999847,0.00000000,0.00000000,88.25000000); //object(vgsn_fncelec_pst) (1)
CreateDynamicObject(3475,1282.00000000,-2043.90002441,60.40000153,0.00000000,0.00000000,179.75000000); //object(vgsn_fncelec_pst) (2)
CreateDynamicObject(3475,1287.80004883,-2065.89990234,60.09999847,0.00000000,0.00000000,88.24768066); //object(vgsn_fncelec_pst) (3)
CreateDynamicObject(3475,1281.80004883,-2065.69995117,60.20000076,1.75000000,0.00000000,88.24768066); //object(vgsn_fncelec_pst) (4)
CreateDynamicObject(3475,1275.90002441,-2065.50000000,60.40000153,1.75000000,0.00000000,88.24768066); //object(vgsn_fncelec_pst) (5)
CreateDynamicObject(3475,1270.00000000,-2065.30004883,60.59999847,1.75000000,0.00000000,88.24768066); //object(vgsn_fncelec_pst) (6)
CreateDynamicObject(3475,1264.09997559,-2065.10009766,60.79999924,3.25000000,0.00000000,88.24768066); //object(vgsn_fncelec_pst) (7)
CreateDynamicObject(3475,1258.19995117,-2065.00000000,61.00000000,359.74670410,0.00000000,89.74218750); //object(vgsn_fncelec_pst) (9)
CreateDynamicObject(3475,1252.30004883,-2064.80004883,61.00000000,1.24633789,0.00000000,88.99182129); //object(vgsn_fncelec_pst) (11)
CreateDynamicObject(3475,1246.39941406,-2064.59960938,61.00000000,359.98352051,0.00000000,88.97827148); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1293.80004883,-2047.40002441,60.00000000,357.75000000,0.00000000,268.99768066); //object(vgsn_fncelec_pst) (15)
CreateDynamicObject(3475,1287.90002441,-2047.30004883,60.20000076,358.49780273,0.00000000,268.99475098); //object(vgsn_fncelec_pst) (16)
CreateDynamicObject(3475,1284.90002441,-2047.19995117,60.29999924,358.49487305,0.00000000,268.73925781); //object(vgsn_fncelec_pst) (17)
CreateDynamicObject(3475,1282.00000000,-2038.09960938,60.40000153,0.00000000,0.00000000,179.74731445); //object(vgsn_fncelec_pst) (18)
CreateDynamicObject(3475,1282.00000000,-2032.30004883,60.40000153,0.00000000,0.00000000,179.74731445); //object(vgsn_fncelec_pst) (19)
CreateDynamicObject(3475,1282.09997559,-2027.00000000,60.40000153,0.00000000,0.00000000,179.74731445); //object(vgsn_fncelec_pst) (20)
CreateDynamicObject(3475,1282.09997559,-2021.09997559,60.40000153,0.00000000,0.00000000,179.74731445); //object(vgsn_fncelec_pst) (21)
CreateDynamicObject(3475,1282.19995117,-2015.19995117,60.40000153,0.00000000,0.00000000,179.74731445); //object(vgsn_fncelec_pst) (22)
CreateDynamicObject(3475,1282.30004883,-2009.19995117,60.40000153,0.00000000,0.00000000,179.74731445); //object(vgsn_fncelec_pst) (23)
CreateDynamicObject(3475,1279.50000000,-2003.30004883,60.50000000,358.00000000,0.00000000,270.24731445); //object(vgsn_fncelec_pst) (24)
CreateDynamicObject(3475,1273.50000000,-2003.30004883,60.59999847,359.99499512,0.00000000,270.24719238); //object(vgsn_fncelec_pst) (25)
CreateDynamicObject(3475,1267.59997559,-2003.30004883,60.70000076,358.24450684,0.00000000,270.24719238); //object(vgsn_fncelec_pst) (26)
CreateDynamicObject(3475,1261.59960938,-2003.29980469,60.90000153,357.73681641,0.00000000,270.49438477); //object(vgsn_fncelec_pst) (27)
CreateDynamicObject(3475,1255.69995117,-2003.40002441,61.09999847,357.73681641,0.00000000,270.24719238); //object(vgsn_fncelec_pst) (28)
CreateDynamicObject(3475,1249.69921875,-2003.39941406,61.29999924,357.73132324,0.00000000,270.24719238); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1243.80004883,-2003.40002441,61.40000153,359.73681641,0.00000000,270.24719238); //object(vgsn_fncelec_pst) (31)
CreateDynamicObject(3475,1282.30004883,-2006.19995117,60.40000153,0.00000000,0.00000000,179.74731445); //object(vgsn_fncelec_pst) (33)
CreateDynamicObject(3475,1241.79980469,-2002.89941406,61.40000153,0.48339844,0.00000000,89.74182129); //object(vgsn_fncelec_pst) (34)
CreateDynamicObject(3475,1243.09997559,-2067.50000000,61.00000000,359.98352051,0.00000000,178.97827148); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1243.00000000,-2073.30004883,61.00000000,359.97802734,0.00000000,178.22277832); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1240.30004883,-2076.10009766,61.00000000,359.97802734,0.00000000,90.22021484); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1234.40002441,-2076.10009766,61.59999847,11.72802734,0.00000000,90.21972656); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1228.80004883,-2076.10009766,63.09999847,18.22790527,0.00000000,90.21423340); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1223.19995117,-2076.10009766,65.40000153,25.97631836,0.00000000,90.20874023); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1218.09997559,-2076.00000000,67.50000000,20.22167969,0.00000000,90.20324707); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1213.90002441,-2076.00000000,68.40000153,0.97033691,0.00000000,90.19775391); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1208.90002441,-2078.30004883,68.50000000,0.96679688,0.00000000,141.69226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1204.19995117,-2080.50000000,68.59999847,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1198.50000000,-2080.50000000,68.69999695,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1192.50000000,-2080.50000000,68.69999695,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1186.59997559,-2080.50000000,68.69999695,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1180.80004883,-2080.39990234,68.69999695,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1175.00000000,-2080.39990234,68.69999695,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1169.19995117,-2080.39990234,68.69999695,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1163.40002441,-2080.39990234,68.80000305,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1157.50000000,-2080.39990234,68.90000153,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1151.69995117,-2080.39990234,69.00000000,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1145.90002441,-2080.30004883,69.09999847,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1140.30004883,-2080.30004883,69.09999847,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(9131,1136.80004883,-2080.50000000,69.09999847,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,1136.80004883,-2080.50000000,71.19999695,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (2)
CreateDynamicObject(9131,1128.80004883,-2080.50000000,69.09999847,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (3)
CreateDynamicObject(9131,1128.79980469,-2080.50000000,71.19999695,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (4)
CreateDynamicObject(3475,1124.80004883,-2080.50000000,69.09999847,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1118.80004883,-2080.50000000,69.19999695,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1112.80004883,-2080.39990234,69.19999695,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1106.80004883,-2080.39990234,69.30000305,0.96679688,0.00000000,90.19226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1104.00000000,-2077.69995117,69.50000000,359.71679688,0.00000000,359.94226074); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(9131,1128.09997559,-2080.50000000,69.09999847,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (6)
CreateDynamicObject(9131,1128.09997559,-2080.50000000,71.19999695,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (7)
CreateDynamicObject(3475,1104.00000000,-2071.69995117,69.50000000,359.71435547,0.00000000,359.93957520); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1104.00000000,-2065.69995117,69.50000000,359.71435547,0.00000000,359.93957520); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1104.00000000,-2059.69995117,69.50000000,359.71435547,0.00000000,359.93957520); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1104.00000000,-2053.80004883,69.50000000,359.71435547,0.00000000,359.93957520); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1104.00000000,-2052.60009766,69.50000000,359.71435547,0.00000000,359.93957520); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1100.90002441,-2049.39990234,69.50000000,359.71435547,0.00000000,90.68957520); //object(vgsn_fncelec_pst) (14)
CreateDynamicObject(3475,1239.00000000,-2000.30004883,61.40000153,0.48339844,0.00000000,0.74182129); //object(vgsn_fncelec_pst) (34)
CreateDynamicObject(3475,1235.69995117,-1997.09997559,61.79999924,8.73132324,0.00000000,90.24719238); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1229.80004883,-1997.09997559,63.00000000,13.97863770,0.00000000,90.24719238); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1224.09997559,-1997.09997559,64.80000305,20.72460938,0.00000000,90.24719238); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1218.50000000,-1997.09997559,67.09999847,23.72021484,0.00000000,90.24719238); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1213.40002441,-1997.09997559,68.69999695,9.71948242,0.00000000,90.24719238); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1208.50000000,-1995.40002441,69.19999695,359.96740723,0.00000000,54.24719238); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1203.00000000,-1993.59960938,69.19999695,359.96704102,0.00000000,91.24145508); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1197.00000000,-1993.69995117,69.19999695,359.96704102,0.00000000,91.24145508); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1191.00000000,-1993.80004883,69.19999695,359.96704102,0.00000000,91.24145508); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1185.00000000,-1993.80004883,69.19999695,359.96704102,0.00000000,89.74145508); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1179.09997559,-1993.80004883,69.19999695,359.96704102,0.00000000,91.23632812); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1173.30004883,-1993.80004883,69.19999695,359.96704102,0.00000000,90.73596191); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1167.40002441,-1993.69995117,69.19999695,359.96704102,0.00000000,89.48059082); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1161.50000000,-1993.59997559,69.19999695,359.96704102,0.00000000,90.72814941); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1155.59997559,-1993.69995117,69.19999695,359.96704102,0.00000000,90.97509766); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1149.69995117,-1993.80004883,69.19999695,359.96704102,0.00000000,90.97229004); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1143.80004883,-1993.90002441,69.19999695,359.96704102,0.00000000,90.97229004); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1137.90002441,-1993.80004883,69.19999695,359.96704102,0.00000000,89.22229004); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1132.00000000,-1993.59997559,69.19999695,359.96704102,0.00000000,88.21997070); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1126.00000000,-1993.50000000,69.19999695,359.96704102,0.00000000,90.46472168); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1120.09997559,-1993.50000000,69.19999695,359.96704102,0.00000000,90.46142578); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1114.19995117,-1993.50000000,69.19999695,359.96704102,0.00000000,90.46142578); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1108.19995117,-1993.50000000,69.19999695,359.96704102,0.00000000,90.46142578); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1104.50000000,-1996.69995117,69.19999695,359.96704102,0.00000000,170.46142578); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1103.90002441,-2002.50000000,69.19999695,359.96704102,0.00000000,178.95837402); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1103.90002441,-2008.30004883,69.19999695,359.96704102,0.00000000,180.45629883); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1104.00000000,-2014.19995117,69.19999695,359.96704102,0.00000000,180.45593262); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1104.09997559,-2020.09997559,69.19999695,359.96704102,0.00000000,180.45593262); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1101.50000000,-2024.80004883,69.19999695,359.96704102,0.00000000,90.95593262); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(3475,1104.09997559,-2022.00000000,69.19999695,359.96704102,0.00000000,180.45593262); //object(vgsn_fncelec_pst) (29)
CreateDynamicObject(971,1132.59997559,-2080.80004883,68.69999695,0.00000000,0.00000000,0.00000000); //object(subwaygate) (1)
CreateDynamicObject(1226,1323.59997559,-2060.89990234,60.59999847,0.00000000,0.00000000,270.00000000); //object(lamppost3) (1)
CreateDynamicObject(1226,1352.69995117,-2059.10009766,59.50000000,0.00000000,0.00000000,270.74707031); //object(lamppost3) (2)
CreateDynamicObject(1226,1352.09997559,-2050.69995117,59.50000000,0.00000000,0.00000000,95.74584961); //object(lamppost3) (3)
CreateDynamicObject(1226,1306.40002441,-2060.89990234,61.09999847,0.00000000,0.00000000,270.00000000); //object(lamppost3) (4)
CreateDynamicObject(1226,1306.80004883,-2052.89990234,61.20000076,0.00000000,0.00000000,93.24645996); //object(lamppost3) (5)
CreateDynamicObject(1232,1128.59997559,-2080.50000000,70.19999695,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (2)
CreateDynamicObject(1232,1240.00000000,-2035.39941406,58.40000153,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (4)
CreateDynamicObject(1231,1258.90002441,-2046.00000000,61.20000076,0.00000000,0.00000000,0.00000000); //object(streetlamp2) (1)
CreateDynamicObject(1231,1269.59997559,-2046.30004883,60.90000153,0.00000000,0.00000000,0.00000000); //object(streetlamp2) (2)
CreateDynamicObject(700,1208.69921875,-2019.59960938,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (6)
CreateDynamicObject(700,1210.09960938,-2040.79980469,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (7)
CreateDynamicObject(700,1210.09997559,-2033.19995117,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (8)
CreateDynamicObject(700,1208.80004883,-2053.19995117,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (9)
CreateDynamicObject(700,1210.09997559,-2066.19995117,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (11)
CreateDynamicObject(700,1210.19995117,-2007.80004883,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (12)
CreateDynamicObject(700,1180.19995117,-2007.90002441,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (13)
CreateDynamicObject(700,1169.59997559,-2007.80004883,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (14)
CreateDynamicObject(700,1169.50000000,-2066.10009766,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (15)
CreateDynamicObject(700,1185.69995117,-2040.90002441,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (16)
CreateDynamicObject(700,1180.39941406,-2066.19921875,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (17)
CreateDynamicObject(700,1185.50000000,-2033.09997559,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (18)
CreateDynamicObject(700,1163.90002441,-2033.00000000,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (19)
CreateDynamicObject(700,1163.90002441,-2041.00000000,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (20)
CreateDynamicObject(700,1137.69921875,-2033.09960938,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (21)
CreateDynamicObject(700,1137.69995117,-2040.90002441,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (22)
CreateDynamicObject(1232,1240.09960938,-2038.69921875,58.40000153,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (5)
CreateDynamicObject(3920,1123.09997559,-2062.69995117,73.90000153,0.00000000,0.00000000,270.25000000); //object(lib_veg3) (1)
CreateDynamicObject(3920,1123.19995117,-2053.30004883,73.90000153,0.00000000,0.00000000,269.74719238); //object(lib_veg3) (2)
CreateDynamicObject(3920,1123.09997559,-2020.80004883,73.90000153,0.00000000,0.00000000,269.99182129); //object(lib_veg3) (3)
CreateDynamicObject(3920,1123.09997559,-2011.19995117,73.90000153,0.00000000,0.00000000,269.98901367); //object(lib_veg3) (4)
CreateDynamicObject(1364,1187.30004883,-2034.30004883,68.69999695,0.00000000,0.00000000,359.49462891); //object(cj_bush_prop) (1)
CreateDynamicObject(1364,1204.40002441,-2039.59997559,68.69999695,0.00000000,0.00000000,179.99450684); //object(cj_bush_prop) (2)
CreateDynamicObject(1364,1142.40002441,-2034.30004883,68.69999695,0.00000000,0.00000000,359.48913574); //object(cj_bush_prop) (3)
CreateDynamicObject(1364,1159.50000000,-2039.69995117,68.69999695,0.00000000,0.00000000,179.99450684); //object(cj_bush_prop) (4)
CreateDynamicObject(1364,1136.59997559,-2025.90002441,68.69999695,0.00000000,0.00000000,269.49462891); //object(cj_bush_prop) (5)
CreateDynamicObject(1364,1136.59997559,-2012.69995117,68.69999695,0.00000000,0.00000000,269.49462891); //object(cj_bush_prop) (6)
CreateDynamicObject(1364,1136.59997559,-2046.50000000,68.69999695,0.00000000,0.00000000,269.99450684); //object(cj_bush_prop) (7)
CreateDynamicObject(1364,1136.59997559,-2061.30004883,68.69999695,0.00000000,0.00000000,269.98901367); //object(cj_bush_prop) (8)
CreateDynamicObject(3802,1126.59997559,-2041.80004883,73.69999695,0.00000000,0.00000000,0.00000000); //object(sfx_plant03) (1)
CreateDynamicObject(3802,1126.59997559,-2032.30004883,73.69999695,0.00000000,0.00000000,0.00000000); //object(sfx_plant03) (2)
CreateDynamicObject(2010,1122.80004883,-2039.40002441,68.90000153,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
CreateDynamicObject(2010,1122.80004883,-2034.59997559,68.90000153,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (2)
CreateDynamicObject(3439,1121.80004883,-2039.00000000,69.80000305,359.50012207,180.00000000,179.25000000); //object(aprtree01_lvs) (1)
CreateDynamicObject(3439,1121.80004883,-2035.00000000,69.80000305,359.50012207,179.99450684,178.74743652); //object(aprtree01_lvs) (2)
CreateDynamicObject(1223,1122.09997559,-2040.69995117,71.90000153,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (1)
CreateDynamicObject(1223,1122.09997559,-2033.50000000,71.90000153,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (3)
CreateDynamicObject(1232,1170.09997559,-2046.50000000,70.19999695,0.00000000,0.00000000,13.49121094); //object(streetlamp1) (8)
CreateDynamicObject(1232,1180.00000000,-2046.59997559,70.30000305,0.00000000,0.00000000,13.48571777); //object(streetlamp1) (9)
CreateDynamicObject(1232,1179.90002441,-2027.40002441,70.00000000,0.00000000,0.00000000,13.48571777); //object(streetlamp1) (10)
CreateDynamicObject(1232,1169.90002441,-2027.40002441,70.09999847,0.00000000,0.00000000,13.48571777); //object(streetlamp1) (11)
CreateDynamicObject(1232,1136.79980469,-2080.59960938,70.19999695,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (12)
CreateDynamicObject(700,1137.50000000,-2007.90002441,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (23)
CreateDynamicObject(700,1137.40002441,-2066.10009766,68.00000000,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (24)
CreateDynamicObject(9915,1165.00000000,-2036.19995117,65.40000153,0.00000000,0.00000000,0.00000000); //object(sfe_park) (1)
CreateDynamicObject(700,1226.50000000,-2040.90002441,64.59999847,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (7)
CreateDynamicObject(700,1226.40002441,-2033.19995117,64.59999847,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (7)
CreateDynamicObject(700,1237.80004883,-2033.19995117,60.40000153,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (7)
CreateDynamicObject(700,1237.69995117,-2040.90002441,60.40000153,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree6) (7)
CreateDynamicObject(3627,1260.90002441,-2016.40002441,62.00000000,359.25000000,0.00000000,269.75000000); //object(dckcanpy) (1)
CreateDynamicObject(970,1257.00000000,-2045.69995117,59.20000076,0.24990845,1.75003052,358.74218750); //object(fencesmallb) (1)
CreateDynamicObject(970,1242.89941406,-2053.09960938,59.70000076,0.00000000,0.00000000,89.75000000); //object(fencesmallb) (4)
CreateDynamicObject(1361,1273.90002441,-2046.30004883,58.79999924,0.00000000,0.00000000,358.00000000); //object(cj_bush_prop2) (1)
CreateDynamicObject(1361,1255.69995117,-2013.80004883,59.29999924,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (2)
CreateDynamicObject(1361,1266.09997559,-2013.90002441,59.00000000,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (3)
CreateDynamicObject(1361,1276.19995117,-2013.80004883,58.79999924,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (4)
CreateDynamicObject(970,1245.40002441,-2015.30004883,59.20000076,0.00000000,0.00000000,89.74731445); //object(fencesmallb) (6)
CreateDynamicObject(970,1245.40002441,-2011.80004883,59.20000076,0.00000000,0.00000000,89.74731445); //object(fencesmallb) (5)
CreateDynamicObject(970,1255.69995117,-2012.00000000,59.00000000,0.00000000,0.00000000,89.74731445); //object(fencesmallb) (7)
CreateDynamicObject(970,1255.69995117,-2015.50000000,59.00000000,0.00000000,0.00000000,89.74731445); //object(fencesmallb) (8)
CreateDynamicObject(970,1266.09997559,-2015.69995117,58.70000076,0.00000000,0.00000000,89.74731445); //object(fencesmallb) (9)
CreateDynamicObject(970,1266.09997559,-2011.90002441,58.70000076,0.00000000,0.00000000,89.74731445); //object(fencesmallb) (10)
CreateDynamicObject(970,1276.19995117,-2012.00000000,58.40000153,0.00000000,0.00000000,89.74731445); //object(fencesmallb) (11)
CreateDynamicObject(970,1276.19995117,-2015.59997559,58.40000153,0.00000000,0.00000000,89.74731445); //object(fencesmallb) (12)
CreateDynamicObject(970,1242.89941406,-2057.29980469,59.70000076,0.00000000,0.00000000,89.74731445); //object(fencesmallb) (13)
CreateDynamicObject(970,1271.59997559,-2046.19995117,58.79999924,0.24728394,0.49682617,358.99743652); //object(fencesmallb) (15)
CreateDynamicObject(1361,1245.29980469,-2013.59960938,59.59999847,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (5)
CreateDynamicObject(1361,1254.50000000,-2045.69995117,59.29999924,0.00000000,0.00000000,354.99499512); //object(cj_bush_prop2) (6)
CreateDynamicObject(970,1252.30004883,-2045.59997559,59.29999924,0.24719238,1.74682617,358.74206543); //object(fencesmallb) (18)
CreateDynamicObject(1361,1249.80004883,-2045.59997559,59.40000153,0.00000000,0.00000000,354.99023438); //object(cj_bush_prop2) (7)
CreateDynamicObject(970,1247.59997559,-2045.40002441,59.50000000,359.74743652,1.74682617,357.75732422); //object(fencesmallb) (19)
CreateDynamicObject(1361,1245.09997559,-2045.50000000,59.59999847,0.00000000,0.00000000,354.99023438); //object(cj_bush_prop2) (8)
CreateDynamicObject(970,1276.30004883,-2046.30004883,58.70000076,0.24719238,0.49438477,358.99475098); //object(fencesmallb) (20)
CreateDynamicObject(1361,1278.80004883,-2046.50000000,58.79999924,0.00000000,0.00000000,357.99499512); //object(cj_bush_prop2) (9)
CreateDynamicObject(1232,1245.30004883,-2013.69995117,57.79999924,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (4)
CreateDynamicObject(1232,1255.69995117,-2013.80004883,57.40000153,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (4)
CreateDynamicObject(1232,1266.09997559,-2014.00000000,57.00000000,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (4)
CreateDynamicObject(1232,1276.19995117,-2013.90002441,56.79999924,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (4)
CreateDynamicObject(3934,1116.09997559,-2056.69995117,73.50000000,0.00000000,359.50000000,0.00000000); //object(helipad01) (2)
CreateDynamicObject(3934,1116.50000000,-2018.69995117,73.50000000,0.00000000,359.49462891,0.00000000); //object(helipad01) (3)
CreateDynamicObject(19124,1119.80004883,-2060.19995117,73.90000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
CreateDynamicObject(19124,1112.19995117,-2060.19995117,73.90000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
CreateDynamicObject(19124,1112.19995117,-2053.39990234,73.90000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
CreateDynamicObject(19124,1119.80004883,-2053.39990234,73.90000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (4)
CreateDynamicObject(19124,1120.19995117,-2022.19995117,73.90000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (5)
CreateDynamicObject(19124,1120.19995117,-2015.40002441,73.90000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (7)
CreateDynamicObject(19124,1112.59997559,-2015.40002441,73.90000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (8)
CreateDynamicObject(19124,1112.59997559,-2022.19995117,73.90000153,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (9)
	// -================================  Idlewood Motel =============================================- //
	CreateDynamicObject(19124,2178.82324200,-1815.39953600,13.14549700,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2150.78125000,-1799.54663100,13.16584200,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1251,2159.12988300,-1791.02685500,12.45819600,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1251,2165.97753900,-1791.03332500,12.46144400,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1251,2170.18359400,-1791.02856400,12.46485100,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1251,2155.71289100,-1794.54248000,12.41323800,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1251,2160.16918900,-1794.50329600,12.46514100,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1251,2164.65502900,-1794.51892100,12.46760700,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1251,2169.07080100,-1794.53576700,12.46969900,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1251,2173.55419900,-1794.61511200,12.46512800,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2183.35400400,-1813.85205100,15.71276100,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2177.07910200,-1813.87268100,15.70494700,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2152.32836900,-1801.69860800,15.71384000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(640,2150.97753900,-1796.05578600,13.22760500,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(640,2158.31079100,-1811.30969200,12.91891400,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(640,2187.64502000,-1811.32507300,12.94391300,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(640,2172.40869100,-1811.35644500,12.91891400,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(672,2156.04638700,-1787.72436500,13.46379400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1251,2186.70532200,-1806.09704600,12.47629500,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1251,2190.13037100,-1809.49145500,12.43236500,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1251,2186.68017600,-1810.63122600,12.48070000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1251,2174.72876000,-1791.03930700,12.46163500,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1251,2178.08789100,-1794.48535200,12.46500100,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(966,2188.56274400,-1779.08276400,12.37319400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(968,2188.53418000,-1779.07995600,13.18244700,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(983,2155.63134800,-1794.24829100,13.21204900,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(983,2158.93286100,-1791.04968300,13.24611900,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(984,2168.53955100,-1791.05175800,13.20589900,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(983,2174.94091800,-1791.04870600,13.24955700,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(983,2178.14550800,-1794.22131300,13.19341600,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(638,2181.78540000,-1814.88256800,13.26155900,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(19124,2167.81591800,-1811.13232400,13.11119800,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2163.60766600,-1811.10632300,13.11119800,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2165.71801800,-1811.17419400,13.11119800,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2184.55664100,-1811.17211900,13.11119800,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2155.32177700,-1810.96911600,13.11423900,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2155.50415000,-1808.83691400,13.11510700,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2155.44238300,-1806.85986300,13.11312200,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2155.42797900,-1804.88427700,13.11159500,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19124,2155.47558600,-1802.83862300,13.10882900,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3439,2177.46093800,-1788.49621600,16.62897500,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3660,2164.79467800,-1814.97326700,17.41869900,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(3850,2152.91943400,-1801.39563000,13.11522600,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(3850,2176.86035200,-1813.65063500,13.09278400,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(987,2181.45459000,-1779.10534700,11.33736500,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(983,2192.04199200,-1778.77722200,13.23664400,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(715,2190.35498000,-1776.52856400,20.02894600,0.00000000,0.00000000,0.00000000); //
	// -================================  LSTV =============================================- //
CreateDynamicObject(18009, -2710.78, 524.81, 51.42,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2720.50, 519.55, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 515.22, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 519.55, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 515.22, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 523.90, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 528.24, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 532.60, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 536.97, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 523.90, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 528.24, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 532.60, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2713.96, 513.03, 51.01,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, -2718.30, 513.03, 47.75,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 521.23, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 513.03, 47.75,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 513.03, 51.01,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 514.70, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 517.96, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 514.70, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 517.96, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 521.23, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2719.10, 520.67, 51.01,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.52, 522.47, 50.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2707.51, 533.97, 50.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2707.51, 517.79, 54.24,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, -2700.92, 519.99, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2707.51, 517.79, 50.99,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 517.79, 50.99,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 517.79, 54.24,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2700.92, 537.35, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 519.99, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 524.33, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 528.66, 50.99,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2700.92, 533.00, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 524.33, 54.24,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 528.66, 54.24,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 533.00, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2700.92, 537.35, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2703.15, 536.40, 50.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 536.40, 50.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2703.15, 536.40, 54.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 536.40, 54.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 525.90, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 519.40, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 529.20, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 522.80, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 532.43, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 535.70, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 519.40, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 522.63, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 532.43, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 529.20, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 535.70, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1523, -2706.96, 524.53, 48.17,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2700.55, 524.40, 52.31,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2704.90, 524.47, 52.31,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2700.55, 524.40, 52.31,   0.00, 0.00, 179.99);
CreateDynamicObject(2591, -2702.66, 524.43, 48.11,   359.50, 180.00, 89.00);
CreateDynamicObject(2591, -2703.76, 524.47, 48.13,   359.49, 179.99, 88.99);
CreateDynamicObject(1649, -2703.14, 522.63, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.46, 522.80, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2704.90, 524.47, 52.31,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 525.90, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 519.53, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.46, 519.53, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(2184, -2703.32, 520.12, 48.18,   0.00, 0.00, 180.00);
CreateDynamicObject(1998, -2702.40, 522.80, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(2190, -2704.80, 519.90, 48.96,   0.00, 0.00, 18.00);
CreateDynamicObject(1663, -2701.49, 522.85, 48.64,   0.00, 0.00, 178.00);
CreateDynamicObject(1714, -2704.37, 518.30, 48.20,   0.00, 0.00, 182.00);
CreateDynamicObject(2894, -2704.11, 519.48, 48.96,   0.00, 0.00, 344.00);
CreateDynamicObject(1962, -2700.95, 519.20, 49.79,   0.00, 0.00, 90.00);
CreateDynamicObject(1961, -2700.95, 521.17, 49.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1960, -2700.95, 522.03, 50.47,   0.00, 0.00, 90.00);
CreateDynamicObject(14860, -2703.91, 518.92, 49.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2066, -2705.05, 523.60, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(14493, -2704.80, 531.20, 50.48,   0.00, 0.00, 180.00);
CreateDynamicObject(2637, -2704.07, 533.90, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, -2706.78, 535.97, 51.37,   0.00, 0.00, 40.00);
CreateDynamicObject(2813, -2704.06, 533.87, 48.99,   0.00, 0.00, 0.00);
CreateDynamicObject(2828, -2702.60, 522.74, 48.99,   0.00, 0.00, 286.00);
CreateDynamicObject(14391, -2712.40, 528.10, 49.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1670, -2704.77, 533.62, 49.02,   0.00, 0.00, 0.00);
CreateDynamicObject(625, -2703.78, 524.84, 48.99,   0.00, 0.00, 228.00);
CreateDynamicObject(638, -2706.96, 534.01, 48.88,   0.00, 0.00, 0.00);
CreateDynamicObject(3386, -2708.90, 519.30, 48.18,   0.00, 0.00, 90.00);
CreateDynamicObject(3386, -2708.90, 520.32, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(3387, -2709.91, 519.30, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3388, -2710.90, 519.30, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3389, -2711.90, 519.29, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3387, -2712.89, 519.29, 48.18,   0.00, 0.00, 90.00);
CreateDynamicObject(1714, -2710.08, 528.15, 48.18,   0.00, 0.00, 274.00);
CreateDynamicObject(1663, -2717.84, 529.74, 49.04,   0.00, 0.00, 44.00);
CreateDynamicObject(1663, -2717.83, 526.97, 49.04,   0.00, 0.00, 140.00);
CreateDynamicObject(1827, -2716.56, 528.35, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 529.11, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(646, -2719.20, 524.70, 49.99,   0.00, 0.00, 0.00);
CreateDynamicObject(646, -2719.20, 532.21, 49.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1557, -2719.06, 520.38, 47.08,   0.00, 0.00, 208.00);
CreateDynamicObject(1557, -2720.42, 518.09, 47.08,   0.00, 0.00, 90.00);
CreateDynamicObject(638, -2718.17, 517.72, 49.28,   0.00, 0.00, 90.00);
CreateDynamicObject(638, -2718.99, 517.72, 49.28,   0.00, 0.00, 90.00);
CreateDynamicObject(629, -2714.90, 515.60, 48.50,   0.00, 0.00, 220.00);
CreateDynamicObject(741, -2712.05, 516.10, 48.90,   0.00, 0.00, 248.00);
CreateDynamicObject(2572, -2717.70, 514.10, 48.50,   0.00, 0.00, 120.00);
CreateDynamicObject(2266, -2714.87, 519.25, 50.95,   0.00, 0.00, 270.00);
CreateDynamicObject(2179, -2719.80, 524.81, 50.29,   0.00, 0.00, 0.00);
CreateDynamicObject(2179, -2719.80, 531.82, 50.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1892, -2716.11, 520.57, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(18075, -2713.50, 528.47, 51.77,   0.00, 0.00, 0.00);
CreateDynamicObject(1776, -2710.81, 536.21, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(2700, -2708.35, 535.81, 51.29,   0.00, 0.00, 226.00);
CreateDynamicObject(3031, -2713.24, 514.25, 50.18,   0.00, 0.00, 132.00);
CreateDynamicObject(2295, -2719.82, 535.15, 48.58,   0.00, 0.00, 44.00);
CreateDynamicObject(1510, -2717.00, 528.53, 49.02,   0.00, 0.00, 0.00);
CreateDynamicObject(1667, -2717.00, 528.00, 49.02,   0.00, 0.00, 0.00);
	//-= ===============================  ESTUDIO LSTV =============================================- //
	CreateDynamicObject(14391,249.88735962,304.25994873,999.09527588,0.00000000,0.00000000,179.94287109); //
	CreateDynamicObject(14393,250.75074768,303.27984619,1000.36871338,0.00000000,0.00000000,181.63391113); //
	CreateDynamicObject(14392,250.80520630,303.21340942,999.33160400,0.00000000,0.00000000,180.97521973); //
	CreateDynamicObject(14820,249.26252747,305.72671509,999.05853271,10.54898071,0.00000000,269.77844238); //
	CreateDynamicObject(14820,249.25497437,302.45178223,999.07855225,10.54687500,0.00000000,269.77478027); //
	CreateDynamicObject(10154,251.23742676,298.33959961,998.53216553,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(10154,241.88075256,302.64770508,998.53216553,0.00000000,0.00000000,181.31555176); //
	CreateDynamicObject(1498,242.02909851,301.88348389,998.11431885,0.00000000,0.00000000,90.33483887); //
	// -============================== Cyber Café ==========================================- //
	CreateDynamicObject(12843, 1092.53, -1380.44, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(12844, 1089.55, -1380.47, 14.78,   0.00, 0.00, 359.50);
CreateDynamicObject(2954, 1084.43, -1375.45, 12.83,   0.00, 0.00, 270.00);
CreateDynamicObject(2954, 1084.43, -1375.51, 14.86,   0.00, 2.00, 270.00);
CreateDynamicObject(1280, 1084.26, -1385.80, 13.18,   0.00, 0.00, 91.50);
CreateDynamicObject(1281, 1104.76, -1380.02, 13.58,   0.00, 0.00, 342.00);
CreateDynamicObject(1281, 1108.77, -1382.50, 13.58,   0.00, 0.00, 270.00);
CreateDynamicObject(970, 1108.78, -1385.20, 13.33,   0.00, 0.00, 0.50);
CreateDynamicObject(970, 1099.61, -1385.35, 13.33,   0.00, 0.00, 2.00);
CreateDynamicObject(970, 1110.91, -1383.09, 13.34,   0.00, 0.00, 269.00);
CreateDynamicObject(974, 1093.53, -1372.21, 15.08,   0.00, 0.00, 272.00);
CreateDynamicObject(1568, 1110.58, -1384.94, 12.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1097.84, -1384.99, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1097.82, -1376.10, 12.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1367, 1092.23, -1385.70, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1101.83, -1385.21, 13.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19124, 1106.51, -1385.15, 13.35,   0.00, 0.00, 0.00);
CreateDynamicObject(1216, 1096.19, -1385.75, 13.44,   0.00, 0.00, 0.00);
CreateDynamicObject(1216, 1096.96, -1385.75, 13.44,   0.00, 0.00, 0.00);
CreateDynamicObject(1286, 1081.86, -1385.86, 13.38,   0.00, 0.00, 182.00);
CreateDynamicObject(1288, 1082.42, -1385.86, 13.37,   0.00, 0.00, 182.00);
CreateDynamicObject(3851, 1082.58, -1379.20, 13.21,   0.00, 0.00, 0.25);
CreateDynamicObject(2009, 1091.24, -1383.29, 12.81,   0.00, 0.00, 270.00);
CreateDynamicObject(2175, 1083.45, -1381.57, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2175, 1084.89, -1381.57, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2175, 1086.33, -1381.58, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2175, 1083.35, -1378.85, 12.83,   0.00, 0.00, 0.00);
CreateDynamicObject(2175, 1084.81, -1378.86, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2175, 1086.28, -1378.86, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2175, 1089.78, -1378.72, 12.81,   0.00, 0.00, 180.25);
CreateDynamicObject(2175, 1091.22, -1378.73, 12.81,   0.00, 0.00, 180.25);
CreateDynamicObject(2175, 1092.62, -1378.73, 12.81,   0.00, 0.00, 180.25);
CreateDynamicObject(2356, 1091.36, -1384.71, 12.81,   0.00, 0.00, 321.00);
CreateDynamicObject(2356, 1083.76, -1382.91, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2356, 1085.16, -1382.91, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2356, 1086.60, -1382.89, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2356, 1083.59, -1380.16, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2356, 1085.06, -1380.14, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2356, 1086.71, -1380.10, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2356, 1089.54, -1377.34, 12.81,   0.00, 0.00, 182.00);
CreateDynamicObject(2356, 1090.91, -1377.33, 12.81,   0.00, 0.00, 182.00);
CreateDynamicObject(2356, 1092.41, -1377.41, 12.81,   0.00, 0.00, 182.00);
CreateDynamicObject(1999, 1085.64, -1381.49, 12.77,   0.00, 0.00, 0.00);
CreateDynamicObject(1999, 1084.31, -1381.49, 12.77,   0.00, 0.00, 0.00);
CreateDynamicObject(1999, 1082.76, -1381.49, 12.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1999, 1085.74, -1378.79, 12.79,   0.00, 0.00, 0.00);
CreateDynamicObject(1999, 1084.02, -1378.79, 12.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1999, 1082.68, -1378.80, 12.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1999, 1090.31, -1378.77, 12.77,   0.00, 0.00, 180.75);
CreateDynamicObject(1999, 1091.82, -1378.76, 12.78,   0.00, 0.00, 180.75);
CreateDynamicObject(1999, 1093.13, -1378.74, 12.78,   0.00, 0.00, 180.75);
CreateDynamicObject(1723, 1095.91, -1380.42, 12.81,   0.00, 0.00, 270.50);
CreateDynamicObject(18014, 1088.98, -1385.85, 13.04,   0.00, 0.00, 270.00);
CreateDynamicObject(646, 1095.87, -1384.27, 14.22,   0.00, 0.00, 0.00);
CreateDynamicObject(792, 1079.34, -1387.42, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(792, 1108.20, -1378.94, 13.53,   0.00, 0.00, 336.50);
CreateDynamicObject(2690, 1086.00, -1376.02, 13.89,   0.00, 0.00, 0.00);
CreateDynamicObject(1210, 1091.09, -1383.31, 13.58,   271.25, 0.00, 0.00);
CreateDynamicObject(2773, 1095.30, -1383.93, 13.32,   0.00, 0.00, 0.00);
CreateDynamicObject(2894, 1091.81, -1383.31, 13.61,   0.00, 0.00, 0.00);
CreateDynamicObject(1808, 1096.21, -1379.25, 12.81,   0.00, 0.00, 268.00);
CreateDynamicObject(1841, 1096.36, -1383.76, 16.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1841, 1096.42, -1376.90, 16.09,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, 1096.09, -1380.46, 16.24,   0.00, 0.00, 272.00);
CreateDynamicObject(1340, 1099.32, -1383.35, 13.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1341, 1100.52, -1379.22, 13.78,   0.00, 0.00, 324.00);
CreateDynamicObject(1223, 1101.61, -1389.30, 12.69,   0.00, 0.00, 280.00);
CreateDynamicObject(1223, 1103.89, -1378.03, 13.28,   0.00, 0.00, 240.00);
CreateDynamicObject(16779, 1085.93, -1379.77, 16.76,   0.00, 0.00, 355.50);
CreateDynamicObject(16779, 1093.38, -1380.01, 16.75,   0.00, 0.00, 0.00);
CreateDynamicObject(1359, 1095.87, -1376.60, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2412, 1094.54, -1385.01, 12.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2413, 1089.12, -1384.68, 12.81,   0.00, 0.00, 181.25);
CreateDynamicObject(2413, 1087.51, -1384.72, 12.81,   0.00, 0.00, 181.25);
CreateDynamicObject(2488, 1089.30, -1384.76, 13.51,   0.00, 0.00, 181.00);
CreateDynamicObject(2488, 1088.61, -1384.79, 13.50,   0.00, 0.00, 181.00);
CreateDynamicObject(2490, 1089.23, -1384.50, 13.14,   0.00, 0.00, 181.00);
CreateDynamicObject(2490, 1088.45, -1384.48, 13.14,   0.00, 0.00, 181.00);
CreateDynamicObject(2484, 1087.26, -1384.74, 14.68,   0.00, 0.00, 0.00);
CreateDynamicObject(2489, 1087.49, -1384.58, 13.53,   0.00, 0.00, 184.00);
CreateDynamicObject(2489, 1086.83, -1384.69, 13.50,   0.00, 0.00, 184.00);
CreateDynamicObject(2499, 1091.25, -1376.07, 15.61,   330.02, 2.31, 1.15);
CreateDynamicObject(2601, 1092.10, -1383.69, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2495, 1087.56, -1384.46, 13.18,   0.00, 0.00, 182.00);
CreateDynamicObject(2495, 1086.83, -1384.45, 13.18,   0.00, 0.00, 182.00);
CreateDynamicObject(1514, 1089.42, -1384.46, 14.11,   0.00, 0.00, 274.00);
CreateDynamicObject(2897, 1091.32, -1385.47, 21.10,   272.00, 270.00, 184.00);
CreateDynamicObject(2897, 1090.31, -1385.32, 20.99,   274.00, 269.99, 4.00);
CreateDynamicObject(1975, 1091.34, -1386.89, 21.19,   0.00, 0.00, 86.00);
	// -========================================== Residencia ======================================- //
	CreateDynamicObject(6300,933.41241455,-2162.24096680,4.16771793,0.00000000,0.00000000,274.00000000); //object(pier04_law2) (1)
	CreateDynamicObject(3555,933.41546631,-2181.21533203,14.95035934,0.00000000,0.00000000,4.00000000); //object(compmedhos2_lae) (1)
	CreateDynamicObject(3557,917.40447998,-2179.51245117,14.76984692,0.00000000,0.00000000,4.00000000); //object(compmedhos4_lae) (1)
	CreateDynamicObject(3580,907.12023926,-2180.29663086,16.85557938,0.00000000,0.00000000,3.25000000); //object(compbigho2_lae) (1)
	CreateDynamicObject(3555,950.72991943,-2139.78198242,14.95035934,0.00000000,0.00000000,183.99902344); //object(compmedhos2_lae) (2)
	CreateDynamicObject(5416,957.20159912,-2170.62890625,14.56729126,0.00000000,0.00000000,324.00000000); //object(laeganghous205) (1)
	CreateDynamicObject(983,941.04187012,-2142.14331055,12.90596008,0.00000000,0.00000000,274.00000000); //object(fenceshit3) (1)
	CreateDynamicObject(983,939.11755371,-2142.28564453,12.90596008,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (2)
	CreateDynamicObject(983,935.53961182,-2139.34399414,12.90596008,0.00000000,0.00000000,183.99902344); //object(fenceshit3) (3)
	CreateDynamicObject(983,935.26947021,-2134.85229492,12.90596008,0.00000000,0.00000000,183.99902344); //object(fenceshit3) (4)
	CreateDynamicObject(984,928.60382080,-2132.14794922,12.85908508,0.00000000,0.00000000,273.75000000); //object(fenceshit2) (1)
	CreateDynamicObject(982,909.44750977,-2133.48730469,12.90596008,0.00000000,0.00000000,274.00000000); //object(fenceshit) (1)
	CreateDynamicObject(983,895.94769287,-2134.39526367,12.90011215,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (5)
	CreateDynamicObject(982,893.70513916,-2147.41845703,12.90002441,0.00000000,0.00000000,183.99902344); //object(fenceshit) (2)
	CreateDynamicObject(982,895.47680664,-2172.98388672,12.90596008,0.00000000,0.00000000,183.99902344); //object(fenceshit) (3)
	CreateDynamicObject(983,900.21295166,-2195.04492188,12.90596008,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (6)
	CreateDynamicObject(983,896.68188477,-2189.04443359,12.94999695,0.00000000,0.00000000,183.99902344); //object(fenceshit3) (7)
	CreateDynamicObject(983,896.81915283,-2192.18823242,12.90596008,0.00000000,0.00000000,183.99902344); //object(fenceshit3) (8)
	CreateDynamicObject(982,916.12670898,-2193.82983398,12.90596008,0.00000000,0.00000000,273.99902344); //object(fenceshit) (4)
	CreateDynamicObject(983,932.09619141,-2192.73071289,12.90596008,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (9)
	CreateDynamicObject(983,936.13177490,-2192.42822266,12.90596008,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (10)
	CreateDynamicObject(983,939.04156494,-2189.01586914,12.90596008,0.00000000,0.00000000,183.99902344); //object(fenceshit3) (11)
	CreateDynamicObject(982,951.44909668,-2180.93164062,12.90596008,0.00000000,0.00000000,273.99902344); //object(fenceshit) (5)
	CreateDynamicObject(983,967.46643066,-2179.82226562,12.90596008,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (12)
	CreateDynamicObject(982,972.41394043,-2167.43603516,12.77730465,0.00000000,0.00000000,183.99902344); //object(fenceshit) (6)
	CreateDynamicObject(983,970.72003174,-2142.06640625,12.77730465,0.00000000,0.00000000,4.00000000); //object(fenceshit3) (13)
	CreateDynamicObject(983,967.27111816,-2139.09423828,12.77730465,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (14)
	CreateDynamicObject(983,960.86773682,-2139.53637695,12.77730465,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (15)
	CreateDynamicObject(983,957.93054199,-2136.36499023,12.90596008,0.00000000,0.00000000,3.99902344); //object(fenceshit3) (17)
	CreateDynamicObject(983,954.46777344,-2133.37377930,12.90596008,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (19)
	CreateDynamicObject(983,944.41790771,-2138.63989258,12.90596008,0.00000000,0.00000000,183.99902344); //object(fenceshit3) (20)
	CreateDynamicObject(983,944.32714844,-2137.34179688,12.90596008,0.00000000,0.00000000,183.99902344); //object(fenceshit3) (21)
	CreateDynamicObject(984,950.49987793,-2133.67749023,12.85908508,0.00000000,0.00000000,273.74633789); //object(fenceshit2) (2)
	CreateDynamicObject(11547,898.15332031,-2153.48388672,15.16706181,0.00000000,0.00000000,2.25000000); //object(desn_tscanopy) (1)
	CreateDynamicObject(11547,926.42285156,-2136.06494141,15.16706181,0.00000000,0.00000000,272.00000000); //object(desn_tscanopy) (2)
	CreateDynamicObject(1251,936.69134521,-2153.51782227,12.16302776,0.00000000,0.00000000,4.25000000); //object(smashbar) (1)
	CreateDynamicObject(1251,936.51806641,-2151.04150391,12.16302776,0.00000000,0.00000000,4.00000000); //object(smashbar) (2)
	CreateDynamicObject(997,893.91717529,-2140.62451172,12.22240543,0.00000000,0.00000000,1.75000000); //object(lhouse_barrier3) (1)
	CreateDynamicObject(997,894.12573242,-2142.12451172,12.22240543,0.00000000,0.00000000,4.00000000); //object(lhouse_barrier3) (2)
	CreateDynamicObject(997,893.90710449,-2139.23388672,12.22240543,0.00000000,0.00000000,1.74682617); //object(lhouse_barrier3) (3)
	CreateDynamicObject(997,893.81488037,-2137.94335938,12.22240543,0.00000000,0.00000000,1.74682617); //object(lhouse_barrier3) (4)
	CreateDynamicObject(951,905.01556396,-2134.24731445,12.97258663,0.00000000,0.00000000,214.00000000); //object(cj_view_tele2) (1)
	CreateDynamicObject(951,906.46429443,-2134.09765625,12.97258663,0.00000000,0.00000000,213.99719238); //object(cj_view_tele2) (2)
	CreateDynamicObject(951,907.96203613,-2133.85400391,12.97258663,0.00000000,0.00000000,213.99719238); //object(cj_view_tele2) (3)
	CreateDynamicObject(716,894.06030273,-2135.64379883,12.21655941,0.00000000,0.00000000,0.00000000); //object(sjmpalmbigpv) (2)
	CreateDynamicObject(716,937.98413086,-2191.25805664,12.22240543,0.00000000,0.00000000,1.25000000); //object(sjmpalmbigpv) (3)
	CreateDynamicObject(716,898.02709961,-2194.19775391,12.22240353,0.00000000,0.00000000,1.24694824); //object(sjmpalmbigpv) (4)
	CreateDynamicObject(716,969.58795166,-2140.44848633,12.22240543,0.00000000,0.00000000,1.24694824); //object(sjmpalmbigpv) (5)
	CreateDynamicObject(983,967.69964600,-2145.46972656,12.77730465,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (22)
	CreateDynamicObject(983,961.30169678,-2145.94458008,12.77730465,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (23)
	CreateDynamicObject(983,968.37158203,-2154.77539062,12.90011215,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (24)
	CreateDynamicObject(983,961.83044434,-2155.25732422,12.90011215,0.00000000,0.00000000,273.99902344); //object(fenceshit3) (25)
	CreateDynamicObject(717,895.88415527,-2165.22216797,12.47240162,0.00000000,0.00000000,3.25000000); //object(sm_bevhiltreepv) (2)
	CreateDynamicObject(638,942.43463135,-2142.39550781,12.79444122,0.00000000,358.00000000,275.00000000); //object(kb_planter_bush) (2)
	CreateDynamicObject(638,940.06634521,-2142.62719727,12.81944084,0.00000000,357.99499512,274.99877930); //object(kb_planter_bush) (3)
	CreateDynamicObject(638,937.50659180,-2142.80468750,12.81944084,0.00000000,357.99499512,274.99877930); //object(kb_planter_bush) (4)
	CreateDynamicObject(19124,944.19976807,-2142.30322266,12.78672886,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(19124,946.28955078,-2146.52734375,13.11740303,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(19124,955.21160889,-2145.91210938,13.11740303,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(19124,915.84869385,-2186.82226562,12.78672886,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(955,916.55908203,-2134.12182617,12.62239933,0.00000000,0.00000000,272.75000000); //object(cj_ext_sprunk) (1)
	CreateDynamicObject(956,916.67163086,-2135.73144531,12.59739971,0.00000000,0.00000000,272.00000000); //object(cj_ext_candy) (1)
	CreateDynamicObject(1478,952.34051514,-2143.57080078,13.18925381,0.00000000,0.00000000,0.00000000); //object(dyn_post_box) (1)
	CreateDynamicObject(1478,918.19299316,-2175.21264648,12.85857964,0.00000000,0.00000000,278.00000000); //object(dyn_post_box) (2)
	CreateDynamicObject(1478,907.50885010,-2171.52905273,12.85857964,0.00000000,0.00000000,277.99804688); //object(dyn_post_box) (3)
	CreateDynamicObject(1478,934.34570312,-2176.84741211,13.18925381,0.00000000,0.00000000,277.99804688); //object(dyn_post_box) (4)
	CreateDynamicObject(1478,951.40649414,-2165.66821289,12.85857964,0.00000000,0.00000000,277.99804688); //object(dyn_post_box) (5)
	CreateDynamicObject(1223,971.17211914,-2154.98315430,12.21655750,0.00000000,0.00000000,24.00000000); //object(lampost_coast) (1)
	CreateDynamicObject(1223,970.37817383,-2145.02172852,12.22240543,0.00000000,0.00000000,337.99963379); //object(lampost_coast) (2)
	CreateDynamicObject(1645,921.30120850,-2187.95751953,12.55455303,0.00000000,0.00000000,4.00000000); //object(lounge_wood_up) (1)
	CreateDynamicObject(1645,923.04827881,-2187.71948242,12.55455303,0.00000000,0.00000000,4.24902344); //object(lounge_wood_up) (2)
	CreateDynamicObject(1646,900.93267822,-2187.28515625,12.55398750,0.00000000,0.00000000,280.00000000); //object(lounge_towel_up) (1)
	CreateDynamicObject(1646,900.82159424,-2184.65869141,12.55398750,0.00000000,0.00000000,279.99755859); //object(lounge_towel_up) (2)
	CreateDynamicObject(1645,930.59515381,-2188.83056641,12.55455303,0.00000000,0.00000000,3.00000000); //object(lounge_wood_up) (3)
	CreateDynamicObject(1645,914.71966553,-2183.45703125,12.55455303,0.00000000,0.00000000,1.25000000); //object(lounge_wood_up) (4)
	CreateDynamicObject(1255,917.10260010,-2187.21557617,12.79630280,0.00000000,0.00000000,0.00000000); //object(lounger) (3)
	CreateDynamicObject(973,1001.94177246,-2238.25708008,12.89700508,0.00000000,0.00000000,288.00000000); //object(sub_roadbarrier) (3)
	CreateDynamicObject(973,1001.88177490,-2238.20971680,12.87766171,0.00000000,0.00000000,107.74560547); //object(sub_roadbarrier) (4)
	CreateDynamicObject(1223,1003.62908936,-2065.81787109,12.09199524,0.00000000,0.00000000,337.99438477); //object(lampost_coast) (3)
	CreateDynamicObject(1223,1000.42230225,-2079.34155273,12.09469604,0.00000000,0.00000000,337.99438477); //object(lampost_coast) (4)
	CreateDynamicObject(1223,993.42968750,-2090.60205078,12.04207802,0.00000000,0.00000000,337.99438477); //object(lampost_coast) (5)
	CreateDynamicObject(1223,986.59924316,-2101.95385742,11.75206947,0.00000000,0.00000000,337.99438477); //object(lampost_coast) (6)
	CreateDynamicObject(1223,979.45672607,-2113.12329102,12.00047493,0.00000000,0.00000000,337.99438477); //object(lampost_coast) (7)
	CreateDynamicObject(1223,974.56182861,-2120.34863281,12.09375000,0.00000000,0.00000000,337.99438477); //object(lampost_coast) (8)
	CreateDynamicObject(1223,965.77276611,-2130.53833008,11.84771919,0.00000000,0.00000000,337.99438477); //object(lampost_coast) (9)
	CreateDynamicObject(1223,961.25781250,-2136.33251953,11.78360367,0.00000000,0.00000000,337.99438477); //object(lampost_coast) (10)
	CreateDynamicObject(1223,1024.61511230,-2072.50463867,12.14115238,0.00000000,0.00000000,53.99438477); //object(lampost_coast) (11)
	CreateDynamicObject(1223,1027.28369141,-2057.80053711,12.09375000,0.00000000,0.00000000,311.99438477); //object(lampost_coast) (12)
	CreateDynamicObject(1223,1005.69653320,-2059.25708008,12.09375000,0.00000000,0.00000000,337.99438477); //object(lampost_coast) (13)
	CreateDynamicObject(1223,1008.45489502,-2052.23095703,12.09375000,0.00000000,0.00000000,299.99438477); //object(lampost_coast) (14)
	CreateDynamicObject(1223,1016.64642334,-2054.06201172,12.09375000,0.00000000,0.00000000,283.99267578); //object(lampost_coast) (15)
	CreateDynamicObject(1223,1015.80072021,-2073.03442383,12.13768482,0.00000000,0.00000000,53.99230957); //object(lampost_coast) (16)
//////  Hospital
CreateDynamicObject(18030,1605.23339844,1777.98632812,-58.69899750,0.00000000,0.00000000,0.00000000); //object(gap) (1)
CreateDynamicObject(14672,1595.45898438,1752.24902344,-59.55959320,0.00000000,0.00000000,265.99548340); //object(int_sex01) (1)
CreateDynamicObject(16779,1593.24548340,1748.94531250,-57.45226288,0.00000000,0.00000000,0.00000000); //object(ufo_light02) (1)
CreateDynamicObject(1240,1604.19055176,1749.84887695,-58.46453094,0.00000000,0.00000000,268.00000000); //object(health) (1)
CreateDynamicObject(1241,1604.11608887,1748.61840820,-58.54878998,8.00000000,0.00000000,254.25006104); //object(adrenaline) (1)
CreateDynamicObject(2690,1600.82617188,1744.56872559,-60.03544235,0.00000000,0.00000000,254.00000000); //object(cj_fire_ext) (1)
CreateDynamicObject(2961,1600.81652832,1744.11193848,-60.00765991,0.00000000,0.00000000,267.50000000); //object(fire_break) (1)
CreateDynamicObject(2941,1601.78552246,1748.73522949,-60.33626175,0.00000000,0.00000000,266.00000000); //object(temp_till) (1)
CreateDynamicObject(1997,1597.81188965,1743.47802734,-61.55959320,0.00000000,0.00000000,265.25000000); //object(hos_trolley) (1)
CreateDynamicObject(1997,1597.89746094,1744.66906738,-61.55959320,0.00000000,0.00000000,265.74829102); //object(hos_trolley) (2)
CreateDynamicObject(1616,1600.50866699,1744.30773926,-57.64018631,0.00000000,344.00000000,357.00000000); //object(nt_securecam1_01) (1)
CreateDynamicObject(2948,1601.91357422,1758.72875977,-61.55959320,0.00000000,0.00000000,357.75000000); //object(cr_door_02) (1)
CreateDynamicObject(2948,1601.81860352,1756.81909180,-61.55959320,0.00000000,0.00000000,175.74499512); //object(cr_door_02) (2)
CreateDynamicObject(1557,1599.44470215,1764.42675781,-61.06618500,0.00000000,0.00000000,0.00000000); //object(gen_doorext19) (1)
CreateDynamicObject(1557,1599.65698242,1761.20031738,-61.53611374,0.00000000,0.00000000,355.00000000); //object(gen_doorext19) (2)
CreateDynamicObject(630,1586.91918945,1752.97216797,-60.53443527,0.00000000,0.00000000,343.99996948); //object(veg_palmkb8) (1)
CreateDynamicObject(638,1586.44641113,1747.99426270,-61.13757706,0.00000000,0.00000000,356.00000000); //object(kb_planter_bush) (2)
CreateDynamicObject(646,1594.51293945,1750.07080078,-60.14307022,0.00000000,0.00000000,340.00000000); //object(veg_palmkb14) (2)
CreateDynamicObject(2591,1590.85241699,1766.16564941,-58.36429596,0.00000000,0.00000000,180.25000000); //object(ab_partition1) (1)
CreateDynamicObject(1742,1593.01574707,1753.23840332,-61.55959320,0.00000000,0.00000000,356.25000000); //object(med_bookshelf) (1)
CreateDynamicObject(2023,1591.75134277,1752.69995117,-61.55959320,0.00000000,0.00000000,356.00000000); //object(mrk_stnd_lmp) (1)
CreateDynamicObject(2700,1594.82226562,1746.68847656,-58.33557129,359.75280762,11.25000000,144.79431152); //object(cj_sex_tv2) (1)
CreateDynamicObject(1557,1585.66992188,1746.05847168,-61.55959320,0.00000000,0.00000000,265.74572754); //object(gen_doorext19) (3)
CreateDynamicObject(2817,1600.19519043,1749.15478516,-61.55959320,0.00000000,0.00000000,266.00000000); //object(gb_bedrug01) (1)
CreateDynamicObject(630,1604.10156250,1751.89672852,-60.53443527,0.00000000,0.00000000,305.99670410); //object(veg_palmkb8) (3)
CreateDynamicObject(15038,1601.77587891,1751.54479980,-59.84084320,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (1)
CreateDynamicObject(2591,1590.85241699,1769.51330566,-58.36429596,0.00000000,0.00000000,0.49719238); //object(ab_partition1) (2)
CreateDynamicObject(2591,1590.81762695,1774.41027832,-58.38929749,0.00000000,0.00000000,0.49438477); //object(ab_partition1) (3)
CreateDynamicObject(2591,1589.14172363,1776.49694824,-58.36429596,0.00000000,0.00000000,270.99438477); //object(ab_partition1) (4)
CreateDynamicObject(2591,1583.86889648,1776.25720215,-58.36429596,0.00000000,0.00000000,91.74426270); //object(ab_partition1) (5)
CreateDynamicObject(997,1599.13623047,1746.07434082,-61.55959320,0.00000000,0.00000000,265.00000000); //object(lhouse_barrier3) (1)
CreateDynamicObject(7191,1590.68884277,1798.87573242,-59.33486938,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (1)
CreateDynamicObject(7191,1590.68774414,1798.90075684,-56.11637115,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (2)
CreateDynamicObject(7191,1616.71093750,1769.42724609,-58.98791885,0.00000000,0.00000000,179.00000000); //object(vegasnnewfence2b) (3)
CreateDynamicObject(7191,1609.55175781,1793.73535156,-59.10871506,0.00000000,0.00000000,180.49438477); //object(vegasnnewfence2b) (4)
CreateDynamicObject(7191,1617.62744141,1782.43798828,-59.10909271,0.00000000,0.00000000,269.49438477); //object(vegasnnewfence2b) (5)
CreateDynamicObject(7191,1571.22790527,1782.49511719,-59.84150696,0.00000000,0.00000000,270.25000000); //object(vegasnnewfence2b) (6)
CreateDynamicObject(2591,1586.68933105,1776.37121582,-58.36429596,0.00000000,0.00000000,91.99133301); //object(ab_partition1) (6)
CreateDynamicObject(2591,1590.82470703,1772.48937988,-57.20526886,270.00000000,180.00000000,180.74389648); //object(ab_partition1) (7)
CreateDynamicObject(1997,1608.45410156,1780.97924805,-61.06618500,0.00000000,0.00000000,265.74829102); //object(hos_trolley) (3)
CreateDynamicObject(1997,1608.44616699,1779.51452637,-61.05894852,0.00000000,0.00000000,265.74829102); //object(hos_trolley) (4)
CreateDynamicObject(1997,1608.45446777,1778.19494629,-61.05894852,0.00000000,0.00000000,265.74829102); //object(hos_trolley) (5)
CreateDynamicObject(1997,1608.46508789,1776.93774414,-61.05894852,0.00000000,0.00000000,265.74829102); //object(hos_trolley) (6)
CreateDynamicObject(2161,1586.03613281,1776.26538086,-59.36608124,0.00000000,0.00000000,2.75000000); //object(med_office_unit_4) (1)
CreateDynamicObject(2161,1587.36401367,1776.24902344,-59.36332321,0.00000000,0.00000000,2.74658203); //object(med_office_unit_4) (3)
CreateDynamicObject(2161,1584.71240234,1776.13732910,-59.34083557,0.00000000,0.00000000,2.75000000); //object(med_office_unit_4) (5)
CreateDynamicObject(2165,1587.60498047,1773.65576172,-61.06618500,0.00000000,0.00000000,180.50000000); //object(med_office_desk_1) (1)
CreateDynamicObject(2166,1589.57275391,1774.64514160,-61.06618500,0.00000000,0.00000000,179.50000000); //object(med_office_desk_2) (1)
CreateDynamicObject(2174,1583.84851074,1774.21887207,-61.06618500,0.00000000,0.00000000,89.50000000); //object(med_office4_desk_2) (1)
CreateDynamicObject(7191,1568.66101074,1767.53686523,-59.15368652,0.00000000,0.00000000,269.49719238); //object(vegasnnewfence2b) (7)
CreateDynamicObject(2165,1587.62011719,1769.63562012,-61.06618500,0.00000000,0.00000000,1.99987793); //object(med_office_desk_1) (2)
CreateDynamicObject(2166,1585.67224121,1768.56555176,-61.06618500,0.00000000,0.00000000,2.49462891); //object(med_office_desk_2) (2)
CreateDynamicObject(2309,1588.40185547,1768.00878906,-61.06618500,0.00000000,0.00000000,0.00000000); //object(med_office_chair2) (1)
CreateDynamicObject(2309,1587.04357910,1775.27844238,-61.06618500,0.00000000,0.00000000,180.00000000); //object(med_office_chair2) (2)
CreateDynamicObject(630,1583.81127930,1768.06640625,-60.04102707,0.00000000,0.00000000,343.99841309); //object(veg_palmkb8) (4)
CreateDynamicObject(630,1589.69299316,1775.56384277,-60.04102707,0.00000000,0.00000000,343.99841309); //object(veg_palmkb8) (5)
CreateDynamicObject(15038,1590.50488281,1770.79895020,-60.44899750,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (2)
CreateDynamicObject(1997,1591.66137695,1766.46704102,-61.06618500,0.00000000,0.00000000,177.74829102); //object(hos_trolley) (7)
CreateDynamicObject(1997,1592.94750977,1766.54992676,-61.06618500,0.00000000,0.00000000,177.74780273); //object(hos_trolley) (8)
CreateDynamicObject(1997,1594.25793457,1766.51110840,-61.06618500,0.00000000,0.00000000,177.74780273); //object(hos_trolley) (9)
CreateDynamicObject(1997,1595.58447266,1766.48620605,-61.06618500,0.00000000,0.00000000,177.74780273); //object(hos_trolley) (10)
CreateDynamicObject(1491,1590.80578613,1772.70715332,-61.19119263,0.00000000,0.00000000,271.00000000); //object(gen_doorint01) (1)
CreateDynamicObject(7191,1571.22790527,1782.49511719,-56.16645050,0.00000000,0.00000000,270.24719238); //object(vegasnnewfence2b) (8)
CreateDynamicObject(7191,1594.67968750,1782.68847656,-56.79150391,0.00000000,0.00000000,269.48364258); //object(vegasnnewfence2b) (9)
CreateDynamicObject(1491,1594.77917480,1782.52905273,-61.06618500,0.00000000,0.00000000,177.99975586); //object(gen_doorint01) (2)
CreateDynamicObject(1491,1609.73522949,1770.06384277,-61.06618500,0.00000000,0.00000000,89.24499512); //object(gen_doorint01) (3)
CreateDynamicObject(7191,1609.63171387,1747.19543457,-59.09150696,0.00000000,0.00000000,178.99475098); //object(vegasnnewfence2b) (10)
CreateDynamicObject(1649,1609.98046875,1772.09960938,-56.92529297,0.00000000,0.00000000,271.24694824); //object(wglasssmash) (1)
CreateDynamicObject(1649,1609.46679688,1772.28125000,-57.06972122,0.00000000,0.00000000,89.24194336); //object(wglasssmash) (2)
CreateDynamicObject(2591,1611.99108887,1769.99609375,-58.38937378,0.00000000,0.00000000,270.49438477); //object(ab_partition1) (8)
CreateDynamicObject(2591,1615.40454102,1770.12072754,-58.41429901,0.00000000,0.00000000,92.98889160); //object(ab_partition1) (9)
CreateDynamicObject(3850,1604.00109863,1768.40002441,-60.47027206,0.00000000,0.00000000,271.75000000); //object(carshowbann_sfsx) (2)
CreateDynamicObject(3850,1602.38598633,1766.63391113,-60.52027512,0.00000000,0.00000000,181.99951172); //object(carshowbann_sfsx) (4)
CreateDynamicObject(3850,1607.46789551,1768.45910645,-60.49527359,0.00000000,0.00000000,270.24951172); //object(carshowbann_sfsx) (5)
CreateDynamicObject(19124,1609.46484375,1768.37133789,-60.50186157,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1216,1597.57409668,1773.54589844,-60.37418365,0.00000000,0.00000000,272.00000000); //object(phonebooth1) (3)
CreateDynamicObject(1216,1598.21557617,1772.90270996,-60.37418365,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (4)
CreateDynamicObject(3660,1612.34362793,1766.48168945,-59.36317444,0.00000000,0.00000000,0.75000000); //object(lasairfbed_las) (1)
CreateDynamicObject(3660,1612.31640625,1767.46020508,-59.36308289,0.00000000,0.00000000,0.74707031); //object(lasairfbed_las) (2)
CreateDynamicObject(19124,1602.44238281,1768.17749023,-60.50186157,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(3850,1600.16613770,1773.53393555,-60.54527664,0.00000000,0.00000000,269.74682617); //object(carshowbann_sfsx) (8)
CreateDynamicObject(1723,1598.99584961,1780.50036621,-61.06618500,0.00000000,0.00000000,1.25000000); //object(mrk_seating1) (3)
CreateDynamicObject(1723,1601.13647461,1774.72363281,-61.06618500,0.00000000,0.00000000,183.25000000); //object(mrk_seating1) (4)
CreateDynamicObject(1815,1599.62145996,1777.12646484,-61.06618500,0.00000000,0.00000000,0.00000000); //object(coffee_low_2) (2)
CreateDynamicObject(638,1596.73901367,1782.12158203,-60.64416885,0.00000000,0.00000000,269.49548340); //object(kb_planter_bush) (3)
CreateDynamicObject(638,1600.76147461,1782.10888672,-60.61916733,0.00000000,0.00000000,269.49462891); //object(kb_planter_bush) (4)
CreateDynamicObject(638,1605.14770508,1782.06555176,-60.61916733,0.00000000,0.00000000,269.49462891); //object(kb_planter_bush) (5)
CreateDynamicObject(3850,1591.10681152,1779.06933594,-60.52027512,0.00000000,0.00000000,271.74682617); //object(carshowbann_sfsx) (9)
CreateDynamicObject(3850,1592.80700684,1780.83435059,-60.52027512,0.00000000,0.00000000,180.49182129); //object(carshowbann_sfsx) (10)
CreateDynamicObject(3660,1591.71154785,1789.14306641,-59.41311646,0.00000000,0.00000000,271.74707031); //object(lasairfbed_las) (3)
CreateDynamicObject(19124,1592.58642578,1779.23876953,-60.50186157,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(19124,1590.89733887,1779.19152832,-60.50186157,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
CreateDynamicObject(2301,1604.64221191,1788.37097168,-61.06618500,0.00000000,0.00000000,0.00000000); //object(med_bed_9) (1)
CreateDynamicObject(2301,1599.56591797,1788.40502930,-61.06618500,0.00000000,0.00000000,0.00000000); //object(med_bed_9) (2)
CreateDynamicObject(2301,1600.53820801,1786.21362305,-61.06618500,0.00000000,0.00000000,180.00000000); //object(med_bed_9) (3)
CreateDynamicObject(2301,1605.68811035,1785.97802734,-61.06618500,0.00000000,0.00000000,179.99450684); //object(med_bed_9) (4)
CreateDynamicObject(7191,1592.07287598,1805.47485352,-59.09150696,0.00000000,0.00000000,1.25000000); //object(vegasnnewfence2b) (11)
CreateDynamicObject(1744,1609.64978027,1788.36389160,-60.45894241,0.00000000,0.00000000,270.00000000); //object(med_shelf) (1)
CreateDynamicObject(1744,1609.67712402,1786.24682617,-60.47858810,0.00000000,0.00000000,270.00000000); //object(med_shelf) (3)
CreateDynamicObject(1767,1593.17382812,1790.60363770,-61.06618500,0.00000000,0.00000000,60.00000000); //object(med_single_1) (1)
CreateDynamicObject(1814,1602.02868652,1789.98156738,-61.06618500,0.00000000,0.00000000,0.00000000); //object(coffee_med_1) (1)
CreateDynamicObject(1814,1602.03039551,1783.46154785,-61.06618500,0.00000000,0.00000000,0.00000000); //object(coffee_med_1) (2)
CreateDynamicObject(2313,1609.02050781,1787.44677734,-61.06618500,0.00000000,0.00000000,270.00000000); //object(cj_tv_table1) (1)
CreateDynamicObject(2700,1609.28393555,1786.92236328,-58.66733551,0.00000000,0.00000000,181.50000000); //object(cj_sex_tv2) (2)
CreateDynamicObject(3390,1616.10302734,1778.77709961,-61.06618500,0.00000000,0.00000000,0.00000000); //object(a51_sdsk_ncol1_) (1)
CreateDynamicObject(3392,1616.17150879,1775.33435059,-61.06618500,0.00000000,0.00000000,0.00000000); //object(a51_sdsk_ncol3_) (1)
CreateDynamicObject(2886,1609.69226074,1771.95886230,-59.45435715,0.00000000,0.00000000,267.75000000); //object(sec_keypad) (1)
CreateDynamicObject(1797,1610.45434570,1776.24963379,-61.06618500,0.00000000,0.00000000,0.00000000); //object(swank_bed_3) (1)
CreateDynamicObject(1801,1615.25085449,1769.32116699,-61.06618500,0.00000000,0.00000000,0.00000000); //object(swank_bed_4) (1)
CreateDynamicObject(1808,1601.79748535,1780.39550781,-61.06618500,0.00000000,0.00000000,0.00000000); //object(cj_watercooler2) (1)
CreateDynamicObject(1828,1600.01281738,1777.67822266,-61.06976318,0.00000000,0.00000000,0.00000000); //object(man_sdr_rug) (1)
CreateDynamicObject(2146,1613.65075684,1781.74157715,-60.58063507,0.00000000,0.00000000,270.00000000); //object(cj_trolly1) (1)
CreateDynamicObject(2192,1615.84448242,1777.62011719,-60.19120789,0.00000000,0.00000000,92.00000000); //object(fan_1) (1)
CreateDynamicObject(2344,1609.32824707,1786.35290527,-60.12800980,0.00000000,0.00000000,0.00000000); //object(cj_remote) (1)
CreateDynamicObject(3386,1615.92065430,1780.99340820,-61.06618500,0.00000000,0.00000000,0.00000000); //object(a51_srack2_) (1)
CreateDynamicObject(3386,1610.64074707,1780.38024902,-61.06618500,0.00000000,0.00000000,90.00000000); //object(a51_srack2_) (2)
CreateDynamicObject(3386,1611.57434082,1780.44555664,-61.06618500,0.00000000,0.00000000,90.00000000); //object(a51_srack2_) (3)
CreateDynamicObject(1214,1610.62133789,1780.16198730,-61.06618500,0.00000000,0.00000000,0.00000000); //object(bollard) (1)
CreateDynamicObject(1214,1615.68200684,1780.96447754,-61.06618500,0.00000000,0.00000000,0.00000000); //object(bollard) (2)
CreateDynamicObject(1214,1611.83874512,1780.47766113,-61.06618500,0.00000000,0.00000000,0.00000000); //object(bollard) (3)
CreateDynamicObject(1214,1616.07324219,1777.67272949,-61.61621857,0.00000000,0.00000000,0.00000000); //object(bollard) (4)
CreateDynamicObject(1214,1616.04577637,1774.13684082,-61.56621552,0.00000000,0.00000000,0.00000000); //object(bollard) (5)
CreateDynamicObject(3657,1592.27172852,1748.55908203,-61.04138184,0.00000000,0.00000000,86.74829102); //object(airseata_las) (1)
CreateDynamicObject(3657,1589.68542480,1748.55908203,-61.04138184,0.00000000,0.00000000,86.74829102); //object(airseata_las) (2)
CreateDynamicObject(2700,1598.42846680,1773.99951172,-57.74509048,359.75280762,11.25000000,61.79431152); //object(cj_sex_tv2) (1)
CreateDynamicObject(1214,1595.13964844,1746.32800293,-61.55959320,0.00000000,0.00000000,0.00000000); //object(bollard) (6)
CreateDynamicObject(1214,1595.37878418,1749.86230469,-61.55959320,0.00000000,0.00000000,0.00000000); //object(bollard) (7)
CreateDynamicObject(1214,1595.18859863,1746.29956055,-60.20541000,0.00000000,0.00000000,0.00000000); //object(bollard) (8)
CreateDynamicObject(1214,1595.41467285,1749.81860352,-60.20658112,0.00000000,0.00000000,0.00000000); //object(bollard) (9)
// 2doPeaje
CreateDynamicObject(4641,611.15521240,341.90322876,19.62626648,0.00000000,0.00000000,124.50006104); //object(paypark_lan04) (1)
CreateDynamicObject(1251,615.46246338,347.41967773,18.03437233,0.00000000,0.00000000,214.74998474); //object(smashbar) (1)
CreateDynamicObject(1251,605.83349609,340.35693359,18.03437233,0.00000000,0.00000000,214.74975586); //object(smashbar) (2)
CreateDynamicObject(4641,612.39166260,342.70474243,19.62626648,0.00000000,0.00000000,304.24707031); //object(paypark_lan04) (2)
CreateDynamicObject(869,621.77282715,344.38226318,18.52552223,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (1)
CreateDynamicObject(869,622.69409180,341.95797729,18.73995972,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (2)
CreateDynamicObject(869,623.68316650,339.75006104,18.94154739,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (3)
CreateDynamicObject(869,624.98651123,337.66387939,19.14747238,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (4)
CreateDynamicObject(869,609.62091064,328.49456787,19.29899979,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (5)
CreateDynamicObject(869,607.14270020,332.95535278,18.99769402,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (6)
CreateDynamicObject(869,608.97827148,329.55920410,19.48236275,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (7)
CreateDynamicObject(869,610.46881104,326.13723755,19.36505699,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (8)
CreateDynamicObject(869,611.31933594,324.10876465,19.42392540,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (9)
CreateDynamicObject(869,625.55676270,334.73553467,19.30349159,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (10)
CreateDynamicObject(869,626.01800537,332.05664062,19.35348892,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (11)
CreateDynamicObject(869,626.51904297,329.87506104,19.38253403,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (12)
CreateDynamicObject(869,626.74707031,327.89004517,19.40633965,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (13)
CreateDynamicObject(869,608.11407471,331.05606079,19.15394020,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (14)
CreateDynamicObject(869,605.94433594,334.46926880,18.86527443,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (15)
CreateDynamicObject(3851,609.42370605,350.38610840,27.89567375,0.00000000,316.00000000,304.99713135); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,604.74536133,347.08255005,27.93655396,0.00000000,315.99975586,304.99694824); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,610.77764893,348.46978760,25.12393188,0.00000000,325.75000000,304.99713135); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,606.11767578,345.16638184,25.07393265,0.00000000,325.75000000,304.99713135); //object(carshowwin_sfsx) (5)
CreateDynamicObject(19124,606.36077881,337.21411133,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(19124,618.55389404,345.33618164,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(19124,593.98565674,355.31488037,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(19124,605.35803223,363.75540161,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
CreateDynamicObject(19124,596.11920166,377.24047852,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
CreateDynamicObject(19124,584.86181641,368.17123413,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
CreateDynamicObject(19124,570.00311279,389.20019531,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
CreateDynamicObject(19124,581.75836182,397.75845337,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
CreateDynamicObject(19124,570.50592041,414.07681274,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
CreateDynamicObject(19124,558.50927734,405.55288696,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
CreateDynamicObject(19124,540.20947266,431.86740112,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
CreateDynamicObject(19124,552.10131836,440.24792480,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
CreateDynamicObject(19124,526.33770752,451.23950195,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
CreateDynamicObject(19124,538.30633545,459.85519409,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
CreateDynamicObject(19124,505.78588867,480.82556152,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
CreateDynamicObject(19124,517.46527100,489.11245728,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(19124,486.89691162,507.62744141,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (17)
CreateDynamicObject(19124,499.00323486,516.03869629,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (18)
CreateDynamicObject(19124,469.32437134,533.15283203,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (19)
CreateDynamicObject(19124,481.38186646,541.86529541,19.29869843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (20)
CreateDynamicObject(19124,448.59533691,563.21594238,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (21)
CreateDynamicObject(19124,460.27703857,571.29559326,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (22)
CreateDynamicObject(19124,432.42288208,585.91540527,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
CreateDynamicObject(19124,444.05410767,594.53662109,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (24)
CreateDynamicObject(966,619.60754395,344.84515381,17.98676491,0.00000000,0.00000000,38.00000000); //object(bar_gatebar01) (1)
CreateDynamicObject(966,607.09924316,335.70361328,17.97176361,0.00000000,0.00000000,213.99621582); //object(bar_gatebar01) (2)
CreateDynamicObject(1554,613.51287842,340.18591309,17.97713280,0.00000000,0.00000000,28.00000000); //object(cj_water_barrier) (1)
CreateDynamicObject(1554,606.44799805,335.91693115,18.34716034,0.00000000,0.00000000,27.99865723); //object(cj_water_barrier) (2)
CreateDynamicObject(1554,619.71734619,345.64797974,17.90903854,0.00000000,0.00000000,27.99865723); //object(cj_water_barrier) (3)
		// ··············································································································· //
	/* Cajeros */
	CreateDynamicObject(2942, 1144.14, -1765.94, 13.23,   0.00, 0.00, 180.42);
	CreateDynamicObject(2942, 1269.46, -1323.66, 13.14,   0.00, 0.00, -90.24);
	CreateDynamicObject(2942, 2823.53, -1593.46, 10.72,   0.00, 0.00, 153.70);
	CreateDynamicObject(2942, 1589.25, -2295.61, 13.17,   0.00, 0.00, 1.68);
	CreateDynamicObject(2942, 1591.34, -2295.65, 13.18,   0.00, 0.00, 2.94);
	CreateDynamicObject(2942, 1593.18, -2295.65, 12.87,   0.00, 0.00, -0.06);
	CreateDynamicObject(2942, 450.59, -1793.85, 5.18,   0.00, 0.00, 179.70);
	CreateDynamicObject(2942, 1415.24, -1020.80, 23.47,   0.00, 0.00, 1.56);
	CreateDynamicObject(2942, 1417.24, -1020.81, 23.47,   0.00, 0.00, 1.32);
	CreateDynamicObject(2942, 2194.95, 1987.35, 11.94,   0.00, 0.00, 271.00);
	CreateDynamicObject(2942, 2102.28, 2232.37, 10.67,   0.00, 0.00, 89.25);
	CreateDynamicObject(2942, 2241.49, 2396.21, 10.46,   0.00, 0.00, 181.25);
	CreateDynamicObject(2942, 2366.10, 2390.80, 10.46,   0.00, 0.00, 181.25);
	CreateDynamicObject(2942, 1586.76, 2282.15, 10.44,   0.00, 0.00, 359.25);
	CreateDynamicObject(2942, 1656.80, 1736.25, 10.45,   0.00, 0.00, 359.74);
	CreateDynamicObject(2942, 1595.33, 1819.43, 10.46,   0.00, 0.00, 181.74);
	CreateDynamicObject(2942, 2548.79, 1972.67, 10.46,   0.00, 0.00, 359.74);
	CreateDynamicObject(2942, 1984.10, 1032.45, 994.11,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 1985.17, 1032.44, 994.11,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 1986.31, 1032.39, 994.11,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 2243.83, 1635.49, 1008.00,   0.00, 0.00, 309.00);
	CreateDynamicObject(2942, 2243.13, 1636.34, 1008.00,   0.00, 0.00, 309.00);
	CreateDynamicObject(2942, 2244.52, 1634.61, 1008.01,   0.00, 0.00, 309.00);
	CreateDynamicObject(2942, 1140.21, 12.01, 1000.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 1141.04, 12.01, 1000.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 1141.87, 12.01, 1000.32,   0.00, 0.00, 0.00);
	// ++
	CreateDynamicObject(971,1025.2795,-1029.2299,32.1016,-0.00000,0.000000,0); // Pay & Spray
	CreateDynamicObject(971,488.2341,-1735.4591,11.1416,-0.00000,0.000000,174); // Pay & Spray
	CreateDynamicObject(971,2071.5410,-1831.4143,13.5469,-0.00000,0.000000,90); // Pay & Spray
	CreateDynamicObject(971,719.8199,-462.4768,16.3359,-0.00000,0.000000,0); // Pay & Spray
	CreateDynamicObject(971,-1904.4561,277.8578,41.0469,-0.00000,0.000000,0); // Pay & Spray
	CreateDynamicObject(1676,1007.3336,-936.4127,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood
	CreateDynamicObject(1676,1000.6406,-937.1027,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood
//fin de mapeos
	/*      Count System    */
	printf("-=============== Objetos Cargados ===============-");
	printf("- CreateDynamicObjetcs [%d]", CountDynamicObjects());

	// CreatedCars check
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
	    CreatedCars[i] = 0;
	}
	// -============================================== [ Faction Cars ] =========================================- //
	// Los Santos Police Departament
	AddStaticVehicleEx(596,1601.872924,-1704.370971,5.612636,89.574440,0,1,60000); // Patrulla LS   	1
	AddStaticVehicleEx(596,1601.902221,-1700.465332,5.634525,89.566131,0,1,60000); // Patrulla LS   	2
	AddStaticVehicleEx(596,1601.933105,-1696.409912,5.642260,89.562606,0,1,60000); // Patrulla LS   	3
	AddStaticVehicleEx(596,1601.963134,-1692.478881,5.656129,89.555740,0,1,60000); // Patrulla LS   	4
	AddStaticVehicleEx(596,1595.511840,-1710.769531,5.613651,0.000000,0,1,60000); // Patrulla LS    	5
	AddStaticVehicleEx(596,1591.606079,-1710.771240,5.626485,0.000000,0,1,60000); // Patrulla LS    	6
	AddStaticVehicleEx(596,1587.455688,-1710.772827,5.648460,0.000000,0,1,60000); // Patrulla LS    	7
	AddStaticVehicle(528,1529.4652,-1687.8953,5.9175,267.5517,0,1); // antidisturbioLS
	AddStaticVehicleEx(599,1526.548095,-1644.479614,6.056174,179.637084,0,1,60000); // Ranger   		9
	AddStaticVehicleEx(599,1530.429199,-1644.505371,6.124225,179.634948,0,1,60000); // Ranger   		10
	AddStaticVehicleEx(599,1534.434448,-1644.530761,6.133507,179.633880,0,1,60000); // Ranger   		11
	AddStaticVehicleEx(599,1538.758666,-1644.558349,6.156028,179.631210,0,1,60000); // Ranger   		12
	AddStaticVehicleEx(523,1567.272338,-1708.937011,5.457219,354.100372,0,1,60000); // HPV 1000 		13
	AddStaticVehicleEx(523,1565.331420,-1708.737304,5.475297,354.107971,0,1,60000); // HPV 1000 		14
	AddStaticVehicleEx(523,1562.516479,-1708.446411,5.508016,354.100280,0,1,60000); // HPV 1000 		15
	AddStaticVehicleEx(427,1571.071044,-1615.492797,13.514673,268.842010,0,1,60000); // Enforcer    	16
	AddStaticVehicleEx(427,1557.802734,-1615.510131,13.514776,269.681549,0,1,60000); // Enforcer    	17
	AddStaticVehicleEx(601,1544.134521,-1609.579345,13.141159,269.321655,0,1,60000); // SWAT Van    	18
	AddStaticVehicleEx(497,1563.660034,-1655.212158,28.589679,88.595161,0,1,60000); // Police Maverick  19
	// Transport LS
	AddStaticVehicleEx(420,1786.49426270,-1933.05151367,13.23620510,90.00000000,6,1,60000); //Taxi 20
	AddStaticVehicleEx(420,1786.54809570,-1929.06237793,13.23815632,90.00000000,6,1,60000); //Taxi 21
	AddStaticVehicleEx(420,1786.47534180,-1925.15112305,13.24005604,90.00000000,6,1,60000); //Taxi 22
	AddStaticVehicleEx(420,1786.50427246,-1921.29589844,13.24193192,90.00000000,6,1,60000); //Taxi 23
	AddStaticVehicleEx(579,2591.8010,1503.3247,10.5265,90.9069,79,79,60000); //Taxi 24
	AddStaticVehicleEx(560,2591.9236,1512.2085,10.5265,83.6815,79,79,60000); //Taxi 25
	AddStaticVehicleEx(421,1794.03686523,-1933.00158691,13.38618851,270.00000000,-1,1,60000); //Washington 26
	AddStaticVehicleEx(421,1794.13903809,-1929.11425781,13.38811302,270.00000000,-1,1,60000); //Washington 27
	// FBI Swat
	AddStaticVehicleEx(490, 914.9025, -1045.9601, 32.0046, -87.7799,-1,1,60000); //S.W.A.T. 28
	AddStaticVehicleEx(490, 914.9606, -1051.3943, 32.0046, -90.1200,1,0,60000); //Police Maverick 29
	AddStaticVehicleEx(490, 903.6010, -1051.7687, 32.0046, -88.6199,-1,1,60000); //FBI Truck 30
	AddStaticVehicleEx(490, 903.4998, -1045.4478, 32.0046, -88.6199,-1,1,60000); //FBI Truck 31
	// Bus LS & LV
	AddStaticVehicleEx(560,2577.7651,1535.6198,10.5268,182.9499,79,79,60000); //Bus 32
	AddStaticVehicleEx(560,2572.5256,1534.7970,10.5273,189.7535,79,79,60000); //Bus 33
	AddStaticVehicleEx(431,1775.70507812,-1914.69995117,13.63617039,0.00000000,-1,-1,60000); //Bus 34
	AddStaticVehicleEx(431,1775.69238281,-1929.90002441,13.63616085,0.00000000,-1,-1,60000); //Bus      35
	// SAMD
	AddStaticVehicleEx(416,1124.6451, -1326.4891, 13.6510, 0.0000,3,3,60000); // Ambulancia  36
	AddStaticVehicleEx(416,1111.0022, -1327.2434, 13.6510, 0.0000,3,3,60000); // Ambulancia  37
	AddStaticVehicleEx(416,1097.3971, -1327.4965, 13.6510, 0.0000,3,3,60000); // Ambulancia  38
	AddStaticVehicleEx(416,1178.3611, -1338.5315, 13.9308, -89.4000,1,3,60000); // Ambulancia  39
	AddStaticVehicleEx(416,1178.1970, -1308.5974, 13.9308, -87.9600,1,3,60000); // Ambulancia  40
	AddStaticVehicleEx(416,1097.7100, -1315.9829, 14.1804, -178.0800,1,3,60000); // Ambulancia  41
	AddStaticVehicleEx(563,1164.263305,-1367.890625,27.369998,2.710921,1,3,60000); // Raindance 45
	AddStaticVehicleEx(596,1131.7294, -1331.1239, 13.4903, -89.0400,3,1,60000); // Patrulla LS 43
	AddStaticVehicleEx(596,1131.7456, -1326.7855, 13.4903, -89.0400,3,1,60000); // Patrulla LS 44
	// Sureños 13
 	AddStaticVehicleEx(567,1888.8737, -2024.3337, 13.2627, 179.8200,103,109,60000); // Savanna      45
	AddStaticVehicleEx(567, 1888.8131, -2034.3409, 13.2627, 179.8200,103,0,60000); // Savanna       46
	AddStaticVehicleEx(567, 1877.2190, -2034.0863, 13.2627, 180.4200,103,109,60000); // Savanna        47
	AddStaticVehicleEx(567, 1876.9922, -2024.2839, 13.2627, 180.4200,103,0,60000); // Savanna      	48
	AddStaticVehicleEx(413, 1867.8138, -2030.7661, 13.8836, -89.5200,103,0,60000); // Pony        49
	AddStaticVehicleEx(413, 1900.6469, -2030.4890, 13.8836, 90.8400,103,0,60000); // Pony        50
	AddStaticVehicleEx(567, 1882.7063, -2017.4099, 13.2627, 268.9799,103,109,60000); // Savanna     51
	// Groove Street
    AddStaticVehicleEx(585,2514.033203,-1666.834228,13.196761,146.604492,44,44,60000); // Emperor   52
	AddStaticVehicleEx(585,2507.031494,-1684.601928,13.144980,238.152038,44,44,60000); // Emperor   53
	AddStaticVehicleEx(492,2499.072265,-1650.737060,13.307857,152.592132,83,1,60000); // Greenwood  54
	AddStaticVehicleEx(492,2514.673828,-1679.253051,13.382580,44.357257,83,0,60000); // Greenwood   55
	AddStaticVehicleEx(517,2470.653320,-1653.038696,13.294920,116.369949,114,1,60000); // Majestic  56
	AddStaticVehicleEx(517,2458.179443,-1671.415893,13.353937,233.656723,114,0,60000); // Majestic  57
	// Latin Kings
	AddStaticVehicleEx(474, 2637.3513, -1084.9084, 69.3415, 0.0000,6,6,60000); //Burrito 58
	AddStaticVehicleEx(474, 2637.5994, -1076.7814, 69.3415, 0.0000,6,1,60000); //Picador 59
	AddStaticVehicleEx(474, 2637.5618, -1069.3865, 69.3415, 0.0000,6,1,60000); //Hermes 60
	AddStaticVehicleEx(482, 2685.8743, -1098.7074, 69.2756, 1.1400,6,1,60000); //Hermes 61
	AddStaticVehicleEx(482, 2681.9141, -1098.6583, 69.2756, 1.1400,6,1,60000); //Majestic 62
	AddStaticVehicleEx(474, 2637.6194, -1092.4135, 69.3415, 0.0000,6,1,60000); //Sabre 63
	// Mecánicos LS
 	AddStaticVehicleEx(525,1357.1536,-1688.6627,13.1778,267.9833,-1,103,60000); //Tow Truck    	64
	AddStaticVehicleEx(525,1356.5361,-1694.1129,13.1719,267.3925,-1,103,60000); //Tow Truck    	65
	AddStaticVehicleEx(525,1357.0944,-1700.5952,13.1776,271.3353,-1,103,60000); //Tow Truck    	66
	AddStaticVehicleEx(525,1356.7054,-1706.4738,13.1836,273.9451,-1,103,60000); //Tow Truck    	67
	/////MAs autos para 14 diamantes negros
	AddStaticVehicleEx(560,1719.7627,714.1132,10.4851,4.6007,0,0,60000); //Tow Truck    	68
	AddStaticVehicleEx(415,1723.8304,714.2983,10.4841,1.3833,0,0,60000); //Tow Truck    	69
	// Triadas Nuevos
	AddStaticVehicleEx(487,726.4963,-1459.1899,22.4702,1.0888,0,3,60000); //Utility         70/74
	AddStaticVehicleEx(493,728.1315,-1495.3060,-0.0961,181.0643,3,0,60000); //Utility         71
	AddStaticVehicleEx(493,718.0256,-1494.9551,-0.1925,180.7424,3,0,60000); //Utility         72
	AddStaticVehicleEx(560,765.0217,-1443.0828,13.0920,81.7537,0,1,60000); //Yosemite        73
	AddStaticVehicleEx(560,764.5998,-1446.3934,13.0521,81.4589,0,1,60000); //Yosemite        74
	// Umbrella 7
	AddStaticVehicleEx(487,2067.39233398,-1421.19042969,48.92339325,90.00000000,0,3,60000); //Maverick    		75
	AddStaticVehicleEx(522,2569.2234,1503.5518,10.4501,196.8671,79,79,60000); //Sultan  			76
	AddStaticVehicleEx(560,2013.68652344,-1409.62304688,17.18070030,90.00000000,0,1,60000); //Sultan  			77
	AddStaticVehicleEx(560,2019.68652344,-1409.62304688,17.18070030,90.00000000,0,1,60000); //Sultan  			78
	AddStaticVehicleEx(487,2499.5544,1505.0236,18.6573,271.1608,79,79,60000); //Alpha  			79
	AddStaticVehicleEx(602,2037.04687500,-1432.56335449,17.44218826,0.00000000,0,1,60000); //Alpha  			80
	AddStaticVehicleEx(579,2036.80053711,-1440.14880371,17.46683311,0.00000000,0,1,60000); //Huntley  			81
	AddStaticVehicleEx(521,2020.91101074,-1418.66528320,16.65256500,0.00000000,0,3,60000); //FCR-900  			82
	AddStaticVehicleEx(521,2018.16015625,-1418.66503906,16.65256500,0.00000000,0,3,60000); //FCR-900  			83
 	// Mafia Italiana
	AddStaticVehicleEx(487,1116.4797,-2055.8542,74.5665,174.6829,0,0,60000); //Helicoptero 84
	AddStaticVehicleEx(580,1248.2810,-2012.2384,59.3260,185.9145,0,0,60000); //Stafford 85
	AddStaticVehicleEx(580,1252.9231,-2012.1128,59.1933,179.0739,0,0,60000); //Stafford 86
	AddStaticVehicleEx(560,1258.1096,-2012.8020,59.2531,180.1948,0,0,60000); //Sultan 87
	AddStaticVehicleEx(560,1263.2389,-2013.1111,59.1810,181.1975,0,0,60000); //Sultan 88
	AddStaticVehicleEx(579,1272.8574,-2013.9594,59.0525,182.0484,0,0,60000); //Huntley 89
	// Mafia Yakuza
	AddStaticVehicleEx(451,1255.161132,-805.665405,84.023117,178.571777,1,1,60000); // Turismo   90
	AddStaticVehicleEx(409,1249.154785,-805.385498,83.940612,180.044250,1,1,60000); // Stetch       91
	AddStaticVehicleEx(451,1243.7842,-805.5215,84.1406,180.2861,1,1,60000); // Turismo       92
    AddStaticVehicleEx(487,1290.9554,-788.4604,96.4609,258.9894,1,1,60000); // 	Helicoptero       93
	// Mafia Rusa
	AddStaticVehicle(487,753.0640,-1260.0903,13.7613,87.4251,180,180); // HelicopteroBratva 94
	AddStaticVehicleEx(579,682.820617,-1298.060913,13.343244,59.179347,180,180,60000); // Rancher 95
	AddStaticVehicleEx(579,682.641357,-1303.870361,13.343059,59.926479,180,180,60000); // Rancher 96
	AddStaticVehicleEx(560,660.4418,-1294.5135,13.3939,180.278610,180,180,60000); // Vicent 97
	AddStaticVehicleEx(560,660.5356,-1277.7412,13.4050,180.059020,180,180,60000); // Vicent 660.3193,-1286.2423,13.3451 98
	AddStaticVehicleEx(409,660.3193,-1286.2423,13.3451,179.893463,180,180,60000); // Stetch    99
	AddStaticVehicleEx(522,680.255493,-1256.782348,13.162422,119.174400,180,180,60000); // FCR-900  	100
	AddStaticVehicleEx(522,680.837829,-1260.290527,13.159105,119.163414,180,180,60000); // FCR-900  	101
	//Gobierno
	AddStaticVehicleEx(445,1405.1730, -1779.2167, 13.2441, 91.2600,0,0,60000); //Admiral 102
	AddStaticVehicleEx(409,1404.5847, -1788.1268, 13.1330, 90.6000,-1,133,60000); //Stretch   103
	AddStaticVehicleEx(580,1405.1154, -1792.2930, 13.2377, 89.4600,-1,133,60000); //Stafford 104
	AddStaticVehicleEx(580,1405.1296, -1783.5602, 13.2377, 89.4600,-1,133,60000);//Stafford 105
	AddStaticVehicleEx(445,1404.9003, -1796.6757, 13.2441, 91.2600,0,0,60000); //Admiral 106
    // AutoEscuela Vehículos
	AddStaticVehicleEx(451,2481.6362,-2069.9209,13.1327,181.1924,223,223,60000); //Premier  	107
	AddStaticVehicleEx(579,1740.8604,720.1650,10.4851,90.3054,0,0,60000); //Club     	108
	AddStaticVehicleEx(560,1717.3516,723.5599,10.4842,274.4525,0,0,60000); //Club     	109
	AddStaticVehicleEx(560,1716.7054,721.1826,10.4843,269.7543,0,0,60000); //Banshee 	110
	// CNN Vehículos
	AddStaticVehicle(411, 741.4069, -1334.3701, 13.2325, 0.0000,3,1); // CNN1VAN 111
	AddStaticVehicle(411, 737.3038, -1334.4298, 13.2325, 0.0000,3,1); // CNN1VAN2 112
	AddStaticVehicle(488, 741.6146, -1369.1969, 25.7238, -89.2800,3,1); // CNNlv helicoptero 113
	AddStaticVehicleEx(582,766.7727, -1334.7389, 13.5309, 0.0000,3,1,60000); // News Van 114
	AddStaticVehicleEx(582,763.0122, -1335.3668, 13.5309, 0.0000,3,1,60000); // News Van 115
	AddStaticVehicleEx(582,758.5298, -1335.9025, 13.5309, 0.0000,3,1,60000); // News Van 116
	AddStaticVehicleEx(522, 783.3625, -1344.9318, 12.9424, 88.6800,3,1,60000); // San News 117
	// Aviones de LS 118 124
    AddStaticVehicleEx(487,1726.833496,-2418.435791,13.751560,178.644088,1,1,60000); // Avion    118
	AddStaticVehicleEx(476,2103.3306,-2615.7646,13.5469,44.6238,1,1,60000); // Avion 119
	AddStaticVehicleEx(511,1976.3958,-2621.9133,13.5469,53.0838,1,1,60000); // Avion 120
	AddStaticVehicleEx(512,1865.5226,-2619.0569,13.5469,52.1438,1,1,60000); // Avion de renta121
	AddStaticVehicleEx(513,1722.0490,-2621.0747,13.5469,53.7105,1,1,60000); // Avion de renta 122
	AddStaticVehicleEx(593,1631.4191,-2619.5457,13.5469,53.7105,1,1,60000); // Avion de renta 123
	AddStaticVehicleEx(577,1500.3510,-2547.1589,13.5469,272.0823,1,1,60000); // Avion de renta 124
   // CNN
	AddStaticVehicleEx(582,755.1443, -1335.5594, 13.5309, 0.0000,3,1,60000); // Moto de renta 125
	AddStaticVehicleEx(582,750.1085, -1335.7859, 13.5309, 0.0000,3,1,60000); // Moto de renta   126
	AddStaticVehicleEx(582,745.5754, -1336.0414, 13.5309, 0.0000,3,1,60000); // Motor renta   127
    // HireCar I
	AddStaticVehicleEx(522,1752.4392,714.5439,10.5158,358.7304,0,0,60000); // 14 diamantes LV 128
	AddStaticVehicleEx(522,1748.6160,714.1465,10.4854,359.3252,0,0,60000); // NUEVOCARRENTA2 LV 129
	AddStaticVehicleEx(522,1745.1957,714.0429,10.4857,3.1426,0,0,60000); // NUEVOCARRENTA3 LV 130
	AddStaticVehicleEx(579,1740.3334,724.9758,10.4883,88.8152,0,0,60000); // NUEVOCARRENTA4 LV 131
	AddStaticVehicle(589,1719.9275,-2249.0850,13.3212,91.7105,176,1); // RENTA1 132
	AddStaticVehicleEx(496, 1223.0146, -1423.4470, 12.9521, 0.0000,1,1,60000); // PCJ-600    36
	AddStaticVehicleEx(458, 1217.4891, -1422.3373, 13.4067, 0.0000,1,1,60000); // PCJ-600    37
	AddStaticVehicleEx(589, 1211.6448, -1422.3239, 13.4067, 0.0000,1,1,60000); // PCJ-600    38
	AddStaticVehicle(589,1696.0287,-2248.8582,13.3198,85.0299,176,1); // RENTA1 NUEIVO
	AddStaticVehicle(589,1711.5120,-2249.1401,13.6292,85.1371,176,1); // RENTA1 NUEIVO1
	AddStaticVehicle(589,1704.0355,-2248.8477,13.3434,90.5053,176,1); // RENTA1 NUEIVO2
	// Practise Car LS
	AddStaticVehicleEx(579,200.9659,1920.6501,17.6329,179.7763,43,0,60000); // Ambulancia 217
	AddStaticVehicleEx(520,307.7120,2053.4663,18.8348,179.3010,1,1,60000); // Ambulancia 218
	AddStaticVehicleEx(487,275.2836,1935.3297,17.8176,271.3801,3,3,60000); // ambulancia 219
	AddStaticVehicleEx(421,1558.5767,-1710.1145,5.7731,1.480680,0,0,60000); // Washington    142
	// Train
	AddStaticVehicleEx(538,1700.7551,-1953.6531,14.8756,200.0,-1,-1, 30000); // Train 143-146
	// Sweeper
	AddStaticVehicleEx(574,1668.6692,-1896.1118,13.2720,268.0269,26,26,30000); // Barrendero 147
	AddStaticVehicleEx(574,1668.7383,-1891.4990,13.2720,270.7320,26,26,30000); // Barrendero 148
	AddStaticVehicleEx(574,1668.7280,-1886.8180,13.2720,268.9658,26,26,30000); // Barrendero 149
	// Planes
	AddStaticVehicleEx(519,1422.52661133,-2442.94995117,15.22200012,180.00000000,53,1,30000); //Shamal  150
	AddStaticVehicleEx(553,1471.54858398,-2440.02978516,15.78968716,182.00000000,1,53,30000); //Nevada  151
	// Narcotraficantes
	AddStaticVehicleEx(532,-113.6863,-5.1287,4.0906,70.6139,0,0,60000); // tractor trafis 152
	AddStaticVehicleEx(532,-108.5597,6.1032,4.0919,65.7671,0,0,60000); // tractor trafis 153
	AddStaticVehicleEx(532,-104.8710,16.5226,4.0923,66.2940,0,0,60000); // tractor trafis 154
	AddStaticVehicleEx(521,-23.8207,81.9013,2.6823,68.8204,0,0,60000); // FCR trafis 155
	AddStaticVehicleEx(521,-25.0302,78.9532,2.6876,79.9061,0,0,60000); // FCR trafis 156
	AddStaticVehicleEx(579,-54.8649,90.9767,3.2226,253.0864,0,0,60000); // Huntley trafis 157
	AddStaticVehicleEx(442,-114.6573,-96.4740,2.9408,259.4609,0,0,60000); // funeraria 160 -95.9054,-90.6533,2.9488,81.9343
	AddStaticVehicleEx(482,-88.1151,-29.3135,2.9470,338.7304,0,0,60000); // burrito 159 -95.9054,-90.6533,2.9488,81.9343
	AddStaticVehicleEx(482,-95.9054,-90.6533,2.9488,81.9343,0,0,60000); // burrito 158 -114.6573,-96.4740,2.9408,259.4609
	AddStaticVehicleEx(452,3.9233,196.8749,-0.4411,332.4537,0,0,60000); // barco 161
	AddStaticVehicleEx(454,-12.4654,204.7816,0.1913,330.4934,0,0,60000); // barco 162
	AddStaticVehicleEx(487,-81.1064,-10.8600,3.2837,338.9825,0,0,60000); // maverick 163
	// HireCar II
	AddStaticVehicleEx(496, 1542.8568, -2212.2046, 13.5258, 0.0000,1,1,60000); // BF-Injection    164
	AddStaticVehicleEx(496, 1539.7310, -2212.2415, 13.5258, 0.0000,1,1,60000); // Euros          165
	AddStaticVehicleEx(496, 1536.6959, -2212.2283, 13.5258, 0.0000,1,1,60000); // Jester       166
	AddStaticVehicleEx(496, 1545.9923, -2212.1331, 13.5258, 0.0000,1,1,60000); // Comet          167
	// More planes
	AddStaticVehicleEx(519,1451.6981,-2631.3005,14.4640,268.6503,1,1,60000); // Shamal  168
	AddStaticVehicleEx(553,1566.4611,-2643.8928,14.4698,11.7026,6,1,60000); // Nevada   169
	AddStaticVehicleEx(592,2003.3944,-2452.6799,14.4688,127.0967,1,1,60000); // Andromada   170
	// More Sweepers
	AddStaticVehicleEx(574,1648.0117,-1886.5215,13.2906,88.000,26,26,30000); // Barrendero 171
	AddStaticVehicleEx(574,1648.1605,-1891.7621,13.2899,88.000,26,26,30000); // Barrendero 172
	AddStaticVehicleEx(574,1648.1470,-1895.4053,13.2896,88.000,26,26,30000); // Barrendero 173
	// Rent Bikes
	AddStaticVehicle(510, 1511.4380, -1739.7009, 13.1548, 3.7200,2,2); // R1
	AddStaticVehicle(510, 1512.9497, -1739.7170, 13.1548, 3.7200,1,1); // R2
	AddStaticVehicle(510, 1514.4156, -1739.7775, 13.1548, 3.7200,3,3); // R3
	AddStaticVehicle(510, 1515.9456, -1739.7850, 13.1548, 3.7200,6,6); // R4
	AddStaticVehicle(510, 1449.6000, -1739.0038, 13.1548, 3.7200,3,3); // R5
	AddStaticVehicle(510, 1447.5388, -1739.0360, 13.1548, 3.7200,6,6); // R6
	AddStaticVehicle(510, 1445.3030, -1739.0317, 13.1548, 3.7200,2,2); // R7
	AddStaticVehicle(510, 1443.4508, -1739.0701, 13.1548, 3.7200,1,1); // R8
	// Triadas (182-186)
	AddStaticVehicleEx(522,718.7209,-1438.5522,13.5391,358.1199,0,0,60000); // NRG1 182
	AddStaticVehicleEx(522,732.8019,-1438.5522,13.5391,358.1199,0,0,60000); // NRG2 183
	AddStaticVehicleEx(522,740.2346,-1438.5522,13.5391,358.1199,0,0,60000); // NRG3 184
	AddStaticVehicleEx(579,769.3506,-1436.2079,13.5353,4.9636,0,0,60000); // huntley 185
 	AddStaticVehicleEx(409,704.8264,-1436.9095,13.5391,3.3970,0,0,60000); // limo 186
	// Unused Cars (187-188)
	AddStaticVehicle(430,2519.6682,-2269.1003,0.3397,264.8590,1,1); // policebarco1 187
	AddStaticVehicle(430,2491.8174,-2270.0354,0.3397,264.8590,1,1); // policebarco2 188
	// Pizza Bike's (189-195)
	AddStaticVehicleEx(448,2098.1230,-1793.0132,12.9839,90.0772,3,6,60000); // Pizza Bike 189
	AddStaticVehicleEx(448,2098.2832,-1795.6893,12.9883,91.5060,3,6,60000); // Pizza Bike 190
	AddStaticVehicleEx(448,2098.3613,-1798.0608,12.9877,91.7122,3,6,60000); // Pizza Bike 191
	AddStaticVehicleEx(448,2098.3203,-1800.7795,12.9845,85.5136,3,6,60000); // Pizza Bike 192
	AddStaticVehicleEx(448,2098.2366,-1813.5295,12.9579,87.1491,3,6,60000); // Pizza Bike 193
	AddStaticVehicleEx(448,2098.3098,-1816.9644,12.9802,86.0768,3,6,60000); // Pizza Bike 194
	AddStaticVehicleEx(448,2098.3098,-1816.9644,12.9802,86.0768,3,6,60000); // Pizza Bike 195
	// Raquel Casa (196-199)
	AddStaticVehicleEx(560,218.9180,1920.9509,17.3461,182.8387,3,3,60000); //LVPD 196
	AddStaticVehicleEx(520,276.1075,1960.3674,17.8173,269.7463,3,3,60000); //LVPD 197
	AddStaticVehicleEx(511,1739.6066,682.4302,12.2543,89.9730,0,0,60000); //LVPD 198 asdad
	AddStaticVehicleEx(487,1733.9509,755.9155,10.5149,270.5414,0,0,60000); //LVPD 199
	// Mafia española
	AddStaticVehicleEx(482,2441.4177,-2070.6172,13.1345,180.8309,223,223,60000); 	//Helicoptero 200
	AddStaticVehicleEx(522,2446.0166,-2069.9109,13.1336,180.8445,223,223,60000); 	//Emperor 201
	AddStaticVehicleEx(522,2450.9443,-2069.6968,13.1348,179.7280,223,223,60000); 	//Emperor 202
	AddStaticVehicleEx(560,2455.9143,-2069.6699,13.1343,180.5883,223,223,60000); 	//Sultan 203
	AddStaticVehicleEx(560,2461.4758,-2069.6597,13.1316,180.4206,223,223,60000); 	//Sultan 204
	AddStaticVehicleEx(579,2466.3828,-2069.6848,13.1334,180.8566,223,223,60000); 	//Huntley 205
	AddStaticVehicleEx(579,2471.3733,-2069.8367,13.1349,179.6473,223,223,60000); 	// Huntley 206
	AddStaticVehicleEx(409,2476.2800,-2069.6895,13.1342,180.4871,223,223,60000); 	// Limosina 207
	// Mas Coches Yakuza (208 - 211)
	AddStaticVehicleEx(522,1290.0000,-831.5000,82.7070,357.0000,1,0,60000); // NRG-500 208
	AddStaticVehicleEx(522,1284.0000,-831.5000,82.7087,357.0000,1,0,60000); // NRG-500 209
	AddStaticVehicleEx(522,1278.0000,-831.5000,82.7110,357.0000,1,0,60000); // NRG-500 210
	AddStaticVehicleEx(522,1272.0000,-831.5000,82.7122,357.0000,1,0,60000); // NRG-500 211
	AddStaticVehicleEx(560,1242.2467,-832.7867,83.9587,118.1432,1,0,60000); // caryakuza 2
    AddStaticVehicleEx(579,1249.5400,-821.6556,84.0398,172.9260,1,0,60000); // caryakuza 3
    AddStaticVehicleEx(560,1229.0742,-836.4019,83.9076,79.9883,1,0,60000); // caryakuza 4
    AddStaticVehicleEx(579,1214.5961,-832.0052,84.8173,56.8148,1,0,60000); // caryakuza 5

    //MAS LCN
AddStaticVehicleEx(522,1258.2559,-2060.4988,59.0572,267.0578,0,0,60000); // nrgnrg1
AddStaticVehicleEx(522,1263.5935,-2060.7727,58.9061,267.0649,0,0,60000); // nrgnrg2
AddStaticVehicleEx(522,1269.0823,-2060.8181,58.7440,271.1346,0,0,60000); // nrgnrg3
AddStaticVehicleEx(522,1273.3519,-2060.9473,58.6267,268.5758,0,0,60000); // nrgnrg4
	// SAEM Cars (220 - 241)
	AddStaticVehicleEx(425,2793.1238,-2553.5398,13.8098,275.4811,16,16,60000); //Hunter 220
	AddStaticVehicleEx(425,2792.5359,-2542.8208,13.7883,273.4892,16,16,60000); //Hunter  221
	AddStaticVehicleEx(548,2782.1721,-2305.1130,13.6239,91.1837,1,1,60000); //Helicoptero Guerra 222
	AddStaticVehicleEx(470,2753.69995117,-2387.19995117,13.69999981,179.99963379,-1,-1,60000); //Patriot  223
	AddStaticVehicleEx(470,2746.89990234,-2387.19995117,13.69999981,179.99450684,-1,-1,60000); //Patriot  224
	AddStaticVehicleEx(470,2740.10009766,-2387.19995117,13.69999981,179.99450684,-1,-1,60000); //Patriot  225
	AddStaticVehicleEx(470,2778.60009766,-2409.80004883,13.69999981,179.99450684,-1,-1,60000); //Patriot  226
	AddStaticVehicleEx(433,2777.80004883,-2433.60009766,14.19999981,90.00000000,-1,-1,60000); //Barracks 227
	AddStaticVehicleEx(433,2777.69995117,-2439.89990234,14.19999981,90.00000000,-1,-1,60000); //Barracks  228
	AddStaticVehicleEx(473,2723.10009766,-2583.60009766,0.00000000,270.00000000,16,-1,60000); //Dinghy  229
	AddStaticVehicleEx(473,2729.50000000,-2583.60009766,0.00000000,270.00000000,16,-1,60000); //Dinghy  230
	AddStaticVehicleEx(595,2746.30004883,-2583.39990234,0.30000001,270.00000000,16,-1,60000); //Launch  231
	AddStaticVehicleEx(548,2752.2380,-2305.9104,13.5749,269.8995,1,1,60000); //Helicoptero Guerra  232
	AddStaticVehicleEx(432,2794.00000000,-2456.30004883,13.69999981,90.50000000,-1,-1,60000); //Rhino   233
	AddStaticVehicleEx(432,2795.19995117,-2494.60009766,13.69999981,89.74987793,-1,-1,60000); //Rhino  234
	AddStaticVehicleEx(468,2748.89990234,-2484.00000000,13.39999962,286.00000000,16,-1,60000); //Sanchez 235
	AddStaticVehicleEx(468,2748.80004883,-2482.39990234,13.39999962,285.99609375,16,-1,60000); //Sanchez 236
	AddStaticVehicleEx(468,2748.69995117,-2480.50000000,13.39999962,285.99609375,16,-1,60000); //Sanchez  237
	AddStaticVehicleEx(468,2748.69995117,-2478.39990234,13.39999962,285.99609375,16,-1,60000); //Sanchez 238
	AddStaticVehicleEx(500,2749.39990234,-2459.10009766,13.89999962,179.99963379,16,16,60000); //Mesa  239
	AddStaticVehicleEx(500,2743.10009766,-2459.00000000,13.89999962,179.49450684,16,16,60000); //Mesa 240
	AddStaticVehicleEx(470,2778.89990234,-2425.69995117,13.69999981,1.99414062,-1,-1,60000); //Patriot 241
	// FBI Cars (242 - 246)
	AddStaticVehicleEx(507, 925.8795, -1045.6173, 31.5048, -91.1400,-1,-1,60000); //FBI Rancher 242
    AddStaticVehicleEx(507, 925.2902, -1050.9409, 31.5048, -91.1400,-1,-1,60000); //FBI Rancher 243
    AddStaticVehicleEx(601, 888.0786, -1024.2924, 31.5018, -178.4400,-1,-1,60000); //FBI Rancher 244
    AddStaticVehicleEx(601, 881.8655, -1023.8241, 31.5018, -176.7600,0,0,60000); //Elegant 245
    //diamantes 14
    AddStaticVehicleEx(415,1726.8859,714.8257,10.4840,357.7610,0,0,60000); //Elegant 246
    AddStaticVehicleEx(409,1731.2211,714.9634,10.4849,359.3239,0,0,60000); // mecanico1 247
        // Mecanico Cars (247 - 255)
	AddStaticVehicleEx(497, 914.1119, -1020.1479, 111.1750, -182.4600,93,53,60000); // mecanico2 248
	AddStaticVehicleEx(528, 884.8757, -1044.7346, 31.7389, -90.0600,255,103,60000); // mecanico3 249
	AddStaticVehicleEx(528, 884.6037, -1051.1951, 31.7389, -90.0600,93,255,60000); // mecanico4 250
	AddStaticVehicleEx(522, 2564.5540,1516.2382,10.4530,220.8180,79,79,60000); // mecanico5 251
	AddStaticVehicleEx(522, 2557.3022,1524.7120,10.4524,220.4314,255,103,60000); // mecanico6 252
	AddStaticVehicleEx(525,1639.7450,2359.2148,10.6909,91.1398,255,103,60000);// mecanico8 253
	AddStaticVehicleEx(525,2671.8694,-2112.4568,14.2702,270.4925,255,103,60000);// mecanico7 254
	AddStaticVehicleEx(525,2473.4519,-2112.1450,13.5469,193.4351,255,103,60000); // mecanico9 255
	// Helicoptero Licencieros
	AddStaticVehicleEx(579,2594.1016,1498.3811,10.5268,86.4333,79,79,60000); //Maverick 256
    // Capone Cars (257 - 261)
	AddStaticVehicleEx(522,208.7197,1922.2649,17.2118,183.3256,3,3,60000); // Samur 212
	AddStaticVehicleEx(560,222.5566,1920.9545,17.3470,179.7390,3,3,60000); // Samur 213
	AddStaticVehicleEx(522,210.5533,1922.1213,17.2090,179.6938,3,3,60000); // Samur 214
	AddStaticVehicleEx(432,274.7214,1984.9181,17.6494,270.9897,43,0,60000); //
    AddStaticVehicleEx(425,276.5081,1947.2599,18.2582,266.2322,43,0,60000); // huntleyhn2
	// Bloods Cars (262 - 269)
    AddStaticVehicleEx(482,1886.2523,-1082.8630,23.9156,177.5290,42,42,60000); //  boods 262
    AddStaticVehicleEx(482,1894.1171,-1083.2314,23.9993,167.1888,42,42,60000); // boods 263
    AddStaticVehicleEx(566,1904.8306,-1083.9696,24.1317,162.8021,42,42,60000); // boods 264
    AddStaticVehicleEx(566,1915.2899,-1084.1099,24.3305,179.7222,42,42,60000); // boods 265
    AddStaticVehicleEx(535,1925.9886,-1085.1384,24.5459,162.1754,42,42,60000); // boods 266
    AddStaticVehicleEx(535,1937.2745,-1085.6709,24.7482,173.7688,42,42,60000); // boods 267
    AddStaticVehicleEx(468,1949.0801,-1087.8511,25.0327,164.0553,42,42,60000); // boods 268
    AddStaticVehicleEx(468,1959.6688,-1089.4966,25.2581,159.3553,42,42,60000); // boods 269
    // Cripz Cars (270 - 275)
    AddStaticVehicleEx(567,2279.6926,-1037.0886,50.0051,130.8258,7,7,60000); // cripz1 270
    AddStaticVehicleEx(466,2277.1453,-1034.2482,50.7717,145.2393,7,7,60000); // cripz2 271
    AddStaticVehicleEx(474,2274.5916,-1031.5659,51.5168,128.3191,7,7,60000); // cripz3 272
    AddStaticVehicleEx(466,2271.5854,-1043.6332,50.2499,41.5250,7,7,60000); // cripz4 273
    AddStaticVehicleEx(474,2268.8748,-1047.2197,50.1307,41.0105,7,7,60000); // cripz5 274
    AddStaticVehicleEx(463,2270.2751,-1022.3163,53.4568,225.8790,7,7,60000); // cripz6 275
    // Hitman Cars (276 - 281)
    AddStaticVehicleEx(409,2206.5544,-2276.5342,13.3546,223.5008,0,0,60000); //    //Stretch 276
    AddStaticVehicleEx(560,2222.6477,-2262.6084,13.2592,223.1414,0,0, 60000); //   //Sultan 277
    AddStaticVehicleEx(560,2215.2876,-2269.9353,13.2595,223.6517,0,0,60000);   //Sultan 278
    AddStaticVehicleEx(482,2229.9656,-2255.0012,13.6726,222.6236,0,0, 60000);   //Burrito 279
    AddStaticVehicleEx(522,2201.4551,-2283.2224,13.1121,219.4522,0,1, 60000); //NRG-500 280
	AddStaticVehicleEx(521,2203.3291,-2281.5940,13.1236,221.5201,0,1,60000); // //FCR-900 281
    // Heladeros Cars (282 - 286)
    AddStaticVehicleEx(423,1015.6898,-1366.1644,13.3969,268.2279,1,1,60000); // HELADO 1 282
    AddStaticVehicleEx(423,1015.5685,-1360.9698,13.3967,268.6842,1,1,60000); // HELADO 2 283
    AddStaticVehicleEx(423,1015.5297,-1355.6335,13.3949,271.3659,1,1,60000); // HELADO 3 284
    AddStaticVehicleEx(423,1015.1051,-1350.9569,13.3956,264.3423,1,1,60000); // HELADO 4 285
    AddStaticVehicleEx(423,1015.3717,-1345.7365,13.3937,268.9999,1,1,60000); // HELADO 5 286
    // Camioneros Cars (287 - 291)
    AddStaticVehicleEx(414,2075.0601, -2128.7642, 12.9823, -183.0599,-1,-1,3); //Mule 287
    AddStaticVehicleEx(414,2089.5566, -2129.7402, 12.9823, -183.0599,-1,-1,3); //Mule 288
    AddStaticVehicleEx(414,2107.4797, -2132.1714, 12.9823, -187.7999,-1,-1,3); //Mule 289
    AddStaticVehicleEx(414,2122.8062, -2133.9265, 12.9823, -194.3399,-1,-1,3); //Mule 290
    AddStaticVehicleEx(414,2136.1968, -2140.0100, 12.9823, -203.8799,-1,-1,3); //Mule 291
    // rent nrg-500 Aeropuerto (292 - 295)
    AddStaticVehicleEx(522,1512.8231,-2441.8599,13.1279,181.1905,159,5,60000); // RENTBIKE 1 292
    AddStaticVehicleEx(522,1517.2684,-2441.6721,13.1278,167.6274,159,5,60000); // RENTBIKE 2 293
    AddStaticVehicleEx(522,1938.2111,-2237.7451,13.1208,181.9857,0,1,60000); // RENTBIKE 3 294
    AddStaticVehicleEx(522,1930.4659,-2237.6482,13.1204,175.6774,1,0,60000); // RENTBIKE 4 295
	AddStaticVehicleEx(493,1632.0662,566.4897,0.0761,176.0980,1,1,60000); // BARCOCALIDO 296
	AddStaticVehicleEx(493,1624.6692,567.0182,0.1184,176.8421,1,1,60000); // BARCOCALIDO2 297
	//AVION CAMARA//
	AddStaticVehicleEx(594,1933.8151,-1871.2473,19.8466,225.3183,1,4,30000); // AVION CAMARA 298
	LinkVehicleToInterior(298, 5);
	
AddStaticVehicleEx(520,2762.3364,-2540.5706,14.3583,179.0130,86,5,60000); // 300 saem
AddStaticVehicleEx(520,2736.3125,-2558.5366,14.3659,93.0370,86,5,60000); // 301 saem
AddStaticVehicleEx(415,1546.3912,-1655.2189,6.0799,90.1209,0,1,60000); // 302 lspd
AddStaticVehicleEx(402,1546.0259,-1659.1748,5.6122,88.8758,0,1,60000); // 303 lspd
AddStaticVehicleEx(598,1545.7661,-1663.0176,5.6112,90.4414,0,1,60000); // 304 lspd
AddStaticVehicleEx(598,1545.8973,-1667.9375,5.6126,87.6054,0,1,60000); // 305 lspd
AddStaticVehicleEx(487,1436.9059,-1832.1005,13.7233,181.6504,0,1,60000); // 306 gobierno
AddStaticVehicleEx(487,2180.6125,-2237.7874,13.5810,316.9368,0,1,60000); // 307 Hitman
AddStaticVehicleEx(411,1555.4358,1160.0522,10.5322,1.9373,0,12,60000); // 9
AddStaticVehicleEx(411,1564.4592,1169.5914,10.5344,308.4288,0,12,60000); // 10
AddStaticVehicleEx(411,1574.6125,1175.5132,10.5396,299.6776,0,12,60000); // 11
AddStaticVehicleEx(411,1592.9266,1180.3094,10.5396,282.8220,0,12,60000); // 12
AddStaticVehicleEx(411,1600.9340,1188.1184,10.5397,323.2225,0,12,60000); // 13
AddStaticVehicleEx(411,1599.4531,1203.4956,10.5396,51.9294,0,12,60000); // 14
AddStaticVehicleEx(411,1583.1560,1199.9800,10.5396,122.0822,0,12,60000); // 15
AddStaticVehicleEx(411,1565.9009,1197.9658,10.5396,59.8761,0,12,60000); // 16
AddStaticVehicleEx(411,1578.1299,1215.8372,10.5396,260.2578,0,12,60000); // 17
AddStaticVehicleEx(411,1597.9594,1212.4337,10.5385,260.2560,0,12,60000); // 18
AddStaticVehicleEx(411,1618.5236,1187.6759,12.2969,169.3639,0,12,60000); // 19
AddStaticVehicleEx(411,1613.8228,1179.8627,13.9375,151.6463,0,12,60000); // 20
AddStaticVehicleEx(411,1606.3000,1175.3585,13.9485,109.3632,0,12,60000); // 21
AddStaticVehicleEx(411,1598.7446,1173.0673,13.9487,106.4319,0,12,60000); // 22
AddStaticVehicleEx(411,1616.0076,1161.1560,13.9459,187.4739,0,12,60000); // 23
AddStaticVehicleEx(411,1606.3000,1175.3585,13.9485,109.3632,0,12,60000); // 24
AddStaticVehicleEx(411,1600.9340,1188.1184,10.5397,323.2225,0,12,60000); // 25
AddStaticVehicleEx(411,1574.6125,1175.5132,10.5396,299.6776,0,12,60000); // 26
AddStaticVehicleEx(411,1555.4358,1160.0522,10.5322,1.9373,0,12,60000); // 27
AddStaticVehicleEx(411,1618.5236,1187.6759,12.2969,169.3639,0,12,60000); // 28
AddStaticVehicleEx(411,1600.9340,1188.1184,10.5397,323.2225,0,12,60000); // 29
AddStaticVehicleEx(411,1598.7446,1173.0673,13.9487,106.4319,0,12,60000); // 30
	/*////Mas autos para SAEM
	AddStaticVehicleEx(548, 2743.4993, -2352.1431, 34.2247, 175.5600, 3, 3, 60000);//230
	AddStaticVehicleEx(548, 2744.6731, -2379.5513, 34.2247, -1.6800, 3, 3, 60000);//231
	AddStaticVehicleEx(520, 2726.6265, -2350.6965, 33.1074, 181.5601, 3, 3, 60000);//232
	AddStaticVehicleEx(520, 2727.0925, -2378.2634, 33.1074, -3.1800, 3, 3, 60000);//233
	AddStaticVehicleEx(476, 2710.4731, -2352.0500, 33.5538, 183.6000, 3, 3, 60000);//234
	AddStaticVehicleEx(476, 2710.0845, -2378.7615, 33.5538, 361.4400, 3, 3, 60000);//235
	AddStaticVehicleEx(425, 2691.5579, -2351.1943, 33.1639, 179.3550, 3, 3, 60000);//236
	AddStaticVehicleEx(425, 2690.9768, -2381.1199, 33.1639, 358.9349, 3, 3, 60000);//237
	AddStaticVehicleEx(548, 2673.6770, -2380.0803, 34.2247, -1.6800, 3, 3, 60000);//238
	AddStaticVehicleEx(520, 2651.7654, -2377.2532, 33.1074, -3.1800, 3, 3, 60000);//239
	AddStaticVehicleEx(476, 2634.1189, -2379.9526, 33.5538, 361.4400, 3, 3, 60000);//240
	AddStaticVehicleEx(425, 2620.7107, -2379.5344, 33.1639, 358.9349, 3, 3, 60000);//241
	AddStaticVehicleEx(425, 2621.4109, -2352.1821, 33.1639, 179.3550, 3, 3, 60000);//242
	AddStaticVehicleEx(476, 2635.7295, -2352.4355, 33.5538, 183.6000, 3, 3, 60000);//243
	AddStaticVehicleEx(520, 2651.9063, -2351.6624, 33.1074, 181.5601, 3, 3, 60000);//244
	AddStaticVehicleEx(548, 2674.8289, -2352.5964, 34.2247, 179.2800, 3, 3, 60000);//245*/



	//-=========================================== [][][] ==================================================- //
	for(new i; i != VV; i++)
    {
        new string[32];
        //new Float:carpos_x,Float:carpos_y,Float:carpos_z;
        format(string, 128, "LS - %d",i);
    	SetVehicleNumberPlate(i, string);
    	//GetVehiclePos(i,carpos_x,carpos_y,carpos_z);
    	SetVehicleToRespawn(i);
    	//SetVehiclePos(i,carpos_x,carpos_y,carpos_z);
    }
	for(new h = VV; h < sizeof(CarInfo); h++)
	{
		AddStaticVehicleEx(CarInfo[h][cModel],CarInfo[h][cLocationx],CarInfo[h][cLocationy],CarInfo[h][cLocationz]+1.0,CarInfo[h][cAngle],CarInfo[h][cColorOne],CarInfo[h][cColorTwo],60000);
        SetVehicleParamsEx(h,0,0,0,CarInfo[h][cLock],0,0,0);
        if(CarInfo[h][cOwned] == 0)
        {
        	SetVehicleNumberPlate(h, "For Sale");
        	SetVehicleVirtualWorld(h, 0);
        	CarInfo[h][cBattery] = 100;
        	CarInfo[h][cGPS] = 0;
        	CarInfo[h][cRastreo] = 0;
		}
		else
		{
		    SetVehicleNumberPlate(h, CarInfo[h][cPlate]);
		}
		SetVehicleToRespawn(h);
	}
	/*                      DynamicPickups              */
///////////////////////////////// Pickups ////////////////////////////////////////////////////
    CreateDynamicPickup(19132, 1, 2233.4822,-1333.4851,23.9816);	// Iglesia Entrada	//
//	CreateDynamicPickup(19132, 1, 1465.3459,853.8666,-69.1137);  // Iglesia Salida			//
	CreateDynamicPickup(1314, 1, 512.4965,-1486.8862,14.5022); 	// Restaurante Kenta Entrada//
//	CreateDynamicPickup(1318, 1, -794.9228,489.5780,1376.1953); // Restauratnte Kenta Salida//
    CreateDynamicPickup(1314, 1, 1567.9321,-1897.9972,13.5609);	// Donuts Entrada           //
	CreateDynamicPickup(1239, 1, 913.8191,-1004.3729,37.9846);	// FBI Entrada				//
	CreateDynamicPickup(1239, 1, 1555.6058,-1822.8219,-22.6631); 	// Ayuntamiento /Equipo	 	//
//	CreateDynamicPickup(1318, 1, 377.3211,-193.3048,1000.6328); // Donuts Salida            //
    CreateDynamicPickup(1314, 1, 1303.9761,-1132.1615,23.8281);	// Motion Entrada          	//
//	CreateDynamicPickup(1318, 1, -227.8032,1401.1753,27.7656);  // Motion Salida            //
    CreateDynamicPickup(1314, 1, 2421.5994,-1219.8439,25.5226);	// Pig Pen Entrada         	//
//	CreateDynamicPickup(1318, 1, 1205.4116,-13.3220,1000.9219); // Pig Pen Salida           //
    CreateDynamicPickup(1314, 1, 1836.8391,-1682.6100,13.3312);	// Pleasures Domes Entrada 	//
	CreateDynamicPickup(1318, 1, -2636.5510,1402.4657,906.4609);// Pleasures Salida         //
	CreateDynamicPickup(1239, 1, 2197.5725,-2220.9834,13.5547);  // Hitman Entrada           //
	CreateDynamicPickup(1239, 1, 2481.4451,1525.6948,11.7297);  // Capone Entrada           //
	CreateDynamicPickup(1239, 1, 1259.6372,-785.5560,92.0313);  // Yakuza Entrada           //
	CreateDynamicPickup(1239, 1, -1336.0061,2509.8330,87.5935);	// Al Qaeda Entrada         //
	CreateDynamicPickup(1239, 1, 591.5505,838.7767,-86.0390);	// Al Qaeda Celdas          //
	CreateDynamicPickup(1239, 1, 2473.4519,-2112.1450,13.5469);	// Prision Española         //
	CreateDynamicPickup(1239, 1, -1276.2040,2484.5471,87.0893);	// Al Qaeda Control Celdas  //
	CreateDynamicPickup(1239, 1, 2671.8694,-2112.4568,14.2702);  // Mafia Española Entrada  //
	CreateDynamicPickup(1239, 1, 2319.1052,-1017.3345,1050.211);// Yakuza Armario           // 
	CreateDynamicPickup(1239, 1, 2332.5754,-1144.1835,1054.3047);//Triadas Armario          //
	CreateDynamicPickup(1239, 1, 2492.5696,-1708.5306,1018.3368);//Goove Armario            //
	CreateDynamicPickup(1239, 1, 1517.6222,-990.7539,1959.8866); // Armario Italiano         //
	CreateDynamicPickup(1239, 1, 1275.6075,-800.9980,1089.9375);// Rusos Armario           	//
	CreateDynamicPickup(1272, 1, 2260.429931,-1019.97,59.28);	// Entrada Cripz            //
	CreateDynamicPickup(1272, 1, 1899.3693,-2003.9104,13.5469); // Entrada Sureños 13       //
	CreateDynamicPickup(1272, 1, 2628.5281,-1067.8455,69.6127); // Entrdad Latin Kings      //
	CreateDynamicPickup(1272, 1, 725.6910,-1440.3323,13.5391);  // Entrada Triadas	        //
	CreateDynamicPickup(1272, 1, 1939.2191,-1114.4823,27.4523);	// Entrada Blood            //
	CreateDynamicPickup(1239, 1, -290.4914,1480.0802,1088.8750);// Armario Cripz            //
	CreateDynamicPickup(1239, 1, 2455.921,-1700.7104,1013.5078);//Armario Sureños 13         //
	CreateDynamicPickup(1239, 1, 619.5929,-129.3072,998.8395);  //Armario Latins            //
	CreateDynamicPickup(1239, 1, 78.3783,1343.1749,1088.3672);  //Armario Blood             //
	CreateDynamicPickup(1274, 1, 78.3783,1343.1749,1088.3672);  //Mercado Negro             //
	CreateDynamicPickup(1239, 1, 2748.6697,-2451.1299,13.6484);  //Entrada SAEM
	CreateDynamicPickup(19132, 1, 1481.1450,-1771.7369,18.8485); //ENTRADA AYUNTAMIENTO
	CreateDynamicPickup(1239, 1,  436.8553,-1912.8513,1.4026);  //icono /comer claudio
	CreateDynamicPickup(19132, 1, 1680.9414,755.1716,11.5805); //ENTRADA facción máxi
	CreateDynamicPickup(1239, 1,  1690.4524,767.0659,3.8734 );      //EQUIPO MAXI
	CreateDynamicPickup(1239, 1,  678.5450,-1466.0713,497.9464);  //icono /comer premium
	CreateDynamicPickup(1239, 1,  675.0595,-1451.4430,498.1652);
	CreateDynamicPickup(1239, 1,  278.9109,1854.4526,8.7649); //Equipo Alqaeda
	CreateDynamicPickup(1239, 1,  265.9454,1861.8651,8.7649); //Cambiarse alquadeda
	CreateDynamicPickup(1239, 1,  -3138.8752,497.8488,4.7136); //Comando Comer para Tony Montana
	CreateDynamicPickup(19132, 1,  -2929.1001,471.2475,4.9141); //Entrada Tony (Estadio)
	CreateDynamicPickup(19132, 1,  -2925.9724,467.3102,5.3842); //Salida Tony (Estadio)
	CreateDynamicPickup(1239, 1, 1618.1917,713.4023,10.8203); //Comando //MM
	CreateDynamicPickup(1239, 1, 379.1582,-186.6152,1000.6328);
	CreateDynamicPickup(1239, 1, 789.7139,-1327.7139,13.5469);  //Comando /ad
	CreateDynamicPickup(1239, 1, 1356.8921,-1680.6548,13.7940);      ///eqmeca
	CreateDynamicPickup(1239, 1, 2479.7000,1498.7773,10.8203);      ///bajada alemana
	CreateDynamicPickup(1239, 1, 2466.4976,1503.5673,18.9453);      ///subida alemana
	CreateDynamicPickup(1239, 1, 2561.5166,1561.7197,10.8203);  // Prision alemana

// Carniceria Pick


	CreateDynamicPickup(1318, 1, 2372.1367,2759.6951,10.8203); // Entrada Carniceria

	/*    Police LA     */
	CreateDynamicPickup(1314, 1, 267.5095,87.0759,1001.0391); // arrestar 1
	CreateDynamicPickup(1314, 1, 200.7091,168.4553,1003.0234); // arrestar LV
	CreateDynamicPickup(1314, 1, 267.5484,81.9362,1001.0391); // arrestar2
	CreateDynamicPickup(1318, 1, 246.5928,87.7546,1003.6406); // Inside PD elevator
	CreateDynamicPickup(1318, 1, 2485.4836,2377.9067,-8.7688); // Inside FBI elevator
	CreateDynamicPickup(1318, 1, 1524.5724,-1677.8043,6.2188); // PD Tunnel
    CreateDynamicPickup(1318, 1, 1557.7257,-1675.2711,28.3955); // PD roof
	/*      Umbrella  + Hitman  */
	CreateDynamicPickup(1239, 1, 251.0016,118.2015,1003.2188); // Contrato
    CreateDynamicPickup(1313, 1, 784.2336,1954.3387,5.7074); // Hitman
    CreateDynamicPickup(1239, 1, -2178.8694,897.3518,96.9397); // Hitma
	 /*      Mafias ENTRAR  */
	CreateDynamicPickup(1318, 1, -683.9296,939.5487,13.6328); // Barzini
	/*      SAMUR       */
	CreateDynamicPickup(1318, 1, -2647.8711,539.6345,48.0835); // Exit Hospital
	CreateDynamicPickup(1318, 1, -2662.2495,537.6510,48.0843, 0); // Elevator LS
	CreateDynamicPickup(1318, 1, 1156.1799,-1343.1420,26.6719, 0); // Elevator LS
	CreateDynamicPickup(1239, 1, -2639.9487,535.6438,51.6134); // Equipo
	/*                      */
	/*          Other ENTER / EXITS     */
	CreateDynamicPickup(1239, 1, -2659.7708,506.9668,48.0847); // seguro ls
	CreateDynamicPickup(1239, 1, 1600.7926,1748.7646,-60.5596); // seguro lv
	CreateDynamicPickup(1239, 1, 663.9432,-568.8129,16.3433); // FARMACIA INFO
	CreateDynamicPickup(1318, 1, 928.6895,-1353.0563,13.3438); // CBELL LS
	CreateDynamicPickup(1318, 1, 810.6635,-1616.1995,13.5469); // BS LS
    CreateDynamicPickup(1318, 1, 2105.2844,-1806.5475,13.5547); // PZ LS
   	CreateDynamicPickup(1318, 1, 725.5151,-1276.4104,13.6484); // ENTER TERRAZA RUS
   	CreateDynamicPickup(1318, 1, 154.2457,-1946.2103,5.1346); // Faro ENTER
   	CreateDynamicPickup(1239, 1, -2665.0129,535.0582,48.0791); // Ascensor Planta 2-3
   	CreateDynamicPickup(1239, 1, -2663.5913,533.6900,51.5451); // Ascensor Planta 2-3 Arriba
   	CreateDynamicPickup(1239, 1, 994.3551,-1296.4821,13.5469); // JOB1
   	CreateDynamicPickup(1239, 1, 1684.6674,-1944.6483,13.5469); // JOB2
   	CreateDynamicPickup(1239, 1, 1642.3722,-2238.3552,13.4976); // JOB3
   	CreateDynamicPickup(1239, 1, 1616.0295,-1897.1339,13.5491); // JOB4
   	CreateDynamicPickup(1239, 1, 2103.7043,-1809.8376,13.5547); // JOB5
   	CreateDynamicPickup(1239, 1, 1038.1670,-1340.3824,13.7408); // JOB7 heladero
   	CreateDynamicPickup(1239, 1, 2040.6719,-2137.0037,13.2200); // JOB8 Camion
   	CreateDynamicPickup(1239, 1, 1639.2286,1311.7960,10.8685); // Eqipo taxi
   	CreateDynamicPickup(1239, 1, 352.4547,2029.2162,23.8673); // Misil 1
   	CreateDynamicPickup(1239, 1, 186.2938,2082.4087,23.8986); // Misil 2
   	CreateDynamicPickup(1239, 1, -1833.8270,62.3936,1055.1891); // Capone
   	CreateDynamicPickup(1239, 1, -1855.7919,44.0830,1055.1891); // Capone
   	pMatI = CreateDynamicPickup(1279, 2, 2825.6863,-1531.2330,10.7039); // MAT-LOAD I
   	pMatII = CreateDynamicPickup(1279, 2, 2281.5518,-2364.5908,13.5469); // MAT-LOAD II
   	pMatIII = CreateDynamicPickup(1279, 2, 1086.5568,-2074.6069,59.0720); // MAT-LOAD III
	/*      Info & Ayuda & Points       */
	CreateDynamicPickup(1239, 1, -2355.8621,914.9895,93.8007); // Bowling
	CreateDynamicPickup(1239, 1, -2355.6140,910.4491,93.8007); // Bowling
	CreateDynamicPickup(1239, 1, -2355.9583,905.1354,93.8007); // Bowling
	CreateDynamicPickup(1239, 1, 364.4181,186.8598,1014.1875); // Autoescuela EXAMEN CAr
	CreateDynamicPickup(1239, 1, 378.6049,-119.5969,1001.4922); // Pizza
	CreateDynamicPickup(1239, 1, 1790.4347,-1591.3114,13.4938); // Boleto VIP
	CreateDynamicPickup(1239, 1, 2556.3853,-1296.8981,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 2543.2500,-1296.3975,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 2542.9377,-1290.5266,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 2556.0679,-1290.1639,1044.1250); // FABRICAR ARMAS
	printf("GWRP %d Pickups Dynamicos Cargados",CountDynamicPickups());

	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}
	// Starters -====================
	SetTimer("OnPropTextdrawUpdate", 7000, 0);
	SetTimer("PingCheck", 20000, 1);
	// ===================- Non-Stopable Timers
	globaltimer = SetTimer("SaveGlobal", 450000, 1);
	synctimer = SetTimer("SyncUp", 60000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	actimer = SetTimer("AntiCheat", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 30000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	accountstimer = SetTimer("SaveAccounts", 300000, 1);
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
	LifeTimer = SetTimer("CheckVida", 1500, 1);
	KeysTimer = SetTimer("Tiempo1",100,true);

	for(new i = 0; i<MAX_PLAYERS; i++)
	{
     KeyHelp[i] =
	TextDrawCreate(25.000000, 190.000000,"____");
	TextDrawBackgroundColor	(KeyHelp[i], 255);
	TextDrawFont			(KeyHelp[i], 1);
	TextDrawLetterSize		(KeyHelp[i], 0.300000, 1.299999);
	TextDrawColor			(KeyHelp[i], -1);
	TextDrawSetOutline		(KeyHelp[i], 1);
	TextDrawSetProportional	(KeyHelp[i], 1);
	TextDrawUseBox			(KeyHelp[i], 1);
	TextDrawBoxColor		(KeyHelp[i],0x00000066);
	TextDrawTextSize		(KeyHelp[i], 219.000000, 0.000000);

	RegDraw[i] = TextDrawCreate(190.000000, 367.000000, "~n~Sexo:  ~r~Masculino          ~w~Edad: ~r~29~n~~n~~w~Origen: ~r~America    ~w~Estilo: ~r~Pandilla1");
		TextDrawBackgroundColor(RegDraw[i], 255);
		TextDrawFont(RegDraw[i], 1);
		TextDrawLetterSize(RegDraw[i], 0.320000, 1.200000);
		TextDrawColor(RegDraw[i], -1);
		TextDrawSetOutline(RegDraw[i], 1);
		TextDrawSetProportional(RegDraw[i], 1);
		TextDrawUseBox(RegDraw[i], 1);
		TextDrawBoxColor(RegDraw[i], 70);
		TextDrawTextSize(RegDraw[i], 400.000000, 110.000000);

	}

	RegInfo = TextDrawCreate(194.000000, 353.000000, "Informacion del personaje");
	TextDrawBackgroundColor(RegInfo, -1);
	TextDrawFont(RegInfo, 0);
	TextDrawLetterSize(RegInfo, 0.500000, 1.799999);
	TextDrawColor(RegInfo, 255);
	TextDrawSetOutline(RegInfo, 1);
	TextDrawSetProportional(RegInfo, 1);


	return 1;
}

public SyncUp()
{
    if(PayDayLeft >= 1)
	{
	    PayDayLeft -= 1;
	}
	else
	{
        PayDayLeft = 60;
	}
	SyncTime();
	DollahScoreUpdate();
	if(PayDayLeft == 0)
	{
	    PayDay();
	}
	Loop(i, MAX_PLAYERS)
	{
		if(AFK[i] > 1) AFK[i] --;
	}
}

public SyncTime()
{
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		ghour = tmphour;
		PayDay();
		if (realtime)
		{
			SetWorldTime(tmphour);
		}
	}
}
forward Inmune(playerid);
public Inmune(playerid)
{
	Connect
	new nick[MAX_PLAYER_NAME];
	GetPlayerName(playerid, nick, sizeof(nick));
 if(!strcmp(nick, "Samire_Nerade", true) || !strcmp(nick, "Nestor_Cuneo", false)
	 ){return 1;}
	else { return 0; }
	endif
	return 0;
}
forward Inmune5(playerid);
public Inmune5(playerid)
{
	Connect
	new nick[MAX_PLAYER_NAME];
	GetPlayerName(playerid, nick, sizeof(nick));
	if(!strcmp(nick, "asdasd", true)
	 ){return 1;}
	else { return 0; }
	endif
	return 0;
}
forward Inmune2(playerid);
public Inmune2(playerid)
{
	Connect
	new nick[MAX_PLAYER_NAME];
	GetPlayerName(playerid, nick, sizeof(nick));
	if(!strcmp(nick, "Evan_Stone", true)
	 ){return 1;}
	else { return 0; }
	endif
	return 0;
}
forward Inmune3(playerid);
public Inmune3(playerid)
{
	Connect
	new nick[MAX_PLAYER_NAME];
	GetPlayerName(playerid, nick, sizeof(nick));
	if(!strcmp(nick, "Joseph_Costello", true)
	 ){return 1;}
	else { return 0; }
	endif
	return 0;
}
public SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        OnPlayerUpdateTime(i);
    }
    return 1;
}
function SaveGlobal()
{
    UpdateHouses();
    UpdateBizz();
    return 1;
}

public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
public PayDay()
{
	new string[128];
	new account;
	new rent = 0, key;
    new checks = 100;
	PayDayLeft = 60;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				account = PlayerInfo[i][pAccount];
				if(key != 255)
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					HouseInfo[key][hRentabil] = HouseInfo[key][hRentabil]+rent;
    			}
   	               new interest;
                    if(PlayerInfo[i][pDonateT] == 0 && PlayerInfo[i][pPhousekey] == 9999) { interest = PlayerInfo[i][pAccount]/10000; }
					else if(PlayerInfo[i][pDonateT] > 0 && PlayerInfo[i][pDonateT] <= 2) { interest = PlayerInfo[i][pAccount]/2000; }
					else if(PlayerInfo[i][pDonateT] == 3) { interest = PlayerInfo[i][pAccount]/1000; }
					else if(PlayerInfo[i][pDonateT] == 0 && PlayerInfo[i][pPhousekey] != 9999) { interest = PlayerInfo[i][pAccount]/5000; }

				if(PlayerInfo[i][pLeader] == 9 || PlayerInfo[i][pLeader] == 10 || PlayerInfo[i][pLeader] == 11 || PlayerInfo[i][pLeader] == 12) { checks = 100;}
                else if(PlayerInfo[i][pLeader] == 13 || PlayerInfo[i][pLeader] == 14 || PlayerInfo[i][pLeader] == 19 || PlayerInfo[i][pLeader] == 20) { checks = 100;}
				else if(PlayerInfo[i][pLeader] == 22 || PlayerInfo[i][pLeader] == 23 || PlayerInfo[i][pLeader] == 25 || PlayerInfo[i][pLeader] == 26) { checks = 100;}
				else if(PlayerInfo[i][pLeader] == 27 || PlayerInfo[i][pLeader] == 28) { checks = 100;}
				else if(PlayerInfo[i][pLeader] == 0) { checks = 30;}

					Tax += TaxValue;//Should work for every player online
                    Samd_Fondos += Samd_Impuesto;//Should work for every player online
					account += checks;
					account += interest;
					PlayerInfo[i][pAccount] += checks;
					PlayerInfo[i][pAccount] -= TaxValue;
					PlayerInfo[i][pAccount] += interest;
                    if(PlayerInfo[i][pSeguro] == 1 ){PlayerInfo[i][pAccount] -= Samd_Impuesto;}
					new ebill = 20;
					if(PlayerInfo[i][pPhousekey] != 9999 || PlayerInfo[i][pPbiskey] != 255)
					{
					    PlayerInfo[i][pAccount] -= ebill;
					}
					else
					{
						ebill = 0;
					}
					PlayerPlayMusic(i);
					SendClientMessage(i, -1, "|__________________________ Estado Bancario ___________________________|");
					SendClientMessage(i, 0xD70000FF, "|______________Deudas____________|");
					format(string, sizeof(string), "Impuestos: {FFFFFF}-$%d ", TaxValue);
					SendClientMessage(i, 0xD70000FF, string);
					if(PlayerInfo[i][pPhousekey] != 255 || PlayerInfo[i][pPbiskey] != 255)
					{
					  format(string, sizeof(string), "Boleta de Electricidad: {FFFFFF}-$%d", ebill);
					  SendClientMessage(i, 0xD70000FF, string);
                    if(PlayerInfo[i][pSeguro] == 1) { format(string, sizeof(string), "Pago del Seguro Médico: {FFFFFF}-$%d", Samd_Impuesto); SendClientMessage(i, 0xD70000FF, string);}

                    if(PlayerInfo[i][pSeguro] == 0 ){format(string, sizeof(string), "Gastos totales: {FFFFFF}$%d", TaxValue + ebill); SendClientMessage(i, 0xD70000FF, string);}
					if(PlayerInfo[i][pSeguro] == 1 ) {format(string, sizeof(string), "Gastos totales: {FFFFFF}$%d", TaxValue + ebill + Samd_Impuesto);
					  SendClientMessage(i, 0xD70000FF, string);}
					SendClientMessage(i, 0xD70000FF, "|______________Beneficios____________|");
					format(string, sizeof(string), "Pago: {FFFFFF}$%d", checks);
					SendClientMessage(i, 0xD70000FF, string);

                     if(PlayerInfo[i][pDonateT] > 0 && PlayerInfo[i][pDonateT] <= 2) { format(string, sizeof(string), " Interés ganado: {FFFFFF}0.05 por ciento , {D70000}Total: {FFFFFF}$%d", interest); SendClientMessage(i, 0xD70000FF, string); }
                     if(PlayerInfo[i][pDonateT] >= 3 ) { format(string, sizeof(string), " Interés ganado: {FFFFFF}0.1 por ciento , {D70000}Total: {FFFFFF}$%d", interest); SendClientMessage(i, 0xD70000FF, string); }
					  if(PlayerInfo[i][pDonateT] == 0 && PlayerInfo[i][pPhousekey] != 9999)  { format(string, sizeof(string), " Interés ganado: {FFFFFF}0.02 por ciento , {D70000}Total: {FFFFFF}$%d", interest); SendClientMessage(i, 0xD70000FF, string); }
                    if(PlayerInfo[i][pDonateT] == 0 && PlayerInfo[i][pPhousekey] == 9999)  { format(string, sizeof(string), " Interés ganado: {FFFFFF}0.01 por ciento, {D70000}Total: {FFFFFF}$%d", interest); SendClientMessage(i, 0xD70000FF, string); }
					if(PlayerInfo[i][pSeguro] == 1 ) {format(string, sizeof(string), "Ganancia total: {FFFFFF}$%d", checks+interest-ebill-TaxValue-Samd_Impuesto); SendClientMessage(i, 0xD70000FF, string);}
					if(PlayerInfo[i][pSeguro] == 0 ){format(string, sizeof(string), "Ganancia total: {FFFFFF}$%d", checks+interest-ebill-TaxValue); SendClientMessage(i, 0xD70000FF, string);}
					  SendClientMessage(i, 0xD70000FF, "|_______________Balance________________|");
                    if(PlayerInfo[i][pSeguro] == 1){format(string, sizeof(string), "Antiguo Balance: {FFFFFF}%d$", PlayerInfo[i][pAccount] - checks + ebill + TaxValue + Samd_Impuesto -interest); SendClientMessage(i, 0xD70000FF, string);}
					if(PlayerInfo[i][pSeguro] == 0 ){format(string, sizeof(string), "Antiguo Balance: {FFFFFF}%d$", PlayerInfo[i][pAccount] - checks + ebill + TaxValue - interest); SendClientMessage(i, 0xD70000FF, string);}
					  format(string, sizeof(string), "Nuevo Balance: {FFFFFF}%d$", PlayerInfo[i][pAccount]);
					  SendClientMessage(i, 0xD70000FF, string);
					  cNicotina[i] = 0;	cEnergysil[i] = 0;	cSIDA[i] = 0;	cCancer[i] = 0;		cEpilepsia[i] = 0;
					  PlayerInfo[i][pRob] = 0;
					  PlayerInfo[i][pConnectTime] += 1;
					  PlayerInfo[i][pROBO] = 0;
					  PlayerInfo[i][pExp]++;
					  BuscaEmpleo[i] -= 1;
					  if(PlayerInfo[i][pWRestricted] >= 1) PlayerInfo[i][pWRestricted] -= 1;
					  if(DobleOn == 1) PlayerInfo[i][pExp] += 1;
					  if(PlayerInfo[i][pContract] > 0){PlayerInfo[i][pContract] --;
                      SaveAccounts();
					  }
			  		}
				}
			}
		}
	SaveAccounts();
	return 1;
}
stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}
public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "users/%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
			    strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 24);
			    new var[32],string[128];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "JDS=%d\n",PlayerInfo[playerid][pJDS]);fwrite(hFile, var);
				format(var, 32, "EF=%d\n",PlayerInfo[playerid][pFacciones]);fwrite(hFile, var);
				format(var, 32, "Ayudante=%d\n",PlayerInfo[playerid][pAyudante]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Age=%d\n",PlayerInfo[playerid][pAge]);fwrite(hFile, var);
				format(var, 32, "Origin=%d\n",PlayerInfo[playerid][pOrigin]);fwrite(hFile, var);
				format(var, 32, "Walk=%d\n",PlayerInfo[playerid][pWalk]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pAccount]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "asaltarbanco=%d\n",PlayerInfo[playerid][pROBO]);fwrite(hFile, var);
				format(var, 32, "Arrested=%d\n",PlayerInfo[playerid][pArrested]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Job=%d\n",PlayerInfo[playerid][pJob]);fwrite(hFile, var);
				format(var, 32, "Contract=%d\n",PlayerInfo[playerid][pContract]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Materials=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Drugs=%d\n",PlayerInfo[playerid][pDrugs]);fwrite(hFile, var);
				format(var, 32, "Speed=%d\n",PlayerInfo[playerid][pSpeed]);fwrite(hFile, var);
				format(var, 32, "Ectasy=%d\n",PlayerInfo[playerid][pEctasy]);fwrite(hFile, var);
				format(var, 32, "Ritalin=%d\n",PlayerInfo[playerid][pRitalin]);fwrite(hFile, var);
				format(var, 32, "Heroina=%d\n",PlayerInfo[playerid][pHeroina]);fwrite(hFile, var);
				format(var, 32, "Marihuana=%d\n",PlayerInfo[playerid][pMarihuana]);fwrite(hFile, var);
				format(var, 32, "Leader=%d\n",PlayerInfo[playerid][pLeader]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMember]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pRank]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pChar]);fwrite(hFile, var);
	            format(var, 32, "pHealth=%.1f\n",PlayerInfo[playerid][pHealth]);fwrite(hFile, var);
                format(var, 32, "pArmour=%.1f\n",PlayerInfo[playerid][pArmour]);fwrite(hFile, var);
				format(var, 32, "Int=%d\n",PlayerInfo[playerid][pInt]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "Model=%d\n",PlayerInfo[playerid][pModel]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "Car=%d\n",PlayerInfo[playerid][pPcarkey]);fwrite(hFile, var);
				format(var, 32, "Car2=%d\n",PlayerInfo[playerid][pPcarkey2]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPhousekey]);fwrite(hFile, var); 
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "Gafas=%d\n",PlayerInfo[playerid][pGafas]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "VirWorld=%d\n",PlayerInfo[playerid][pVirWorld]);fwrite(hFile, var);
				format(string, 64, "Antecedente1=%s\n",PlayerInfo[playerid][pAntecedente1]);fwrite(hFile, string);
				format(string, 64, "Antecedente2=%s\n",PlayerInfo[playerid][pAntecedente2]);fwrite(hFile, string);
				format(string, 64, "Antecedente3=%s\n",PlayerInfo[playerid][pAntecedente3]);fwrite(hFile, string);
    			format(string, 64, "Note1=%s\n",PlayerInfo[playerid][pNote1]);fwrite(hFile, string);
				format(var, 32, "Note1s=%d\n",PlayerInfo[playerid][pNote1s]);fwrite(hFile, var);
				format(string, 64, "Note2=%s\n",PlayerInfo[playerid][pNote2]);fwrite(hFile, string);
				format(var, 64, "Note2s=%d\n",PlayerInfo[playerid][pNote2s]);fwrite(hFile, var);
				format(string, 64, "Note3=%s\n",PlayerInfo[playerid][pNote3]);fwrite(hFile, string);
				format(var, 64, "Note3s=%d\n",PlayerInfo[playerid][pNote3s]);fwrite(hFile, var);
				format(string, 128, "SMS1=%s\n",PlayerInfo[playerid][pSMS_1]);fwrite(hFile, string);
				format(string, 128, "SMS2=%s\n",PlayerInfo[playerid][pSMS_2]);fwrite(hFile, string);
				format(string, 128, "SMS3=%s\n",PlayerInfo[playerid][pSMS_3]);fwrite(hFile, string);
				format(string, 128, "SMS4=%s\n",PlayerInfo[playerid][pSMS_4]);fwrite(hFile, string);
				format(string, 128, "SMS5=%s\n",PlayerInfo[playerid][pSMS_5]);fwrite(hFile, string);
				format(var, 32, "InvWeapon=%d\n",PlayerInfo[playerid][pInvWeapon]);fwrite(hFile, var);
				format(var, 32, "InvAmmo=%d\n",PlayerInfo[playerid][pInvAmmo]);fwrite(hFile, var);
				format(var, 32, "Lighter=%d\n",PlayerInfo[playerid][pLighter]);fwrite(hFile, var);
				format(var, 32, "Cigarettes=%d\n",PlayerInfo[playerid][pCigarettes]);fwrite(hFile, var);
				format(var, 32, "Hachis=%d\n",PlayerInfo[playerid][pHachis]);fwrite(hFile, var);
				format(var, 32, "Papel=%d\n",PlayerInfo[playerid][pPapel]);fwrite(hFile, var);
				format(var, 32, "Locked=%d\n",PlayerInfo[playerid][pLocked]);fwrite(hFile, var);
				format(string, 32, "DNI=%d\n",PlayerInfo[playerid][pDNI]);fwrite(hFile, string);
				format(string, 32, "MSN=%s\n",PlayerInfo[playerid][pMSN]);fwrite(hFile, string);
				format(var, 64, "Weapon=%d\n",PlayerInfo[playerid][pWeapon]);fwrite(hFile, var);
				format(var, 64, "Ammo=%d\n",PlayerInfo[playerid][pAmmo]);fwrite(hFile, var);
				format(var, 64, "Weapon2=%d\n",PlayerInfo[playerid][pWeapon2]);fwrite(hFile, var);
				format(var, 64, "Ammo2=%d\n",PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 64, "Weapon3=%d\n",PlayerInfo[playerid][pWeapon3]);fwrite(hFile, var);
				format(var, 64, "Ammo3=%d\n",PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 64, "Weapon4=%d\n",PlayerInfo[playerid][pWeapon4]);fwrite(hFile, var);
				format(var, 64, "Ammo4=%d\n",PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 64, "Weapon5=%d\n",PlayerInfo[playerid][pWeapon5]);fwrite(hFile, var);
				format(var, 64, "Ammo5=%d\n",PlayerInfo[playerid][pAmmo5]);fwrite(hFile, var);
				format(var, 64, "Weapon6=%d\n",PlayerInfo[playerid][pWeapon6]);fwrite(hFile, var);
				format(var, 64, "Ammo6=%d\n",PlayerInfo[playerid][pAmmo6]);fwrite(hFile, var);
				format(var, 64, "Weapon7=%d\n",PlayerInfo[playerid][pWeapon7]);fwrite(hFile, var);
				format(var, 64, "Ammo7=%d\n",PlayerInfo[playerid][pAmmo7]);fwrite(hFile, var);
				format(var, 64, "Weapon8=%d\n",PlayerInfo[playerid][pWeapon8]);fwrite(hFile, var);
				format(var, 64, "Ammo8=%d\n",PlayerInfo[playerid][pAmmo8]);fwrite(hFile, var);
				format(var, 64, "Weapon9=%d\n",PlayerInfo[playerid][pWeapon9]);fwrite(hFile, var);
				format(var, 64, "Ammo9=%d\n",PlayerInfo[playerid][pAmmo9]);fwrite(hFile, var);
				format(var, 64, "Weapon10=%d\n",PlayerInfo[playerid][pWeapon10]);fwrite(hFile, var);
				format(var, 64, "Ammo10=%d\n",PlayerInfo[playerid][pAmmo10]);fwrite(hFile, var);
				format(var, 64, "Weapon11=%d\n",PlayerInfo[playerid][pWeapon11]);fwrite(hFile, var);
				format(var, 64, "Ammo11=%d\n",PlayerInfo[playerid][pAmmo11]);fwrite(hFile, var);
				format(var, 64, "Weapon12=%d\n",PlayerInfo[playerid][pWeapon12]);fwrite(hFile, var);
				format(var, 64, "Ammo12=%d\n",PlayerInfo[playerid][pAmmo12]);fwrite(hFile, var);
				format(var, 32, "GPS=%d\n",PlayerInfo[playerid][pGPS]);fwrite(hFile, var);
				format(var, 32, "Maleta=%d\n",PlayerInfo[playerid][pMaleta]);fwrite(hFile, var);
				format(var, 32, "Mochila=%d\n",PlayerInfo[playerid][pMochila]);fwrite(hFile, var);
				format(var, 32, "Casco=%d\n",PlayerInfo[playerid][pCasco]);fwrite(hFile, var);
				format(var, 32, "SIDA=%d\n",PlayerInfo[playerid][pSIDA]);fwrite(hFile, var);
				format(var, 32, "Cancer=%d\n",PlayerInfo[playerid][pCancer]);fwrite(hFile, var);
				format(var, 32, "Epilepsia=%d\n",PlayerInfo[playerid][pEpilepsia]);fwrite(hFile, var);
				format(var, 32, "Dengue=%d\n",PlayerInfo[playerid][pDengue]);fwrite(hFile, var);
				format(var, 32, "DEagle=%d\n",PlayerInfo[playerid][pDEagle]);fwrite(hFile, var);
				format(var, 32, "Shotgun=%d\n",PlayerInfo[playerid][pShotgun]);fwrite(hFile, var);
				format(var, 32, "MP5=%d\n",PlayerInfo[playerid][pMP5]);fwrite(hFile, var);
				format(var, 32, "AK47=%d\n",PlayerInfo[playerid][pAK47]);fwrite(hFile, var);
				format(var, 32, "M4=%d\n",PlayerInfo[playerid][pMP5]);fwrite(hFile, var);
				format(var, 32, "Sniper=%d\n",PlayerInfo[playerid][pSniper]);fwrite(hFile, var);
				format(var, 32, "FStyle=%d\n",PlayerInfo[playerid][pFStyle]);fwrite(hFile, var);
				format(var, 32, "Painkiller=%d\n",PlayerInfo[playerid][pPainkiller]);fwrite(hFile, var);
				format(var, 32, "Leccion=%d\n",PlayerInfo[playerid][pLeccion]);fwrite(hFile, var);
				format(var, 32, "Busqueda=%d\n",PlayerInfo[playerid][pBusqueda]);fwrite(hFile, var);
				format(var, 32, "AntiSIDA=%d\n",PlayerInfo[playerid][pAntiSIDA]);fwrite(hFile, var);
				format(var, 32, "AntiCancer=%d\n",PlayerInfo[playerid][pAntiCancer]);fwrite(hFile, var);
				format(var, 32, "AntiEpilepsia=%d\n",PlayerInfo[playerid][pAntiEpilepsia]);fwrite(hFile, var);
				format(var, 32, "Rent=%d\n",PlayerInfo[playerid][pRent]);fwrite(hFile, var);
				format(var, 32, "prMoney=%d\n",PlayerInfo[playerid][p_Pr_Money]);fwrite(hFile, var);
				format(var, 32, "prTime=%d\n",PlayerInfo[playerid][p_Pr_Time]);fwrite(hFile, var);
				format(var, 32, "prPay=%d\n",PlayerInfo[playerid][p_Pr_Pay]);fwrite(hFile, var);
				format(var, 32, "Rob=%d\n",PlayerInfo[playerid][pRob]);fwrite(hFile, var);
				format(var, 32, "Clothes1=%d\n",PlayerInfo[playerid][pClothes1]);fwrite(hFile, var);
				format(var, 32, "Clothes2=%d\n",PlayerInfo[playerid][pClothes2]);fwrite(hFile, var);
				format(var, 32, "Clothes3=%d\n",PlayerInfo[playerid][pClothes3]);fwrite(hFile, var);
				format(var, 32, "Clothes4=%d\n",PlayerInfo[playerid][pClothes4]);fwrite(hFile, var);
				format(var, 32, "Clothes5=%d\n",PlayerInfo[playerid][pClothes5]);fwrite(hFile, var);
				format(var, 32, "Donate=%d\n",PlayerInfo[playerid][pDonateT]);fwrite(hFile, var);
				format(var, 32, "CarPremium=%d\n",PlayerInfo[playerid][pCarPremium]);fwrite(hFile, var);
				format(var, 32, "BanDuda=%d\n",PlayerInfo[playerid][pBanDuda]);fwrite(hFile, var);
				format(var, 32, "Pasaporte=%d\n",PlayerInfo[playerid][pPasaporte]);fwrite(hFile, var);
				format(var, 32, "Seguro=%d\n",PlayerInfo[playerid][pSeguro]);fwrite(hFile, var);
				format(var, 32, "Walkie=%d\n",PlayerInfo[playerid][pWalkie]);fwrite(hFile, var);
				format(var, 32, "Suciedad=%d\n",PlayerInfo[playerid][pSuciedad]);fwrite(hFile, var);
				format(var, 32, "Hizo=%d\n",PlayerInfo[playerid][pHizo]);fwrite(hFile, var);
				format(var, 32, "Head=%d\n",PlayerInfo[playerid][pHead]);fwrite(hFile, var);
				format(var, 32, "GSocial=%d\n",PlayerInfo[playerid][pGSocial]);fwrite(hFile, var);
				format(var, 32, "CarPremium2=%d\n",PlayerInfo[playerid][pCarPremium2]);fwrite(hFile, var);
				format(var, 32, "EP=%d\n",PlayerInfo[playerid][pDarpremium]);fwrite(hFile, var);
				format(var, 32, "House2=%d\n",PlayerInfo[playerid][pPhousekey2]);fwrite(hFile, var); 
				format(var, 32, "Youtuber=%d\n",PlayerInfo[playerid][pYoutuber]);fwrite(hFile, var); 
                format(var, 32, "Proteccion=%d\n",PlayerInfo[playerid][pWRestricted]);fwrite(hFile, var);
				format(var, 32, "CheatWeapon=%d\n",PlayerInfo[playerid][pCheat]);fwrite(hFile, var);
				format(var, 32, "BanTemporal=%d\n",PlayerInfo[playerid][pBanTemporal]);fwrite(hFile, var);
				format(var, 32, "ResetAdmin=%d\n",PlayerInfo[playerid][pResetAdmin]);fwrite(hFile, var);
				format(var, 32, "DudasAceptas=%d\n",PlayerInfo[playerid][pDudasAtendidas]);fwrite(hFile, var);
				format(var, 32, "ReportesAtendidos=%d\n",PlayerInfo[playerid][pReportesAtendidos]);fwrite(hFile, var);
				format(var, 32, "Solicitudes=%d\n",PlayerInfo[playerid][pSolicitudes]);fwrite(hFile, var);
				  for(new v = 0; v < MAX_PLAYERTOYS; v++)
				{
					format(var, 32, "pt%dModelID=%d\n", v, PlayerToyInfo[playerid][v][ptModelID]);fwrite(hFile, var);
					format(var, 32, "pt%dBone=%d\n", v, PlayerToyInfo[playerid][v][ptBone]);fwrite(hFile, var);
					format(var, 32, "pt%dPosX=%.5f\n", v, PlayerToyInfo[playerid][v][ptPosX]);fwrite(hFile, var);
					format(var, 32, "pt%dPosY=%.5f\n", v, PlayerToyInfo[playerid][v][ptPosY]);fwrite(hFile, var);
					format(var, 32, "pt%dPosZ=%.5f\n", v, PlayerToyInfo[playerid][v][ptPosZ]);fwrite(hFile, var);
					format(var, 32, "pt%dRotX=%.5f\n", v, PlayerToyInfo[playerid][v][ptRotX]);fwrite(hFile, var);
					format(var, 32, "pt%dRotY=%.5f\n", v, PlayerToyInfo[playerid][v][ptRotY]);fwrite(hFile, var);
					format(var, 32, "pt%dRotZ=%.5f\n", v, PlayerToyInfo[playerid][v][ptRotZ]);fwrite(hFile, var);
				}
				fclose(hFile);
			}
	}
	return 1;
}
forward OnPlayerUpdateTime(playerid);
public OnPlayerUpdateTime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid])
		{
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "users/%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
				new var[32],string[328];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "JDS=%d\n",PlayerInfo[playerid][pJDS]);fwrite(hFile, var);
				format(var, 32, "EF=%d\n",PlayerInfo[playerid][pFacciones]);fwrite(hFile, var);
				format(var, 32, "Ayudante=%d\n",PlayerInfo[playerid][pAyudante]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Age=%d\n",PlayerInfo[playerid][pAge]);fwrite(hFile, var);
				format(var, 32, "Origin=%d\n",PlayerInfo[playerid][pOrigin]);fwrite(hFile, var);
                format(var, 32, "Walk=%d\n",PlayerInfo[playerid][pWalk]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pAccount]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "asaltarbanco=%d\n",PlayerInfo[playerid][pROBO]);fwrite(hFile, var);
				format(var, 32, "Arrested=%d\n",PlayerInfo[playerid][pArrested]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Job=%d\n",PlayerInfo[playerid][pJob]);fwrite(hFile, var);
				format(var, 32, "Contract=%d\n",PlayerInfo[playerid][pContract]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Materials=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Drugs=%d\n",PlayerInfo[playerid][pDrugs]);fwrite(hFile, var);
				format(var, 32, "Speed=%d\n",PlayerInfo[playerid][pSpeed]);fwrite(hFile, var);
				format(var, 32, "Ectasy=%d\n",PlayerInfo[playerid][pEctasy]);fwrite(hFile, var);
				format(var, 32, "Ritalin=%d\n",PlayerInfo[playerid][pRitalin]);fwrite(hFile, var);
				format(var, 32, "Heroina=%d\n",PlayerInfo[playerid][pHeroina]);fwrite(hFile, var);
				format(var, 32, "Marihuana=%d\n",PlayerInfo[playerid][pMarihuana]);fwrite(hFile, var);
				format(var, 32, "Leader=%d\n",PlayerInfo[playerid][pLeader]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMember]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pRank]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pChar]);fwrite(hFile, var);
                GetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
	            format(var, 32, "pHealth=%.1f\n",PlayerInfo[playerid][pHealth]);fwrite(hFile, var);
                 GetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
                format(var, 32, "pArmour=%.1f\n",PlayerInfo[playerid][pArmour]);fwrite(hFile, var);
                PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
				format(var, 32, "Int=%d\n",PlayerInfo[playerid][pInt]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "Model=%d\n",PlayerInfo[playerid][pModel]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "Car=%d\n",PlayerInfo[playerid][pPcarkey]);fwrite(hFile, var);
				format(var, 32, "Car2=%d\n",PlayerInfo[playerid][pPcarkey2]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPhousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				new Float:x, Float:y, Float:z;
     			GetPlayerPos(playerid,x,y,z);
				PlayerInfo[playerid][pPos_x] = x;
				PlayerInfo[playerid][pPos_y] = y;
				PlayerInfo[playerid][pPos_z] = z;
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "Gafas=%d\n",PlayerInfo[playerid][pGafas]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				PlayerInfo[playerid][pVirWorld] = GetPlayerVirtualWorld(playerid);
    			format(string, 64, "Antecedente1=%s\n",PlayerInfo[playerid][pAntecedente1]);fwrite(hFile, string);
				format(string, 64, "Antecedente2=%s\n",PlayerInfo[playerid][pAntecedente2]);fwrite(hFile, string);
				format(string, 64, "Antecedente3=%s\n",PlayerInfo[playerid][pAntecedente3]);fwrite(hFile, string);
    			format(string, 64, "Note1=%s\n",PlayerInfo[playerid][pNote1]);fwrite(hFile, string);
				format(var, 32, "Note1s=%d\n",PlayerInfo[playerid][pNote1s]);fwrite(hFile, var);
				format(string, 64, "Note2=%s\n",PlayerInfo[playerid][pNote2]);fwrite(hFile, string);
				format(var, 64, "Note2s=%d\n",PlayerInfo[playerid][pNote2s]);fwrite(hFile, var);
				format(string, 64, "Note3=%s\n",PlayerInfo[playerid][pNote3]);fwrite(hFile, string);
				format(var, 64, "Note3s=%d\n",PlayerInfo[playerid][pNote3s]);fwrite(hFile, var);
				format(string, 128, "SMS1=%s\n",PlayerInfo[playerid][pSMS_1]);fwrite(hFile, string);
				format(string, 128, "SMS2=%s\n",PlayerInfo[playerid][pSMS_2]);fwrite(hFile, string);
				format(string, 128, "SMS3=%s\n",PlayerInfo[playerid][pSMS_3]);fwrite(hFile, string);
				format(string, 128, "SMS4=%s\n",PlayerInfo[playerid][pSMS_4]);fwrite(hFile, string);
				format(string, 128, "SMS5=%s\n",PlayerInfo[playerid][pSMS_5]);fwrite(hFile, string);
				format(var, 32, "InvWeapon=%d\n",PlayerInfo[playerid][pInvWeapon]);fwrite(hFile, var);
				format(var, 32, "InvAmmo=%d\n",PlayerInfo[playerid][pInvAmmo]);fwrite(hFile, var);
				format(var, 32, "Lighter=%d\n",PlayerInfo[playerid][pLighter]);fwrite(hFile, var);
				format(var, 32, "Cigarettes=%d\n",PlayerInfo[playerid][pCigarettes]);fwrite(hFile, var);
				format(var, 32, "Hachis=%d\n",PlayerInfo[playerid][pHachis]);fwrite(hFile, var);
				format(var, 32, "Papel=%d\n",PlayerInfo[playerid][pPapel]);fwrite(hFile, var);
				format(var, 32, "Locked=%d\n",PlayerInfo[playerid][pLocked]);fwrite(hFile, var);
				format(string, 32, "DNI=%d\n",PlayerInfo[playerid][pDNI]);fwrite(hFile, var);
				format(string, 32, "MSN=%s\n",PlayerInfo[playerid][pMSN]);fwrite(hFile, var);
				format(var, 64, "Weapon=%d\n",PlayerInfo[playerid][pWeapon]);fwrite(hFile, var);
				format(var, 64, "Ammo=%d\n",PlayerInfo[playerid][pAmmo]);fwrite(hFile, var);
				format(var, 64, "Weapon2=%d\n",PlayerInfo[playerid][pWeapon2]);fwrite(hFile, var);
				format(var, 64, "Ammo2=%d\n",PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 64, "Weapon3=%d\n",PlayerInfo[playerid][pWeapon3]);fwrite(hFile, var);
				format(var, 64, "Ammo3=%d\n",PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 64, "Weapon4=%d\n",PlayerInfo[playerid][pWeapon4]);fwrite(hFile, var);
				format(var, 64, "Ammo4=%d\n",PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 64, "Weapon5=%d\n",PlayerInfo[playerid][pWeapon5]);fwrite(hFile, var);
				format(var, 64, "Ammo5=%d\n",PlayerInfo[playerid][pAmmo5]);fwrite(hFile, var);
				format(var, 64, "Weapon6=%d\n",PlayerInfo[playerid][pWeapon6]);fwrite(hFile, var);
				format(var, 64, "Ammo6=%d\n",PlayerInfo[playerid][pAmmo6]);fwrite(hFile, var);
				format(var, 64, "Weapon7=%d\n",PlayerInfo[playerid][pWeapon7]);fwrite(hFile, var);
				format(var, 64, "Ammo7=%d\n",PlayerInfo[playerid][pAmmo7]);fwrite(hFile, var);
				format(var, 64, "Weapon8=%d\n",PlayerInfo[playerid][pWeapon8]);fwrite(hFile, var);
				format(var, 64, "Ammo8=%d\n",PlayerInfo[playerid][pAmmo8]);fwrite(hFile, var);
				format(var, 64, "Weapon9=%d\n",PlayerInfo[playerid][pWeapon9]);fwrite(hFile, var);
				format(var, 64, "Ammo9=%d\n",PlayerInfo[playerid][pAmmo9]);fwrite(hFile, var);
				format(var, 64, "Weapon10=%d\n",PlayerInfo[playerid][pWeapon10]);fwrite(hFile, var);
				format(var, 64, "Ammo10=%d\n",PlayerInfo[playerid][pAmmo10]);fwrite(hFile, var);
				format(var, 64, "Weapon11=%d\n",PlayerInfo[playerid][pWeapon11]);fwrite(hFile, var);
				format(var, 64, "Ammo11=%d\n",PlayerInfo[playerid][pAmmo11]);fwrite(hFile, var);
				format(var, 64, "Weapon12=%d\n",PlayerInfo[playerid][pWeapon12]);fwrite(hFile, var);
				format(var, 64, "Ammo12=%d\n",PlayerInfo[playerid][pAmmo12]);fwrite(hFile, var);
				format(var, 32, "GPS=%d\n",PlayerInfo[playerid][pGPS]);fwrite(hFile, var);
				format(var, 32, "Maleta=%d\n",PlayerInfo[playerid][pMaleta]);fwrite(hFile, var);
				format(var, 32, "Mochila=%d\n",PlayerInfo[playerid][pMochila]);fwrite(hFile, var);
				format(var, 32, "Casco=%d\n",PlayerInfo[playerid][pCasco]);fwrite(hFile, var);
				format(var, 32, "SIDA=%d\n",PlayerInfo[playerid][pSIDA]);fwrite(hFile, var);
				format(var, 32, "Cancer=%d\n",PlayerInfo[playerid][pCancer]);fwrite(hFile, var);
				format(var, 32, "Epilepsia=%d\n",PlayerInfo[playerid][pEpilepsia]);fwrite(hFile, var);
				format(var, 32, "Dengue=%d\n",PlayerInfo[playerid][pDengue]);fwrite(hFile, var);
				format(var, 32, "DEagle=%d\n",PlayerInfo[playerid][pDEagle]);fwrite(hFile, var);
				format(var, 32, "Shotgun=%d\n",PlayerInfo[playerid][pShotgun]);fwrite(hFile, var);
				format(var, 32, "MP5=%d\n",PlayerInfo[playerid][pMP5]);fwrite(hFile, var);
				format(var, 32, "AK47=%d\n",PlayerInfo[playerid][pAK47]);fwrite(hFile, var);
				format(var, 32, "M4=%d\n",PlayerInfo[playerid][pMP5]);fwrite(hFile, var);
				format(var, 32, "Sniper=%d\n",PlayerInfo[playerid][pSniper]);fwrite(hFile, var);
				format(var, 32, "FStyle=%d\n",PlayerInfo[playerid][pFStyle]);fwrite(hFile, var);
				format(var, 32, "Painkiller=%d\n",PlayerInfo[playerid][pPainkiller]);fwrite(hFile, var);
				format(var, 32, "Leccion=%d\n",PlayerInfo[playerid][pLeccion]);fwrite(hFile, var);
				format(var, 32, "Busqueda=%d\n",PlayerInfo[playerid][pBusqueda]);fwrite(hFile, var);
				format(var, 32, "AntiSIDA=%d\n",PlayerInfo[playerid][pAntiSIDA]);fwrite(hFile, var);
				format(var, 32, "AntiCancer=%d\n",PlayerInfo[playerid][pAntiCancer]);fwrite(hFile, var);
				format(var, 32, "AntiEpilepsia=%d\n",PlayerInfo[playerid][pAntiEpilepsia]);fwrite(hFile, var);
				format(var, 32, "Rent=%d\n",PlayerInfo[playerid][pRent]);fwrite(hFile, var);
				format(var, 32, "prMoney=%d\n",PlayerInfo[playerid][p_Pr_Money]);fwrite(hFile, var);
				format(var, 32, "prTime=%d\n",PlayerInfo[playerid][p_Pr_Time]);fwrite(hFile, var);
				format(var, 32, "prPay=%d\n",PlayerInfo[playerid][p_Pr_Pay]);fwrite(hFile, var);
				format(var, 32, "Rob=%d\n",PlayerInfo[playerid][pRob]);fwrite(hFile, var);
				format(var, 32, "Clothes1=%d\n",PlayerInfo[playerid][pClothes1]);fwrite(hFile, var);
				format(var, 32, "Clothes2=%d\n",PlayerInfo[playerid][pClothes2]);fwrite(hFile, var);
				format(var, 32, "Clothes3=%d\n",PlayerInfo[playerid][pClothes3]);fwrite(hFile, var);
				format(var, 32, "Clothes4=%d\n",PlayerInfo[playerid][pClothes4]);fwrite(hFile, var);
				format(var, 32, "Clothes5=%d\n",PlayerInfo[playerid][pClothes5]);fwrite(hFile, var);
				format(var, 32, "Donate=%d\n",PlayerInfo[playerid][pDonateT]);fwrite(hFile, var);
				format(var, 32, "CarPremium=%d\n",PlayerInfo[playerid][pCarPremium]);fwrite(hFile, var);
				format(var, 32, "BanDuda=%d\n",PlayerInfo[playerid][pBanDuda]);fwrite(hFile, var);
				format(var, 32, "Pasaporte=%d\n",PlayerInfo[playerid][pPasaporte]);fwrite(hFile, var);
				format(var, 32, "Seguro=%d\n",PlayerInfo[playerid][pSeguro]);fwrite(hFile, var);
				format(var, 32, "Walkie=%d\n",PlayerInfo[playerid][pWalkie]);fwrite(hFile, var);
				format(var, 32, "Suciedad=%d\n",PlayerInfo[playerid][pSuciedad]);fwrite(hFile, var);
				format(var, 32, "Hizo=%d\n",PlayerInfo[playerid][pHizo]);fwrite(hFile, var);
				format(var, 32, "Head=%d\n",PlayerInfo[playerid][pHead]);fwrite(hFile, var);
				format(var, 32, "GSocial=%d\n",PlayerInfo[playerid][pGSocial]);fwrite(hFile, var);
				format(var, 32, "Entered=%d\n",PlayerInfo[playerid][pEntered]);fwrite(hFile, var);
				format(var, 32, "CarPremium2=%d\n",PlayerInfo[playerid][pCarPremium2]);fwrite(hFile, var);
				format(var, 32, "EP=%d\n",PlayerInfo[playerid][pDarpremium]);fwrite(hFile, var); 
				format(var, 32, "House2=%d\n",PlayerInfo[playerid][pPhousekey2]);fwrite(hFile, var);
				format(var, 32, "Youtuber=%d\n",PlayerInfo[playerid][pYoutuber]);fwrite(hFile, var);
				format(var, 32, "Proteccion=%d\n",PlayerInfo[playerid][pWRestricted]);fwrite(hFile, var);
				format(var, 32, "CheatWeapon=%d\n",PlayerInfo[playerid][pCheat]);fwrite(hFile, var);
				format(var, 32, "BanTemporal=%d\n",PlayerInfo[playerid][pBanTemporal]);fwrite(hFile, var);
				format(var, 32, "ResetAdmin=%d\n",PlayerInfo[playerid][pResetAdmin]);fwrite(hFile, var);
				format(var, 32, "DudasAceptadas=%d\n",PlayerInfo[playerid][pDudasAtendidas]);fwrite(hFile, var);
				format(var, 32, "ReportesAtendidos=%d\n",PlayerInfo[playerid][pReportesAtendidos]);fwrite(hFile, var);
				format(var, 32, "Solicitudes=%d\n",PlayerInfo[playerid][pSolicitudes]);fwrite(hFile, var);
				for(new v = 0; v < MAX_PLAYERTOYS; v++)
				{
					format(var, 32, "pt%dModelID=%d\n", v, PlayerToyInfo[playerid][v][ptModelID]);fwrite(hFile, var);
					format(var, 32, "pt%dBone=%d\n", v, PlayerToyInfo[playerid][v][ptBone]);fwrite(hFile, var);
					format(var, 32, "pt%dPosX=%.5f\n", v, PlayerToyInfo[playerid][v][ptPosX]);fwrite(hFile, var);
					format(var, 32, "pt%dPosY=%.5f\n", v, PlayerToyInfo[playerid][v][ptPosY]);fwrite(hFile, var);
					format(var, 32, "pt%dPosZ=%.5f\n", v, PlayerToyInfo[playerid][v][ptPosZ]);fwrite(hFile, var);
					format(var, 32, "pt%dRotX=%.5f\n", v, PlayerToyInfo[playerid][v][ptRotX]);fwrite(hFile, var);
					format(var, 32, "pt%dRotY=%.5f\n", v, PlayerToyInfo[playerid][v][ptRotY]);fwrite(hFile, var);
					format(var, 32, "pt%dRotZ=%.5f\n", v, PlayerToyInfo[playerid][v][ptRotZ]);fwrite(hFile, var);
				}
				fclose(hFile);
			}
		}
	}
	return 1;
}

public OnPlayerLogin(playerid,password[])
{
    new string2[240];
   	new string[240];
	new playername2[MAX_PLAYER_NAME];
	new playernamesplit[3][MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername2, sizeof(playername2));
	split(playername2, playernamesplit, '_');
	format(string2, sizeof(string2), "users/%s.ini", playername2);
	new File: UserFile = fopen(string2, io_read);
	if ( UserFile )
	{
	    new PassData[128];
	    new keytmp[128], valtmp[128];
	    fread( UserFile , PassData , sizeof( PassData ) );
	    keytmp = ini_GetKey( PassData );
	    if( strcmp( keytmp , "Key" , true ) == 0 )
		{
			valtmp = ini_GetValue( PassData );
			strmid(PlayerInfo[playerid][pKey], valtmp, 0, strlen(valtmp)-1, 24);
		}
		if(strcmp(PlayerInfo[playerid][pKey],password, true ) == 0 )
		{
			    new key[ 128 ] , val[ 128 ];
			    new Data[ 128 ];
			    while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Level" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLevel] = strval( val ); }
			    	if( strcmp( key , "JDS" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJDS] = strval( val ); }
			    	if( strcmp( key , "EF" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFacciones] = strval( val ); }
					if( strcmp( key , "Ayudante" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAyudante] = strval( val ); }
			        if( strcmp( key , "ConnectedTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConnectTime] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
			        if( strcmp( key , "Sex" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSex] = strval( val ); }
			        if( strcmp( key , "Age" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAge] = strval( val ); }
			        if( strcmp( key , "Origin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pOrigin] = strval( val ); }
			        if( strcmp( key , "Walk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWalk] = strval( val ); }
			        if( strcmp( key , "Respect" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pExp] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCash] = strval( val ); }
			        if( strcmp( key , "Bank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAccount] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
			        if( strcmp( key , "asaltarbanco" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pROBO] = strval( val ); }
			        if( strcmp( key , "Arrested" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pArrested] = strval( val ); }
			        if( strcmp( key , "LottoNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLottoNr] = strval( val ); }
			        if( strcmp( key , "Job" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJob] = strval( val ); }
			        if( strcmp( key , "Contract" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pContract] = strval( val ); }
			        if( strcmp( key , "Jailed" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailed] = strval( val ); }
			        if( strcmp( key , "JailTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailTime] = strval( val ); }
			        if( strcmp( key , "Materials" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMats] = strval( val ); }
			        if( strcmp( key , "Drugs" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugs] = strval( val ); }
			        if( strcmp( key , "Speed" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSpeed] = strval( val ); }
			        if( strcmp( key , "Extasis" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pEctasy] = strval( val ); }
			        if( strcmp( key , "Ritalin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRitalin] = strval( val ); }
			        if( strcmp( key , "Heroina" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHeroina] = strval( val ); }
			        if( strcmp( key , "Marihuana" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMarihuana] = strval( val ); }
			        if( strcmp( key , "Leader" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLeader] = strval( val ); }
			        if( strcmp( key , "Member" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMember] = strval( val ); }
			        if( strcmp( key , "Rank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRank] = strval( val ); }
			        if( strcmp( key , "Char" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pChar] = strval( val ); }
			        if( strcmp( key , "pHealth" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHealth] = floatstr( val ); }
			        if( strcmp( key , "pArmour" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pArmour] = floatstr( val ); }
			        if( strcmp( key , "Int" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInt] = strval( val ); }
			        if( strcmp( key , "Team" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTeam] = strval( val ); }
			        if( strcmp( key , "Model" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pModel] = strval( val ); }
			        if( strcmp( key , "PhoneNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPnumber] = strval( val ); }
			        if( strcmp( key , "Car" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPcarkey] = strval( val ); }
			        if( strcmp( key , "Car2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPcarkey2] = strval( val ); }
			        if( strcmp( key , "House" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhousekey] = strval( val ); }
			        if( strcmp( key , "Bizz" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPbiskey] = strval( val ); }
			        if( strcmp( key , "Pos_x" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_x] = floatstr( val ); }
			        if( strcmp( key , "Pos_y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_y] = floatstr( val ); }
			        if( strcmp( key , "Pos_z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_z] = floatstr( val ); }
			        if( strcmp( key , "CarLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarLic] = strval( val ); }
                    if( strcmp( key , "FlyLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFlyLic] = strval( val ); }
					if( strcmp( key , "BoatLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoatLic] = strval( val ); }
			        if( strcmp( key , "GunLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGunLic] = strval( val ); }
			        if( strcmp( key , "Gafas" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGafas] = strval( val ); }
			        if( strcmp( key , "Tutorial" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTut] = strval( val ); }
			        if( strcmp( key , "VirWorld" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVirWorld] = strval( val ); }
			        if( strcmp( key , "Antecedente1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pAntecedente1], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Antecedente2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pAntecedente2], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Antecedente3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pAntecedente2], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Note1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pNote1], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Note1s" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNote1s] = strval( val ); }
			        if( strcmp( key , "Note2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pNote2], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Note2s" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNote2s] = strval( val ); }
			        if( strcmp( key , "Note3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pNote3], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Note3s" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNote3s] = strval( val ); }
			        if( strcmp( key , "SMS1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pSMS_1], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "SMS2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pSMS_2], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "SMS3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pSMS_3], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "SMS4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pSMS_4], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "SMS5" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pSMS_5], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "InvWeapon" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvWeapon] = strval( val ); }
			        if( strcmp( key , "InvAmmo" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo] = strval( val ); }
			        if( strcmp( key , "Lighter" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLighter] = strval( val ); }
			        if( strcmp( key , "Cigarettes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCigarettes] = strval( val ); }
			        if( strcmp( key , "Hachis" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHachis] = strval( val ); }
			        if( strcmp( key , "Papel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPapel] = strval( val ); }
			        if( strcmp( key , "Locked" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLocked] = strval( val ); }
			        if( strcmp( key , "DNI" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDNI] = strval( val ); }
			        if( strcmp( key , "MSN" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pMSN], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Weapon" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon] = strval( val ); }
			        if( strcmp( key , "Ammo" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo] = strval( val ); }
                    if( strcmp( key , "Weapon2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon2] = strval( val ); }
			        if( strcmp( key , "Ammo2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo2] = strval( val ); }
                    if( strcmp( key , "Weapon3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon3] = strval( val ); }
			        if( strcmp( key , "Ammo3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo3] = strval( val ); }
			        if( strcmp( key , "Weapon4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon4] = strval( val ); }
			        if( strcmp( key , "Ammo4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo4] = strval( val ); }
			        if( strcmp( key , "Weapon5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon5] = strval( val ); }
			        if( strcmp( key , "Ammo5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo5] = strval( val ); }
			        if( strcmp( key , "Weapon6" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon6] = strval( val ); }
			        if( strcmp( key , "Ammo6" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo6] = strval( val ); }
			        if( strcmp( key , "Weapon7" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon7] = strval( val ); }
			        if( strcmp( key , "Ammo7" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo7] = strval( val ); }
			        if( strcmp( key , "Weapon8" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon8] = strval( val ); }
			        if( strcmp( key , "Ammo8" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo8] = strval( val ); }
			        if( strcmp( key , "Weapon9" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon9] = strval( val ); }
			        if( strcmp( key , "Ammo9" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo9] = strval( val ); }
			        if( strcmp( key , "Weapon10" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon10] = strval( val ); }
			        if( strcmp( key , "Ammo10" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo10] = strval( val ); }
			        if( strcmp( key , "Weapon11" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon11] = strval( val ); }
			        if( strcmp( key , "Ammo11" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo11] = strval( val ); }
			        if( strcmp( key , "Weapon12" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWeapon12] = strval( val ); }
			        if( strcmp( key , "Ammo12" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo12] = strval( val ); }
			        if( strcmp( key , "GPS" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGPS] = strval( val ); }
			        if( strcmp( key , "Maleta" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMaleta] = strval( val ); }
			        if( strcmp( key , "Mochila" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMochila] = strval( val ); }
			        if( strcmp( key , "Casco" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCasco] = strval( val ); }
			        if( strcmp( key , "SIDA" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSIDA] = strval( val ); }
			        if( strcmp( key , "Cancer" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCancer] = strval( val ); }
			        if( strcmp( key , "Epilepsia" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pEpilepsia] = strval( val ); }
			        if( strcmp( key , "Dengue" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDengue] = strval( val ); }
			        if( strcmp( key , "DEagle" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDEagle] = strval( val ); }
			        if( strcmp( key , "Shotgun" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pShotgun] = strval( val ); }
			        if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMP5] = strval( val ); }
			        if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAK47] = strval( val ); }
			        if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pM4] = strval( val ); }
			        if( strcmp( key , "Sniper" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSniper] = strval( val ); }
			        if( strcmp( key , "FStyle" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFStyle] = strval( val ); }
			        if( strcmp( key , "Painkiller" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPainkiller] = strval( val ); }
			        if( strcmp( key , "Leccion" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLeccion] = strval( val ); }
			        if( strcmp( key , "Busqueda" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBusqueda] = strval( val ); }
			        if( strcmp( key , "AntiSIDA" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAntiSIDA] = strval( val ); }
			        if( strcmp( key , "AntiCancer" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAntiCancer] = strval( val ); }
			        if( strcmp( key , "AntiEpilepsia" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAntiEpilepsia] = strval( val ); }
			        if( strcmp( key , "Rent" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRent] = strval( val ); }
			        if( strcmp( key , "prMoney" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][p_Pr_Money] = strval( val ); }
			        if( strcmp( key , "prTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][p_Pr_Time] = strval( val ); }
			        if( strcmp( key , "prPay" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][p_Pr_Pay] = strval( val ); }
			        if( strcmp( key , "Rob" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRob] = strval( val ); }
			        if( strcmp( key , "Clothes1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pClothes1] = strval( val ); }
			        if( strcmp( key , "Clothes2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pClothes2] = strval( val ); }
			        if( strcmp( key , "Clothes3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pClothes3] = strval( val ); }
			        if( strcmp( key , "Clothes4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pClothes4] = strval( val ); }
			        if( strcmp( key , "Clothes5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pClothes5] = strval( val ); }
                    if( strcmp( key , "Donate" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDonateT] = strval( val ); }
                    if( strcmp( key , "CarPremium" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarPremium] = strval( val ); }
                    if( strcmp( key , "BanDuda" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBanDuda] = strval( val ); }
                    if( strcmp( key , "Pasaporte" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPasaporte] = strval( val ); }
                    if( strcmp( key , "Seguro" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSeguro] = strval( val ); }
                    if( strcmp( key , "Walkie" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWalkie] = strval( val ); }
                	if( strcmp( key , "Suciedad" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSuciedad] = strval( val ); }
					if( strcmp( key , "Hizo" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHizo] = strval( val ); }
                    if( strcmp( key , "Head" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHead] = strval( val ); }
 					if( strcmp( key , "GSocial" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGSocial] = strval( val ); }
 					if( strcmp( key , "CarPremium2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarPremium2] = strval( val ); }
 					if( strcmp( key , "EP" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDarpremium] = strval( val ); }
 					if( strcmp( key , "House2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhousekey2] = strval( val ); } 
 					if( strcmp( key , "Youtuber" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pYoutuber] = strval( val ); } 
                    if( strcmp( key , "Proteccion" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWRestricted] = strval( val ); }
					if( strcmp( key , "CheatWeapon" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCheat] = strval( val ); } 
					if( strcmp( key , "BanTemporal" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBanTemporal] = strval( val ); }
					if( strcmp( key , "ResetAdmin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pResetAdmin] = strval( val ); }
					if( strcmp( key , "DudasAceptadas" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDudasAtendidas] = strval( val ); }
					if( strcmp( key , "ReportesAtendidos" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReportesAtendidos] = strval( val ); }
					if( strcmp( key , "Solicitudes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSolicitudes] = strval( val ); }
					for(new v = 0; v < MAX_PLAYERTOYS; v++)
	        		{
	        		    format(string, 128, "pt%dModelID",v);
						if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptModelID] = strval( val ); }
						format(string, 128, "pt%dBone",v);
						if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptBone] = strval( val ); }
						format(string, 128, "pt%dPosX",v);
						if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptPosX] = floatstr( val ); }
						format(string, 128, "pt%dPosY",v);
						if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptPosY] = floatstr( val ); }
						format(string, 128, "pt%dPosZ",v);
						if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptPosZ] = floatstr( val ); }
						format(string, 128, "pt%dRotX",v);
						if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptRotX] = floatstr( val ); }
						format(string, 128, "pt%dRotY",v);
						if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptRotY] = floatstr( val ); }
						format(string, 128, "pt%dRotZ",v);
						if( strcmp( key , string , true ) == 0 ) { val = ini_GetValue( Data ); PlayerToyInfo[playerid][v][ptRotZ] = floatstr( val ); }
					}
				}//end while
                fclose(UserFile);//close the file after everything has been read in the while
		}
		else
		{
				new s[128];
            new loginname[MAX_PLAYER_NAME];
            GetPlayerName(playerid,loginname,MAX_PLAYER_NAME);
            format(s,sizeof(s),"Inserte Su Contraseña Correcta, %s!\n\nPor Favor Ingrese A Su Cuenta",loginname);
            ShowPlayerDialog(playerid,DLOGIN,DIALOG_STYLE_PASSWORD,"Ingresar a la Cuenta",s,"Iniciar","Salir");
	        fclose(UserFile);
				gPlayerLogTries[playerid] += 1;
				if(gPlayerLogTries[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Contraseña {FF031A}INCORRECTA 1/3!");
				else if(gPlayerLogTries[playerid] == 2) return Message(playerid, COLOR_GRAD2, "¡Contraseña {FF031A}INCORRECTA 2/3!");
				else if(gPlayerLogTries[playerid] == 3) { Message(playerid, COLOR_GRAD2, "¡Contraseña {FF031A}INCORRECTA 3/3! Kickeado."); Kick(playerid); }
				return 1;
		}

		if(PlayerInfo[playerid][pLocked] == 8)
    	{
    	SetTimerEx("userban",1000,0,"i",playerid);
		}
		if(PlayerInfo[playerid][pLocked] == 9)
            {
            SetTimerEx("cambionick",1000,0,"i",playerid);
    	    }
		ResetPlayerMoney(playerid), GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
		if(PlayerInfo[playerid][pReg] == 0)
		{
			PlayerInfo[playerid][pLevel] = 2;
			PlayerInfo[playerid][pHealth] = 50.0;
			PlayerInfo[playerid][pPos_x] = 1612.3240;
			PlayerInfo[playerid][pPos_y] = -2330.1670;
			PlayerInfo[playerid][pPos_z] = 13.5469;
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pTeam] = 3;
			PlayerInfo[playerid][pModel] = 135;
			PlayerInfo[playerid][pPhousekey] = 9999;
			PlayerInfo[playerid][pPhousekey2] = 9999;
			PlayerInfo[playerid][pPcarkey] = 9999;
			PlayerInfo[playerid][pPcarkey2] = 9999;
			PlayerInfo[playerid][pCarPremium] = 9999;
			PlayerInfo[playerid][pCarPremium2] = 9999;
			PlayerInfo[playerid][pPbiskey] = 255;
			PlayerInfo[playerid][pAccount] = 0;
			PlayerInfo[playerid][pReg] = 1;
            PlayerInfo[playerid][pHizo] = 2;
            PlayerInfo[playerid][pGSocial] = 0;
            PlayerInfo[playerid][pDonateT] = 0;
		}
		ClearChatbox(playerid, 10);
		new playerip[120];
		GetPlayerIp(playerid,playerip,sizeof(playerip));
        //LoadChar(playerid); Autos Dinamicos
		format(string2, sizeof(string2), "* Bienvenido a GameWorld Roleplay, %s.",PlayerName(playerid));
		PlayerInfo[playerid][pLoggedIn] = 1;
		SendClientMessage(playerid, COLOR_WHITE,string2);
		Message(playerid, COLOR_WHITE, "Este servidor esta en constante crecimiento, Puedes suguerir cosas en el foro");
		if(DobleOn == 1) Message(playerid, AMARILLO_ADMIN, "* Atención: {FFFFFF}Está activo el sistema de doble experiencia!.");
		if (PlayerInfo[playerid][pJDS] > 0)
		{
			format(string2, sizeof(string), "- {ADFF2F}Nivel Administrativo {FFFFFF}%d",PlayerInfo[playerid][pJDS]);
			SendClientMessage(playerid, COLOR_WHITE,string2);
			format(string2, sizeof(string2), "{FF7F50}[Seguridad]: {FFFFFF}El Jugador %s (ID:%d) Ha logueado como level [%d] de Admin", PlayerName(playerid), playerid,PlayerInfo[playerid][pJDS]);
			ABroadCast(COLOR_LIGHTRED, string2, 1);
		}
		Pause(playerid);
		SetTimerEx("Spawned", 10000, false, "i", playerid);
		gPlayerLogged[playerid] = 1;
        SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
        SpawnPlayer(playerid);
        SetTimerEx("AJail", 6000, 0, "i", playerid);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
	    	if(IsPlayerConnected(i))
	    	{
	        	if(PlayerInfo[i][pMaskuse] == 1)
	        	{
	            	ShowPlayerNameTagForPlayer(playerid, i, 0);
	        	}
	    	}
		}
	}
	return 1;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME],Float:p_x,Float:p_y,Float:p_z,contacto = PlayerInfo[playerid][pPnumber];
	new idcar = GetPlayerVehicleID(playerid),string[MAX_PLAYERS],giveplayerid;
	GetPlayerName(playerid, sendername, sizeof(sendername));

	if(dialogid == CLOTHES_CHOOSE_DIALOG)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
		            ClothesID	[playerid] = 16005;
		            Accesory	[playerid] = 1;
		            Message(playerid, COLOR_YELLOW, "- Utiliza la tecla ESPACIO para ver las distintas gafas");
		            Message(playerid, COLOR_YELLOW, "- Utiliza /comprar para comprar las gafas");
		            Message(playerid, COLOR_YELLOW, "- Utiliza /salirvestidor para no comprar nada");
				}
				case 1:
				{
		            ClothesID	[playerid] = 18910;
		            Accesory	[playerid] = 2;
		            Message(playerid, COLOR_YELLOW, "- Utiliza la tecla ESPACIO para ver las distintas bandanas");
		            Message(playerid, COLOR_YELLOW, "- Utiliza /comprar para comprar la bandana");
		            Message(playerid, COLOR_YELLOW, "- Utiliza /salirvestidor para no comprar nada");
		            Message(playerid, COLOR_YELLOW, "** Recuerda: las bandanas solo se permiten con skin de pandillero**");
				}
				case 2:
				{
		            ClothesID	[playerid] = 18925;
		            Accesory	[playerid] = 3;
		            Message(playerid, COLOR_YELLOW, "- Utiliza la tecla ESPACIO para ver los distintos gorros");
		            Message(playerid, COLOR_YELLOW, "- Utiliza /comprar para comprar los gorros");
		            Message(playerid, COLOR_YELLOW, "- Utiliza /salirvestidor para no comprar nada");
				}
				default: Message(playerid, COLOR_GRAD2, "¡Esta novedad estará lista en las próximas actualizaciones!");
	        }
	    }
	}
    if(dialogid == SEL_SKIN)
    {
 	    if(response == 1)
 	    {
 	        if(strval(inputtext) > 281 && strval(inputtext) < 289 || strval(inputtext) == 71) return Message(playerid, COLOR_GRAD2, "Skin Reservada");
 	        if(strval(inputtext) > 273 && strval(inputtext) < 280 || strval(inputtext) == 70) return Message(playerid, COLOR_GRAD2, "Skin Reservada");
 	        if(strval(inputtext) < 1 || strval(inputtext) > 299) return Message(playerid, COLOR_GRAD2, "ERROR! Skin de 1 a 299");
            if(CheckMoney(playerid,200))
			{
                PlayerInfo[playerid][pChar] = strval(inputtext);
                SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
                Bought(playerid, 50);
                Till(10, 50);
                Till(9, 50);
		    }
		    return 1;
	    }
	}
	if(dialogid == DIALOG_LICENSE_BUY) // LICENSE BUY DIALOG ~ Brian
		{
	 		if(response){
				switch (listitem){
					case 0:{
				    	if(PlayerInfo[playerid][pCarLic] == 0){
				        	if(GetPlayerMoney(playerid) < 90){
				            	Message(playerid, COLOR_GREY, "No puedes pagar esta licencia de conducir.");
				            	return 1;
				        	}
							Bought(playerid, 90);
							Tax += 90;
							PlayerInfo[playerid][pCarLic] = 1;
							Message(playerid, COLOR_GREY, "Adquiriste la licencia de conducir.");
						}
						else Message(playerid, COLOR_GREY, "Ya tienes la licencia de conducción.");
					}
					case 1:{
				    	if(PlayerInfo[playerid][pBoatLic] == 0){
				        	if(GetPlayerMoney(playerid) < 210){
				            	Message(playerid, COLOR_GREY, "No puedes pagar esta licencia de navegación.");
				            	return 1;
				        	}
							Bought(playerid, 210);
							Tax += 210;
							PlayerInfo[playerid][pBoatLic] = 1;
							Message(playerid, COLOR_GREY, "Adquiriste la licencia de navegación.");
						}
						else Message(playerid, COLOR_GREY, "Ya tienes la licencia de navegación.");
					}
					case 2:{
				    	if(PlayerInfo[playerid][pFlyLic] == 0){
				    	    	if(GetPlayerMoney(playerid) < 500){
				            		Message(playerid, COLOR_GREY, "No puedes pagar esta licencia de piloto.");
				            		return 1;
				        		}
								Bought(playerid, 500);
								Tax += 150;
								PlayerInfo[playerid][pFlyLic] = 1;
      							Message(playerid, COLOR_GREY, "Adquiriste la licencia de vuelo.");
						}
        	      		else Message(playerid, COLOR_GREY, "Ya tienes la licencia de piloto.");
					}
					case 3:{
			    		if(PlayerInfo[playerid][pGunLic] == 0){
			    	    	if(GetPlayerMoney(playerid) < 400){
			    	        	Message(playerid, COLOR_GREY, "No puedes pagar esta licencia de armas.");
			    	        	return 1;
			    	    	}
							Bought(playerid, 400);
							Tax += 400;
							PlayerInfo[playerid][pGunLic] = 1;
							Message(playerid, COLOR_GREY, "Adquiriste la licencia de armas.");
						}
            	    	else Message(playerid, COLOR_GRAD2, "Ya tienes la licencia de armas.");
					}
				}
			}
		}
		if(dialogid == MATRIMONIO_CONFIRM)
		{
		    if(response)
		    {
                Matrimonio[Matrimonio[playerid]] = playerid;
        	    format(string, sizeof(string), "%s dice: Si, acepto.", PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	format(string, sizeof(string), "* %s toma la mano de %s y le pone un anilo.", PlayerName(playerid), PlayerName(Matrimonio[playerid]));
            	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	format(string, sizeof(string), "Padre Cuneo: %s, ¿aceptas como tu esposa a %s para amarla y respetarla, en la", PlayerName(Matrimonio[playerid]),PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	ProxDetector(20.0, playerid, "Padre Cuneo dice: salud y en la enfermedad, en la pobreza y en la riqueza hasta que la muerte los separe?",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	ShowPlayerDialog(Matrimonio[playerid], MATRIMONIO_CONFIRM2, DIALOG_STYLE_MSGBOX,"{018CFE}Iglesia", "{FFFFFF}Por favor selecione su respuesta","SI Acepto","NO Acepto");
			}
			else
			{
			    format(string, sizeof(string), "%s dice: No, lo siento no me puedo casar.", PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	Matrimonio[Matrimonio[playerid]] = 999;
            	Matrimonio[playerid] = 999;
			}
		}
		if(dialogid == MATRIMONIO_CONFIRM2)
		{
		    if(response)
		    {
                Matrimonio[Matrimonio[playerid]] = playerid;
	    	    format(string, sizeof(string), "%s dice: Si, acepto.", PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	format(string, sizeof(string), "* %s toma la mano de %s y le pone un anilo.", PlayerName(playerid), PlayerName(Matrimonio[playerid]));
            	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	format(string, sizeof(string), "* %s y %s firman en un libro.", PlayerName(playerid), PlayerName(Matrimonio[playerid]));
            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	ProxDetector(20.0, playerid, "Padre Cuneo dice: Por el poder que me a sido conferido Dios, yo los declaro marido y mujer,",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	ProxDetector(20.0, playerid, "Padre Cuneo dice: Que lo que hoy a unido Dios no lo separe el hombre, puedes besar a la novia.",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	Bought(playerid, 200);
				Matrimonio[Matrimonio[playerid]] = 999;
            	Matrimonio[playerid] = 999;
     		}
	     	else
    	 	{
        	    format(string, sizeof(string), "%s dice: No, lo siento no me puedo casar.", PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	Matrimonio[Matrimonio[playerid]] = 999;
            	Matrimonio[playerid] = 999;
			}
		}
	///Autos Dinamicos
	/*if(dialogid == 10) // Dealership main
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: ShowDialog(playerid, 11); // Bikes
	            case 1: ShowDialog(playerid, 12); // Normal Vehicles
	            case 2: ShowDialog(playerid, 21); // Lowriders
	            case 3: ShowDialog(playerid, 13); // Off-Road Vehicles
	            case 4: ShowDialog(playerid, 14); // Sport Vehicles
	        }
	    }
	}
	if(dialogid == 11) // Bikes
	{
	    new carid, price;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: {carid = 481; price = 600;}
	            case 1: {carid = 462; price = 4000;}
	            case 2: {carid = 463; price = 6000;}
	            case 3: {carid = 468; price = 4000;}
	            case 4: {carid = 471; price = 6000;}
	            case 5: {carid = 461; price = 20000;}
	            case 6: {carid = 521; price = 25000;}
	        }
	        if(price > GetPlayerMoney(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Usted no tiene bastante dinero sobre usted.");
			GivePlayerMoney(playerid, -price);
         	format(string, sizeof(string), " Usted ha comprado un %s. (Para abrir /seguro)", RVN(carid));
	        SendClientMessage(playerid, COLOR_GREEN, string);
	        CarInfo2[playerid][vVeh] = CreateVehicle(carid, 532.3726,-1287.4926,17.2422,272.3125,0,0,1200);
	        SetVehicleParamsEx(CarInfo2[playerid][vVeh], 0, 0, 0, 1, 0, 0, 0);
	        CarInfo2[playerid][vLocked] = 1;
	        CarInfo2[playerid][vModel] = carid;
			GetVehiclePos(CarInfo2[playerid][vVeh], CarInfo2[playerid][vvX], CarInfo2[playerid][vvY], CarInfo2[playerid][vvZ]);
			GetVehicleZAngle(CarInfo2[playerid][vVeh], CarInfo2[playerid][vvA]);
			CarInfo2[playerid][vC1] = 0;
			CarInfo2[playerid][vC2] = 0;
	    }
	}
	if(dialogid == 12) // Normal Vehicles
	{
	    new  carid, price;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: {carid = 480; price = 30000;}
	            case 1: {carid = 533; price = 26000;}
	            case 2: {carid = 439; price = 26000;}
	            case 3: {carid = 555; price = 28000;}
	            case 4: {carid = 405; price = 24000;} // Sentinel
	            case 5: {carid = 410; price = 22000;} // Manana
	            case 6: {carid = 426; price = 28000;} // Premier
	        }
	        if(price > GetPlayerMoney(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Usted no tiene bastante dinero sobre usted.");
			GivePlayerMoney(playerid, -price);
         	format(string, sizeof(string), " Usted ha comprado un %s. (Para abrir /seguro)", RVN(carid));
	        SendClientMessage(playerid, COLOR_GREEN, string);
	        CarInfo2[playerid][vVeh] = CreateVehicle(carid, 532.3726,-1287.4926,17.2422,272.3125,0,0,1200);
	        SetVehicleParamsEx(CarInfo2[playerid][vVeh], 0, 0, 0, 1, 0, 0, 0);
	        CarInfo2[playerid][vLocked] = 1;
	        CarInfo2[playerid][vModel] = carid;
			GetVehiclePos(CarInfo2[playerid][vVeh], CarInfo2[playerid][vvX], CarInfo2[playerid][vvY], CarInfo2[playerid][vvZ]);
			GetVehicleZAngle(CarInfo2[playerid][vVeh], CarInfo2[playerid][vvA]);
			CarInfo2[playerid][vC1] = 0;
			CarInfo2[playerid][vC2] = 0;
	    }
	}
	if(dialogid == 13) // Off-Road Vehicles
	{
	    new carid, price;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: {carid = 579; price = 22000;}
	            case 1: {carid = 400; price = 24000;}
	            case 2: {carid = 495; price = 30000;}
	            case 3: {carid = 505; price = 35000;}
	        }
	        if(price > GetPlayerMoney(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Usted no tiene bastante dinero sobre usted.");
			GivePlayerMoney(playerid, -price);
         	format(string, sizeof(string), " Usted ha comprado un %s. (Para abrir /seguro)", RVN(carid));
	        SendClientMessage(playerid, COLOR_GREEN, string);
	        CarInfo2[playerid][vVeh] = CreateVehicle(carid, 532.3726,-1287.4926,17.2422,272.3125,0,0,1200);
	        SetVehicleParamsEx(CarInfo2[playerid][vVeh], 0, 0, 0, 1, 0, 0, 0);
	        CarInfo2[playerid][vLocked] = 1;
	        CarInfo2[playerid][vModel] = carid;
			GetVehiclePos(CarInfo2[playerid][vVeh], CarInfo2[playerid][vvX], CarInfo2[playerid][vvY], CarInfo2[playerid][vvZ]);
			GetVehicleZAngle(CarInfo2[playerid][vVeh], CarInfo2[playerid][vvA]);
			CarInfo2[playerid][vC1] = 0;
			CarInfo2[playerid][vC2] = 0;
	    }
	}
	if(dialogid == 14) // Sport Vehicles
	{
	    new carid, price;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: {carid = 560; price = 60000;}
	            case 1: {carid = 429; price = 65000;}
	            case 2: {carid = 402; price = 70000;}
	            case 3: {carid = 541; price = 90000;}
	            case 4: {carid = 415; price = 80000;}
	            case 5: {carid = 559; price = 70000;}
	            case 6: {carid = 451; price = 110000;}
	        }
	        if(price > GetPlayerMoney(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Usted no tiene bastante dinero sobre usted.");
			GivePlayerMoney(playerid, -price);
         	format(string, sizeof(string), " Usted ha comprado un %s. (Para abrir /seguro)", RVN(carid));
	        SendClientMessage(playerid, COLOR_GREEN, string);
	        CarInfo2[playerid][vVeh] = CreateVehicle(carid, 532.3726,-1287.4926,17.2422,272.3125,0,0,1200);
	        SetVehicleParamsEx(CarInfo2[playerid][vVeh], 0, 0, 0, 1, 0, 0, 0);
	        CarInfo2[playerid][vLocked] = 1;
	        CarInfo2[playerid][vModel] = carid;
			GetVehiclePos(CarInfo2[playerid][vVeh], CarInfo2[playerid][vvX], CarInfo2[playerid][vvY], CarInfo2[playerid][vvZ]);
			GetVehicleZAngle(CarInfo2[playerid][vVeh], CarInfo2[playerid][vvA]);
			CarInfo2[playerid][vC1] = 0;
			CarInfo2[playerid][vC2] = 0;
	    }
	}*/
	if(dialogid == AYUDA_DIALOG) {
	    if(response == 1){
    	    switch(listitem){
				case 0:
				{
                   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> CarJack [CJ]", cj, "Aceptar", "Volver" );
				}
                case 1:
                {
                   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> DeathMatch [DM]", dm, "Aceptar", "Volver" );
				}
				case 2:
				{
                   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> MetaGaming [MG]", mg, "Aceptar", "Volver" );
			    }
			    case 3:
			    {
				   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> PowerGaming [PG]", pg, "Aceptar", "Volver" );
				}
				case 4:
				{
				   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Badly Parked Car [BPC]", bpc, "Aceptar", "Volver" );
				}
				case 5:
				{
				   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Bad Driving [BD]", bd, "Aceptar", "Volver" );
				}
				case 6:
				{
				   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Revenge Kill [RK]", rk, "Aceptar", "Volver" );
				}
				case 7:
				{
				   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Noob Abuser [NA]", na, "Aceptar", "Volver" );
				}
			}
		}
	}
    if(dialogid == 500)
	{
         if(!response)
         {
            ShowPlayerDialog(playerid, AYUDA_DIALOG, DIALOG_STYLE_LIST, "{FF0D00}>{6CF600}GameWorld RolePlay{FFFFFF}-{9024D3}Reglas de Rol", " {00FF00}>{FFFFFF}CarJack \n {00FF00}>{FFFFFF}DeathMatch \n {00FF00}>{FFFFFF}MetaGaming \n {00FF00}>{FFFFFF}PowerGaming \n {00FF00}>{FFFFFF}Badly Parked Car \n {00FF00}>{FFFFFF}Bad Driving \n {00FF00}>{FFFFFF}Revenge Kill \n {00FF00}>{FFFFFF}Noob Abuser", "Ver", "Salir");
		 }
	}
	if(dialogid == COLOR_ADM)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0: SetPlayerColor(playerid, ROJO_ADMIN);
	            case 1: SetPlayerColor(playerid, VERDE_ADMIN);
	            case 2: SetPlayerColor(playerid, AMARILLO_ADMIN);
	            case 3: SetPlayerColor(playerid, CREMA_ADMIN);
                case 4: SetPlayerColor(playerid, ROSADO_ADMIN);
                case 5: SetPlayerColor(playerid, CELESTE_ADMIN);
                case 6: SetPlayerColor(playerid, MORADO_ADMIN);
                case 7: SetPlayerColor(playerid, ORANGE_ADMIN);
                case 8: SetPlayerColor(playerid, COLOR_WHITE);
		    }
		}
	}
	if(dialogid == HOUSE_IMPUESTOS)
		{
		    if(response)
		    {
		        if(strlen(inputtext) < 1) return ShowPlayerDialog(playerid, HOUSE_IMPUESTOS2, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Por favor ingrese su numero de DNI", "Aceptar", "Cancelar");
		        if(strval(inputtext) != PlayerInfo[playerid][pDNI]) return ShowPlayerDialog(playerid, HOUSE_IMPUESTOS, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Nuestro sistema ha detectado que ninguna propiedad se encuentra\nrelacionada con ese numero de DNI, por favor revise bien.", "Aceptar", "Cancelar");
				HouseInfo[PlayerInfo[playerid][pPhousekey]][hTime] = gettime() + 2592000;
				Message(playerid, COLOR_WHITE, "{FF7617}Casa de Impuestos: {FFFFFF}Ha realizado su pago de impuestos, recuerde acercarse el próximo mes.");
				Bought(playerid, 150);
				Tax += 150;
				return 1;
			}
		}
	if(dialogid == HOUSE_IMPUESTOS2)
		{
		    if(response)
		    {
		        if(strlen(inputtext) < 1) return ShowPlayerDialog(playerid, HOUSE_IMPUESTOS2, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Por favor ingrese su numero de DNI", "Aceptar", "Cancelar");
		        if(strval(inputtext) != PlayerInfo[playerid][pDNI]) return ShowPlayerDialog(playerid, HOUSE_IMPUESTOS, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Nuestro sistema ha detectado que ninguna propiedad se encuentra\nrelacionada con ese numero de DNI, por favor revise bien.", "Aceptar", "Cancelar");
				HouseInfo[PlayerInfo[playerid][pPhousekey2]][hTime] = gettime() + 2592000;
				Message(playerid, COLOR_WHITE, "{FF7617}Casa de Impuestos: {FFFFFF}Ha realizado su pago de impuestos, recuerde acercarse el próximo mes.");
				Bought(playerid, 150);
				Tax += 150;
				return 1;
			}
		}
		if(dialogid == C_NEON_DIAL_1)
	{
	if(response)
	{
	if(listitem == 0)
	{
	ShowPlayerDialog(playerid, C_NEON_DIAL_2, DIALOG_STYLE_LIST, "Neon Bajo", "Azul\nRojo\nVerde\nBlanco\nRosa\nAmarillo\nBorrar neon", "Aceptar", "Cancelar");
	}

	if(listitem == 1)
	{
	ShowPlayerDialog(playerid, C_NEON_DIAL_3, DIALOG_STYLE_LIST, "Neon Medio", "Azul\nRojo\nVerde\nBlanco\nRosa\nAmarillo\nBorrar neon", "Aceptar", "Cancelar");
	}

	if(listitem == 2)
	{
	ShowPlayerDialog(playerid, C_NEON_DIAL_4, DIALOG_STYLE_LIST, "Neon Alto", "Azul\nRojo\nVerde\nBlanco\nRosa\nAmarillo\nBorrar neon", "Aceptar", "Cancelar");
	}
	}
	}

	if(dialogid == C_NEON_DIAL_2)
	{
	if(response)
	{
	if(listitem == 0)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "neon", CreateObject(18648,0,0,0,0,0,0));
	SetPVarInt(playerid, "neon1", CreateObject(18648,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 1)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "neon2", CreateObject(18647,0,0,0,0,0,0));
	SetPVarInt(playerid, "neon3", CreateObject(18647,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 2)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "neon4", CreateObject(18649,0,0,0,0,0,0));
	SetPVarInt(playerid, "neon5", CreateObject(18649,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 3)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "neon6", CreateObject(18652,0,0,0,0,0,0));
	SetPVarInt(playerid, "neon7", CreateObject(18652,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 4)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "neon8", CreateObject(18651,0,0,0,0,0,0));
	SetPVarInt(playerid, "neon9", CreateObject(18651,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 5)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "neon10", CreateObject(18650,0,0,0,0,0,0));
	SetPVarInt(playerid, "neon11", CreateObject(18650,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.50, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 6)
	{
	LimpiarNeonC(playerid);
	}
	}
	}
	if(dialogid == C_NEON_DIAL_3)
	{
	if(response)
	{
	if(listitem == 0)
	{

	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_3", CreateObject(18648,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_31", CreateObject(18648,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_3"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_31"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 1)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_32", CreateObject(18647,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_33", CreateObject(18647,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_32"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_33"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 2)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_34", CreateObject(18649,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_35", CreateObject(18649,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_34"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_35"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 3)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_36", CreateObject(18652,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_37", CreateObject(18652,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_36"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_37"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 4)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_38", CreateObject(18651,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_39", CreateObject(18651,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_38"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_39"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 5)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_310", CreateObject(18650,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_311", CreateObject(18650,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_310"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_311"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.2, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 6)
	{
	LimpiarNeonC(playerid);
	}
	}
	}
	if(dialogid == C_NEON_DIAL_4)
	{
	if(response)
	{
	if(listitem == 0)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_4", CreateObject(18648,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_41", CreateObject(18648,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_4"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_41"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 1)
	{

	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_42", CreateObject(18647,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_43", CreateObject(18647,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_42"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_43"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 2)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_44", CreateObject(18649,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_45", CreateObject(18649,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_44"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_45"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 3)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_46", CreateObject(18652,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_47", CreateObject(18652,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_46"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_47"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 4)
	{
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_48", CreateObject(18651,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_49", CreateObject(18651,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_48"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_49"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 5)
	{
	LimpiarNeonC(playerid);
	SetPVarInt(playerid, "Status", 1);
	SetPVarInt(playerid, "C_NEON_DIAL_410", CreateObject(18650,0,0,0,0,0,0));
	SetPVarInt(playerid, "C_NEON_DIAL_411", CreateObject(18650,0,0,0,0,0,0));
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_410"), GetPlayerVehicleID(playerid), -0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GetPVarInt(playerid, "C_NEON_DIAL_411"), GetPlayerVehicleID(playerid), 0.8, 0.0, 0.8, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	}

	if(listitem == 6)
	{
	LimpiarNeonC(playerid);
	}
	}
	}
	if(dialogid == QUIT_EXTORTION)
    	{
    	    if(response)
    	    {
    	    	strmid(BizzInfo[QuitExtortion[playerid]][bExtortion], "Nadie", 0, strlen("Nadie"), 32);
    	    	format(string, sizeof(string), "Has dejado de ser el extorcionista del negocio de {FF7617}%s", PlayerName(ExtortionID[playerid]));
    	        Message(playerid, COLOR_WHITE, string);
    	        format(string, sizeof(string), "* %s ha aceptado dejar de ser el extorcionista de tu negocio.", PlayerName(playerid));
    	        Message(ExtortionID[playerid], COLOR_GRAD2, string);
				OnBizzTextdrawUpdate(QuitExtortion[playerid]);
				QuitExtortion[playerid] = 999;
				ExtortionID[playerid] = 999;
				UpdateBizz();
    	        return 1;
    	    }
    	    else
    	    {
    	        format(string, sizeof(string), "* %s no ha aceptado dejar de ser el extorcionista de tu negocio.", PlayerName(playerid));
    	        Message(ExtortionID[playerid], COLOR_GRAD2, string);
    	        Message(playerid, COLOR_GRAD2, "* Has rechazado una peticion.");
    	    }
    	}
	if((dialogid == BUYTOYSCOP) && response)
	{
	new stringg[512];
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
	new name[24] = "Nada";

	for(new i;i<sizeof(HoldingObjectsAll);i++)
	{
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
	{
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}

	format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
	}
	ShowPlayerDialog(playerid, BUYTOYSCOP2, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
	}

	if((dialogid == QUIT_EXTORTION) && response)
	{
	if(response)
	{
	strmid(BizzInfo[QuitExtortion[playerid]][bExtortion], "Nadie", 0, strlen("Nadie"), 32);
	format(string, sizeof(string), "Has dejado de ser el extorcionista del negocio de {FF7617}%s", PlayerName(ExtortionID[playerid]));
	Message(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "* %s ha aceptado dejar de ser el extorcionista de tu negocio.", PlayerName(playerid));
	Message(ExtortionID[playerid], COLOR_GRAD2, string);
	OnBizzTextdrawUpdate(QuitExtortion[playerid]);
	QuitExtortion[playerid] = 999;
	ExtortionID[playerid] = 999;
	UpdateBizz();
	return 1;
	}
	else
	{
	format(string, sizeof(string), "* %s no ha aceptado dejar de ser el extorcionista de tu negocio.", PlayerName(playerid));
	Message(ExtortionID[playerid], COLOR_GRAD2, string);
	Message(playerid, COLOR_GRAD2, "* Has rechazado una peticion.");
	}
	}

	if((dialogid == BUYTOYSCOP2) && response)
	{
	if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessage(playerid, COLOR_YELLOW, "* Ya tienes algo en esa ranura, eliminala con /toys");

	slotselection[playerid] = listitem;

	new stringg[512];
	for(new x;x<sizeof(HoldingObjectsCop);x++)
	{
	format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjectsCop[x][holdingmodelname], HoldingObjectsCop[x][holdingprice]);
	}
	ShowPlayerDialog(playerid, BUYTOYSCOP3, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Objeto", stringg, "Comprar", "Cancelar");
	}
	if((dialogid == BUYTOYSCOP3) && response)
	{
	if(GetPlayerMoney(playerid) < HoldingObjectsCop[listitem][holdingprice])
	{
	SendClientMessage(playerid, COLOR_WHITE, "* No puedes pagar eso!");
	}
	else
	{
	GivePlayerMoney(playerid, -HoldingObjectsCop[listitem][holdingprice]);
	PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjectsCop[listitem][holdingmodelid];
	Tax += HoldingObjectsCop[listitem][holdingprice];

	new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
	if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140))
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if(modelid >= 18891 && modelid <= 18910)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if(modelid >= 18926 && modelid <= 18935)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if(modelid >= 18911 && modelid <= 18920)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if(modelid == 19078 || modelid == 19078)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}

	format(string, sizeof(string), "* Has comprado un %s por $%d (Slot: %d)", HoldingObjectsCop[listitem][holdingmodelname], HoldingObjectsCop[listitem][holdingprice], slotselection[playerid]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	SendClientMessage(playerid, COLOR_WHITE, " Usa /toys para editar tus objetos");
	}
	}
	if((dialogid == BUYTOYSGOLD) && response)
	{
	if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "* No tienes acceso a este comando.");
	new stringg[512];
	for(new x;x<MAX_PLAYERTOYS;x++){
	new name[24] = "Nada";
	for(new i;i<sizeof(HoldingObjectsAll);i++){
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID]){
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}
	format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
	}
	ShowPlayerDialog(playerid, BUYTOYSGOLD2, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
	}
	if((dialogid == BUYTOYSGOLD2) && response)
	{
	if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "* No tienes acceso a este comando.");
	if(listitem >= 8 && PlayerInfo[playerid][pLevel] <= 1 || listitem >= 8) return SendClientMessage(playerid, COLOR_WHITE, "* Debes ser un nivel mayor de Premium para usar este slot.");
	if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessage(playerid, COLOR_YELLOW, "* Ya tienes algo en esa ranura, eliminala con /toys");

	slotselection[playerid] = listitem;
	new stringg[1536];
	for(new x;x<sizeof(HoldingObjectsGold);x++)
	{
	format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjectsGold[x][holdingmodelname], HoldingObjectsGold[x][holdingprice]);
	}
	ShowPlayerDialog(playerid, BUYTOYSGOLD3, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Objeto", stringg, "Comprar", "Cancelar");
	}
	if((dialogid == BUYTOYSGOLD3) && response){
	if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "* No tienes acceso a este comando.");
	if(GetPlayerMoney(playerid) < HoldingObjectsGold[listitem][holdingprice]){
	SendClientMessage(playerid, COLOR_WHITE, "* No tienes dinero para esto!");
	}
	else{
	GivePlayerMoney(playerid, -HoldingObjectsGold[listitem][holdingprice]);
	PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjectsGold[listitem][holdingmodelid];

	new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
	if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140)){
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	}
	else if(modelid >= 18891 && modelid <= 18910){
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
	}
	else if(modelid >= 18926 && modelid <= 18935){
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	}
	else if(modelid >= 18911 && modelid <= 18920){
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
	}
	else if(modelid == 19078 || modelid == 19078){
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	}
	else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890){
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	}
	else{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	}

	format(string, sizeof(string), "* Compraste un %s por $%d (Slot: %d)", HoldingObjectsGold[listitem][holdingmodelname], HoldingObjectsGold[listitem][holdingprice], slotselection[playerid]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	SendClientMessage(playerid, COLOR_WHITE, "Usa /toys para editar tus objetos");
	}
	}
	if((dialogid == BUYTOYS) && response)
	{
	new stringg[512];
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
	new name[24];
	format(name, sizeof(name), "Nada");

	for(new i;i<sizeof(HoldingObjectsAll);i++)
	{
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
	{
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}
	format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
	}
	ShowPlayerDialog(playerid, BUYTOYS2, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
	}
	if((dialogid == BUYTOYS) && !response)
	{
	if(PlayerInfo[playerid][pLevel] < 20) return SendClientMessage(playerid, COLOR_WHITE, "Solo los jugadores de lvl 20 pueden usar esta funcion.");
	return ShowPlayerDialog(playerid, BUYTOYSGOLD, DIALOG_STYLE_MSGBOX, "Tienda de Accesorios Especial", "Bienvenido a la tienda de accesorios Especial! Aquí puedes comprar accesorios para ti.\nPrimero, tienes que elegir un slot.","Ok", "Salir");
	}
	if((dialogid == BUYTOYS2) && response)
	{
	if(listitem >= 8 && PlayerInfo[playerid][pLevel] <= 1 || listitem >= 8) return SendClientMessage(playerid, COLOR_WHITE, "* Debes ser un nivel mayor de Premium para usar este slot.");
	if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessage(playerid, COLOR_YELLOW, "* Ya tienes algo en esa ranura, eliminala con /toys");
	slotselection[playerid] = listitem;
	new stringg[3727]; //
	for(new x;x<sizeof(HoldingObjects);x++)
	{
	format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjects[x][holdingmodelname], HoldingObjects[x][holdingprice]);
	}
	ShowPlayerDialog(playerid, BUYTOYS3, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Objeto", stringg, "Comprar", "Cancelar");
	}
	if((dialogid == BUYTOYS3) && response)
	{
	if(GetPlayerMoney(playerid) < HoldingObjects[listitem][holdingprice]) return SendClientMessage(playerid, COLOR_WHITE, "* No tienes suficiente dinero.");
	else
	{
	GivePlayerMoney(playerid, -HoldingObjects[listitem][holdingprice]);
	PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjects[listitem][holdingmodelid];
	new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
	if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140))
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if(modelid >= 18891 && modelid <= 18910)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if(modelid >= 18926 && modelid <= 18935)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if(modelid >= 18911 && modelid <= 18920)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if(modelid == 19078 || modelid == 19078)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else if(modelid == 19317)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.079;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = -0.10;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.09;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 30.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	else
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	}
	format(string, sizeof(string), "* Compraste un %s por $%d (Slot: %d)", HoldingObjects[listitem][holdingmodelname], HoldingObjects[listitem][holdingprice], slotselection[playerid]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	SendClientMessage(playerid, COLOR_WHITE, " Usa /toys para editar tus objetos");
	}
	}
	if((dialogid == TOYS) && response)
	{
	if(listitem == 0)
	{
	new stringg[512];
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
	new name[24];
	format(name, sizeof(name), "Nada");

	for(new i;i<sizeof(HoldingObjectsAll);i++)
	{
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
	{
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}

	format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
	}
	ShowPlayerDialog(playerid, WEARTOY, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Objeto", stringg, "Seleccionar", "Cancelar");
	}
	else if(listitem == 1)
	{
	new stringg[512];
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
	new name[24];
	format(name, sizeof(name), "Nada");

	for(new i;i<sizeof(HoldingObjectsAll);i++)
	{
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
	{
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}

	format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
	}
	ShowPlayerDialog(playerid, EDITTOYS, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Objeto", stringg, "Seleccionar", "Cancelar");
	}
	else if(listitem == 2)
	{
	new stringg[512];
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
	new name[24];
	format(name, sizeof(name), "Nada");

	for(new i;i<sizeof(HoldingObjectsAll);i++)
	{
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
	{
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}
	format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
	}
	ShowPlayerDialog(playerid, DELETETOY, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Objeto", stringg, "Borrar", "Cancelar");
	}
	}
	if((dialogid == EDITTOYS) && response)
	{
	if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
	{
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF8000}Menu Accesorios: {FFFFFF}Edición", "No tiene nada en ese slot!", "OK", "");
	}
	else
	{
	SendClientMessage(playerid, COLOR_WHITE, "TIP: Posiciona bien la cámara.");
	slotselection[playerid] = listitem;
	ShowEditMenu(playerid);
	}
	}
	if((dialogid == EDITTOYS2))
	{
	if(response)
	{
	switch(listitem)
	{
	case 0: ShowPlayerDialog(playerid, EDITTOYSBONE, DIALOG_STYLE_LIST, "{FF8000}Selecciona una Parte", "Columna\nCabeza\nBrazo Izq Sup\nBrazo Der Sup\nMano Izq\nMano Derecha\nMuslo Izq\nMuslo Der\nPie Izq\nPie Der\nRight calf\nLeft calf\nAnteBrazo Izq\nAnteBrazo Der\nClavicula Izq\nClavicula Der\nCuello\nQuijada", "Select", "Cancel");
	case 1: ShowPlayerDialog(playerid, EDITTOYSPX, DIALOG_STYLE_INPUT, "{FF8000}Menu Accesorios {FFFFFF}- Edición", "Escribe un numero para la posición X, de -100 a 100 (Ejm: 55, o 33.4)", "OK", "Cancelar");
	case 2: ShowPlayerDialog(playerid, EDITTOYSPY, DIALOG_STYLE_INPUT, "{FF8000}Menu Accesorios {FFFFFF}- Edición", "Escribe un numero para la posición Y, de -100 a 100 (Ejm: 55, o 33.4)", "OK", "Cancelar");
	case 3: ShowPlayerDialog(playerid, EDITTOYSPZ, DIALOG_STYLE_INPUT, "{FF8000}Menu Accesorios {FFFFFF}- Edición", "Escribe un numero para la posición Z, de -100 a 100 (Ejm: 55, o 33.4)", "OK", "Cancelar");
	case 4: ShowPlayerDialog(playerid, EDITTOYSRX, DIALOG_STYLE_INPUT, "{FF8000}Menu Accesorios {FFFFFF}- Edición", "Escribe un numero para la rotación X,de 0 a 360 (Ejm: 90, o 270.4)", "OK", "Cancelar");
	case 5: ShowPlayerDialog(playerid, EDITTOYSRY, DIALOG_STYLE_INPUT, "{FF8000}Menu Accesorios {FFFFFF}- Edición", "Escribe un numero para la rotación Y, de 0 a 360 (Ejm: 90, o 270.4)", "OK", "Cancelar");
	case 6: ShowPlayerDialog(playerid, EDITTOYSRZ, DIALOG_STYLE_INPUT, "{FF8000}Menu Accesorios {FFFFFF}- Edición", "Escribe un numero para la rotación Z, de 0 a 360 (Ejm: 1, o 0.93)", "OK", "Cancelar");
	case 7: ShowPlayerDialog(playerid, EDITTOYSIZX, DIALOG_STYLE_INPUT, "{FF8000}Menu Accesorios {FFFFFF}- Edición", "Escribe un número para el tamaño X, de 0.1 a 1.5 (Ejm: 1, o 0.93)", "OK", "Cancelar");
	case 8: ShowPlayerDialog(playerid, EDITTOYSIZY, DIALOG_STYLE_INPUT, "{FF8000}Menu Accesorios {FFFFFF}- Edición", "Escribe un número para el tamaño Y, de 0.1 a 1.5 (Ejm: 1, o 0.93)", "OK", "Cancelar");
	case 9: ShowPlayerDialog(playerid, EDITTOYSIZZ, DIALOG_STYLE_INPUT, "{FF8000}Menu Accesorios {FFFFFF}- Edición", "Escribe un número para el tamaño Z, de 0.1 a 1.5 (Ejm: 1, o 0.93)", "OK", "Cancelar");
	case 10:
	{
	SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX],
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);
	EditAttachedObject(playerid, slotselection[playerid]);
	Editing[playerid] =1;
	return SendClientMessage(playerid, -1, "");
	}
	}
	}
	else
	{
	new stringg[512];
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
	new name[24];
	format(name, sizeof(name), "Nada");

	for(new i;i<sizeof(HoldingObjectsAll);i++)
	{
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
	{
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}

	format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
	}
	ShowPlayerDialog(playerid, EDITTOYS, DIALOG_STYLE_LIST, "{FF8000}Selecciona un Accesorio", stringg, "Seleccionar", "Cancelar");
	}
	}
	if(dialogid == EDITTOYSPX)
	{
	if(response)
	{
	new Float:offset = floatstr(inputtext);
	if(offset < -100) offset = 0;
	else if(offset > 100) offset = 100;
	offset = offset/100;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = offset;
	}
	ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSPY)
	{
	if(response)
	{
	new Float:offset = floatstr(inputtext);
	if(offset < -100) offset = 0;
	else if(offset > 100) offset = 100;
	offset = offset/100;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = offset;
	}
	ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSPZ)
	{
	if(response)
	{
	new Float:offset = floatstr(inputtext);
	if(offset < -100) offset = 0;
	else if(offset > 100) offset = 100;
	offset = offset/100;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = offset;
	}
	ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSRX)
	{
	if(response)
	{
	new Float:offset = floatstr(inputtext);
	if(offset < -100) offset = 0;
	else if(offset > 360) offset = 360;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = offset;
	}
	ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSRY)
	{
	if(response)
	{
	new Float:offset = floatstr(inputtext);
	if(offset < -100) offset = 0;
	else if(offset > 360) offset = 360;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = offset;
	}
	ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSRZ)
	{
	if(response)
	{
	new Float:offset = floatstr(inputtext);
	if(offset < -100) offset = 0;
	else if(offset > 360) offset = 360;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = offset;
	}
	ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSIZX)
	{
	if(response)
	{
	if(PlayerInfo[playerid][pJDS] == 1024)
	{
	new Float:offset = floatstr(inputtext);
	if(offset < -100) offset = 0;
	else if(offset > 360) offset = 360;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = offset;
	}
	else
	{
	new Float:offset = floatstr(inputtext);
	if(offset < 0.1) offset = 0.1;
	else if(offset > 1.5) offset = 1.5;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = offset;
	}
	}
	ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSIZY)
	{
	if(response)
	{
	if(PlayerInfo[playerid][pJDS] == 1024)
	{
	new Float:offset = floatstr(inputtext);
	if(offset < -100) offset = 0;
	else if(offset > 360) offset = 360;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = offset;
	}
	else
	{
	new Float:offset = floatstr(inputtext);
	if(offset < 0.1) offset = 0.1;
	else if(offset > 1.5) offset = 1.5;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = offset;
	}
	}
	ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSIZZ)
	{
	if(response)
	{
	if(PlayerInfo[playerid][pJDS] == 1024)
	{
	new Float:offset = floatstr(inputtext);
	if(offset < -100) offset = 0;
	else if(offset > 360) offset = 360;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = offset;
	}
	else
	{
	new Float:offset = floatstr(inputtext);
	if(offset < 0.1) offset = 0.1;
	else if(offset > 1.5) offset = 1.5;
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = offset;
	}
	}
	ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSBONE)
	{
	if(response)
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = listitem+1;
	}
	ShowEditMenu(playerid);
	}
	if((dialogid == WEARTOY) && response)
	{
	if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
	{
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Menú: Poner/Quitar", "Usted no tiene ningún objeto en este slot!", "OK", "");
	}
	else
	{
	if(IsPlayerAttachedObjectSlotUsed(playerid, listitem))
	{
	new name[24];
	format(name, sizeof(name), "Nada");

	for(new i;i<sizeof(HoldingObjectsAll);i++)
	{
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
	{
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}
	format(string, sizeof(string), "Te quitaste tu %s (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
	Message(playerid, COLOR_RED, string);
	RemovePlayerAttachedObject(playerid, listitem);
	return 1;
	}
	else
	{
	SetPlayerAttachedObject(playerid, listitem, PlayerToyInfo[playerid][listitem][ptModelID], PlayerToyInfo[playerid][listitem][ptBone], PlayerToyInfo[playerid][listitem][ptPosX], PlayerToyInfo[playerid][listitem][ptPosY], PlayerToyInfo[playerid][listitem][ptPosZ], PlayerToyInfo[playerid][listitem][ptRotX], PlayerToyInfo[playerid][listitem][ptRotY], PlayerToyInfo[playerid][listitem][ptRotZ], 1, 1, 1);
	new name[24];
	format(name, sizeof(name), "Nada");

	for(new i;i<sizeof(HoldingObjectsAll);i++)
	{
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
	{
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}
	format(string, sizeof(string), "Te pusiste un %s. (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
	Message(playerid, COLOR_LIGHTBLUE, string);
	}
	}
	}


	if((dialogid == DELETETOY) && response)
	{
	PlayerToyInfo[playerid][listitem][ptModelID] = 0;
	PlayerToyInfo[playerid][listitem][ptBone] = 0;
	PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
	PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
	PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
	PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
	PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
	PlayerToyInfo[playerid][listitem][ftscaleZ] = 0.0;
	PlayerToyInfo[playerid][listitem][ftscaleY] = 0.0;
	PlayerToyInfo[playerid][listitem][ftscaleX] = 0.0;
	if(IsPlayerAttachedObjectSlotUsed(playerid, listitem)) RemovePlayerAttachedObject(playerid, listitem);
	format(string, sizeof(string), "Usted ha eliminado su accesorio del slot %d", listitem);
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF8000}Menu Accesorios", string, "OK", "");
	}
	if(dialogid == CELDAS)
    {
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
                    MoveDynamicObject(lvpdg1,200.0562,155.4197,1002.0234, 1.5);
                    SetTimer("LVPDGATEC1", 7000, 0);
                    format(string, sizeof(string), "* %s apreta el boton y abre la celda Nro. 1", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            case 1:
	            {
                    MoveDynamicObject(lvpdg2,200.1218,190.7283,1002.0355, 1.5);
                    SetTimer("LVPDGATEC2", 7000, 0);
                    format(string, sizeof(string), "* %s apreta el boton y abre la celda Nro. 2", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
		    }
		}
	}
 if(dialogid == CELDASAL)
    {
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
                    MoveDynamicObject(alqaedap3,277.61270, 1865.25154, 8.99440, 1.5);
                    SetTimer("Alqaedapuerta3", 10000, 0);
                    format(string, sizeof(string), "* %s apreta el boton y abre la celda Nro. 1", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            case 1:
	            {
                    MoveDynamicObject(alqaedap1,271.61701, 1871.48132, 8.99440, 1.5);
                    SetTimer("Alqaedapuerta1", 10000, 0);
                    format(string, sizeof(string), "* %s apreta el boton y abre la celda Nro. 2", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 2:
	            {
                    MoveDynamicObject(alqaedap2,276.69698, 1871.48132, 8.99440, 1.5);
                    SetTimer("Alqaedapuerta2", 10000, 0);
                    format(string, sizeof(string), "* %s apreta el boton y abre la celda Nro. 3", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
		    }
		}
	}
	if(dialogid == CPRISION)
    {
		if(response == 1)
		{
            switch(listitem)
            {
            	case 0:
            	{
                   ShowPlayerDialog(playerid,CELDA1,DIALOG_STYLE_MSGBOX, "{FFFFFF}> Celda Nro 1 - Seleccione:", "{00E400}Quiere Abrir o Cerrar la celda?", "Abrir", "Cerrar" );
                }
                case 1:
                {
                   ShowPlayerDialog(playerid,CELDA2,DIALOG_STYLE_MSGBOX, "{FFFFFF}> Celda Nro 2 - Seleccione:", "{00E400}Quiere Abrir o Cerrar la celda?", "Abrir", "Cerrar" );
                }
                case 2:
                {
                   ShowPlayerDialog(playerid,CELDA3,DIALOG_STYLE_MSGBOX, "{FFFFFF}> Celda Nro 3 - Seleccione:", "{00E400}Quiere Abrir o Cerrar la celda?", "Abrir", "Cerrar" );
				}
			}
		}
	}
	if(dialogid == CELDA1)
	{
		if(response)
		{
            MoveDynamicObject(prison1,601.87536,857.282714,-95.533393, 0.8);
            Message(playerid, COLOR_BLUE,"Las celda numero uno está abierta.");
		}
	}
	if(dialogid == CELDA1)
	{
		if(!response)
		{
           MoveDynamicObject(prison1,601.875366,857.282714,-91.008117, 0.8);
           Message(playerid, COLOR_BLUE,"Las celda número uno está cerrada.");
		}
	}
	if(dialogid == CELDA2)
	{
		if(response)
		{
            MoveDynamicObject(prison2,610.680053,857.309631,-95.558395, 0.8);
            Message(playerid, COLOR_BLUE,"Las celda número dos está abierta.");
        }
    }
    if(dialogid == CELDA2)
    {
        if(!response)
        {
           MoveDynamicObject(prison2,610.68005,857.30963,-91.00811, 0.8);
           Message(playerid, COLOR_BLUE,"Las celda número dos está cerrada.");
        }
    }
    if(dialogid == CELDA3)
    {
        if(response)
        {
            MoveDynamicObject(prison3,619.552978,857.303405,-95.583473, 0.8);
            Message(playerid, COLOR_BLUE,"Las celda número tres está abierta.");
		}
	}
	if(dialogid == CELDA3)
	{
	    if(!response)
	    {
	       MoveDynamicObject(prison3,619.55297,857.30340,-91.00819, 0.8);
	       Message(playerid, COLOR_BLUE,"Las celda número tres está cerrada.");
		}
	}
	if(dialogid == TEST_0){
        if(response){
            switch(listitem){
	            case 2:{
				ClearChatbox(playerid, 8);
					new t10[] = " A) Hago un anuncio y espero a que el líder me llame\n B) Espero a que se abran las oposiciones por foro.\nC) Le mando un MP al líder de SAPD y le pido que me meta.";
					ShowPlayerDialog(playerid, TEST_1, DIALOG_STYLE_LIST, "Quiero entrar a la policía, ¿Qué hago?", t10, "OK", "");
	            }
	            default:{
						ClearChatbox(playerid, 8);
						FailTuto[playerid] += 1;
					new t10[] = " A) Hago un anuncio y espero a que el líder me llame\n B) Espero a que se abran las oposiciones por foro.\nC) Le mando un MP al líder de SAPD y le pido que me meta.";
					ShowPlayerDialog(playerid, TEST_1, DIALOG_STYLE_LIST, "Quiero entrar a la policía, ¿Qué hago?", t10, "OK", "");

	            }
	        }
		}
	}
	if(dialogid == TEST_1){
        if(response){
            switch(listitem){
				case 1:{
					ClearChatbox(playerid, 8);
					new t1[] = " A) La escondo en el pantalón,y aún así es imposible encontrarlo.\n B) Pongo un macro de arma, los mato y me voy corriendo.\nC) Lo llevo en la espalda y me preparo para ser arrestado ";
					ShowPlayerDialog(playerid, TEST_2, DIALOG_STYLE_LIST, "¿Qué hago si tengo un rifle de asalto y tengo que pasar por un control?", t1, "OK", "");
	            }
	            default:{
					ClearChatbox(playerid, 8);
					FailTuto[playerid] += 1;
					new t1[] = " A) La escondo en el pantalón,y aún así es imposible encontrarlo.\n B) Pongo un macro de arma, los mato y me voy corriendo.\nC) Lo llevo en la espalda y me preparo para ser arrestado ";
					ShowPlayerDialog(playerid, TEST_2, DIALOG_STYLE_LIST, "¿Qué hago si tengo un rifle de asalto y tengo que pasar por un control?", t1, "OK", "");
	            }
	        }
		}
	}
	if(dialogid == TEST_2){
        if(response){
            switch(listitem){
	            case 2:{
					ClearChatbox(playerid, 8);
					new t2[] = "A) Me llaman por /f y voy roleando que fue por teléfono.\nB) Un usuario pone ''xd'' por chat IC y luego pone por /b ''Fail''.\nC) Leo un anuncio en el foro,donde se ofrece empleo en un negocio,y llamo.";
					ShowPlayerDialog(playerid, TEST_3, DIALOG_STYLE_LIST, "¿Cuál de estas situaciones es considerada MG?", t2, "OK", "");
	            }
	            default:{
					ClearChatbox(playerid, 8);
					FailTuto[playerid] += 1;
					new t2[] = "A) Me llaman por /f y voy roleando que fue por teléfono.\nB) Un usuario pone ''xd'' por chat IC y luego pone por /b ''Fail''.\nC) Leo un anuncio en el foro,donde se ofrece empleo en un negocio,y llamo.";
					ShowPlayerDialog(playerid, TEST_3, DIALOG_STYLE_LIST, "¿Cuál de estas situaciones es considerada MG?", t2, "OK", "");
	            }

	        }
		}
	}
	if(dialogid == TEST_3){
        if(response){
            switch(listitem){
				case 0:{
					ClearChatbox(playerid, 8);
					new t3[] = "A) Una interpretación que se hace por /do sobre lo que rodea a mi personaje.\nB) Un macro que pongo antes de robar/matar para aclarar que no hay nadie.\nC) Son los users que están ON en el server y andan por la ciudad ";
					ShowPlayerDialog(playerid, TEST_4, DIALOG_STYLE_LIST, "¿Qué es el entorno?", t3, "OK", "");
	            }
	            default:{
	            FailTuto[playerid] += 1;
				ClearChatbox(playerid, 8);
					new t3[] = "A) Una interpretación que se hace por /do sobre lo que rodea a mi personaje.\nB) Un macro que pongo antes de robar/matar para aclarar que no hay nadie.\nC) Son los users que están ON en el server y andan por la ciudad ";
					ShowPlayerDialog(playerid, TEST_4, DIALOG_STYLE_LIST, "¿Qué es el entorno?", t3, "OK", "");
	            }
	        }
		}
	}
	if(dialogid == TEST_4){
        if(response){
            switch(listitem){
				case 0:{
					ClearChatbox(playerid, 8);
					new t4[] = "A)Pongo un macro de choque y huyo por si acaso alguien anda cerca.\nB) Salgo de mi coche a ver los daños que se hicieron e intento ir a un mecánico.\nC) ¡NADIE ME VIÓ! ¡ME VOY A LA MIERDA!.";
					ShowPlayerDialog(playerid, TEST_5, DIALOG_STYLE_LIST, "¿Qué hago si choqué contra un poste y nadie me vió?", t4, "OK", "");
	            }
	            default:{
					ClearChatbox(playerid, 8);
					FailTuto[playerid] += 1;
					new t4[] = "A)Pongo un macro de choque y huyo por si acaso alguien anda cerca.\nB) Salgo de mi coche a ver los daños que se hicieron e intento ir a un mecánico.\nC) ¡NADIE ME VIÓ! ¡ME VOY A LA MIERDA!.";
					ShowPlayerDialog(playerid, TEST_5, DIALOG_STYLE_LIST, "¿Qué hago si choqué contra un poste y nadie me vió?", t4, "OK", "");
	            }
	        }
		}
	}
	if(dialogid == TEST_5){
        if(response){
            switch(listitem){
	            case 1:{
					ClearChatbox(playerid, 8);
					new t5[] = "A) No, no usó un macro, está mal.\nB) Está bien, pues se supone que sacas un arma, nada más.\nC) Está mal porque no se aclara de dónde se saca el arma o que arma es.";
					ShowPlayerDialog(playerid, TEST_6, DIALOG_STYLE_LIST, "¿Este /me esta bien hecho?: /me saca su arma", t5, "OK", "");
	            }
	            default:{
					ClearChatbox(playerid, 8);
					FailTuto[playerid] += 1;
					new t5[] = "A) No, no usó un macro, está mal.\nB) Está bien, pues se supone que sacas un arma, nada más.\nC) Está mal porque no se aclara de dónde se saca el arma o que arma es.";
					ShowPlayerDialog(playerid, TEST_6, DIALOG_STYLE_LIST, "¿Este /me esta bien hecho?: /me saca su arma", t5, "OK", "");
	            }
	        }
		}
	}
	if(dialogid == TEST_6){
        if(response){
            switch(listitem){
				case 2:{
					ClearChatbox(playerid, 8);
					new t5[] = "A) Está claro que eso ha sido un CarKill.\nB) Claramente ha sido un Character Kill.\nC) PlayerKill.";
					ShowPlayerDialog(playerid, TEST_7, DIALOG_STYLE_LIST, "roleo suicidio, un admin me bloquea la cuenta, ¿Qué es", t5, "OK", "");
	            }
	            default:{
					ClearChatbox(playerid, 8);
					FailTuto[playerid] += 1;
					new t5[] = "A) Está claro que eso ha sido un CarKill.\nB) Claramente ha sido un Character Kill.\nC) PlayerKill.";
					ShowPlayerDialog(playerid, TEST_7, DIALOG_STYLE_LIST, "roleo suicidio, un admin me bloquea la cuenta, ¿Qué es", t5, "OK", "");
	            }
	        }
		}
	}
	if(dialogid == TEST_7){
        if(response){
            switch(listitem){
	            case 1:{
				ClearChatbox(playerid, 8);
					new t5[] = "A) La muerte de un personaje\nB)Matar a alguien para sacarle la facción.\nC) PK matar con rol.";
					ShowPlayerDialog(playerid, TEST_8, DIALOG_STYLE_LIST, "¿Qué es PK?", t5, "OK", "");
	            }
	            default:{
					ClearChatbox(playerid, 8);
					FailTuto[playerid] += 1;
					new t5[] = "A) La muerte de un personaje\nB)Matar a alguien para sacarle la facción.\nC) PK matar con rol.";
					ShowPlayerDialog(playerid, TEST_8, DIALOG_STYLE_LIST, "¿Qué es PK?", t5, "OK", "");
	            }
	        }
		}
	}
    if(dialogid == TEST_8){
        if(response){
            switch(listitem){
	            case 0:{
					ClearChatbox(playerid, 8);
					new t5[] = "A) Roleo que no entiendo que dicen, aunque hablen cosas malas sobre mi.\nB) Les reporto por hablar en Japonés, deben hablar el mismo idioma todos.\nC) Me invento un rol que estuve en japón y aprendí el idioma.";
					ShowPlayerDialog(playerid, TEST_9, DIALOG_STYLE_LIST, "Viene un japonés a hablarme en su idioma, pero yo no se japonés IC; ¿qué hago?", t5, "OK", "");
	            }
	            default:{
				ClearChatbox(playerid, 8);
				FailTuto[playerid] += 1;
				new t5[] = "A) Roleo que no entiendo que dicen, aunque hablen cosas malas sobre mi.\nB) Les reporto por hablar en Japonés, deben hablar el mismo idioma todos.\nC) Me invento un rol que estuve en japón y aprendí el idiomao.";
					ShowPlayerDialog(playerid, TEST_9, DIALOG_STYLE_LIST, "Viene un japonés a hablarme en su idioma, pero yo no se japonés IC; ¿qué hago?", t5, "OK", "");
	            }
	        }
		}
	}
    if(dialogid == TEST_9){
        if(response){
            switch(listitem){
				case 0:{
				if(FailTuto[playerid] > 1){
						format(string, sizeof(string), "Respuestas Malas. Puntaje: %d/10", 10-FailTuto[playerid]);
							Message(playerid, -1, string); Message(playerid, -1, "Estudiate las reglas y entra cuando estes listo."); SetTimerEx("Kickbug", 1500, 0, "i", playerid);}
						else{
				format(string, sizeof(string), "{69FF9C}Felicidades! {FF0000}Test finalizado. Puntaje: %d/10", 10-FailTuto[playerid]);
						Message(playerid, -1, string);
					ClearChatbox(playerid, 8);
					new lu[] = "{FFFFFF}Has terminado el tutorial, recuerda respetar las normas de GameWorld RP si no quieres ser castigado.";
					ShowPlayerDialog(playerid, SEL_CITY, DIALOG_STYLE_MSGBOX, "{46FF92}Tutorial Terminado", lu, "Jugar", "");
	            }
	            }
	           default:{
				FailTuto[playerid] += 1;
						if(FailTuto[playerid] > 1){
						format(string, sizeof(string), "Respuestas Malas. Puntaje: %d/10", 10-FailTuto[playerid]);
							Message(playerid, -1, string); Message(playerid, -1, "Estudiate las reglas y entra cuando estes listo."); SetTimerEx("Kickbug", 1500, 0, "i", playerid);}
						else{
						    format(string, sizeof(string), "{69FF9C}Felicidades! {FF0000}Test finalizado. Puntaje: %d/10", 10-FailTuto[playerid]);
							Message(playerid, -1, string);
					    	ClearChatbox(playerid, 8);
					    	new lu[] = "{FFFFFF}Has terminado el tutorial, recuerda respetar las normas de GameWorld RP si no quieres ser castigado.";
					ShowPlayerDialog(playerid, SEL_CITY, DIALOG_STYLE_MSGBOX, "{46FF92}Tutorial Terminado", lu, "Jugar", "");
					}

	            }
	        }
		}
	}
	if(dialogid == SEL_CITY){
        if(response){
            ClearChatbox(playerid, 20);
            SetCameraBehindPlayer(playerid);
			TutTime[playerid] = 0;
			PlayerInfo[playerid][pCash] += 1000;
			PlayerInfo[playerid][pLevel] = 1;
			Message(playerid, -1, "{FFFFFF}Bienvenido A {8C8CFF}GameWorld Rp");
  			SendClientMessage(playerid, COLOR_WHITE, "Bienvenido a Este Gran Servidor !!");
			SendClientMessage(playerid, COLOR_GREEN, "El estado de GameWorld Te Da La Bienvenida !!");
			SendClientMessage(playerid, COLOR_GREEN, "Para Recibir Stats Pone /gstat, si quieres que todo funcione correctamente, reloguea!");
			SendClientMessage(playerid, COLOR_RED, "Recuerda que tienes una protección de armas por 3 horas!");
			gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0; gpre[playerid] = 0;
			PlayerInfo[playerid][pReg] = 1;
			PlayerInfo[playerid][pTut] = 1;
			FailTuto[playerid] = 0;
			PlayerInfo[playerid][pWRestricted] = 2;
			Muted[playerid] = 0;
			SetPosEx(playerid, 1730.3131,-2238.5420,13.5422,0,0,0);
			OnPlayerUpdateTime(playerid);
			TogglePlayerControllable(playerid, 1);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
			ClearAnimations(playerid);
			SetPlayerStats(playerid);
		}
	}
	if(dialogid == CLOTHES_BUY_DIALOG)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0: Accesory_Buy(playerid, 1, ClothesID[playerid], ClothesPrice[playerid]);
	            case 1: Accesory_Buy(playerid, 2, ClothesID[playerid], ClothesPrice[playerid]);
	            case 2:	Accesory_Buy(playerid, 3, ClothesID[playerid], ClothesPrice[playerid]);
	            case 3: Accesory_Buy(playerid, 4, ClothesID[playerid], ClothesPrice[playerid]);
	            case 4: Accesory_Buy(playerid, 5, ClothesID[playerid], ClothesPrice[playerid]);
			}
		}
	}
    if(dialogid == TEL_INPUT)
	{
	    if(response == 1)
	    {
	        if(TEL_INPUT_ID[playerid] == 1)
	        {
	            if(strval(inputtext) > 999999 || strval(inputtext) < 1000)
	            {
                    ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Inserte el número del destino del mensaje\nTeléfono entre 4-6 carácteres", "Enviar", "Cancelar");
                    return 1;
	            }
	            TEL_INPUT_ID[playerid] = 2;
				TEL_NUMBER[playerid] = strval(inputtext);
				format(string, sizeof(string), "Telf: %d",TEL_NUMBER[playerid]);
				Message(playerid, COLOR_GRAD2, string);
    			ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Escriba el texto a enviar", "Enviar", "Cancelar");
	        }
	        else if(TEL_INPUT_ID[playerid] == 2)
	        {
	            if(DetectarSPAM(inputtext) || strlen(inputtext) > 80 || strfind(inputtext, "=", true) != -1)
	            {
	                ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Escriba el texto a enviar\nLímite 80 carácteres", "Enviar", "Cancelar");
	                return 1;
	            }
				Bought(playerid, txtcost);
				Till(13, txtcost);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, 60, "* %s manda un mensaje de texto.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Loop(i,MAX_PLAYERS)
			    {
					if(PlayerInfo[i][pPnumber] == TEL_NUMBER[playerid])
					{
					    new h,m,s,y,month,d,mtext[12];
     					gettime(h,m,s);
						getdate(y,month,d);
	     				if(month == 1) { mtext = "Enero"; }
						else if(month == 2) { mtext = "Febrero"; }
						else if(month == 3) { mtext = "Marzo"; }
						else if(month == 4) { mtext = "Abril"; }
						else if(month == 5) { mtext = "Mayo"; }
						else if(month == 6) { mtext = "Junio"; }
						else if(month == 7) { mtext = "Julio"; }
						else if(month == 8) { mtext = "Augosto"; }
						else if(month == 9) { mtext = "Septiembre"; }
						else if(month == 10) { mtext = "Octubre"; }
						else if(month == 11) { mtext = "Noviembre"; }
						else if(month == 12) { mtext = "Diciembre"; }

						if(strcmp(PlayerInfo[i][pSMS_1], "Vacío", true) == 0)
					    {
					        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (1)");
					        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
					        strmid(PlayerInfo[i][pSMS_1], string, 0, strlen(string), 128);
					    }
					    else if(strcmp(PlayerInfo[i][pSMS_2], "Vacío", true) == 0)
					    {
					        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (2)");
					        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
					        strmid(PlayerInfo[i][pSMS_2], string, 0, strlen(string), 128);
					    }
					    else if(strcmp(PlayerInfo[i][pSMS_3], "Vacío", true) == 0)
					    {
					        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (3)");
					        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
					        strmid(PlayerInfo[i][pSMS_3], string, 0, strlen(string), 128);
					    }
					    else if(strcmp(PlayerInfo[i][pSMS_4], "Vacío", true) == 0)
					    {
					        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (4)");
					        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
					        strmid(PlayerInfo[i][pSMS_4], string, 0, strlen(string), 128);
					    }
					    else if(strcmp(PlayerInfo[i][pSMS_5], "Vacío", true) == 0)
					    {
					        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (5)");
					        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
					        strmid(PlayerInfo[i][pSMS_5], string, 0, strlen(string), 128);
					    }
					    else
					    {
					        Message(i, COLOR_WHITE, "Información: {FF4400}Tienes lleno el buzón de entrada. No recibirás mas mensajes. (5/5)");
					        Message(playerid, COLOR_GRAD2, "Operadora: Este número está apagado o fuera de cobertura");
					    }
					}
				}
	        }
	        else if(TEL_INPUT_ID[playerid] == 3)
	        {
	                format(string, sizeof(string), "* %s saca su teléfono.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);

	                new phonenumb = strval(inputtext);
         			if(phonenumb == 444)
	   				{
			        	if(TransportDuty[playerid] > 0) return Message(playerid, COLOR_GREY, "¡No puedes llamar a un taxi ahora!");

				    	if(TaxiCalled[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has llamado un taxi (/cancelar taxi)!");
			    		Message(playerid, COLOR_GREY, "- Han contestado al teléfono.");
				    	Message(playerid, COLOR_WHITE, "Taxi Cab Company:");
				    	Message(playerid, COLOR_YELLOW2, "  Operadora: ¿ Que servicio necesita ?");
				    	Message(playerid, COLOR_YELLOW2, "  Diga \"TAXI\" si necesita servicio de taxi.");
				    	Message(playerid, COLOR_YELLOW2, "  Diga \"NO\" para cancelar la llamada.");
				    	Mobile[playerid] = 445;
		   			}
		   			else if(phonenumb == 555)
		   			{
		   			    Message(playerid, 0x359AFFFF, "*** 555 Servicio Mecánico ***");
		   			    Message(playerid, COLOR_WHITE, "Operador: Hola! ¿ Necesita un mecánico ?");
		   			    Message(playerid, COLOR_WHITE, "Operador: Recuerde venir al taller si necesita Tuning o arreglos menores!");
		   			    Message(playerid, COLOR_WHITE, "Operador: Si necesita asistencia urgente, diga ASISTENCIA.");
		   			    Message(playerid, COLOR_WHITE, "Operador: Si quiere anular la llamada diga NO.");
		   			    Mobile[playerid] = 556;
		   			}
		   			else if(phonenumb == 3900)
		   			{
		   			    Message(playerid, COLOR_WHITE, "Operador: Bienvenido. ¿ Tiene algúna noticia, quiere participar ?");
		   			    Message(playerid, COLOR_WHITE, "Operador: Déjenos un mensaje después de la señal, ¡hasta la vista!");
		   			    Message(playerid, COLOR_WHITE, "Biiip!");
		   			    Mobile[playerid] = 3900;
		   			}
					else if(phonenumb == 911)
					{
						Message(playerid, 0xFF4848FF, "*** 911 Servicio de Emergencias ***");
						Message(playerid, COLOR_WHITE, "Operadora: Diga el servicio que necesita, gracias.");
						Message(playerid, 0x0080FFFF, "Diga \"Policia\" para contactar con la autoridad.");
		                Message(playerid, 0xFF8080FF, "Diga \"SAMUR\" para contactar con los servicios médicos.");
						Mobile[playerid] = 911;
					}
					else if(phonenumb == 111)
					{
                        new pizzaworkers = 0;
                        for(new i=0; i<MAX_PLAYERS; i++)
                        {
                            if(IsPlayerConnected(i))
                            {
                                if(PlayerInfo[i][pJob] == 6 && JobDuty[i] == 1)
                                {
                                    pizzaworkers++;
                                }
                            }
                        }
					    GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "{E1BB69}%s Necesita Una Pizza. (use {FF0A2F}/AceptarPizza {E1BB69}para aceptar la llamada)", sendername);
					    SendJobMessage(6, -1, string);
					    Message(playerid, -1, "   {FF0A2F}*** {FFFFFF}Pizza Stack Delivery {FF0A2F}***");
					    Message(playerid, COLOR_WHITE, "Operadora: Bueno? Pizza Stack, que desea?");
					    Message(playerid, COLOR_WHITE, "Operadora: Gracias, su pedido fue imformado, si no responden intente más tarde.");
					    Message(playerid, COLOR_WHITE, "Operadora: Hasta Luego.");
					    Message(playerid, -1, "   {C1BFC0}Colgaron.");
					    PizzaCall = playerid;
					    return 1;
					}
					else if(phonenumb == PlayerInfo[playerid][pPnumber])
					{
						Message(playerid, COLOR_WHITE, "El número marcado correspode a su dispositivo móvil");
					}
					else if(Mobile[playerid] != 255)
					{
						Message(playerid, COLOR_WHITE, "¡Usted está en una llamada!");
						return 1;
					}
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
							{
								Mobile[playerid] = i;
								if(IsPlayerConnected(i))
								{
								    if(giveplayerid != INVALID_PLAYER_ID)
								    {
								        if(PhoneOnline[i] > 0) return Message(playerid, COLOR_GREY, "¡Fuera de cobertura!");

										if(Mobile[i] == 255)
										{
											Message(i, COLOR_YELLOW, "{DD1111}iPhone{FFFFFF}: Tu teléfono está sonando, utiliza {DD6611}/contestar");
											GetPlayerName(i, sendername, sizeof(sendername));
											format(string, sizeof(string), "* El teléfono de %s está sonando.", sendername);
											ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
											CellTime[playerid] = 1;
											return 1;
										}
									}
								}
							}
						}
					}
	        }
	    }
	}
    if(dialogid == RENT_BIKE)
		{
		    if(response == 1)
		    {
		    	new newcar = GetPlayerVehicleID(playerid);
		    	new lights,alarm,doors,bonnet,boot,objective;
				if(GetPlayerMoney(playerid) < 20)
				{
				  	Message(playerid, COLOR_GRAD1, "No tienes suficiente dinero.");
					RemovePlayerFromVehicle(playerid);
     				SetVehicleToRespawn(newcar);
			    	new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz+1.2);
		    	}
		    	else
		    	{
		    	    SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
		    		Message(playerid,COLOR_GREY,"Acabas de rentar una bicicleta por 15 Minutos.");
		    		Message(playerid,COLOR_GREY,"Cuando ya no quieras usarla usa /desrentarbici.");
		    		Bought(playerid, 20);
		    		RentTime[playerid] = 900;
		    		IsaRent[playerid] = 1; HireKey2[playerid] = newcar;
		    		Till(14,20);
		    	}
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
		    }
		}
 if(dialogid == IPHONE_OPTIONS)
	{
		if(response == 1)
		{
			switch(listitem)
			{
			    case 0:
			    {
			        ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Llamar", "{DD1111}iPhone {FFFFFF}- Inserte el teléfono a llamar\n\n\n\t1\t2\t3\n\t4\t5\t6\n\t7\t8\t9\n\t#\t0\t*", "Enviar", "Cancelar");
					TEL_INPUT_ID[playerid] = 3;
			    }
			    case 1:
			    {
			        ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Inserte el número del destino del mensaje", "Enviar", "Cancelar");
					TEL_INPUT_ID[playerid] = 1;
			    }
			    case 2:
			    {
			        ShowPlayerDialog(playerid, TEL_MSGBOX, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Buzón de entrada", "- \tBuzón de entrada 1\n- \tBuzón de entrada 2\n- \tBuzón de entrada 3\n- \tBuzón de entrada 4\n- \tBuzón de entrada 5", "Ver", "Borrar");
			    }
			    case 3:
			    {
			        ShowPlayerDialog(playerid, IPHONE_IPOD, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Escuchar música", \
					"Track 1 -\t 'Down with the sickness'\nTrack 2 -\t 'Duality'\nTrack 3 -\t 'On the beach'\nTrack 4 -\t 'Amerika'\nTrack 5 -\t 'Baby'\nTrack 6 -\t 'Vodka & Roll'\nTrack 7 -\t 'Sexy bitch'", "Reproducir", "Detener");
			    }
			}
		}
	}

	if(dialogid == IPHONE_IPOD)
	{
		if(response == 1)
		{
			switch(listitem)
			{
			    case 0: {PlayerPlaySound(playerid, 1062, 0,0,0); return Message(playerid, COLOR_WHITE, "Control de voz:{007711} Utilize 'tracklist' ó 'detener'");}
			    case 1: {PlayerPlaySound(playerid, 1068, 0,0,0); return Message(playerid, COLOR_WHITE, "Control de voz:{007711} Utilize 'tracklist' ó 'detener'");}
			    case 2: {PlayerPlaySound(playerid, 1076, 0,0,0); return Message(playerid, COLOR_WHITE, "Control de voz:{007711} Utilize 'tracklist' ó 'detener'");}
			    case 3: {PlayerPlaySound(playerid, 1097, 0,0,0); return Message(playerid, COLOR_WHITE, "Control de voz:{007711} Utilize 'tracklist' ó 'detener'");}
			    case 4: {PlayerPlaySound(playerid, 1183, 0,0,0); return Message(playerid, COLOR_WHITE, "Control de voz:{007711} Utilize 'tracklist' ó 'detener'");}
			    case 5: {PlayerPlaySound(playerid, 1185, 0,0,0); return Message(playerid, COLOR_WHITE, "Control de voz:{007711} Utilize 'tracklist' ó 'detener'");}
			    case 6: {PlayerPlaySound(playerid, 1187, 0,0,0); return Message(playerid, COLOR_WHITE, "Control de voz:{007711} Utilize 'tracklist' ó 'detener'");}
			}
		}
		else
		{
		    PlayerPlaySound(playerid, 1187, 0,0,0);
		    PlayerPlaySound(playerid, 1188, 0,0,0);
		}
	}

	if(dialogid == TEL_MSGBOX)
	{
		if(response == 1)
		{
			switch(listitem)
			{
			    case 0:
			    {
			        ClearChatbox(playerid, 10);
			        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 1 =======================================================");
                    new data[100];
                    format(data,sizeof(data),"%s",PlayerInfo[playerid][pSMS_1]);
                    Message(playerid,COLOR_GRAD2,data);
			    }
			    case 1:
			    {
			        ClearChatbox(playerid, 10);
			        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 2 =======================================================");
			        new data[100];
                    format(data,sizeof(data),"%s",PlayerInfo[playerid][pSMS_2]);
                    Message(playerid,COLOR_GRAD2,data);
			    }
			    case 2:
			    {
			        ClearChatbox(playerid, 10);
			        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 3 =======================================================");
			        new data[100];
                    format(data,sizeof(data),"%s",PlayerInfo[playerid][pSMS_3]);
                    Message(playerid,COLOR_GRAD2,data);
			    }
			    case 3:
			    {
			        ClearChatbox(playerid, 10);
			        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 4 =======================================================");
			        new data[100];
                    format(data,sizeof(data),"%s",PlayerInfo[playerid][pSMS_4]);
                    Message(playerid,COLOR_GRAD2,data);
			    }
			    case 4:
			    {
			        ClearChatbox(playerid, 10);
			        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 5 =======================================================");
			        new data[100];
                    format(data,sizeof(data),"%s",PlayerInfo[playerid][pSMS_5]);
                    Message(playerid,COLOR_GRAD2,data);
			    }
			}
		}
		else
		{
		    switch(listitem)
			{
			    case 0:
			    {
			        strmid(PlayerInfo[playerid][pSMS_1], "Vacío", 0, strlen("Vacío"), 32);
			        Message(playerid, COLOR_GRAD2, "Mensaje borrado");
			    }
			    case 1:
			    {
			        strmid(PlayerInfo[playerid][pSMS_2], "Vacío", 0, strlen("Vacío"), 32);
			        Message(playerid, COLOR_GRAD2, "Mensaje borrado");
			    }
			    case 2:
			    {
			        strmid(PlayerInfo[playerid][pSMS_3], "Vacío", 0, strlen("Vacío"), 32);
			        Message(playerid, COLOR_GRAD2, "Mensaje borrado");
			    }
			    case 3:
			    {
			        strmid(PlayerInfo[playerid][pSMS_4], "Vacío", 0, strlen("Vacío"), 32);
			        Message(playerid, COLOR_GRAD2, "Mensaje borrado");
			    }
			    case 4:
			    {
			        strmid(PlayerInfo[playerid][pSMS_5], "Vacío", 0, strlen("Vacío"), 32);
			        Message(playerid, COLOR_GRAD2, "Mensaje borrado");
			    }
			}
		}
	}
	if(dialogid == DRUGS_DIALOG)
	{
	    if(response == 1)
	    {
	        if(strfind(inputtext, "-", true) != -1) return Message(playerid, COLOR_GREY, "No puedes poner '-' para vender drogas");
	        if(strval(inputtext) > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "No tienes esa cantidad!");
	        new drug[12];
	        if(NarcoSellArm[playerid] == 1) drug = "Speed"
	        else if(NarcoSellArm[playerid] == 2) drug = "Extasis"
	        else if(NarcoSellArm[playerid] == 3) drug = "Ritalin"
	        else if(NarcoSellArm[playerid] == 4) drug = "Heroina"
	        else if(NarcoSellArm[playerid] == 5) drug = "Marihuana"
	        NarcoSellPrice[playerid] = strval(inputtext);
	        BuyNarco[BuyNarco[playerid]] = playerid;
	        format(string, sizeof(string), "\tDEMANDA DE DROGAS (%s)\t\n Drogas: %d - Tipo: %s - Precio: %d$",PlayerName(playerid),NarcoSellAmmo[playerid],drug,NarcoSellPrice[playerid]);
	        ShowPlayerDialog(BuyNarco[playerid], CONFIRM_DRUGS_DIALOG, DIALOG_STYLE_MSGBOX, "Comprar drogas", string, "Aceptar", "Cancelar");
	    }
	}
	if(dialogid == CONFIRM_DRUGS_DIALOG)
	{
	    if(response == 1)
		{
		    if(NarcoSellPrice[BuyNarco[playerid]] > GetPlayerMoney(BuyNarco[playerid])) return Message(playerid, COLOR_GRAD2, "No tiene esa cantidad!");

			new drug[12];
	        if(NarcoSellArm[BuyNarco[playerid]] == 1) drug = "Speed"
	        else if(NarcoSellArm[BuyNarco[playerid]] == 2) drug = "Extasis"
	        else if(NarcoSellArm[BuyNarco[playerid]] == 3) drug = "Ritalin"
	        else if(NarcoSellArm[BuyNarco[playerid]] == 4) drug = "Heroina"
	        else if(NarcoSellArm[BuyNarco[playerid]] == 5) drug = "Marihuana"

			format(string, sizeof(string), "* %s compró a %s %d gramos de %s por %d$", PlayerName(BuyNarco[playerid]), PlayerName(playerid),NarcoSellAmmo[BuyNarco[playerid]],drug,NarcoSellPrice[BuyNarco[playerid]]);
			Message(playerid, COLOR_WHITE, string);
			Message(BuyNarco[playerid], COLOR_WHITE, string);

			Bought(BuyNarco[playerid], NarcoSellPrice[BuyNarco[playerid]]);
			Earn(playerid, NarcoSellPrice[BuyNarco[playerid]]);

			if(NarcoSellArm[BuyNarco[playerid]] == 1)   		{PlayerInfo[BuyNarco[playerid]][pSpeed] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pSpeed] -= NarcoSellAmmo[BuyNarco[playerid]];}
			else if(NarcoSellArm[BuyNarco[playerid]] == 2)   	{PlayerInfo[BuyNarco[playerid]][pEctasy] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pEctasy] -= NarcoSellAmmo[BuyNarco[playerid]];}
			else if(NarcoSellArm[BuyNarco[playerid]] == 3)   	{PlayerInfo[BuyNarco[playerid]][pRitalin] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pRitalin] -= NarcoSellAmmo[BuyNarco[playerid]];}
			else if(NarcoSellArm[BuyNarco[playerid]] == 4)   	{PlayerInfo[BuyNarco[playerid]][pHeroina] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pHeroina] -= NarcoSellAmmo[BuyNarco[playerid]];}
			else if(NarcoSellArm[BuyNarco[playerid]] == 5)   	{PlayerInfo[BuyNarco[playerid]][pMarihuana] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pMarihuana] -= NarcoSellAmmo[BuyNarco[playerid]];}


			BuyNarco[playerid] = 0;
			BuyNarco[BuyNarco[playerid]] = 0;

			NarcoSellPrice[playerid] = 0;
			NarcoSellPrice[BuyNarco[playerid]] = 0;

			NarcoSellArm[playerid] = 0;
			NarcoSellArm[BuyNarco[playerid]] = 0;

			NarcoSellAmmo[playerid] = 0;
			NarcoSellAmmo[BuyNarco[playerid]] = 0;


	    }
	}
    if(dialogid == DIALOG_HIT)
    {
 	    if(response == 1)
 	    {
 	        if(strval(inputtext) < 1 || strval(inputtext) > 299) return Message(playerid, COLOR_GRAD2, "ERROR! Skin de 1 a 299");
            if(CheckMoney(playerid,200))
			{
                PlayerInfo[playerid][pChar] = strval(inputtext);
                SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		    }
		    return 1;
	    }
	}
	if(dialogid == EQUIPO_HITMAN)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0:
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 23, 300);
		        }
		        case 1:
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 34, 300);
				}
				case 2:
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 24, 300);
				}
				case 3:
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 30, 300);
				}
				case 4:
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 31, 300);

				}
				case 5:
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}

	/////////////////////////////// Dialogo Equipo Yakuza /////////////////

	if(dialogid == EQUIPO_YAKUZA)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0: //Pistol SD + Cuchillo Ak-47
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 30, 300);
		        }
		        case 1: //Pistol SD + Cuchillo + Sniper
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 34, 35);
				}
				case 2: //D. Eagle + Cuchillo + M4
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 31, 300);
				}
				case 3: //D. Eagle + Cuchillo + MP5
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
				}
				case 4: //Dejar Armas
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}
	///////////////////////////// Menu Admin ////////////////////////////////////////

	if(dialogid == MENU_ADMIN_1)
    	{
 	    if(response == 1)
 	    	{
			switch(listitem)
				{
				case 0:
					{
                	Message(playerid, 0xFF6464FF, "|___ GameWorld - Policias ___|");
					for(new i = 0; i < MAX_PLAYERS; i++)
						{
		    			if(IsPlayerConnected(i))
							{
			        		if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] ==1)
								{
      							new admtext[24];
								if(PlayerInfo[i][pRank] == 8) { admtext = "Comisario."; }
   								else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
								else if(PlayerInfo[i][pRank] == 7) { admtext = "Inspector Jefe"; }
								else if(PlayerInfo[i][pRank] == 6) { admtext = "Científico."; }
								else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Inspector"; }
								else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Antidisturbio"; }
								else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Oficial"; }
								else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Guardia Civil"; }
								else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Cadete"; }
								if(OnDuty[i] == 0)
									{
									format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
									Message(playerid, COLOR_WHITE, string);
									}
								else
									{
									format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
									Message(playerid, TEAM_VAGOS_COLOR, string);
									}
								}
							}
						}
			        }
		     case 1: // FBI
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - F.B.I. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 24 || PlayerInfo[i][pLeader] ==24)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Director."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Sub-Director"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Criminalista"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Especial"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Super Agente"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Agente"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 2: // SAEM
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - San Andreas Ejercito Militar ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] ==3)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 8) { admtext = "Coronel."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 7) { admtext = "Mayor"; }
							else if(PlayerInfo[i][pRank] == 6) { admtext = "Capitan."; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Teniente"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Sargento"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Trooper"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Soldado"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Cabo"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 3: //C. Inteligencia
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Agencia Central de Inteligencia. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 8 || PlayerInfo[i][pLeader] ==8)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Director."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Agente 47"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Super Agente"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Guardaespaldas"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Detective"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Secretario"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 4: //Hospital Los Santos
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Hospital Los Santos. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] ==4)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Director."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Responsable Técnico"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Supervisor"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Medico"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Paramedico"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Practico"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 5: //Gobierno 16
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - San Andreas Ejercito Militar ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 16 || PlayerInfo[i][pLeader] ==16)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 9) { admtext = "Presidente."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 8) { admtext = "Vicepresidente"; }
							else if(PlayerInfo[i][pRank] == 7) { admtext = "Alcalde LS"; }
							else if(PlayerInfo[i][pRank] == 6) { admtext = "Alcalde LV."; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Ministro General"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Ministro"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Agente Serv. Secreto"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Agente en Practicas"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Chofer del gobierno"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 6: //Mecanicos 7
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Mecanicos. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 7 || PlayerInfo[i][pLeader] ==7)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Director."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Supervisor"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Ingeniero"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Mecanico"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Trucker"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Ayudante"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 7: //Taxistas 6
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Taxistas. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 6 || PlayerInfo[i][pLeader] ==6)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Director."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Sub-Director"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Instructor"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Supervisor"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Taxista"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Conductor de Bus"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 8: //CNN 17
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Radio Television Los Santos. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 17 || PlayerInfo[i][pLeader] ==17)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Director CNN."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Presentador"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Enviado Especial"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Pediodista"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Redactador"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Becario"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 9: //Licencieros 15
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Licencieros. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 15 || PlayerInfo[i][pLeader] ==15)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 5) { admtext = "Director."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Supervisor"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Evaluador"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Maestro"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Secretario"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 10: //La Cosa Nostra 12
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - La Cosa Nostra ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 12 || PlayerInfo[i][pLeader] == 12)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 7) { admtext = "Capi Di Tutti Capi."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 6) { admtext = "Don."; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Sottocapo"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Consigliere"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Capo"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Soldati"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Giovane d' Honore"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 11: //Yakuza 13
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Yakuza. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 13 || PlayerInfo[i][pLeader] ==13)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Kyodai."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Wakashu"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Senpai Kohai"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Saiko Komon"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Sumiyoshi"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Oyabun"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 12: //Mafia Rusa 14
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld  - Mafia Rusa ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 14 || PlayerInfo[i][pLeader] == 14)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 7) { admtext = "Hannibal Lecter."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 6) { admtext = "Don."; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Zamestitel"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Konsul'tant"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Kapo"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Soldat"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Assotsiirovat"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 13: //Traficantes 19
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Traficantes. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 19 || PlayerInfo[i][pLeader] ==19)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Jefazo."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Mano Derecha"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Traficante"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Contrabandista"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Cosechador"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Guardia"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 14: //Triadas 20
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Triadas. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 20 || PlayerInfo[i][pLeader] == 20)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Patrón."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Mano Derecha"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Consejero"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Satelite"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Jivaro"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Aprendiz"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 15: //Familia Capone 22
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Los 14 diamantes negros ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 22 || PlayerInfo[i][pLeader] == 22)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 7) { admtext = "Dirigente."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 6) { admtext = "Mano Derecha."; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Manager"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Capo"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Miemboro de Honor"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Socio"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Turro"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 16: //Hitman 23
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Hitman. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 23 || PlayerInfo[i][pLeader] == 23)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Director."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Vice-Director"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Agente Especial"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Sicario"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Asesino"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Novato"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 17: //Groove 9
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Groove. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 9 || PlayerInfo[i][pLeader] == 9)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Líder."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "General"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Cabecilla"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Soldado"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Propagador"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Joto"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 18: //Heramandad 10
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Heramandad. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pLeader] == 10)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Líder."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "General"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Cabecilla"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Soldado"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Propagador"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Joto"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 19: //L.Kings 11
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - L.Kings. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 11 || PlayerInfo[i][pLeader] == 11)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Líder."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "General"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Cabecilla"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Soldado"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Propagador"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Joto"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 20: //Blood 25
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Blood. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 25 || PlayerInfo[i][pLeader] == 25)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Líder."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "General"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Cabecilla"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Soldado"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Propagador"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Joto"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		     case 21: //Cripz 26
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Cripz. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 26 || PlayerInfo[i][pLeader] == 26)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Líder."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "General"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Cabecilla"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Soldado"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Propagador"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Joto"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		        case 22: //Al Qaeda 27
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Al Qaeda. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 27 || PlayerInfo[i][pLeader] == 27)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 6) { admtext = "Mandatario."; }
   							else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Mano Derecha"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Terrorista"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Hacker"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Soldado"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Novato"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
		        case 23: //Mafia Española
		        {
                Message(playerid, 0xFF6464FF, "|___ GameWorld - Mafia The Visage. ___|");
				for(new i = 0; i < MAX_PLAYERS; i++)
					{
		    		if(IsPlayerConnected(i))
						{
		        		if(PlayerInfo[i][pMember] == 28 || PlayerInfo[i][pLeader] == 28)
							{
      						new admtext[24];
							if(PlayerInfo[i][pRank] == 7) { admtext = "Lord."; }
                            else if(PlayerInfo[i][pLeader] == 1) { admtext = "Lider de Faccion"; }
                            else if(PlayerInfo[i][pRank] == 6)	{ admtext = "Sub Lord"; }
							else if(PlayerInfo[i][pRank] == 5)	{ admtext = "Right Hard"; }
							else if(PlayerInfo[i][pRank] == 4)	{ admtext = "Assassin master"; }
							else if(PlayerInfo[i][pRank] == 3)	{ admtext = "Trafficker"; }
							else if(PlayerInfo[i][pRank] == 2)	{ admtext = "Associated"; }
							else if(PlayerInfo[i][pRank] == 1)	{ admtext = "Novice"; }
							if(OnDuty[i] == 0)
								{
								format(string, sizeof(string),"  %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, COLOR_WHITE, string);
								}
							else
								{
								format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
								Message(playerid, TEAM_VAGOS_COLOR, string);
								}
							}
						}
					}
		        }
			}
		}
	}

	///////////////////////////// Equipo Triadas //////////////////////////////////////////

	if(dialogid == EQUIPO_TRIADAS)
    {
 	    if(response == 1)
 	    {
 	        switch(listitem)
	        {
		        case 0: //Pistol SD + Cuchillo + Ak-47
		        {
                    ResetPlayerWeapons(playerid);
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 30, 300);
		        }
		        case 1: //Pistol SD + Cuchillo + Sniper
		        {
                    ResetPlayerWeapons(playerid);
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 34, 35);
				}
				case 2: //D. Eagle + Cuchillo + M4
				{
                    ResetPlayerWeapons(playerid);
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 31, 300);
				}
				case 3: //D. Eagle + Cuchillo + MP5
				{
                    ResetPlayerWeapons(playerid);
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
				}
				case 4: //Pick Loc / Vendas / Cuerda / Ganzuas
				{
                    PlayerInfo[playerid][pMask] = 1
     Ganzuas[playerid] = 1;
					PickLock[playerid] = 1;
					Rope[playerid] = 1;
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
                 case 5: //Dejar Armas
				{
                    ResetPlayerWeapons(playerid);
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}

	///////////////////////////// Equipo Ruso //////////////////////////////////////////////

	if(dialogid == EQUIPO_RUSO)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0: //Pistol SD + Cuchillo + Ak-47
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 30, 300);
		        }
		        case 1: //Pistol SD + Cuchillo + Sniper
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 34, 35);
				}
				case 2: //D. Eagle + Cuchillo + M4
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 31, 300);
				}
				case 3: //D. Eagle + Cuchillo + MP5
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
				}
				case 4:
				{
				   				Message(playerid, COLOR_WHITE, "Cogiste del armario: picklock, kit de secuestro, ganzúas y máscara");
								PlayerInfo[playerid][pMask] = 1;
                                Ganzuas[playerid] = 1;
				   				PickLock[playerid] = 1;
				   				Rope[playerid] = 1;
				   				}
				case 5: //Dejar Armas
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}
	///////////////////////////// Equipo Capone ////////////////////////////////////////////

	if(dialogid == EQUIPO_CAPONE)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0: //Pistol SD + Cuchillo + Ak-47
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
		        }
		        case 1: //Pistol SD + Cuchillo + Sniper
		        {
                SafeGivePlayerWeapon(playerid, 31, 9999);
				SafeGivePlayerWeapon(playerid, 24, 9999);
				SafeGivePlayerWeapon(playerid, 29, 9999);
				SafeGivePlayerWeapon(playerid, 27, 9999);
				SafeGivePlayerWeapon(playerid, 34, 9999);
				}
               case 2:
				{
				Message(playerid, COLOR_WHITE, "Cogiste del armario: picklock, kit de secuestro, ganzúas y máscara");
				PlayerInfo[playerid][pMask] = 1;
                Ganzuas[playerid] = 1;
				PickLock[playerid] = 1;
				Rope[playerid] = 1;
				}
				case 3: //Dejar Armas
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}
 if(dialogid == EQUIPO_TRAFICANTES)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0: //Cuchillo + Ak-47
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 30, 300);
		        }
				case 1: //D. Eagle + Cuchillo + uzi
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 33, 100);
				}
				case 2: //D. Eagle + Cuchillo + MP5
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
				}
				case 3: //Dejar Armas
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}


	///////////////////////////// Equipo Al Qaeda //////////////////////////////////////////

	if(dialogid == EQUIPO_ALQAEDA)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0: //Pistol SD + Cuchillo + Ak-47 + Coctel
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 100);
					SafeGivePlayerWeapon(playerid, 4, 1);
		        }
		        case 1: //Pistol SD + Cuchillo + Sniper
		        {
                    if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 29, 300);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 24, 100);
				}
				case 2: //D. Eagle + Cuchillo + M4
				{
                    if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 100);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 29, 300);
					SafeGivePlayerWeapon(playerid, 25, 50);
				}
				case 3: //D. Eagle + Cuchillo + MP5
				{
                    if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 100);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
                    SafeGivePlayerWeapon(playerid, 25, 50);
                    SafeGivePlayerWeapon(playerid, 31, 200);
				}
				case 4: //D. Eagle + Cuchillo + MP5
				{
                    if(PlayerInfo[playerid][pRank] < 5) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 100);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
                    SafeGivePlayerWeapon(playerid, 34, 25);
                    SafeGivePlayerWeapon(playerid, 25, 50);
                    SafeGivePlayerWeapon(playerid, 31, 200);
				}
                 case 5: //D. Eagle + Cuchillo + MP5
				{
                    if(PlayerInfo[playerid][pRank] < 6) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 100);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
                    SafeGivePlayerWeapon(playerid, 16, 10);
                    SafeGivePlayerWeapon(playerid, 34, 25);
                    SafeGivePlayerWeapon(playerid, 25, 50);
                    SafeGivePlayerWeapon(playerid, 31, 200);
				}
				case 6: //Dejar Armas
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}

	///////////////////////////// Equipo Español //////////////////////////////////////////
	if(dialogid == EQUIPO_ESPANOL)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0: //Pistol SD + Cuchillo + Ak-47 + Coctel
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 30, 300);
		        }
		        case 1: //Pistol SD + Cuchillo + Sniper
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 34, 35);
				}
				case 2: //D. Eagle + Cuchillo + M4
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 31, 300);
				}
				case 3: //D. Eagle + Cuchillo + MP5
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
				}
				case 4:
				{
				   				Message(playerid, COLOR_WHITE, "Cogiste del armario: picklock, kit de secuestro, ganzúas y máscara");
								PlayerInfo[playerid][pMask] = 1;
                                Ganzuas[playerid] = 1;
				   				PickLock[playerid] = 1;
				   				Rope[playerid] = 1;
				   				}
				case 5: //Dejar Armas
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}
 //ALEMANA/
if(dialogid == EQUIPO_ALEMAN)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0: //Pistol SD + Cuchillo + Ak-47 + Coctel
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 30, 300);
		        }
		        case 1: //Pistol SD + Cuchillo + Sniper
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 34, 35);
				}
				case 2: //D. Eagle + Cuchillo + M4
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 31, 300);
				}
				case 3: //D. Eagle + Cuchillo + MP5
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
				}
				case 4:
				{
				   				Message(playerid, COLOR_WHITE, "Cogiste del armario: picklock, kit de secuestro, ganzúas y máscara");
								PlayerInfo[playerid][pMask] = 1;
                                Ganzuas[playerid] = 1;
				   				PickLock[playerid] = 1;
				   				Rope[playerid] = 1;
				   				}
				case 5: //Dejar Armas
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}
	///////////////////////////// Equipo Italiano //////////////////////////////////////////


	if(dialogid == EQUIPO_ITALIANO)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0: //Pistol SD + Cuchillo + Ak-47
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 30, 300);
		        }
		        case 1: //Pistol SD + Cuchillo + Sniper
		        {
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 23, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 34, 35);
				}
				case 2: //D. Eagle + Cuchillo + M4
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
					SafeGivePlayerWeapon(playerid, 31, 300);
				}
				case 3: //D. Eagle + Cuchillo + MP5
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 24, 35);
					SafeGivePlayerWeapon(playerid, 4, 1);
                    SafeGivePlayerWeapon(playerid, 29, 300);
				}
				case 4:
				{
				   				Message(playerid, COLOR_WHITE, "Cogiste del armario: picklock, kit de secuestro, ganzúas y máscara");
								PlayerInfo[playerid][pMask] = 1;
                                Ganzuas[playerid] = 1;
				   				PickLock[playerid] = 1;
				   				Rope[playerid] = 1;
				   				}
				case 5: //Dejar Armas
				{
                    SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);

                 }
			}
		}
	}
	///////////////////////////// Trabajo Ayuntamiento /////////////////////////////

	if(dialogid == TRABAJA_DIALOG)
    {
 	    if(response == 1)
 	    {
 	        switch(listitem)
	        {
		        case 0: //Gobierno
		        {
		        /*
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 16; PlayerInfo[playerid][pRank] = 1;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato para trabajar en el Gobierno!");
                    BuscaEmpleo[playerid]+=6;
          		*/
                    Message(playerid, COLOR_BLUE, "Las Listas de Postulaciones para el Gobierno se encuentran cerradas!");
		        }
		        case 1: //Policia
		        {
					/*
					PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 1; PlayerInfo[playerid][pRank] = 1;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato para LSPD!");
                    BuscaEmpleo[playerid]+=6;
                    */
                    Message(playerid, COLOR_BLUE, "Las Listas de Postulaciones para Policia se encuentran cerradas!");
				}
				case 2: //Medico
				{
				    /*
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 4; PlayerInfo[playerid][pRank] = 1;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato como Practico de SAMD!");
                    BuscaEmpleo[playerid]+=6;
                    */
                    Message(playerid, COLOR_BLUE, "Las Listas de Postulaciones para Médico se encuentran cerradas!");
				}
				case 3: //Taxista
				{
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 6; PlayerInfo[playerid][pRank] = 1;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato como Taxista de Los Santos!");
                    BuscaEmpleo[playerid]+=6;
				}
				case 4: //CNN Los Santos
				{
				    /*
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 17; PlayerInfo[playerid][pRank] = 2;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato para la CNN!");
                    BuscaEmpleo[playerid]+=6;
					*/
					Message(playerid, COLOR_BLUE, "Las Listas de Postulaciones para CNN se encuentran cerradas!");
                 }
                 case 5: //Ejercito Militar
				{
				    /*
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 3; PlayerInfo[playerid][pRank] = 1;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato para SAEM!");
                    BuscaEmpleo[playerid]+=6;
                    */
                    Message(playerid, COLOR_BLUE, "Las Listas de Postulaciones para el ejercito militar se encuentran cerradas!");
                 }
                 case 6: //Licenciero
				{
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 15; PlayerInfo[playerid][pRank] = 1;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato como Licenciero!");
                    BuscaEmpleo[playerid]+=6;
                 }
                  case 7: //Mecanico
				{
				/*
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 7; PlayerInfo[playerid][pRank] = 1;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato como mecanico!");
                    BuscaEmpleo[playerid]+=6;
    			*/
                    Message(playerid, COLOR_BLUE, "Las Listas de Postulaciones para mecanicos se encuentran cerradas!");
                 }
                  case 8: //Detective
				{
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 8; PlayerInfo[playerid][pRank] = 1;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato como detective!");
                    BuscaEmpleo[playerid]+=6;

                 }
                 case 9: //FBI
				{
					/*
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    PlayerInfo[playerid][pMember] = 24; PlayerInfo[playerid][pRank] = 1;
                    Message(playerid, COLOR_BLUE, "Firmas un contrato para el FBI!");
                    BuscaEmpleo[playerid]+=6;
					*/
                    Message(playerid, COLOR_BLUE, "Las Listas de Postulaciones para F.B.I se encuentran cerradas!");
                 }
                 case 10: //Renunciar
				{
                    PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pRank] = 0;
                    Message(playerid, COLOR_BLUE, "Renuncias a tu contrato!");

				}
			}
		}
	}

	//////////////////////////// Paint Ball ////////////////////////////////////////


	if(dialogid == DIALOG_PAINTBALL)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(CheckMoney(playerid, 50))
	                {
	                    SetPosEx(playerid,-1410.72,1591.16,1052.53,0,14,0);
	                    Bought(playerid, 50);
	                    Till(20, 50);
						ArmarPaintBall(playerid);
						InPaintballDM[playerid] = 1;
					}
	            }
	            case 1:
	            {
                    ShowPlayerDialog(playerid, DIALOG_PAINTBALL_TVT, DIALOG_STYLE_LIST, "Equipo vs Equipo", "{FF7617}Equipo Naranja\n{41FF2F}Equipo Verde", "Aceptar", "Cancelar");
	            }
	            case 2:
	            {
	                if(CheckMoney(playerid, 50))
	                {
	                    SetPosEx(playerid,1975.8000,1619.4677,-11.8929,0,0,0);
	                    Bought(playerid, 50);
	                    Till(20, 50);
						ArmarPaintBall(playerid);
						InPaintPvP[playerid] = 1;
					}
	            }
			}
		}
	}
	if(dialogid == DIALOG_PAINTBALL_TVT)
	{
		if(response == 1)
    	{
        	switch(listitem)
        	{
            	case 0:
            	{
                	if(CheckMoney(playerid, 50))
                	{
	   	                SetPosEx(playerid,-973.1844,1061.3037,1345.6699,0,10,0);
	   	                Bought(playerid, 50);
	   	                Till(20, 50);
						ArmarPaintBall(playerid);
						InPaintballTvT[playerid] = 1;
						InTvTNaranja[playerid] = 1;
						SetPlayerColor(playerid, ORANGE_ADMIN);
					}
	            }
     			case 1:
       			{
	                if(CheckMoney(playerid, 50))
	                {
	                    SetPosEx(playerid,-1131.2336,1057.7888,1346.4170,0,10,0);
	                    Bought(playerid, 50);
	                    Till(20, 50);
						ArmarPaintBall(playerid);
						InPaintballTvT[playerid] = 1;
						InTvTVerde[playerid] = 1;
						SetPlayerColor(playerid, VERDE_ADMIN);
					}
	            }
			}
		}
	}

	////////////////////////////////////////////////////////////////////////////////


    if(dialogid == GOOGLE)
	{
	    if(response == 1)
	    {
	        if(strfind(inputtext, "Concesionario", true) != -1)
			{
			    ClearChatbox(playerid,10);
			    Message(playerid, COLOR_BLUE, "Www.Tucarro.com.ve - Todo tipo de vehículos a tu alcanze!");
			    SetPlayerCheckpoint(playerid, 1654.5254,-1655.7502,22.5156, 10.0);
			    Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    return 1;
			}
			else if(strfind(inputtext, "Ropa", true) != -1)
			{
			    ClearChatbox(playerid,10);
			    Message(playerid, COLOR_RED2, "www.victim.eu - Llévalo con orgullo");
			    SetPlayerCheckpoint(playerid, 460.6988,-1501.1395,31.0564, 10.0);
			    Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    return 1;
			}
			else if(strfind(inputtext, "Trabajo", true) != -1)
			{
			    ClearChatbox(playerid,10);
			    Message(playerid, COLOR_GREEN, "Trabajo de disponibles en: www.amantedelparo.org");
			    Message(playerid, COLOR_GRAD2, "- Vendedor moviles");
			    Message(playerid, COLOR_GRAD2, "- Barrendero");
			    Message(playerid, COLOR_GRAD2, "- Conductor de Tren");
			    Message(playerid, COLOR_GRAD2, "- Piloto");
			    Message(playerid, COLOR_GRAD2, "- Ladrón");
			    Message(playerid, COLOR_GRAD2, "- Pizzero");
			    return 1;
			}
			else if(strfind(inputtext, "Vendedor", true) != -1)
			{
			    ClearChatbox(playerid,10);
				Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
				SetPlayerCheckpoint(playerid, 994.3785,-1296.4718,13.5469, 10.0);
				return 1;
			}
			else if(strfind(inputtext, "Pizzero", true) != -1)
			{
                ClearChatbox(playerid,10);
                SetPlayerCheckpoint(playerid, 2103.7043,-1809.8376,13.5547, 10.0);
                Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                return 1;
			}
			else if(strfind(inputtext, "Barrendero", true) != -1)
			{
			    ClearChatbox(playerid,10);
				SetPlayerCheckpoint(playerid, 1616.0780,-1896.7744,13.5490, 10.0);
				Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
				return 1;
			}
			else if(strfind(inputtext, "Piloto", true) != -1)
			{
			    ClearChatbox(playerid,10);
                SetPlayerCheckpoint(playerid, 1642.2316,-2239.2119,13.0561, 10.0);
                Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                return 1;
			}
			else if(strfind(inputtext, "Tren", true) != -1)
			{
			    ClearChatbox(playerid,10);
				SetPlayerCheckpoint(playerid, 1684.6482,-1944.7058,13.5469, 10.0);
				Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
				return 1;
			}
			else if(strfind(inputtext, "Ladron", true) != -1)
			{
			    ClearChatbox(playerid,10);
				SetPlayerCheckpoint(playerid, 2610.85, -2193.26, -0.22, 10.0);
				Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
				return 1;
			}
			else if(strfind(inputtext, "Renta", true) != -1)
			{
			    ClearChatbox(playerid,10);
			    Message(playerid, COLOR_BLUE, "www.mecanico-ls.ls - Reparacion y alquiler de vehículos");
			    SetPlayerCheckpoint(playerid, 1597.0762,-2194.6619,13.3750, 10.0);
			    Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    return 1;
			}
			else if(strfind(inputtext, "Banco", true) != -1)
			{
			    ClearChatbox(playerid,10);
			    Message(playerid, COLOR_GREEN, "www.dowjones.org - Banco central de Los Santos");
			    SetPlayerCheckpoint(playerid, 300.0895,-1611.6455,33.1248, 10.0);
			    Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    return 1;
			}
			else if(strfind(inputtext, "Biblioteca", true) != -1)
			{
			    ClearChatbox(playerid,10);
			    Message(playerid, COLOR_GREEN, "www.bookandstudy.org - Biblioteca de Los Santos");
			    SetPlayerCheckpoint(playerid, 1546.6545,-1097.5780,25.0625, 10.0);
                Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
            }
			else if(strfind(inputtext, "Ammunation", true) != -1)
			{
			    ClearChatbox(playerid,10);
			    Message(playerid, COLOR_RED, "www.armas-legales.com - Ammunation Roosevelt");
			    SetPlayerCheckpoint(playerid, 1368.4303,-1280.0046,13.5469, 10.0);
			    Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    return 1;
			}
	    }
	}
	if(dialogid == DMV_DIALOG)
	{
	    if(response == 1)
	    {
			switch(listitem)
			{
			    case 0:
			    {
			        if(pTest[playerid] == 1)
			        {
						DMV_Question(playerid, "¿Hasta cuánto podemos aumentar la velocidad para adelanta?", "+40Km-h\n+10Km-h\n+30Km-h\n+20Km-h");
						pTest[playerid] = 2;
						ePoints[playerid] += 1;
			        }
			        else if(pTest[playerid] == 2)
                    {
                        DMV_Question(playerid, "¿Por dónde hemos ir siempre que no adelantemos?", "Carril Derecho\nCarril Izquierdo");
						pTest[playerid] = 3;
                    }
                    else if(pTest[playerid] == 3)
                    {
                        DMV_Question(playerid, "¿Máximo de tiempo permitido en doble fila?", "1\n5\n3\n10");
						pTest[playerid] = 4;
						ePoints[playerid] += 1;
                    }
                    else if(pTest[playerid] == 4)
                    {
                        DMV_Question(playerid, "¿Qué significa cuando el semáforo está en luz ámbar?", "Debemos pasar rápido ya que cambiará\nDebemos frenar ya que cambiará");
						pTest[playerid] = 5;
                    }
                    else if(pTest[playerid] == 5)
                    {
                        DMV_Question(playerid, "¿Qué situación es la correcta en un accidente?", \
						"Freno delante del coche y arrastro al tipo a la acera\n \
						Alejo mi coche y pongo el cono delante de mi coche\n \
						Alejo mi coche del accidente y socorro al tipo\n \
						Ninguna es correcta");
						pTest[playerid] = 6;
                    }
                    else if(pTest[playerid] == 6)
                    {
                        DMV_Question(playerid, "¿Qué no he de hacer al llenar el vehículo?", \
                        "No apagar el motor\n \
                        Llenar el vehículo con la gasolina adecuada\n \
                        Hablar por teléfono\n \
						Comer una galleta");
						pTest[playerid] = 7;
                    }
                    else if(pTest[playerid] == 7)
                    {
                        DMV_Question(playerid, "¿Qué tipo de embargación te quita la licencia?","Embargación directa\nEmbargación de sanción");
						pTest[playerid] = 8;
						ePoints[playerid] += 1;
                    }
                    else if(pTest[playerid] == 8)
                    {
                        DMV_Question(playerid, "¿Es obligatorio llevar chaleco reflector en la carretera a pie?", \
						"Sí, siempre que sea de noche\n \
						No hace falta si eres peatón y no hay un accidente");
						pTest[playerid] = 9;
						ePoints[playerid] += 1;
                    }
                    else if(pTest[playerid] == 9)
                    {
                        DMV_Question(playerid, "¿Es correcto llevar a un accidentado al hospital en coche?","Sí\nNo");
						pTest[playerid] = 10;
						ePoints[playerid] += 1;
                    }
                    else if(pTest[playerid] == 10)
                    {
						pTest[playerid] = 0;
						if(ePoints[playerid] < 8)
						{
						    FailExam(playerid);
						}
						else
						{
							PassExam(playerid);
						}
                    }
			    }
			    case 1:
			    {
			        if(pTest[playerid] == 1)
			        {
						DMV_Question(playerid, "¿Hasta cuánto podemos aumentar la velocidad para adelanta?", "+40Km-h\n+10Km-h\n+30Km-h\n+20Km-h");
						pTest[playerid] = 2;
			        }
			        else if(pTest[playerid] == 2)
                    {
                        DMV_Question(playerid, "¿Por dónde hemos ir siempre que no adelantemos?", "Carril Derecho\nCarril Izquierdo");
						pTest[playerid] = 3;
                    }
                    else if(pTest[playerid] == 3)
                    {
                        DMV_Question(playerid, "¿Máximo de tiempo permitido en doble fila?", "1\n5\n3\n10");
						pTest[playerid] = 4;
                    }
                    else if(pTest[playerid] == 4)
                    {
                        DMV_Question(playerid, "¿Qué significa cuando el semáforo está en luz ámbar?", "Debemos pasar rápido ya que cambiará\nDebemos frenar ya que cambiará");
						pTest[playerid] = 5;
                    }
                    else if(pTest[playerid] == 5)
                    {
                        DMV_Question(playerid, "¿Qué situación es la correcta en un accidente?", \
						"Freno delante del coche y arrastro al tipo a la acera\n \
						Alejo mi coche y pongo el cono delante de mi coche\n \
						Alejo mi coche del acacidente y socorro al tipo\n \
						Ninguna es correcta");
						pTest[playerid] = 6;
						ePoints[playerid] += 1;
                    }
                    else if(pTest[playerid] == 6)
                    {
                        DMV_Question(playerid, "¿Qué no he de hacer al llenar el vehículo?", \
                        "No apagar el motor\n \
                        Llenar el vehículo con la gasolina adecuada\n \
                        Hablar por teléfono\n \
						Comer una galleta");
						pTest[playerid] = 7;
                    }
                    else if(pTest[playerid] == 7)
                    {
                        DMV_Question(playerid, "¿Qué tipo de embargación te quita la licencia?","Embargación directa\nEmbargación de sanción");
						pTest[playerid] = 8;
                    }
                    else if(pTest[playerid] == 8)
                    {
                        DMV_Question(playerid, "¿Es obligatorio llevar chaleco reflector en la carretera a pie?", \
						"Sí, siempre que sea de noche\n \
						No hace falta si eres peatón y no hay un accidente");
						pTest[playerid] = 9;
                    }
                    else if(pTest[playerid] == 9)
                    {
                        DMV_Question(playerid, "¿Es correcto llevar a un accidentado al hospital en coche?","Sí\nNo");
						pTest[playerid] = 10;
                    }
                    else if(pTest[playerid] == 10)
                    {
						pTest[playerid] = 0;
						ePoints[playerid] += 1;
						if(ePoints[playerid] < 8)
						{
						    FailExam(playerid);
						}
						else
						{
							PassExam(playerid);
						}
                    }
			    }
			    case 2:
			    {
			        if(pTest[playerid] == 1)
			        {
						DMV_Question(playerid, "¿Hasta cuánto podemos aumentar la velocidad para adelanta?", "+40Km-h\n+10Km-h\n+30Km-h\n+20Km-h");
						pTest[playerid] = 2;
			        }
			        else if(pTest[playerid] == 2)
                    {
                        DMV_Question(playerid, "¿Por dónde hemos ir siempre que no adelantemos?", "Carril Derecho\nCarril Izquierdo");
						pTest[playerid] = 3;
                    }
                    else if(pTest[playerid] == 4)
                    {
                        DMV_Question(playerid, "¿Qué significa cuando el semáforo está en luz ámbar?", "Debemos pasar rápido ya que cambiará\nDebemos frenar ya que cambiará");
						pTest[playerid] = 5;
						ePoints[playerid] += 1;
                    }
                    else if(pTest[playerid] == 6)
                    {
                        DMV_Question(playerid, "¿Qué no he de hacer al llenar el vehículo?", \
                        "No apagar el motor\n \
                        Llenar el vehículo con la gasolina adecuada\n \
                        Hablar por teléfono\n \
						Comer una galleta");
						pTest[playerid] = 7;
                    }
                    else if(pTest[playerid] == 7)
                    {
                        DMV_Question(playerid, "¿Qué tipo de embargación te quita la licencia?","Embargación directa\nEmbargación de sanción");
						pTest[playerid] = 8;
                    }
			    }
			    case 3:
			    {
                    if(pTest[playerid] == 1)
			        {
						DMV_Question(playerid, "¿Hasta cuánto podemos aumentar la velocidad para adelanta?", "+40Km-h\n+10Km-h\n+30Km-h\n+20Km-h");
						pTest[playerid] = 2;
			        }
                    else if(pTest[playerid] == 2)
                    {
                        DMV_Question(playerid, "¿Por dónde hemos ir siempre que no adelantemos?", "Carril Derecho\nCarril Izquierdo");
						pTest[playerid] = 3;
						ePoints[playerid] += 1;
                    }
                    else if(pTest[playerid] == 4)
                    {
                        DMV_Question(playerid, "¿Qué significa cuando el semáforo está en luz ámbar?", "Debemos pasar rápido ya que cambiará\nDebemos frenar ya que cambiará");
						pTest[playerid] = 5;
                    }
                    else if(pTest[playerid] == 6)
                    {
                        DMV_Question(playerid, "¿Qué no he de hacer al llenar el vehículo?", \
                        "No apagar el motor\n \
                        Llenar el vehículo con la gasolina adecuada\n \
                        Hablar por teléfono\n \
						Comer una galleta");
						pTest[playerid] = 7;
						ePoints[playerid] += 1;
                    }
                    else if(pTest[playerid] == 7)
                    {
                        DMV_Question(playerid, "¿Qué tipo de embargación te quita la licencia?","Embargación directa\nEmbargación de sanción");
						pTest[playerid] = 8;
                    }
			    }
			}
		}
		else { pTest[playerid] = 0; ePoints[playerid] = 0; }
	}
	if(dialogid == BRILLO_GAFAS && response)
        {
                if(!strcmp(inputtext, "Luminoso", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000025);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                }
                if(!strcmp(inputtext, "Normal", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000040);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                }
                if(!strcmp(inputtext, "Oscuro", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000055);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                }
                if(!strcmp(inputtext, "MuyOscuro", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000065);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                }
	}
	if(dialogid == PETITION_DIALOG)
	{
	    if(response == 1)
	    {
	        format(string, sizeof(string), "* %s acepta una petición.", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        if(Petition_ID[playerid] == 1)
	        {
	            GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
	            format(string, sizeof(string), "* Aceptaste la protección de %s (%d minutos)", giveplayer, GuardTime[playerid]);
				SendClientMessage(playerid, COLOR_WHITE, string);

				Bodyguard_Contracted[playerid] = GuardOffer[playerid];
				Bodyguard_ContractedTime[playerid] = GuardTime[playerid];
				Bodyguard_ContractedTime[GuardOffer[playerid]] = GuardTime[playerid];
				Bodyguard_Client[GuardOffer[playerid]] = playerid;

				GuardOffer[playerid] = 0;
				GuardTime[playerid] = 0;
				Facturing[playerid] = 0;
				Petition_ID[playerid] = 0;
	        }
	        else if(Petition_ID[playerid] == 2)
	        {
	            GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "* Pagaste una multa de $%d al oficial %s.", TicketMoney[playerid], giveplayer);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* %s te ha pagado la multa de $%d.", sendername, TicketMoney[playerid]);
				SendClientMessage(TicketOffer[playerid], COLOR_WHITE, string);
				GivePlayerMoney(playerid, - TicketMoney[playerid]);
				GivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
				TicketOffer[playerid] = 999;
				TicketMoney[playerid] = 0;
				Facturing[playerid] = 0;
				Petition_ID[playerid] = 0;
	        }
	        else if(Petition_ID[playerid] == 3)
	        {
	            GetPlayerName(LiveOffer[playerid], giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "* %s aceptó tu entrevista", sendername);
				Message(LiveOffer[playerid], 0x00FFFFFF, string);
				format(string, sizeof(string), "* Aceptaste la entrevista de %s", giveplayer);
				Message(playerid, 0x00FFFFFF, string);
				Message(playerid, COLOR_YELLOW, "* Utiliza (/c) para hablar fuera de antena. Y (/centrevista) para salir de la entrevista.");
				Message(LiveOffer[playerid], COLOR_YELLOW, "* Utiliza (/c) para hablar fuera de antena. Y (/centrevista) para cancelar la entrevista.");
				TalkingLive[playerid] = 1;
				TalkingLive[LiveOffer[playerid]] = 1;
				Facturing[playerid] = 0;
				Petition_ID[playerid] = 0;
	        }
	        else if(Petition_ID[playerid] == 4)
	        {
	            if(CheckMoney(playerid,NarcoSellPrice[playerid]))
	            {
		            new gunname[12];
		            GetWeaponName(NarcoSellArm[playerid], gunname, sizeof(gunname));
					format(string, sizeof(string), "* Vendistes a %s una %s con %d balas por %d",PlayerName(BuyNarco[playerid]),gunname,NarcoSellAmmo[playerid],NarcoSellPrice[playerid]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* Comprastes a %s una %s con %d balas por %d",PlayerName(playerid),gunname,NarcoSellAmmo[playerid],NarcoSellPrice[playerid]);
					Message(BuyNarco[playerid], COLOR_WHITE, string);
					SafeGivePlayerWeapon(playerid,NarcoSellArm[playerid],NarcoSellAmmo[playerid]);
					SafeGivePlayerWeapon(BuyNarco[playerid],NarcoSellArm[playerid],-NarcoSellAmmo[playerid]);
					Earn(BuyNarco[playerid], NarcoSellPrice[playerid])
					Bought(playerid, NarcoSellPrice[playerid]);
					Facturing[playerid] = 0;
					Petition_ID[playerid] = 0;
					BuyNarco[playerid] = 999;
					NarcoSellPrice[playerid] = 0;
					NarcoSellArm[playerid] = 0;
					NarcoSellAmmo[playerid] = 0;
				}
				else
				{
					Message(playerid, COLOR_GRAD2, "No tienes dinero suficiente!");
					Message(BuyNarco[playerid], COLOR_GRAD2, "El comprado no tiene suficiente dinero!");
					BuyNarco[playerid] = 999;
					NarcoSellPrice[playerid] = 0;
					NarcoSellArm[playerid] = 0;
					NarcoSellAmmo[playerid] = 0;
					Facturing[playerid] = 0;
					Petition_ID[playerid] = 0;
					return 1;
				}
	        }
	        else if(Petition_ID[playerid] == 5)
	        {
	            GetPlayerName(OwnableCarOffer[playerid], giveplayer, sizeof(giveplayer));
    			GetPlayerName(playerid, sendername, sizeof(sendername));
	            Message(playerid, COLOR_WHITE, "¡Felicidades! Tienes nuevo vehículo, utiliza /papeles");
	            Message(OwnableCarOffer[playerid], COLOR_WHITE, "Has vendido tu vehículo!");
				RemovePlayerFromVehicle(OwnableCarOffer[playerid]);
   				GivePlayerMoney(playerid, - OwnableCarPrice[playerid]);
				GivePlayerMoney(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
				PlayerInfo[playerid][pPcarkey] = OwnableCarID[playerid];
				PlayerInfo[OwnableCarOffer[playerid]][pPcarkey] = 9999;
				strmid(CarInfo[OwnableCarID[playerid]][cOwner], sendername, 0, strlen(sendername), 999);
				Petition_ID[playerid] = 0;
      			Facturing[playerid] = 0;
				OwnableCarOffer[playerid] = 999;
				OwnableCarID[playerid] = 999;
				OwnableCarPrice[playerid] = 0;
	        }
	        else if(Petition_ID[playerid] == 6)
	        {
	            GetPlayerName(OwnableCarOffer[playerid], giveplayer, sizeof(giveplayer));
    			GetPlayerName(playerid, sendername, sizeof(sendername));
	            Message(playerid, COLOR_WHITE, "¡Felicidades! Tienes nuevo vehículo, utiliza /papeles");
	            Message(OwnableCarOffer[playerid], COLOR_WHITE, "Has vendido tu vehículo!");
				RemovePlayerFromVehicle(OwnableCarOffer[playerid]);
   				GivePlayerMoney(playerid, - OwnableCarPrice[playerid]);
				GivePlayerMoney(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
				PlayerInfo[playerid][pPcarkey2] = OwnableCarID[playerid];
				PlayerInfo[OwnableCarOffer[playerid]][pPcarkey2] = 9999;
				strmid(CarInfo[OwnableCarID[playerid]][cOwner], sendername, 0, strlen(sendername), 999);
				Petition_ID[playerid] = 0;
      			Facturing[playerid] = 0;
				OwnableCarOffer[playerid] = 999;
				OwnableCarID[playerid] = 999;
				OwnableCarPrice[playerid] = 0;
	        }
	    }
	    else
	    {
	        format(string, sizeof(string), "* %s rechaza una petición.", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        if(Petition_ID[playerid] == 1)
	        {
	            SendClientMessage(playerid, COLOR_RED2, "Rechazaste la petición");
                GuardOffer[playerid] = 0;
				GuardTime[playerid] = 0;
				Facturing[playerid] = 0;
				Petition_ID[playerid] = 0;
	        }
	        else if(Petition_ID[playerid] == 2)
	        {
				SendClientMessage(playerid, COLOR_RED2, "Multa rechazada!");
				format(string, sizeof(string), "* %s te rechazó la multa!", sendername);
				SendClientMessage(TicketOffer[playerid], COLOR_RED2, string);
				TicketOffer[playerid] = 999;
				TicketMoney[playerid] = 0;
				Facturing[playerid] = 0;
				Petition_ID[playerid] = 0;
	        }
	        else if(Petition_ID[playerid] == 3)
	        {
	            GetPlayerName(LiveOffer[playerid], giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "* %s rechazó tu entrevista. Utiliza (/centrevista) para terminar la entrevista.", sendername);
				Message(LiveOffer[playerid], 0x00FFFFFF, string);
				format(string, sizeof(string), "* Rechazaste la entrevista de %s", giveplayer);
				Message(playerid, 0x00FFFFFF, string);
				Facturing[playerid] = 0;
				Petition_ID[playerid] = 0;
	        }
	        else if(Petition_ID[playerid] == 4)
	        {
	            format(string, sizeof(string), "* %s rechaza comprar el arma.", sendername);
				ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            BuyNarco[playerid] = 999;
				NarcoSellPrice[playerid] = 0;
				NarcoSellArm[playerid] = 0;
				NarcoSellAmmo[playerid] = 0;
				Facturing[playerid] = 0;
				Petition_ID[playerid] = 0;
	        }
	        else if(Petition_ID[playerid] == 5)
	        {
	            format(string, sizeof(string), "* %s rechaza comprar el vehículo.", sendername);
				ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            Petition_ID[playerid] = 0;
      			Facturing[playerid] = 0;
				OwnableCarOffer[playerid] = 999;
				OwnableCarID[playerid] = 999;
				OwnableCarPrice[playerid] = 0;
	        }
	    }
	}
	//          AdminPanel
	if(dialogid == DIALOG_ADMIN_MENU)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
						if(!IsPlayerInAnyVehicle(ClickedPlayer[playerid])) {
						TogglePlayerSpectating(playerid, 1);
						PlayerSpectatePlayer(playerid, ClickedPlayer[playerid]);
						SetPlayerInterior(playerid,GetPlayerInterior(ClickedPlayer[playerid]));
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(ClickedPlayer[playerid]));
						return 1;                                           }
						else                                                {
						TogglePlayerSpectating(playerid, 1);
						PlayerSpectateVehicle(playerid, GetPlayerVehicleID(ClickedPlayer[playerid]));
						SetPlayerInterior(playerid,GetPlayerInterior(ClickedPlayer[playerid]));
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(ClickedPlayer[playerid]));
						return 1;											}
	            }
	            case 1:
	            {
		                GetPlayerPos(ClickedPlayer[playerid],p_x,p_y,p_z);
		                SetPosEx(playerid, p_x,p_y,p_z,0,GetPlayerInterior(ClickedPlayer[playerid]),GetPlayerVirtualWorld(ClickedPlayer[playerid]));
		                Message(playerid, COLOR_GRAD2, "Has sido teleportado");
	            }
	            case 2:
	            {
	                    GetPlayerPos(playerid,p_x,p_y,p_z);
		                SetPosEx(ClickedPlayer[playerid], p_x,p_y,p_z,0,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		                Message(ClickedPlayer[playerid], COLOR_GRAD2, "Has sido teleportado");
	            }
	            case 3:
	            {
	                    GetPlayerName(ClickedPlayer[playerid], giveplayer, sizeof(giveplayer));
	                    Message(ClickedPlayer[playerid], COLOR_GRAD2, "Has sido Kickeado");
	                    format(string, sizeof(string), "%s ha kickeado a %s", sendername, giveplayer);
	                    ABroadCast(COLOR_YELLOW2, string, 1);
	                    Kick(ClickedPlayer[playerid]);
	            }
	            case 4:
	            {
	                    GetPlayerName(ClickedPlayer[playerid], giveplayer, sizeof(giveplayer));
	                    Message(ClickedPlayer[playerid], COLOR_GRAD2, "Fuiste baneado.");
	                    format(string, sizeof(string), "%s ha baneado a %s", sendername, giveplayer);
	                    ABroadCast(COLOR_RED2, string, 1);
	                    PlayerInfo[ClickedPlayer[playerid]][pLocked] = 8;
	                    Ban(ClickedPlayer[playerid]);
	            }
	            case 5:
	            {
	                ShowStats(playerid, ClickedPlayer[playerid]);
	            }
			}
	    }
	}
    if(dialogid == DIALOG_SO)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                    format(string, sizeof(string), "Atención: %s [%d] ha solicitado a un Ayudante.", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 1);
	                    PlayerSol[playerid] = 1;
	                    Message(playerid, -1, "{1AFF2A}GameWorld{FFFFFF}: En breve un Ayudante le dará soporte");
				}
				case 1:
				{
	                    format(string, sizeof(string), "Atención: %s [%d] ha solicitado a un Moderador.", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 1);
	                    PlayerSol[playerid] = 1;
	                    Message(playerid, -1, "{1AFF2A}GameWorld{FFFFFF}: En breve un moderador le dará soporte");
				}
				case 2:
				{
	                    format(string, sizeof(string), "Atención: %s [%d] ha solicitado a un Administrador.", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 1);
	                    PlayerSol[playerid] = 1;
	                    Message(playerid, -1, "{1AFF2A}GameWorld{FFFFFF}: En breve un Administrador le dará soporte");
				}
				case 3:
				{
	                    format(string, sizeof(string), "Atención: %s [%d] ha solicitado a un Técnico [1025].", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 1);
	                    PlayerSol[playerid] = 1;
	                    Message(playerid, -1, "{1AFF2A}GameWorld{FFFFFF}: En breve un Técnico le brindará ayuda en lo que necesite.");
				}
			}
		}
	}
    /*if(dialogid == TERMS_OF_USE)
	{
	    if(response == 1)
	    {
	        SpawnPlayer(playerid);
		}
	}*/
	if (dialogid == DLOGIN)
    {
        if (response == 1)
        {
         if(IsNull(inputtext))
            {
                new loginmsg[255];
	    	    new loginname[MAX_PLAYER_NAME+1];
	    	    GetPlayerName(playerid,loginname,MAX_PLAYER_NAME);
	    	    format(loginmsg,sizeof(loginmsg),"{AA3333}GameWorld\n{FFFFFF}La Cuenta con el nombre: {AA3333}'%s'\n{FFFFFF}Ya se encuentra registrada en el servidor.\n\nEscriba su contraseña en el siguiente espacio...\npara ingresar en su {33AA33}cuenta{FFFFFF}.",loginname);
			    ShowPlayerDialog(playerid,DLOGIN,DIALOG_STYLE_PASSWORD,"{33AA33}GameWorld",loginmsg,"Conectar","Salir");
				return 1;
			}
			OnPlayerLogin(playerid,inputtext);
        }
        else
		{
		SendClientMessage(playerid,-1, "Vuelve Pronto");
            Kick(playerid);
        }
        return 1;
    }
	if (dialogid == DREGISTER)
    {
        new MensageLogin[255];
        new NombreLogin[MAX_PLAYER_NAME+1];
        if (response == 1)
        {
            if(strlen(inputtext) > 16)
            {
                Message(playerid, COLOR_GRAD2, "Contraseña con un máximo de 16 carácteres!");
               GetPlayerName(playerid,NombreLogin,MAX_PLAYER_NAME);
   	            format(MensageLogin,sizeof(MensageLogin),"{AA3333}GameWorld \n{FFFFFF}%s Usted introdujo una contraseña muy larga\nPara proseguir escriba una contraseña mas corta En el siguiente espacio\n\nPara completar la {AA3333}Registracion{FFFFFF}.",NombreLogin);
                ShowPlayerDialog(playerid,DREGISTER,DIALOG_STYLE_PASSWORD,"{33AA33}Intente de nuevo",MensageLogin,"Registar","Cancelar");
                return 1;
            }
            if(IsNull(inputtext))
            {
            format(MensageLogin,sizeof(MensageLogin),"{FFFFFF}GameWorld.\n\nLa Cuenta con el nombre :{AA3333} '%s'\n{FFFFFF}Aun no se encuentra registrada en el servidor.\n\nPorfavor Registrate en nuestro servidor.\n\nEscriba su contraseña en el siguiente espacio...\npara crear su contraseña.",NombreLogin);
            ShowPlayerDialog(playerid,DREGISTER,DIALOG_STYLE_PASSWORD,"{D15700}GameWorld - Registro",MensageLogin,"Registrar","Cancelar");
			return 1;
            }
			OnPlayerRegister(playerid,inputtext);
			new loginmsg[255];
	    	    new loginname[MAX_PLAYER_NAME+1];
	    	    GetPlayerName(playerid,loginname,MAX_PLAYER_NAME);
	    	    format(loginmsg,sizeof(loginmsg),"{AA3333}GameWorld\n{FFFFFF}La Cuenta con el nombre: {AA3333}'%s'\n{FFFFFF}Ya se encuentra registrada en el servidor.\n\nEscriba su contraseña en el siguiente espacio...\npara ingresar en su {33AA33}cuenta{FFFFFF}.",loginname);
			    ShowPlayerDialog(playerid,DLOGIN,DIALOG_STYLE_PASSWORD,"{33AA33}GameWorld",loginmsg,"Conectar","Salir");
				}
        else
        {
        SendClientMessage(playerid,-1, "Vuelve Pronto");
            Kick(playerid);
        }
		return 1;
    }
    if(dialogid == DIALOG_REG_MSN)
    {
        if(response == 1)
        {
            new str[16]; str = "@";
            if(strfind(inputtext, str, true) != -1 && strfind(inputtext, "=", true) == -1)
			{
					strmid(PlayerInfo[playerid][pMSN], inputtext, 0, strlen(inputtext), 255);
					format(string,sizeof(string),"¿ Confirmas tu e-mail %s ?",PlayerInfo[playerid][pMSN]);
					ShowPlayerDialog(playerid, DIALOG_REG_TUT, DIALOG_STYLE_MSGBOX, "Información", string, "Confirmar", "Cancelar");
			}
			else return ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Formato Inválido","Has insertado un formato inválido \n Ej: tuemail@hotmail.com","Registrar","Cancelar");
        }
        else    return ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Rellena tus datos","Para poder jugar debes registrar tu e-mail","Registrar","Cancelar");
	}
	if(dialogid == DIALOG_REG_TUT)
	{
	    if(response == 1)
	    {
	        ClearChatbox(playerid, 10);
	        TutTime[playerid] = 5;
	        TutorialStep_Forward(playerid);
	        SetPlayerVirtualWorld(playerid, 9);
		}
		else
		{
			ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Rellena tus datos","Para poder jugar debes registrar tu e-mail","Registrar","Cancelar");
		}
	}
	if(dialogid == UMBRELLA7_DIALOG)
	{
	    if(response == 1)
	    {
	        new agents, agents2;
			agents 	= 0;
			agents2 = 0;
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
		  		{
		    		if(Umbrella7(i))
		      		{
		      			agents++;
		         	}
            		else if(Umbrella7(i) && OnDuty[i] == 1)
		      		{
		      			agents++;
		         	}
		        }
			}
	        switch (listitem)
	        {
	            case 0: // Detective
				{
				    if(agents < 1) {  SendClientMessage(playerid, COLOR_WHITE, "Vuelve más tarde, ahora mismo no hay detectives disponibles");return 1; }
				    GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** Recepción: %s solicita servicio detective, le espera en recepción! (%d)**", sendername,contacto);
					SendRadioMessage(8, TEAM_BLUE_COLOR, string);
					SendClientMessage(playerid, COLOR_WHITE, "Solicitaste un detective, espera a que venga");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 1: // GuardaEspaldas
				{
				    if(agents < 1) {  SendClientMessage(playerid, COLOR_WHITE, "Vuelve más tarde, ahora mismo no hay guardaespaldas disponibles");return 1; }
				    GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** Recepción: %s solicita servicio de protección, ¿ un guardaespaldas que se ofrezca? (%d)**", sendername,contacto);
					SendRadioMessage(8, TEAM_BLUE_COLOR, string);
					SendClientMessage(playerid, COLOR_WHITE, "Solicitaste un guardaespaldas, espera a que venga");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 2: // Espionaje
				{
				    if(agents < 1) {  SendClientMessage(playerid, COLOR_WHITE, "Vuelve más tarde, ahora mismo no hay espías disponibles");return 1; }
				    GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** Recepción: %s solicita servicio de espionaje, algun agente que le atienda (%d)**", sendername,contacto);
					SendRadioMessage(8, TEAM_BLUE_COLOR, string);
					SendClientMessage(playerid, COLOR_WHITE, "Solicitaste un espía, espera a que venga");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 3: // Espionaje
				{
				    if(agents < 1) {  SendClientMessage(playerid, COLOR_WHITE, "Vuelve más tarde, ahora mismo no hay espías disponibles");return 1; }
				    GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** Recepción: %s solicita servicio de espía, algun agente que le atienda (%d)**", sendername,contacto);
					SendRadioMessage(8, TEAM_BLUE_COLOR, string);
					SendClientMessage(playerid, COLOR_WHITE, "Solicitaste un espía, espera a que venga");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 4: // Otro
				{
				    if(agents < 1) {  SendClientMessage(playerid, COLOR_WHITE, "Vuelve más tarde, ahora mismo no hay agentes disponibles");return 1; }
				    ShowPlayerDialog(playerid,UMBRELLA7_DIALOG2,DIALOG_STYLE_INPUT,"Otro servicio",">> Escriba el servicio que desee <<","Enviar","Cancelar");
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				case 5: // Info
				{
                    format(string, sizeof(string), "Hay %d miembros OnLine, y %d agentes disponibles", agents, agents2);
					SendClientMessage(playerid, COLOR_GREEN, string);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
			}
		}
	}
	if(dialogid == UMBRELLA7_DIALOG2)
	{
	    if(response == 1)
	        {
	            new servicio[64];
				strmid(servicio, inputtext, 0, strlen(inputtext), 255);
	            format(string, sizeof(string), "** Recepción: %s solicita %s  (%d)**", sendername, servicio,contacto);
				SendRadioMessage(8, TEAM_BLUE_COLOR, string);
				format(string, sizeof(string), "** Has solicitado: %s  ( Espera a un agente o una respuesta )**", servicio);
				SendClientMessage(playerid, COLOR_WHITE, string);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
	}
	if(dialogid == U7_OPEN)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
				case 0:
				{
    				if(Revisado[playerid] == 1 || Umbrella7(playerid))
			        {
			            MoveDynamicObject(u7d3, 247.81130981445, 110.8671875, 1002.21875, 0.5);
			        }
				}
				case 1:
				{
				    if(Umbrella7(playerid))
				    {
				        MoveDynamicObject(u7d3, 247.81130981445, 110.8671875, 1002.21875, 0.5);
						SendRadioMessage(1, TEAM_BLUE_COLOR, "La Central de Inteligencia está siendo asaltado!");
				    }
				    }
	        }
	    }
	}
	if(dialogid == EQUIPO_PIZZA)
	{
	    if(response == 1)
	    {
	        ResetPlayerWeapons(playerid);
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        switch (listitem)
	        {
	            case 0:
	            {
	            				Skin(playerid, 155);
								format(string, sizeof(string), "* %s se viste con su ropa de pizzero.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 1:
				{
								Skin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con su ropa normal.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	}
	if(dialogid == EQUIPO_FBI){
	    if(response == 1){
	        ResetPlayerWeapons(playerid);
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        switch (listitem){
	            case 0:{
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 300);
								SafeGivePlayerWeapon(playerid, 41, 1000);
								Skin(playerid, 286);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se pone el uniforme de FBI.", sendername);
								ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 1:{
				                SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 300);
								SafeGivePlayerWeapon(playerid, 29, 300);
								SafeGivePlayerWeapon(playerid, 41, 1000);
								Skin(playerid, 286);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se pone el uniforme de FBI.", sendername);
								ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 2:{
				                if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 17, 20);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SafeGivePlayerWeapon(playerid, 27, 1850);
								SafeGivePlayerWeapon(playerid, 34, 1850);
								SafeGivePlayerWeapon(playerid, 31, 1250);
								SetPlayerArmour(playerid, 200);
								SetHP(playerid, 100);
								Skin(playerid, 285);
								format(string, sizeof(string), "* %s coge el equipo SWAT.", sendername);
								ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 3:{
								if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 137); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 152); }
								PlayerInfo[playerid][pMask] = 1;
								SafeGivePlayerWeapon(playerid, 24, 200);
								SafeGivePlayerWeapon(playerid, 43, 75);
								Message(playerid, -1, "Estas encubierto y tienes una máscara. [/mascara]");
				}
				case 4:{
								if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 135); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 151); }
								PlayerInfo[playerid][pMask] = 1;
								SafeGivePlayerWeapon(playerid, 24, 200);
								SafeGivePlayerWeapon(playerid, 43, 75);
								Message(playerid, -1, "Estas encubierto y tienes una máscara. [/mascara]");
				}
				case 5:
				{
								if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 98); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 172); }
								PlayerInfo[playerid][pMask] = 1;
								SafeGivePlayerWeapon(playerid, 24, 200);
								SafeGivePlayerWeapon(playerid, 43, 75);
								Message(playerid, -1, "Estas encubierto y tienes una máscara. [/mascara]");
				}
				case 6:
				{
								SetPlayerArmour(playerid, 200);
								SetHP(playerid, 100);
				}
				case 7:{
				                Skin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con su ropa normal.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	}
	if(dialogid == EQUIPO_GOB)
    {
 	    if(response == 1)
 	    {
 	        ResetPlayerWeapons(playerid);
   	        switch(listitem)
	        {
		        case 0: //Chofer del gobierno
		        {
                    if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
					ResetPlayerWeapons(playerid);
					Skin(playerid, 255);
					SetHP(playerid, 100);
					format(string, sizeof(string), "* %s se pone el uniforme de Chofer.", sendername);
					ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        }
		        case 1: //Agente en practicas
		        {
					if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
     				if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar este uniforme!");
					ResetPlayerWeapons(playerid);
					Skin(playerid, 163);
					SetHP(playerid, 100);
					SetPlayerArmour(playerid, 100);
					SafeGivePlayerWeapon(playerid, 3, 1);
                    SafeGivePlayerWeapon(playerid, 24, 50);
                    format(string, sizeof(string), "* %s se pone el uniforme de Agente en practicas.", sendername);
					ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 2: //Agente del Servico Secreto
				{
                    if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
                    if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "No puedes utilizar este uniforme!");
					ResetPlayerWeapons(playerid);
					Skin(playerid, 164);
					SetHP(playerid, 100);
					SetPlayerArmour(playerid, 100);
                    SafeGivePlayerWeapon(playerid, 3, 1);
                    SafeGivePlayerWeapon(playerid, 24, 50);
                    SafeGivePlayerWeapon(playerid, 31, 200);
					format(string, sizeof(string), "* %s se pone el uniforme de Agente del Servico Secreto.", sendername);
					ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 3: //Ministro
				{
                    if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "No puedes utilizar este uniforme!");
					if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
					ResetPlayerWeapons(playerid);
					Skin(playerid, 165);
					SetHP(playerid, 100);
					format(string, sizeof(string), "* %s se pone el uniforme de Ministro.", sendername);
					ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 4: //Ministro General
				{
                    if(PlayerInfo[playerid][pRank] < 5) return Message(playerid, COLOR_GRAD2, "No puedes utilizar este uniforme!");
					if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
					ResetPlayerWeapons(playerid);
					Skin(playerid, 17);
					SetHP(playerid, 100);
					format(string, sizeof(string), "* %s se pone el uniforme de Ministro General.", sendername);
					ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                 }
                 case 5: //Botiquin y Chaleco
				{
					ResetPlayerWeapons(playerid);
					SetHP(playerid, 100);
                    SetPlayerArmour(playerid, 100);
				}
			}
		}
	}
	if(dialogid == EQUIPO_NG){
	    if(response == 1){
	        ResetPlayerWeapons(playerid);
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        switch (listitem){
	            case 0:{
				                SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 31, 3250);
								Skin(playerid, 179);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de entrenamiento.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
	            case 1:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 46, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 31, 3250);
								SafeGivePlayerWeapon(playerid, 29, 5250);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de Soldado.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
	            case 2:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 34, 200);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se equipa con armas de Francotirador.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
	            case 3:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 29, 500);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste y equipa con US Army Liviana.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
	            case 4:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SafeGivePlayerWeapon(playerid, 27, 400);
								SafeGivePlayerWeapon(playerid, 31, 4400);
								SafeGivePlayerWeapon(playerid, 16, 8);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste y equipa con US Army Pesada.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
	            case 5:{
								Skin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con su ropa normal.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
	            case 6:{
				                SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s coje un chaleco antibalas.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	}
	if(dialogid == EQUIPO_MECANICO)
	{
	if(response == 1)
 {
 switch (listitem)
 {
 case 0:
 {
SafeGivePlayerWeapon(playerid, 41, 9999);
Skin(playerid, 8);
SetHP(playerid, 100);
format(string, sizeof(string), "* %s se viste con uniforme de ayudante.", sendername);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}
case 1:
{
if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "Eres ayudante no mecánico!");
SafeGivePlayerWeapon(playerid, 41, 9999);
Skin(playerid, 50);
SetHP(playerid, 100);
format(string, sizeof(string), "* %s se viste con uniforme de mecánico.", sendername);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}
case 2:
{
if(PlayerInfo[playerid][pRank] < 6) return Message(playerid, COLOR_GRAD2, "No eres director!");
SafeGivePlayerWeapon(playerid, 41, 9999);
Skin(playerid, 268);
SetHP(playerid, 100);
format(string, sizeof(string), "* %s se viste con uniforme de director.", sendername);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}
case 3:
{
Skin(playerid, PlayerInfo[playerid][pChar]);
format(string, sizeof(string), "* %s se viste con ropa normal.", sendername);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}
}
}
}
	if(dialogid == EQUIPO_DIALOG)
	{
	    if(response == 1)
	    {
	        ResetPlayerWeapons(playerid);
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        switch (listitem)
	        {
	            case 0:
				{
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 300);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								Skin(playerid, 71);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de Cadete.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 1:
				{
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								SafeGivePlayerWeapon(playerid, 41, 1500);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								Skin(playerid, 280);
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { Skin(playerid, 280); }
								if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) { Skin(playerid, 282); }
								format(string, sizeof(string), "* %s se viste con uniforme de Agente.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 2:
				{
				                if(PlayerInfo[playerid][pRank] < 1) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								SafeGivePlayerWeapon(playerid, 41, 1500);
								Skin(playerid, 211);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de mujer.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 3:
				{
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 700);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								Skin(playerid, 284);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de Motorista.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 4:
				{
				                if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 17, 20);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SafeGivePlayerWeapon(playerid, 27, 1850);
								SafeGivePlayerWeapon(playerid, 34, 1850);
								SafeGivePlayerWeapon(playerid, 31, 1250);
								SetPlayerArmour(playerid, 200);
								SetHP(playerid, 100);
								Skin(playerid, 285);
								format(string, sizeof(string), "* %s se viste con equipo de Antidisturbio.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetPlayerAttachedObject( playerid, 0, 18637, 5, -0.027496, -0.114117, -0.139993, 69.771209, 0.000000, 75.639694, 1.000000, 1.000000, 1.000000 );
								Att_Obj_Slot_0[playerid] = "Escudo Táctico";
								SetPlayerAttachedObject( playerid, 3, 368, 2, -0.012214, 0.055286, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
								Att_Obj_Slot_3[playerid] = "Vision Nocturna";
								SetPlayerAttachedObject( playerid, 4, 1672, 7, 0.000280, 0.024868, -0.122518, 103.762588, 274.482788, 268.962951, 1.000000, 1.000000, 1.000000 );
								Att_Obj_Slot_4[playerid] = "Granada gas";
				}
				case 5:
				{
				                if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								Skin(playerid, 265);
								format(string, sizeof(string), "* %s se viste con uniforme de Inspector.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 6:
				{
				                if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SafeGivePlayerWeapon(playerid, 43, 500);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								Skin(playerid, 217);
								format(string, sizeof(string), "* %s se viste con uniforme de Policía Científica.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 7:
				{
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SetHP(playerid, 100);
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { Skin(playerid, 283); }
								if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) { Skin(playerid, 288); }
								format(string, sizeof(string), "* %s se viste con el traje de Comisario.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 8:
				{
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
								SetPlayerArmour(playerid, 100);
								SetHP(playerid, 100);
								format(string, sizeof(string), "* %s se coloca el chaleco antibalas.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 9:
				{
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								format(string, sizeof(string), "* %s agarra su pistola & porra.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 10:
				{
								Skin(playerid, PlayerInfo[playerid][pChar]);
								SafeGivePlayerWeapon(playerid, 24, 175);
								format(string, sizeof(string), "* %s se viste con ropa normal.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	}
	if(dialogid == EQUIPO_DIALOG3)
	{
	    if(response == 1)
	    {
	        ResetPlayerWeapons(playerid);
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        switch (listitem)
	        {
	            case 0:
				{
                                SafeGivePlayerWeapon(playerid, 43, 100);
								SetHP(playerid, 100);
                                SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* Secretario %s toma su material de trabajo.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 1:
				{
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "Rango insuficiente!");
                                SafeGivePlayerWeapon(playerid, 43, 100);
								SafeGivePlayerWeapon(playerid, 24, 200);
								Skin(playerid, 165);
								SetHP(playerid, 100);
                                SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* Detective %s se viste con su uniforme.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 2:
				{
				                if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "Rango insuficiente!");
                                SafeGivePlayerWeapon(playerid, 43, 100);
								SafeGivePlayerWeapon(playerid, 24, 200);
								SafeGivePlayerWeapon(playerid, 29, 500);
								Skin(playerid, 163);
								SetHP(playerid, 100);
                                SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* Guarda Espaldas %s se viste con su uniforme.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 3:
				{
				                if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "Rango insuficiente!");
                                SafeGivePlayerWeapon(playerid, 43, 100);
                                SafeGivePlayerWeapon(playerid, 24, 200);
                                SafeGivePlayerWeapon(playerid, 31, 500);
								Skin(playerid, 164);
								format(string, sizeof(string), "* Super Agente %s se viste con su uniforme.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetHP(playerid, 100);
                                SetPlayerArmour(playerid, 100);
				}
				case 4:
				{
				                if(PlayerInfo[playerid][pRank] < 5) return Message(playerid, COLOR_GRAD2, "Rango insuficiente!");
                                SafeGivePlayerWeapon(playerid, 43, 100);
                                SafeGivePlayerWeapon(playerid, 24, 200);
                                SafeGivePlayerWeapon(playerid, 31, 500);
                                SafeGivePlayerWeapon(playerid, 34, 30);
								Skin(playerid, 164);
								format(string, sizeof(string), "* Agente 47 %s se viste con su uniforme.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetHP(playerid, 100);
                                SetPlayerArmour(playerid, 100);
				}
				case 5:
				{
				                if(PlayerInfo[playerid][pRank] < 6) return Message(playerid, COLOR_GRAD2, "Rango insuficiente!");
                                SafeGivePlayerWeapon(playerid, 43, 100);
                                SafeGivePlayerWeapon(playerid, 24, 200);
                                SafeGivePlayerWeapon(playerid, 31, 500);
                                SafeGivePlayerWeapon(playerid, 34, 30);
								Skin(playerid, 294);
								format(string, sizeof(string), "* Director %s se viste con su uniforme.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetHP(playerid, 100);
                                SetPlayerArmour(playerid, 100);
				}
				case 6:
				{
								Skin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con ropa normal.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetHP(playerid, 100);
                                SetPlayerArmour(playerid, 100);
				}
			}
		}
	}
	if(dialogid == EQUIPO_DIALOG4)
	{
	    if(response == 1)
	    {
	        switch (listitem)
	        {
	            case 0:
				{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 70);
								format(string, sizeof(string), "* %s se pone su bata blanca y se desinfecta sus manos.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 1:
				{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 274);
								format(string, sizeof(string), "* %s se viste y guarda su radio.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 2:
				{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 275);
								format(string, sizeof(string), "* %s se viste y guarda su radio.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 3:
				{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 276);
								format(string, sizeof(string), "* %s se viste y guarda su radio.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 4:
				{
								if(OnDuty[playerid] == 1) {	SendClientMessage(playerid, COLOR_GRAD2, "Estás en labor! Termina tu turno!"); return 1;    }
								SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con ropa normal", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	}
	if(dialogid == EQUIPO_DIALOG5)
	{
	    if(response == 1)
	    {
	        switch (listitem)
	        {
	            case 0:
				{
								SetPlayerSkin(playerid, 253);
								format(string, sizeof(string), "* %s se pone su traje de chófer.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 1:
				{
								SetPlayerSkin(playerid, 255);
								format(string, sizeof(string), "* %s se pone su traje de chófer.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 2:
				{
								SetPlayerSkin(playerid, 261);
								format(string, sizeof(string), "* %s se pone su traje de chófer.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 3:
				{
								if(OnDuty[playerid] == 1) {	SendClientMessage(playerid, COLOR_GRAD2, "Estás en labor! Termina tu turno!"); return 1;    }
								SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con ropa normal", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	}
	if(dialogid == MATERIALES_DIALOG)
	{
	    if(response == 1)
	    {
	        switch (listitem)
	        {
	            case 0:
				{
                                if(GetPlayerMoney(playerid) < 100) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
								SendClientMessage(playerid, COLOR_GRAD2, "Comprastes 100 materiales a 100$, los puedes usar con el comando /fabricar");
								PlayerInfo[playerid][pMats] += 100;
								Bought(playerid, 100);
				}
				case 1:
				{
                                if(GetPlayerMoney(playerid) < 200) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
				                SendClientMessage(playerid, COLOR_GRAD2, "Comprastes 200 materiales a 200$, los puedes usar con el comando /fabricar");
								PlayerInfo[playerid][pMats] += 200;
								Bought(playerid, 200);
				}
				case 2:
				{
				                 if(GetPlayerMoney(playerid) < 500) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
				               SendClientMessage(playerid, COLOR_GRAD2, "Comprastes 500 materiales a 500$, los puedes usar con el comando /fabricar");
								PlayerInfo[playerid][pMats] += 500;
								Bought(playerid, 500);
			   }
				case 3:
				{
			                	if(GetPlayerMoney(playerid) < 1000) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
				                SendClientMessage(playerid, COLOR_GRAD2, "Comprastes 1000 materiales a 1.000$, los puedes usar con el comando /fabricar");
								PlayerInfo[playerid][pMats] += 1000;
								Bought(playerid, 1000);
				}
				case 4:
				{
				                if(GetPlayerMoney(playerid) < 2000) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
				                SendClientMessage(playerid, COLOR_GRAD2, "Comprastes 2000 materiales a 2.000$, los puedes usar con el comando /fabricar");
								PlayerInfo[playerid][pMats] += 2000;
								Bought(playerid, 2000);
				}
				case 5:
				{
				                if(GetPlayerMoney(playerid) < 5000) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
				                SendClientMessage(playerid, COLOR_GRAD2, "Comprastes 5000 materiales a 5.000$, los puedes usar con el comando /fabricar");
								PlayerInfo[playerid][pMats] += 5000;
								Bought(playerid, 5000);
				}
				case 6:
				{
                                if(GetPlayerMoney(playerid) < 10000) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
								SendClientMessage(playerid, COLOR_GRAD2, "Comprastes 10.000 materiales a 10.000$, los puedes usar con el comando /fabricar");
								PlayerInfo[playerid][pMats] += 10000;
								Bought(playerid, 10000);
				}
					case 7:
				{
				                if(GetPlayerMoney(playerid) < 20000) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
								SendClientMessage(playerid, COLOR_GRAD2, "Comprastes 20000 materiales a 20.000$, los puedes usar con el comando /fabricar");
								PlayerInfo[playerid][pMats] += 20000;
								Bought(playerid, 20000);
				}
			}
		}
	}
	if(dialogid == D247_BUY)
	{
		if(response == 1)
		{
		    switch(listitem)
		    {
      			case 0:
		        {
		            if(CheckMoney(playerid,200))
		            {
		                new randphone = 100000 + random(899999);
						PlayerInfo[playerid][pPnumber] = randphone;
						format(string, sizeof(string), "Has comprado un nuevo teléfono cuyo número es: %d",PlayerInfo[playerid][pPnumber]);
			            Message(playerid, COLOR_WHITE, string);
			            Bought(playerid, 200);
			            Till(4,200);
						Till(5,200);
						Till(6,200);
						Till(31, 200);
						Till(33, 200);
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            return 1;
					}
		        }
	         	case 1:
		        {
			            SendClientMessage(playerid, COLOR_WHITE, "Este producto esta en Mantenimiento(OFF) Les recomendamos los mapas publicos");
			            SendClientMessage(playerid, COLOR_WHITE, "Nota: los mapas publicos estan en todo LS solo tiene que buscar bien.");
		        }
	         	case 2:
		        {
		            if(CheckMoney(playerid,5))
		            {
			            ShowPlayerDialog(playerid, LOTTO_BUY, DIALOG_STYLE_INPUT, "Lotería Nacional","Inserta un número entre 1 y 250. Mucha Suerte!","Comprar","Cancelar");
			            return 1;
					}
		        }
		         case 3:
		        {
		            if(CheckMoney(playerid,70))
		            {
                        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            SafeGivePlayerWeapon(playerid, 41, 500);
			            SendClientMessage(playerid, COLOR_WHITE, "Has comprado un Spray.");
			            Bought(playerid, 40);
			            Till(4,40);
						Till(5,40);
						Till(6,40);
						Till(31,40);
						Till(33, 40);
			            return 1;
					}

		        }
	         	case 4:
		        {
		            if(CheckMoney(playerid,20))
		            {
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            PlayerInfo[playerid][pCigarettes] = 20;
			            SendClientMessage(playerid, COLOR_WHITE, "Has una cajetilla con 20 cigarros, utilza \"/fumar\"");
			            Bought(playerid, 20);
			            Till(4,20);
						Till(5,20);
						Till(6,20);
						Till(31, 20);
						Till(33, 20);
			            return 1;
					}
		        }
	         	case 5:
		        {
		            if(CheckMoney(playerid,45))
		            {
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            SafeGivePlayerWeapon(playerid, 43, 50);
			            SendClientMessage(playerid, COLOR_WHITE, "Has comprado una cámara de fotos.");
			            Bought(playerid, 70);
			            Till(4,70);
						Till(5,70);
						Till(6,70);
						Till(31,70);
						Till(33, 70);
			            return 1;
					}
		        }
	         	case 6:
		        {

					if(CheckMoney(playerid,20))
		            {
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            PlayerInfo[playerid][pLighter] = 30;
			            SendClientMessage(playerid, COLOR_WHITE, "Compraste un encendedor.");
			            Bought(playerid, 20);
			            Till(4,20);
						Till(5,20);
						Till(6,20);
						Till(31,20);
						Till(33, 20);
			            return 1;
					}
		        }
		        case 7:
		        {

					if(CheckMoney(playerid,300))
		            {
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            PlayerInfo[playerid][pGafas] = 1;
			            SendClientMessage(playerid, COLOR_WHITE, "Compraste unas gafas, puedes utilizar: /gafas & /brillo");
			            Bought(playerid, 300);
			            Till(4,300);
						Till(5,300);
						Till(6,300);
						Till(31, 300);
						Till(33, 300);
			            return 1;
					}
		        }
		        case 8:
		        {
					if(CheckMoney(playerid,175))
		            {
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            PlayerInfo[playerid][pMaleta] = 1;
			            SendClientMessage(playerid, COLOR_WHITE, "Compraste una maleta, puedes utilizar /maleta");
			            Bought(playerid, 175);
			            Till(4,175);
						Till(5,175);
						Till(6,175);
						Till(31,175);
						Till(33, 175);
			            return 1;
					}
		        }
		        case 9:
		        {
					if(CheckMoney(playerid,75))
		            {
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            PlayerInfo[playerid][pMochila] = 1;
			            SendClientMessage(playerid, COLOR_WHITE, "Compraste una mochila, utiliza /inv y /mochila");
			            Bought(playerid, 75);
			            Till(4,75);
						Till(5,75);
						Till(6,75);
						Till(31,75);
						Till(33, 75);
			            return 1;
					}
		        }
		        case 10:
		        {
					if(CheckMoney(playerid,120))
		            {
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            PlayerInfo[playerid][pCasco] = 1;
			            SendClientMessage(playerid, COLOR_WHITE, "Compraste un casco, utiliza /casco");
			            Bought(playerid, 120);
			            Till(4,120);
						Till(5,120);
						Till(6,120);
						Till(31,120);
						Till(33, 120);
			            return 1;
					}
		        }
		        case 11:
		        {
					if(CheckMoney(playerid,50))
		            {
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            Skate[playerid] = 1;
			            Message(playerid, COLOR_WHITE, "Compraste unos patines, utiliza /patines");
			            Bought(playerid, 50);
			            Till(4,50);
						Till(5,50);
						Till(6,50);
						Till(31,50);
						Till(33, 50);
			            return 1;
					}
				}
				case 12:
		        {
					if(CheckMoney(playerid,60))
		            {
			            ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            PlayerInfo[playerid][pWalkie] = 1;
			            Message(playerid, COLOR_WHITE, "Compraste el Walkie-Talkie - /walkie - /frecuencia - /wt");
			            Bought(playerid, 60);
			            Till(4,60);
						Till(5,60);
						Till(6,60);
						Till(31,60);
						Till(33, 60);
			            return 1;
					}
		        }
			}
		}
	}
	if(dialogid == LOTTO_BUY)
	{
		if(response == 1)
		{
		    new lenght = strlen(inputtext);
		    if(lenght > 0 && lenght < 4)
		    {
				PlayerInfo[playerid][pLottoNr] = strval(inputtext);
				Message(playerid, COLOR_WHITE, "Lotería comprada!");
				Bought(playerid, 5);
				Till(4,5);
				Till(5,5);
				Till(6,5);
				Till(31,5);
			}
		}
	}
	if(dialogid == CREATE_WEAPON)
	{
	    if(response == 1)
     	{
     	    switch(listitem)
     	    {
     	        case 0:
     	        {
     	            ShowPlayerDialog(playerid,CREATE_WEAPON,DIALOG_STYLE_LIST,"Fábrica de Armas",   \
					"Arma\tMateriales \tMunición/Unidades\n" \
					"Navaja 	\t25 \t1\n" \
					"Bate 		\t40 \t1\n" \
					"Katana		\t80 \t1\n" \
     "C.Molotov 	\t120 \t1\n" \
					"9mm 		\t200 \t140\n" \
					"D.Eagle 	\t300 \t140\n" \
					"S.Pistol 	\t280 \t140\n" \
					"Shotgun	\t450 \t60\n" \
					"SPAS12		\t500 \t60\n" \
					"MP5		\t190 \t150\n" \
					"AK47		\t200\t150\n" \
					"M4			\t200 \t150\n" \
					"Rifle		\t420 \t45\n" \
					"Sniper		\t500 \t60\n" \
					,"Aceptar","Salir");
     	        }
     	        case 1: MakeWeapon(playerid, 25, 4, 1);
     	        case 2: MakeWeapon(playerid, 40, 5, 1);
     	        case 3: MakeWeapon(playerid, 80, 8, 1);
     	        case 4: MakeWeapon(playerid, 120, 18, 1);
     	        case 5: MakeWeapon(playerid, 200, 22, 140);
     	        case 6: MakeWeapon(playerid, 300, 24, 140);
     	        case 7: MakeWeapon(playerid, 280, 23, 140);
     	        case 8: MakeWeapon(playerid, 450, 25, 60);
     	        case 9: MakeWeapon(playerid, 500, 27, 60);
     	        case 10: MakeWeapon(playerid, 190, 29, 150);
     	        case 11: MakeWeapon(playerid, 200, 30, 150);
     	        case 12: MakeWeapon(playerid, 200, 31, 150);
     	        case 13: MakeWeapon(playerid, 420, 33, 45);
     	        case 14: MakeWeapon(playerid, 500, 34, 60);
			}
		}
	}
	if(dialogid == AMMUNATION_MENU)
	{
		if(response == 1)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            ShowPlayerDialog(playerid,AMMUNATION_MENU_DEF,DIALOG_STYLE_LIST,"Defensa personal","Spray - (5$)\nPuño americano - (25$)\nNavaja - (45$)\nCané - (15$)\nBate - (75$)","Comprar","Atras");
		        }
				case 1:
				{
				    ShowPlayerDialog(playerid,AMMUNATION_MENU_PIS,DIALOG_STYLE_LIST,"Pistolas","9mm :20: - (220$)\nDesert Eagle :10: - (300$)","Aceptar","Atras");
				}
				case 2:
				{
				    ShowPlayerDialog(playerid,AMMUNATION_MENU_AME,DIALOG_STYLE_LIST,"Ametralladores-SubFusiles","MP5 :70: - (580$)\nM4 :100: - (780$)\nAK-47 :220: - (1000$)","Aceptar","Atras");
				}
				case 3:
				{
				    ShowPlayerDialog(playerid,AMMUNATION_MENU_ESC,DIALOG_STYLE_LIST,"Escopetas","Escopeta Caza :20: - (399$)\nShotgun :15: - (499$)","Aceptar","Atras");
				}
				case 4:
				{
				    ShowPlayerDialog(playerid,AMMUNATION_MENU_PRO,DIALOG_STYLE_LIST,"Protección","Chaleco - (400$)\nCaja PainKillerS :6: - (99$)","Aceptar","Atras");
				}
			}
		}
		else ShowPlayerDialog(playerid,AMMUNATION_MENU,DIALOG_STYLE_LIST,"Ammunation - Compras","Defensa personal\nPistolas\nAmetralladores-SubFusiles\nEscopetas\nProtección","Ver","Salir");
	}
	if(dialogid == CCOMIDA)
	{
		if(response == 1)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
          		if(GetPlayerMoney(playerid) < 10) return Message(playerid,COLOR_GREY,"No tienes suficiente dinero");
                if(ComidaParaLlevar[playerid] == 5) return Message(playerid, COLOR_FADE1, "Llevas demasiada comida encima, no puedes con mas.");
                format(string, sizeof(string), "* %s compra un hotdog", PlayerName(playerid));
                ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                Bought(playerid, 10);
				ComidaParaLlevar[playerid]+=1;
				SendClientMessage(playerid, 0x018CFEFF,"Has comprado un Hotdog. (/Hotdog) Para comertela.");
				Hotdog[playerid]+=1;
		        }
				case 1:
				{
				if(GetPlayerMoney(playerid) < 10) return Message(playerid,COLOR_GREY,"No tienes suficiente dinero");
                if(ComidaParaLlevar[playerid] == 5) return Message(playerid, COLOR_FADE1, "Llevas demasiada comida encima, no puedes con mas.");
                format(string, sizeof(string), "* %s compra una hamburguesa", PlayerName(playerid));
                ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                Bought(playerid, 10);
				ComidaParaLlevar[playerid]+=1;
				SendClientMessage(playerid, 0x018CFEFF,"Has comprado una Hamburguesa. (/Hamburguesa) Para comertela.");
	            Hamburguesa[playerid]+=1;
					}
			}
		}
	}
	if(dialogid == MAPAS)
	{
		if(response == 1)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
                    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1829.8955,-1842.6577,13.5781, 10.0)
		        }
				case 1:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1480.2101,-1777.2498,14.9448, 10.0)
					}
				case 2:
				{
				   format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1352.6198,-1754.8181,13.3569, 10.0)
				}
				case 3:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1310.1400,-1369.4182,13.5620, 10.0)
				}
				case 4:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1186.2382,-1323.7087,13.5591, 10.0)
				}
				case 5:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1363.6033,-1279.7919,13.5469, 10.0)
				}
				case 6:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1541.5209,-1675.4277,13.5527, 10.0)
				}
				case 7:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1415.3833,-1701.7793,13.5395, 10.0)
				}
				case 8:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1827.3917,-1682.9905,13.5469, 10.0)
				}
				case 9:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 2094.7861,-1806.5013,13.5509, 10.0)
				}
				case 10:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1269.9081,-1843.0800,13.3978, 10.0)
				}
				case 11:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1019.0943,-932.1990,42.1797, 10.0)
				}
				case 12:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 557.1231,-1257.1746,17.2422, 10.0)
				}
				case 13:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1635.9744,-1713.2931,13.2969, 10.0)
				}
				case 14:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 641.3261,-1357.7078,13.4083, 10.0)
				}
				case 15:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 2233.4822,-1333.4847,23.9816, 10.0)
				}
				case 16:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1315.7316,-912.7621,38.0074, 10.0)
				}
				case 17:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1645.4442,-2184.7429,13.5469, 10.0)
				}
				case 18:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 1570.4658,-2286.0923,13.3828, 10.0)
				}
				case 19:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 2075.2981,-1914.3229,13.3828, 10.0)
				}
				case 20:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps",PlayerName(playerid));
				    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid,1837.060424,-1417.340332,13.562500,10.0);
				}
				case 21:
				{
				    format(string, sizeof(string), "* %s Deja de mirar el mapa/gps",PlayerName(playerid));
				    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerCheckpoint(playerid, 2447.89,-1962.84,13.55, 10.0);
				}
			}
		}
	}
 if(dialogid == TRABAJOS)
	{
		if(response == 1)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
					 SetPlayerCheckpoint(playerid, 994.3551,-1296.4821,13.5469, 10.0)
					 Message(playerid, COLOR_GRAD2, "Se ha marcado en el minimapa el trabajo de vendedor de móbiles");
		        }
				case 1:
				{
					 SetPlayerCheckpoint(playerid, 1616.0334,-1897.3287,13.5491, 10.0)
					 Message(playerid, COLOR_GRAD2, "Se ha marcado en el minimapa el trabajo de Barrendero");
					}
				case 2:
				{
					 Message(playerid, COLOR_GRAD2, "Se ha marcado en el minimapa el trabajo de Pizzero");
					SetPlayerCheckpoint(playerid, 2103.7043,-1809.8376,13.5547, 10.0)
				}
				case 3:
				{
					SetPlayerCheckpoint(playerid, 1642.3722,-2238.3552,13.4976, 10.0)
					 Message(playerid, COLOR_GRAD2, "Se ha marcado en el minimapa el trabajo de piloto");
				}
				case 4:
				{
					SetPlayerCheckpoint(playerid, 1684.7078,-1944.5562,13.5469, 10.0)
					 Message(playerid, COLOR_GRAD2, "Se ha marcado en el minimapa el trabajo de Chófer de tren");
				}
				case 5:
				{

					SetPlayerCheckpoint(playerid, 2610.85, -2193.26, -0.22, 10.0)
					Message(playerid, COLOR_GRAD2, "Se ha marcado en el minimapa el trabajo de Ladrón");
				}
				case 6:
				{
					SetPlayerCheckpoint(playerid, 1038.1670,-1340.3824,13.7408, 10.0)
					Message(playerid, COLOR_GRAD2, "Se ha marcado en el minimapa el trabajo de Heladero");
				}
				case 7:
				{
					SetPlayerCheckpoint(playerid, 2040.6719,-2137.0037,13.2200, 10.0)
					Message(playerid, COLOR_GRAD2, "Se ha marcado en el minimapa el trabajo de Camionero");
	}
			}
		}
	}
 	if(dialogid == AMMUNATION_MENU_DEF)
	{
		if(response == 1)
		{

if(PlayerInfo[playerid][pGunLic] == 0)
		    {
                Message(playerid, COLOR_GRAD2, " Debes tener licencia de armas para poder adquirir un arma.");
                return 1;
            }
		    switch(listitem)
		    {
		        case 0:
		        {
		            if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 2);
						SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento.");
						SafeGivePlayerWeapon(playerid, 41, 500);
						Till(17,2);

					}
					else
					{
					    Bought(playerid, 5);
						SafeGivePlayerWeapon(playerid, 41, 500);
                        Till(17,5);
					}
		        }
		        case 1:
		        {
		            if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 15);
						SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento.");
						SafeGivePlayerWeapon(playerid, 1, 1);
						Till(17,15);

					}
					else
					{
					    Bought(playerid, 25);
						SafeGivePlayerWeapon(playerid, 1,1);
						Till(17,25);

					}
		        }
		        case 2:
		        {
		             if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 25);
						SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento.");
						SafeGivePlayerWeapon(playerid, 4,1);
						Till(17,25);

					}
					else
					{
					    Bought(playerid, 45);
						SafeGivePlayerWeapon(playerid, 4,1);
						Till(17,45);

					}
		        }
		        case 3:
		        {
		           if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 5);
						SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento.");
						SafeGivePlayerWeapon(playerid, 15,1);
						Till(17,5);

					}
					else
					{
					    Bought(playerid, 15);
						SafeGivePlayerWeapon(playerid, 15,1);
						Till(17,15);

					}
		        }
		        case 4:
		        {
		             if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 45);
						SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento.");
						SafeGivePlayerWeapon(playerid, 5,1);
						Till(17,45);

					}
					else
					{
					    Bought(playerid, 75);
						SafeGivePlayerWeapon(playerid, 5,1);
						Till(17,75);

					}
		        }
			}
		}
		else ShowAmmunation(playerid);
	}
	if(dialogid == AMMUNATION_MENU_PIS)
	{
		if(response == 1)
		{
           if(PlayerInfo[playerid][pGunLic] == 0)
		    {
                Message(playerid, COLOR_GRAD2, "Debes de tener licencia de armas para poder comprar un arma.");
                return 1;
            }
		    switch(listitem)
		    {
		        case 0:
		        {
		            if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 140);
						SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento.");
						SafeGivePlayerWeapon(playerid, 22, 20);
						Till(17,140);

					}
					else
					{
					    Bought(playerid, 220);
						SafeGivePlayerWeapon(playerid,22,20);
						Till(17,220);

					}
		        }
		        case 1:
		        {
		            if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 190);
						SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento.");
						SafeGivePlayerWeapon(playerid, 24,10);
						Till(17,190);

					}
					else
					{
					    Bought(playerid, 300);
						SafeGivePlayerWeapon(playerid, 24,10);
						Till(17,300);

					}
		        }
			}
		}
		else ShowAmmunation(playerid);
	}
	if(dialogid == AMMUNATION_MENU_AME)
	{
		if(response == 1)
		{
            if(PlayerInfo[playerid][pGunLic] == 0)
		    {
                Message(playerid, COLOR_GRAD2, " Debes tener licencia de armas para poder comprar un arma.");
                return 1;
            }
		    switch(listitem)
		    {
		        case 0:
		        {
		             if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 580);
						SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%%");
						SafeGivePlayerWeapon(playerid, 29,100);
						Till(17,580);

					}
					else
					{
					    Bought(playerid, 799);
						SafeGivePlayerWeapon(playerid, 29,100);
						Till(17,799);

					}
		        }
		        case 1:
		        {
		             if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 780);
						SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%%");
						SafeGivePlayerWeapon(playerid, 31,150);
						Till(17,780);

					}
					else
					{
					    Bought(playerid, 1099);
						SafeGivePlayerWeapon(playerid, 31,150);
						Till(17,1099);

					}
		        }
		        case 2:
		        {
		             if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 1000);
						SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%%");
						SafeGivePlayerWeapon(playerid, 30,250);
						Till(17,1000);

					}
					else
					{
					    Bought(playerid, 1400);
						SafeGivePlayerWeapon(playerid, 30,250);
						Till(17,1400);

					}
		        }
			}
		}
		else ShowAmmunation(playerid);
  }
  if(dialogid == AMMUNATION_MENU_ESC)
	{
		if(response == 1)
		{
           if(PlayerInfo[playerid][pGunLic] == 0)
		    {
                Message(playerid, COLOR_GRAD2, " Debes tener licencia de armas para poder comprar un arma.");
                return 1;
            }
		    switch(listitem)
		    {
		        case 0:
		        {
		           if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 270);
						SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%%");
						SafeGivePlayerWeapon(playerid, 33,20);
						Till(17,270);

					}
					else
					{
					    Bought(playerid, 399);
						SafeGivePlayerWeapon(playerid, 33,20);
						Till(17,399);

					}
		        }
		        case 1:
		        {
		             if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 310);
						SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%%");
						SafeGivePlayerWeapon(playerid, 25,15);
						Till(17,310);

					}
					else
					{
					    Bought(playerid, 499);
						SafeGivePlayerWeapon(playerid, 25,15);
						Till(17,499);

					}
		        }
     		}
		}
		else ShowAmmunation(playerid);
	}
	if(dialogid == AMMUNATION_MENU_PRO)
	{
		if(response == 1)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 300);
						SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%%");
						SetPlayerArmour(playerid, 100);
						Till(17,300);
					}
					else
					{
					    Bought(playerid, 400);
						SetPlayerArmour(playerid, 100);
						Till(17,400);
					}
		        }
		        case 1:
		        {
		          if(PlayerInfo[playerid][pDonateT] >= 1)
		            {
		                Bought(playerid, 49);
						SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%%");
      PlayerInfo[playerid][pPainkiller] += 6;
						Till(17,49);

					}
					else
					{
					    Bought(playerid, 99);
      PlayerInfo[playerid][pPainkiller] += 6;
						Till(17,99);
					}
		        }
     		}
		}
		else ShowAmmunation(playerid);
	}
	if(dialogid == AMMUNATION_MENU_LEC)
	{
		if(response == 1)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            Bought(playerid, 55);
		            Message(playerid, COLOR_WHITE, "Has comprado Ammunation's Weapon Guide utiliza \"/Talk en el otro NPC para aprenderla\"");
		            PlayerInfo[playerid][pLeccion] = 10;
		            Till(17,55);
		        }
		        case 1:
		        {
		            Bought(playerid, 45);
		            Message(playerid, COLOR_WHITE, "Has comprado Guía Desert Eagle utiliza \"/Talk en el otro NPC para aprenderla\"");
		            PlayerInfo[playerid][pLeccion] = 15;
		            Till(17,45);
		        }
		        case 2:
		        {
		            Bought(playerid, 65);
		            Message(playerid, COLOR_WHITE, "Has comprado Lección Shotgun I utiliza \"/Talk en el otro NPC para aprenderla\"");
		            PlayerInfo[playerid][pLeccion] = 20;
		            Till(17,65);
		        }
		        case 3:
		        {
		            Bought(playerid, 75);
		            Message(playerid, COLOR_WHITE, "Has comprado Lección Shotgun II utiliza \"/Talk en el otro NPC para aprenderla\"");
		            PlayerInfo[playerid][pLeccion] = 21;
		            Till(17,75);
		        }
		        case 4:
		        {
		            Bought(playerid, 82);
		            Message(playerid, COLOR_WHITE, "Has comprado SubFusil-MP5 Guía Toma I utiliza \"/Talk en el otro NPC para aprenderla\"");
		            PlayerInfo[playerid][pLeccion] = 30;
		            Till(17,82);
		        }
		        case 5:
		        {
		            Bought(playerid, 89);
		            Message(playerid, COLOR_WHITE, "Has comprado SubFusil-MP5 Guía Toma II utiliza \"/Talk en el otro NPC para aprenderla\"");
		            PlayerInfo[playerid][pLeccion] = 31;
		            Till(17,89);
		        }
		        case 6:
		        {
		            Bought(playerid, 75);
		            Message(playerid, COLOR_WHITE, "Has comprado Rifles de Asalto AK47-M4 I utiliza \"/Talk en el otro NPC para aprenderla\"");
		            PlayerInfo[playerid][pLeccion] = 40;
		            Till(17,75);
		        }
		        case 7:
		        {
		            Bought(playerid, 99);
		            Message(playerid, COLOR_WHITE, "Has comprado Rifles de Asalto AK47-M4 II utiliza \"/Talk en el otro NPC para aprenderla\"");
		            PlayerInfo[playerid][pLeccion] = 41;
		            Till(17,99);
		        }
		        case 8:
		        {
		            Bought(playerid, 129);
		            Message(playerid, COLOR_WHITE, "Has comprado Rifles de Asalto AK47-M4 III utiliza \"/Talk en el otro NPC para aprenderla\"");
		            PlayerInfo[playerid][pLeccion] = 42;
		            Till(17,129);
		        }

     		}
		}
		else ShowAmmunation(playerid);
	}

 if(dialogid == FSTYLET_DIALOG)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
						PlayerInfo[playerid][pFStyle] = 7;
						SetPlayerStats(playerid);
						Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido Knee Head!");
						ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
				}
				case 1:
	            {
						PlayerInfo[playerid][pFStyle] = 6;
						SetPlayerStats(playerid);
						Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido Kung Fu!");
						ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
				}
				case 2:
	            {
						PlayerInfo[playerid][pFStyle] = 5;
						SetPlayerStats(playerid);
						Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido a Boxear!");
						ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
				}
			}
		}
	}
	if(dialogid == FSTYLE_DIALOG)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
			        if(CheckMoney(playerid, 150))
			        {
						Bought(playerid, 150);
						PlayerInfo[playerid][pFStyle] = 7;
						SetPlayerStats(playerid);
						Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido Knee Head!");
						ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						Till(17,1500);
					}
				}
				case 1:
	            {
			        if(CheckMoney(playerid, 100))
			        {
						Bought(playerid, 100);
						PlayerInfo[playerid][pFStyle] = 6;
						SetPlayerStats(playerid);
						Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido Kung Fu!");
						ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						Till(17,1000);
					}
				}
				case 2:
	            {
			        if(CheckMoney(playerid, 80))
			        {
						Bought(playerid, 80);
						PlayerInfo[playerid][pFStyle] = 5;
						SetPlayerStats(playerid);
						Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido a Boxear!");
						ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						Till(17,800);
					}
				}
			}
		}
	}
	if(dialogid == DIALOG_AMMU_MANAGER)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                new book[32];
				    if(PlayerInfo[playerid][pLeccion] == 10) {  book = "Ammunation's Weapon Guide"; }
				    if(PlayerInfo[playerid][pLeccion] == 15) {  book = "Guía Desert Eagle"; }
				    if(PlayerInfo[playerid][pLeccion] == 20) {  book = "Lección Shotgun I"; }
				    if(PlayerInfo[playerid][pLeccion] == 21) {  book = "Lección Shotgun II"; }
				    if(PlayerInfo[playerid][pLeccion] == 30) {  book = "SubFusil-MP5 Guía Toma I"; }
				    if(PlayerInfo[playerid][pLeccion] == 31) {  book = "SubFusil-MP5 Guía Toma II"; }
				    if(PlayerInfo[playerid][pLeccion] == 40) {  book = "Rifles de Asalto AK47-M4 I"; }
				    if(PlayerInfo[playerid][pLeccion] == 41) {  book = "Rifles de Asalto AK47-M4 II"; }
				    if(PlayerInfo[playerid][pLeccion] == 42) {  book = "Rifles de Asalto AK47-M4 III"; }
				    format(string, sizeof(string), "%s", book)
					ShowPlayerDialog(playerid, DIALOG_LECCION,DIALOG_STYLE_LIST,"Lecciones disponibles", string, "Aprender", "Cancelar");
	            }
	            case 1:
	            {
					new style[16];
				    ClearChatbox(playerid, 10);
					Message(playerid, COLOR_YELLOW, "-- Tus habilidades --");
					format(string, sizeof(string), "DEagle: (%d%%) - Shotgun: (%d%%) - MP5: (%d%%) - AK47: (%d%%) - M4: (%d%%) - Sniper: (%d%%)",
					PlayerInfo[playerid][pDEagle]/10,PlayerInfo[playerid][pShotgun]/10,PlayerInfo[playerid][pMP5]/10,PlayerInfo[playerid][pAK47]/10,PlayerInfo[playerid][pM4]/10,PlayerInfo[playerid][pSniper]/10)
					Message(playerid, COLOR_GRAD2, string);
					if(PlayerInfo[playerid][pFStyle] == 4) { style = "Normal"; 		}
					if(PlayerInfo[playerid][pFStyle] == 5) { style = "Boxing" ;		}
					if(PlayerInfo[playerid][pFStyle] == 6) { style = "Kung Fu" ;	}
					if(PlayerInfo[playerid][pFStyle] == 7) { style = "Kneehead" ;	}
					format(string, sizeof(string), "Estilo de lucha: %s", style)
					Message(playerid, COLOR_GRAD2, string);
				    return 1;
	            }
	            case 2:
	            {
	                if(CheckMoney(playerid, 400))
			        {
			            PlayerInfo[playerid][pGunLic] = 1;
			            Bought(playerid, 400);
			            Message(playerid, COLOR_YELLOW, "Has obtenido la licencia de armas!");
			            Till(17, 400);
			        }


			 }
			}
		}
	}
	if(dialogid == DIALOG_LECCION)
	{
	    if(response == 1)
	    {
	        if(PlayerInfo[playerid][pLeccion] == 10)
	        {
                if(PlayerInfo[playerid][pDEagle] > 189) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
                if(PlayerInfo[playerid][pShotgun] > 149) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
                if(PlayerInfo[playerid][pMP5] > 174) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
                if(PlayerInfo[playerid][pM4] > 174) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
                if(PlayerInfo[playerid][pAK47] > 174) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
                if(PlayerInfo[playerid][pSniper] > 149) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           	PlayerPlaySound(playerid, 1054, 0,0,0);
				PlayerInfo[playerid][pLeccion] = 0;
				Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
				PlayerInfo[playerid][pDEagle] += 90;
				PlayerInfo[playerid][pMP5] += 75;
				PlayerInfo[playerid][pM4] += 75;
				PlayerInfo[playerid][pAK47] += 75;
				PlayerInfo[playerid][pSniper] += 25;
				PlayerInfo[playerid][pShotgun] += 50;
				SetPlayerStats(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pLeccion] == 15)
	        {
	            if(PlayerInfo[playerid][pDEagle] < 190) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pDEagle] > 289) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           	PlayerPlaySound(playerid, 1054, 0,0,0);
				PlayerInfo[playerid][pLeccion] = 0;
				Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
				PlayerInfo[playerid][pDEagle] += 100;
				SetPlayerStats(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pLeccion] == 20)
	        {
	            if(PlayerInfo[playerid][pShotgun] < 150) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pShotgun] > 229) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           	PlayerPlaySound(playerid, 1054, 0,0,0);
				PlayerInfo[playerid][pLeccion] = 0;
				Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
				PlayerInfo[playerid][pShotgun] += 80;
				SetPlayerStats(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pLeccion] == 21)
	        {
	            if(PlayerInfo[playerid][pShotgun] < 150) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pShotgun] < 230) return Message(playerid, COLOR_GRAD2, "Debes leer la Toma I");
	            if(PlayerInfo[playerid][pShotgun] > 349) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           	PlayerPlaySound(playerid, 1054, 0,0,0);
				PlayerInfo[playerid][pLeccion] = 0;
				Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
				PlayerInfo[playerid][pShotgun] += 120;
				SetPlayerStats(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pLeccion] == 30)
	        {
	            if(PlayerInfo[playerid][pMP5] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pMP5] > 274) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           	PlayerPlaySound(playerid, 1054, 0,0,0);
				PlayerInfo[playerid][pLeccion] = 0;
				Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
				PlayerInfo[playerid][pMP5] += 100;
				SetPlayerStats(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pLeccion] == 31)
	        {
	            if(PlayerInfo[playerid][pMP5] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pMP5] < 275) return Message(playerid, COLOR_GRAD2, "Debes leer la Toma I")
	            if(PlayerInfo[playerid][pMP5] > 424) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           	PlayerPlaySound(playerid, 1054, 0,0,0);
				PlayerInfo[playerid][pLeccion] = 0;
				Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
				PlayerInfo[playerid][pMP5] += 150;
				SetPlayerStats(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pLeccion] == 40)
	        {
	            if(PlayerInfo[playerid][pAK47] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pM4] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pM4] > 249) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	            if(PlayerInfo[playerid][pAK47] > 249) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           	PlayerPlaySound(playerid, 1054, 0,0,0);
				PlayerInfo[playerid][pLeccion] = 0;
				Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
				PlayerInfo[playerid][pM4] += 75;
				PlayerInfo[playerid][pAK47] += 75;
				SetPlayerStats(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pLeccion] == 41)
	        {
	            if(PlayerInfo[playerid][pAK47] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pM4] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pM4] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            if(PlayerInfo[playerid][pAK47] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            if(PlayerInfo[playerid][pM4] > 339) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	            if(PlayerInfo[playerid][pAK47] > 339) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           	PlayerPlaySound(playerid, 1054, 0,0,0);
				PlayerInfo[playerid][pLeccion] = 0;
				Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
				PlayerInfo[playerid][pM4] += 90;
				PlayerInfo[playerid][pAK47] += 90;
				SetPlayerStats(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pLeccion] == 42)
	        {
	            if(PlayerInfo[playerid][pAK47] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pM4] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            if(PlayerInfo[playerid][pM4] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            if(PlayerInfo[playerid][pAK47] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            if(PlayerInfo[playerid][pAK47] < 340) return Message(playerid, COLOR_GRAD2, "Debes leer la toma II");
	            if(PlayerInfo[playerid][pM4] < 340) return Message(playerid, COLOR_GRAD2, "Debes leer la toma II");
	            if(PlayerInfo[playerid][pM4] > 514) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	            if(PlayerInfo[playerid][pAK47] > 514) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           	PlayerPlaySound(playerid, 1054, 0,0,0);
				PlayerInfo[playerid][pLeccion] = 0;
				Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
				PlayerInfo[playerid][pM4] += 175;
				PlayerInfo[playerid][pAK47] += 175;
				SetPlayerStats(playerid);
				return 1;
			}
		}
	}
	if(dialogid == DIALOG_LSPD_ELEVATOR)
	{
	    if(response == 1)
	    {
	        	if(PlayerToPoint(1.0,playerid,246.5928,87.7546,1003.6406))
          		{
		            	SetPlayerPos(playerid, 1526.5972,-1676.0651,5.8906);
						SetPlayerInterior(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
				}
		}
		else
		{
			    if(PlayerToPoint(1.0,playerid,246.5928,87.7546,1003.6406))  
	      		{
	       			SetPlayerPos(playerid, 1556.1990,-1671.6530,28.3956);
					SetPlayerInterior(playerid,0);
				}
		}
	}
	if(dialogid == DIA_RENTA)
	{
	if(response == 1)
	{
	if(HireKey[playerid] != 9999) return Message(playerid, COLOR_GREY, "Ya has rentado un vehículo, utiliza /desrentarveh");
	if(Hire_Vehicle(idcar)){
	new found;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	if(HireKey[i] == idcar)
	{
	found = 1;
	Message(playerid, COLOR_GRAD2, "Este vehículo ya está rentado");
	break;
	}
	}
	if(found != 1){
	if(CheckMoney(playerid, 40))
	{
	Bought(playerid, 40);
	Till(14,40);
	Message(playerid, COLOR_WHITE, "Utiliza /desrentarveh cuando no lo necesites");
	HireKey[playerid] = idcar;
	}
	}
	}
	else
			{
				RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
		    }
	return 1;
	}
	}
	if(dialogid == DIALOG_TAXI_RADAR)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
			        new Float:cx, Float:cy, Float:cz;
			        GetPlayerPos(GetPlayerIdFromName(TaxiSlot1), cx, cy, cz);
			        SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", sendername);
			        Message(GetPlayerIdFromName(TaxiSlot1), COLOR_ORANGE, string);
			        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", sendername, TaxiSlot1);
			        SendRadioMessage(6, TEAM_BLUE_COLOR, string);
			        TaxiCalled[GetPlayerIdFromName(TaxiSlot1)] = 0;
			        TaxiSlot1 = "Vacío"; SlotZone1 = "Sin Localizar"; SlotCity1 = "No"; Slot1 = 0; TiempoSlot1 = 0;
			        return 1;
				}
		 		case 1:
			    {
			        new Float:cx, Float:cy, Float:cz;
			        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", sendername);
			        Message(GetPlayerIdFromName(TaxiSlot1), COLOR_ORANGE, string);
			        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", sendername, TaxiSlot1);
			        SendRadioMessage(6, TEAM_BLUE_COLOR, string);
			        GetPlayerPos(GetPlayerIdFromName(TaxiSlot1), cx, cy, cz);
			        SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        TaxiCalled[GetPlayerIdFromName(TaxiSlot1)] = 0;
			        TaxiSlot2 = "Vacío"; SlotZone2 = "Sin Localizar"; SlotCity2 = "No"; Slot2 = 0; TiempoSlot2 = 0;
			        return 1;
		 		}
		 		case 2:
			    {
			        new Float:cx, Float:cy, Float:cz;
			        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", sendername);
			        Message(GetPlayerIdFromName(TaxiSlot1), COLOR_ORANGE, string);
			        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", sendername, TaxiSlot1);
			        SendRadioMessage(6, TEAM_BLUE_COLOR, string);
			        GetPlayerPos(GetPlayerIdFromName(TaxiSlot1), cx, cy, cz);
			        SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        TaxiCalled[GetPlayerIdFromName(TaxiSlot1)] = 0;
			        TaxiSlot3 = "Vacío"; SlotZone3 = "Sin Localizar"; SlotCity3 = "No"; Slot3 = 0; TiempoSlot3 = 0;
			        return 1;
		 		}
		 		case 3:
			    {
			        new Float:cx, Float:cy, Float:cz;
			        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", sendername);
			        Message(GetPlayerIdFromName(TaxiSlot1), COLOR_ORANGE, string);
			        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", sendername, TaxiSlot1);
			        SendRadioMessage(6, TEAM_BLUE_COLOR, string);
			        GetPlayerPos(GetPlayerIdFromName(TaxiSlot1), cx, cy, cz);
			        SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        TaxiCalled[GetPlayerIdFromName(TaxiSlot1)] = 0;
			        TaxiSlot4 = "Vacío"; SlotZone4 = "Sin Localizar"; SlotCity4 = "No"; Slot4 = 0; TiempoSlot4 = 0;
			        return 1;
		 		}
		 		case 4:
			    {
			        new Float:cx, Float:cy, Float:cz;
			        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", sendername);
			        Message(GetPlayerIdFromName(TaxiSlot1), COLOR_ORANGE, string);
			        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", sendername, TaxiSlot1);
			        SendRadioMessage(6, TEAM_BLUE_COLOR, string);
			        GetPlayerPos(GetPlayerIdFromName(TaxiSlot1), cx, cy, cz);
			        SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        TaxiCalled[GetPlayerIdFromName(TaxiSlot1)] = 0;
			        TaxiSlot5 = "Vacío"; SlotZone5 = "Sin Localizar"; SlotCity5 = "No"; Slot5 = 0; TiempoSlot5 = 0;
			        return 1;
		 		}
		 		case 5:
			    {
			        new Float:cx, Float:cy, Float:cz;
			        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", sendername);
			        Message(GetPlayerIdFromName(TaxiSlot1), COLOR_ORANGE, string);
			        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", sendername, TaxiSlot1);
			        SendRadioMessage(6, TEAM_BLUE_COLOR, string);
			        GetPlayerPos(GetPlayerIdFromName(TaxiSlot1), cx, cy, cz);
			        SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        TaxiCalled[GetPlayerIdFromName(TaxiSlot1)] = 0;
			        TaxiSlot6 = "Vacío"; SlotZone6 = "Sin Localizar"; SlotCity6 = "No"; Slot6 = 0; TiempoSlot6 = 0;
			        return 1;
		 		}
                case 6:
			    {
			        new Float:cx, Float:cy, Float:cz;
			        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", sendername);
			        Message(GetPlayerIdFromName(TaxiSlot1), COLOR_ORANGE, string);
			        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", sendername, TaxiSlot1);
			        SendRadioMessage(6, TEAM_BLUE_COLOR, string);
			        GetPlayerPos(GetPlayerIdFromName(TaxiSlot1), cx, cy, cz);
			        SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        TaxiCalled[GetPlayerIdFromName(TaxiSlot1)] = 0;
			        TaxiSlot7 = "Vacío"; SlotZone7 = "Sin Localizar"; SlotCity7 = "No"; Slot7 = 0; TiempoSlot7 = 0;
			        return 1;
		 		}
		 		case 7:
			    {
			        new Float:cx, Float:cy, Float:cz;
			        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", sendername);
			        Message(GetPlayerIdFromName(TaxiSlot1), COLOR_ORANGE, string);
			        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", sendername, TaxiSlot1);
			        SendRadioMessage(6, TEAM_BLUE_COLOR, string);
			        GetPlayerPos(GetPlayerIdFromName(TaxiSlot1), cx, cy, cz);
			        SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        TaxiCalled[GetPlayerIdFromName(TaxiSlot1)] = 0;
			        TaxiSlot8 = "Vacío"; SlotZone8 = "Sin Localizar"; SlotCity8 = "No"; Slot8 = 0; TiempoSlot8 = 0;
			        return 1;
		 		}
		 		case 8:
			    {
			        return 1;
		 		}
			}
		}
		else
		{
		    switch(listitem)
	        {
	            case 0: { TaxiSlot1 = "Vacío"; SlotZone1 = "Sin Localizar"; SlotCity1 = "No"; Slot1 = 0; TiempoSlot1 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot1"); return 1; }
	            case 1: { TaxiSlot2 = "Vacío"; SlotZone2 = "Sin Localizar"; SlotCity2 = "No"; Slot2 = 0; TiempoSlot2 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot2"); return 1; }
	            case 2: { TaxiSlot3 = "Vacío"; SlotZone3 = "Sin Localizar"; SlotCity3 = "No"; Slot3 = 0; TiempoSlot3 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot3"); return 1; }
	            case 3: { TaxiSlot4 = "Vacío"; SlotZone4 = "Sin Localizar"; SlotCity4 = "No"; Slot4 = 0; TiempoSlot4 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot4"); return 1; }
	            case 4: { TaxiSlot5 = "Vacío"; SlotZone5 = "Sin Localizar"; SlotCity5 = "No"; Slot5 = 0; TiempoSlot5 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot5"); return 1; }
	            case 5: { TaxiSlot6 = "Vacío"; SlotZone6 = "Sin Localizar"; SlotCity6 = "No"; Slot6 = 0; TiempoSlot6 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot6"); return 1; }
	            case 6: { TaxiSlot7 = "Vacío"; SlotZone7 = "Sin Localizar"; SlotCity7 = "No"; Slot7 = 0; TiempoSlot7 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot7"); return 1; }
	            case 7: { TaxiSlot8 = "Vacío"; SlotZone8 = "Sin Localizar"; SlotCity8 = "No"; Slot8 = 0; TiempoSlot8 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot8"); return 1; }
	            case 8: { return 1; }

			}
		}
	}
	if(dialogid == BAR_MENU)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
				case 0: { ShowPlayerDialog(playerid, BAR_MENU_TAPAS, DIALOG_STYLE_LIST, "Platos del Día", "Huevos con Chorizo (20$)\nJamón Ibérico (30$)\nSopa de Marisco (25$)\nMacarrones a la Bolognesa (15$)\nEnsalada (10$)", "Pedir", "Atrás"); return 1; }
				case 1: { ShowPlayerDialog(playerid, BAR_MENU_BEBIDAS, DIALOG_STYLE_LIST, "Bebidas y refrescos", "Cerveza (3$)\nVino tinto (5$)\nChampagne (6$)\nCoca-Cola (2$)\nAgua (1$)", "Pedir", "Atrás"); return 1; }
				case 2: { ShowPlayerDialog(playerid, BAR_MENU_LLEVAR, DIALOG_STYLE_LIST, "Comida para llevar", "Hotdogs (45$)\nHamburguesas (65$)", "Pedir", "Atrás"); return 1; }
			}
		} //else ShowPlayerDialog(playerid, BAR_MENU, DIALOG_STYLE_LIST, "Menú del Día", "Platos Combinados & Tapas\nRefrescos & Bebidas & Vinos", "Ver", "Salir");
	}




	if(dialogid == BAR_MENU_TAPAS)
	{
		if(response == 1)
	    {
	        //if(BizzInfo[0][bProducts] < 1) return Message(playerid, COLOR_FADE1, "Barman: Lo sentimos, no nos queda comida.");
	        switch(listitem)
	        {
	            case 0:
	            {
             		new Float:Health;
		            GetPlayerHealth(playerid, Health);
		            if(Health < 101)	{	SetHP(playerid, Health+20); 	}
         			format(string, sizeof(string), "* %s come un plato de Huevos con Chorizo", sendername);
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            Bought(playerid, 20);
		            ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
		            Till(0, 20);
		            Till(27, 20);
		            Till(3, 20);
		            Till(24, 20);
		            Till(25, 20);
		            if(PlayerDrunk[playerid] > 10)
		            {
			            SetHP(playerid, 20);
	               		format(string, sizeof(string), "* %s vomita lo que ha comido", sendername);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                PlayerInfo[playerid][pCancer] += 3;
		                PlayerInfo[playerid][pEpilepsia] += 1;
		                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
	            }
	            case 1:
	            {
	                new Float:Health;
	                GetPlayerHealth(playerid, Health);
	                if(Health < 101)	{	SetHP(playerid, Health+30); 	}
	                format(string, sizeof(string), "* %s come un plato de Jamón Ibérico", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                Bought(playerid, 30);
	                ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                Till(0, 30);
	                Till(27, 30);
	                Till(3, 30);
	                Till(24, 30);
	                Till(25, 30);
	                if(PlayerDrunk[playerid] > 10)
		            {
			            SetHP(playerid, 20);
	               		format(string, sizeof(string), "* %s vomita lo que ha comido", sendername);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        PlayerInfo[playerid][pCancer] += 3;
		                PlayerInfo[playerid][pEpilepsia] += 1;
		                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
	            }
	            case 2:
	            {
	                new Float:Health;
	                GetPlayerHealth(playerid, Health);
	                if(Health < 101)	{	SetHP(playerid, Health+25); 	}
	                format(string, sizeof(string), "* %s come un plato de Sopa de Marisco", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                Bought(playerid, 25);
	                ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                Till(0, 25);
	                Till(27, 25);
	                Till(3, 25);
	                Till(24, 25);
	                Till(25, 25);
	                if(PlayerDrunk[playerid] > 10)
		            {
			            SetHP(playerid, 20);
	               		format(string, sizeof(string), "* %s vomita lo que ha comido", sendername);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                PlayerInfo[playerid][pCancer] += 3;
		                PlayerInfo[playerid][pEpilepsia] += 1;
		                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
	            }
	            case 3:
	            {
	                new Float:Health;
	                GetPlayerHealth(playerid, Health);
	                if(Health < 101)	{	SetHP(playerid, Health+15); 	}
	                format(string, sizeof(string), "* %s come un plato de Macarrones a la Bolognesa", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                Bought(playerid, 15);
	                ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                Till(0, 15);
	                Till(27, 15);
	                Till(3, 15);
	                Till(24, 15);
	                Till(25, 15);
	                if(PlayerDrunk[playerid] > 10)
		            {
			            SetHP(playerid, 20);
	               		format(string, sizeof(string), "* %s vomita lo que ha comido", sendername);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                PlayerInfo[playerid][pCancer] += 3;
		                PlayerInfo[playerid][pEpilepsia] += 1;
		                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
	            }
	            case 4:
	            {
	                new Float:Health;
	                GetPlayerHealth(playerid, Health);
	                if(Health < 101)	{	SetHP(playerid, Health+10); 	}
	                format(string, sizeof(string), "* %s come un plato de Ensalada", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                Bought(playerid, 10);
	                ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                Till(0, 10);
	                Till(27, 10);
	                Till(3, 10);
	                Till(24, 10);
	                Till(25, 10);
	                if(PlayerDrunk[playerid] > 10)
		            {
			            SetHP(playerid, 20);
	               		format(string, sizeof(string), "* %s vomita lo que ha comido", sendername);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                PlayerInfo[playerid][pCancer] += 3;
		                PlayerInfo[playerid][pEpilepsia] += 1;
		                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
	            }
		 	}
		}
	}
	if(dialogid == BAR_MENU_BEBIDAS)
	{
		if(response == 1)
	    {
	        //if(BizzInfo[12][bProducts] < 1) return Message(playerid, COLOR_FADE1, "Barman: Lo sentimos, no nos quedan bebidas.");
	        switch(listitem)
	        {
	            case 0:
	            {
	                new Float:Health;
	                GetPlayerHealth(playerid, Health);
	                if(Health < 101)	{	SetHP(playerid, Health+3); 	}
	                format(string, sizeof(string), "* %s se bebe una Cerveza", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                Bought(playerid, 3);
	                PlayerDrunk[playerid] += 2;
	                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
	                Till(0, 3);
		            Till(27, 3);
		            Till(3, 3);
		            Till(24, 3);
		            Till(25, 3);
	                if(PlayerDrunk[playerid] > 10)
		            {
			            SetHP(playerid, 20);
	               		format(string, sizeof(string), "* %s vomita lo que ha bebido", sendername);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                PlayerInfo[playerid][pCancer] += 5;
		                PlayerInfo[playerid][pEpilepsia] += 1;
		                PlayerDrunk[playerid]  += 1;
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
	            }
	            case 1:
	            {
	                new Float:Health;
	                GetPlayerHealth(playerid, Health);
	                if(Health < 101)	{	SetHP(playerid, Health+5); 	}
	                format(string, sizeof(string), "* %s se bebe una copa de Vino", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                Bought(playerid, 5);
	                PlayerDrunk[playerid] += 1;
	                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
	                Till(0, 5);
		            Till(27, 5);
		            Till(3, 5);
		            Till(24, 5);
		            Till(25, 5);
	                if(PlayerDrunk[playerid] > 10)
		            {
			            SetHP(playerid, 20);
	               		format(string, sizeof(string), "* %s vomita lo que ha bebido", sendername);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                PlayerInfo[playerid][pCancer] += 5;
		                PlayerInfo[playerid][pEpilepsia] += 1;
		                PlayerDrunk[playerid]  += 1;
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
	            }
	            case 2:
	            {
	                new Float:Health;
	                GetPlayerHealth(playerid, Health);
	                if(Health < 101)	{	SetHP(playerid, Health+6); 	}
	                format(string, sizeof(string), "* %s se bebe una copa de Champagne", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                Bought(playerid, 6);
	                PlayerDrunk[playerid] += 3;
	                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
	                Till(0, 6);
		            Till(27, 6);
		            Till(3, 6);
		            Till(24, 6);
		            Till(25, 6);
	                if(PlayerDrunk[playerid] > 10)
		            {
			            SetHP(playerid, 20);
	               		format(string, sizeof(string), "* %s vomita lo que ha bebido", sendername);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                PlayerInfo[playerid][pCancer] += 5;
		                PlayerInfo[playerid][pEpilepsia] += 1;
		                PlayerDrunk[playerid]  += 1;
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
	            }
	            case 3:
	            {
	                new Float:Health;
	                GetPlayerHealth(playerid, Health);
	                if(Health < 101)	{	SetHP(playerid, Health+2); 	}
	                format(string, sizeof(string), "* %s se bebe una Coca-Cola", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                Bought(playerid, 2);
	                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
	                Till(0, 2);
		            Till(27, 2);
		            Till(3, 2);
		            Till(24, 2);
		            Till(25, 2);
	                if(PlayerDrunk[playerid] > 10)
		            {
			            SetHP(playerid, 20);
	               		format(string, sizeof(string), "* %s vomita lo que ha bebido", sendername);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                PlayerDrunk[playerid]  += 1;
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
	            }
	            case 4:
	            {
	                new Float:Health;
	                GetPlayerHealth(playerid, Health);
	                if(Health < 101)	{	SetHP(playerid, Health+1); 	}
	                format(string, sizeof(string), "* %s se bebe una botella pequeña de agua", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                Bought(playerid, 1);
	                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
	                Till(0, 1);
		            Till(27, 1);
		            Till(3, 1);
		            Till(24, 1);
		            Till(25, 1);
	                if(PlayerDrunk[playerid] > 0)
		            {
		                PlayerDrunk[playerid]  -= 1;
					}
	            }
		 	}
		}
	}
    if(dialogid == DIALOG_FARMACIA)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(CheckMoney(playerid, 5))
	                {
						Message(playerid, COLOR_WHITE, "Has comprado un condon, utiliza /condon.");
						Bought(playerid, 1);
						Condom[playerid] ++;
						Till(32,1);
						Till(5,1);
						Till(6,1);
						Till(30,1);
						Benefeits(SAMUR, 1, 0);
					}
	            }
	            case 1:
	            {
	                if(CheckMoney(playerid, 30))
	                {
						Message(playerid, COLOR_WHITE, "Has comprado una caja con 5 ibuprofenos. Utiliza /pastilla.");
						Bought(playerid, 10);
						Ibuprofeno[playerid] += 5;
						Till(32,10);
						Till(5,10);
						Till(6,10);
						Till(30,10);
						Benefeits(SAMUR, 10, 0);
					}
	            }
	            case 2:
	            {
	                if(CheckMoney(playerid, 100))
	                {
						Message(playerid, COLOR_WHITE, "Has comprado una caja con 6 parches de nicotina, utiliza /pastilla.");
						Bought(playerid, 15);
						Nicotina[playerid] += 6;
						Till(32,15);
						Till(5,15);
						Till(6,15);
						Till(30,15);
						Benefeits(SAMUR, 15, 0);
					}
	            }
	            case 3:
	            {
	                if(CheckMoney(playerid, 25))
	                {
						Message(playerid, COLOR_WHITE, "Has comprado una caja de 4 pastillas de Energysil. Utiliza /pastilla");
						Bought(playerid, 30);
						Energysil[playerid] += 4;
						Till(32,30);
						Till(5,30);
						Till(6,30);
						Till(30,30);
						Benefeits(SAMUR, 30, 0);
                    }
	            }
	            case 4:
		        {
		            if(CheckMoney(playerid, 90))
                    {
						Message(playerid, COLOR_WHITE, "Has comprado 5 pastillas para curar el SIDA recetadas por el médico.");
						Bought(playerid, 90);
						Till(4,90);
						Till(5,90);
						Till(6,90);
						Till(30,90);
						PlayerInfo[playerid][pAntiSIDA] += 5;
						Benefeits(SAMUR, 150, 0);
                    }
		        }
	            case 5:
	            {
		            if(CheckMoney(playerid, 70))
                    {
						Message(playerid, COLOR_WHITE, "Has comprado 5 pastillas anti epilépticas recetadas por el médico.");
						Bought(playerid, 70);
						Till(32,70);
						Till(5,70);
						Till(6,70);
						Till(30,70);
						PlayerInfo[playerid][pAntiEpilepsia] += 5;
						Benefeits(SAMUR, 200, 0);
                    }
		        }
	            case 6:
	            {
		            if(CheckMoney(playerid, 50))
		            {
						Message(playerid, COLOR_WHITE, "Has comprado 5 pastillas contra el cáncer recetadas por el médico.");
						Bought(playerid, 50);
						Till(32,50);
						Till(5,50);
						Till(6,50);
						Till(30,50);
						PlayerInfo[playerid][pAntiCancer] += 5;
					}
	            }
			}
		}
	}
 if(dialogid == DIALOG_DILDO)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(CheckMoney(playerid, 200))
	                {
						Message(playerid, COLOR_WHITE, "Has comprado un dildo doble");
						Bought(playerid, 200);
						SafeGivePlayerWeapon(playerid, 10, 1)
						Till(23,200);
					}
	            }
	            case 1:
	            {
	                if(CheckMoney(playerid, 100))
	                {
						Message(playerid, COLOR_WHITE, "Has comprado un dildo.");
						Bought(playerid, 100);
						SafeGivePlayerWeapon(playerid, 11, 1)
						Till(23,100);
					}
	            }
	            case 2:
	            {
	                if(CheckMoney(playerid, 350))
	                {
						Message(playerid, COLOR_WHITE, "Has comprado un un vibrador.");
						Bought(playerid, 350);
						SafeGivePlayerWeapon(playerid, 12, 1)
						Till(23,350);
					}
	            }
	            case 3:
	            {
	                if(CheckMoney(playerid, 500))
	                {
						Message(playerid, COLOR_WHITE, "Has comprado un silver vibrador.");
						Bought(playerid, 500);
						SafeGivePlayerWeapon(playerid, 13, 1)
						Till(23,500);
                    }
	            }
	            case 4:
		        {
		            if(CheckMoney(playerid, 150))
                    {
						Message(playerid, COLOR_WHITE, "Has comprado flores aromáticas.");
						Bought(playerid, 150);
						Till(23,150);
						SafeGivePlayerWeapon(playerid, 14, 1)
                    }
		        }
			}
		}
	}
	if(dialogid == MECANICO_MENU)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
				case 0:
				{
				        if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en el taller!");
	    				if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
						ShowPlayerDialog(playerid, MECANICO_MENU_REPARACION, DIALOG_STYLE_LIST, "-> Reparaciones <-", "Reparar Motor\nReparar Motor + Carrocería", "Reparar", "Atrás");
						return 1;
				}
				case 1:
				{
				    if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en el taller!");
				    if(IsPlayerInAnyVehicle(playerid))
				    {
						format(string, sizeof(string), "* %s llena el depósito del vehículo.", sendername);
		      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				  		Gas[idcar] = 100;
				  		return 1;
					}
					else return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
				}
				case 2:
				{
                    if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en el taller!");
	    			if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
					ShowPlayerDialog(playerid, MECANICO_MENU_TUNING, DIALOG_STYLE_LIST, "-> Tunear <-", "Tuning General\nTuning Específico\nCambiar Color\nCambiar Nombre Vehículo\nCambiar Motor\nBaterías", "Aceptar", "Atrás");
					return 1;
				}
				case 3:
				{
			    	ShowPlayerDialog(playerid, MECANICO_MENU_EMBARGAR, DIALOG_STYLE_LIST, "-> Embargar <-", "Incrementar +1 Embargo\nDecrementar -1 Embargo\nMultar vehículo\nDesembargar vehículo", "Aceptar", "Atrás");
					return 1;
				}
				case 4:
				{
				    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				    {
				        if(GetVehicleModel(idcar) == 525)
				        {
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
					   			vid++;
			   					GetVehiclePos(vid,vX,vY,vZ);
			   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
					  				Found=1;
						    		if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
					           		{
		   				        		DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
					           		}
						           	else
						           	{
		    							AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
			 					}
		    				}
							if(!Found)
			 				{
					   					SendClientMessage(playerid,COLOR_GRAD2,"No hay ningún vehículo cerca!");
		  					}
						}
						else return Message(playerid, COLOR_GRAD2, "No puedes remolcar con este vehículo!");
					}
					else return Message(playerid, COLOR_GRAD2, "Tienes que ser conductor!");
				}
				case 5:
				{
			    	ShowPlayerDialog(playerid, MECANICO_QUITAR, DIALOG_STYLE_LIST, "-> Quitar Sistemas <-", "Quitar Nitro\nQuitar Hidráulica\nQuitar alarma\nQuitar Neon\nQuitar vinílicos", "Aceptar", "Atrás");
					return 1;
				}
				case 6:
				{
				    ShowPlayerDialog(playerid, MECANICO_MENU_OTROS, DIALOG_STYLE_LIST, "-> Otros <-", "Matricular Vehículo\nExaminar Vehículo\nInstalar alarma", "Aceptar", "Atrás");
					return 1;
				}
			}
		}
	}
	if(dialogid == MECANICO_MENU_REPARACION)
	{
		if(response == 1)
	    {
	        new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        switch(listitem)
	        {
	            case 0: {
				format(string, sizeof(string), "* %s arregla el motor del vehículo.", sendername);
      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		  		SetVehicleHealth(idcar, 1000.0);
				return 1; }
				case 1: {
				format(string, sizeof(string), "* %s coloca una carrocería nueva al vehículo y cambia el motor dañado.", sendername);
      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		  		RepairVehicle(idcar);
				return 1; }
			}
		}
	}
	if(dialogid == MECANICO_MENU_EMBARGAR)
	{
		if(response == 1)
	    {
			switch(listitem)
			{
			    case 0:
			    {
                    new Float:x,Float:y,Float:z,Float:a;
					if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
				    if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
			        Message(playerid, COLOR_YELLOW, "Has agregado un embargo a este vehículo!");
			        CarInfo[idcar][cEmbargo] += 1;
                    GetVehiclePos(idcar, x, y, z);  GetVehicleZAngle(idcar, a);
					CarInfo[idcar][cLocationx] = x;
						CarInfo[idcar][cLocationy] = y;
							CarInfo[idcar][cLocationz] = z;
								CarInfo[idcar][cAngle] = a;

			        return 1;
				}
				case 1:
				{
				    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
				    if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
				    Message(playerid, COLOR_YELLOW, "Has quitado un embargo a este vehículo!");
			        CarInfo[idcar][cEmbargo] -= 1;
			        return 1;
				}
				case 2:
				{
				    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
				    if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
				    ShowPlayerDialog(playerid, MECANICO_MENU_MULTAR, DIALOG_STYLE_INPUT, "-> Multar vehículo <-", "Estás a punto de multar un vehículo. Elige el precio que creas conveniente para sancionar el vehículo.\nRecuerda que el valor no debe sobrepasar los 3000$ de multa. Escribe el valor a multar:", "Multar", "Cancelar");
				    return 1;
				}
				case 3:
				{
				    ShowPlayerDialog(playerid, MECANICO_MENU_DESEMBARGAR, DIALOG_STYLE_INPUT, "-> Desembargar vehículo <-", "Inserta el ID del vehículo para desembargar.", "Desembargar", "Cancelar");
				    return 1;
				}
			}
		}
	}
	if(dialogid == MECANICO_MENU_MULTAR)
	{
		if(response == 1)
	    {
	        if(strval(inputtext) < 1 || strval(inputtext) > 3000) return Message(playerid, COLOR_GRAD2, "¡ Valor entre 1 - 3000$ !");
	        if(CarInfo[idcar][cEmbargo] > 2) return Message(playerid, COLOR_GRAD2, "¡ Este vehículo ya alcanzó el máximo de embargos y no puedes multarlo !");
	        if(CarInfo[idcar][cMulta] > 8999) return Message(playerid, COLOR_GRAD2, "¡ No puedes multar este vehículo. Muchas multas acumuladas !");
	        CarInfo[idcar][cMulta] += strval(inputtext);
			format(string, sizeof(string), "  Multaste al vehículo con %d$!", strval(inputtext));
			Message(playerid, COLOR_WHITE, string);
			return 1;
		}
	}
	if(dialogid == MECANICO_MENU_DESEMBARGAR)
	{
		if(response == 1)
	    {
	        if(!IsAnOwnableCar(strval(inputtext))) return Message(playerid, COLOR_GRAD2, "No es un vehículo con embargos!");
	        CarInfo[strval(inputtext)][cMulta] = 0;
	        CarInfo[strval(inputtext)][cEmbargo] = 0;
			format(string, sizeof(string), "  Desemargaste al vehículo: %s cuyo dueño es %s !", CarInfo[strval(inputtext)][cName],CarInfo[strval(inputtext)][cOwner]);
			Message(playerid, COLOR_WHITE, string);
			return 1;
		}
	}
	if(dialogid == MECANICO_MENU_TUNING)
	{
		if(response == 1)
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
	        switch(listitem)
	        {
				case 0:	{ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_global, DIALOG_STYLE_LIST, "-> Piezas Globales <-", "Nitro\nLlantas\nSuspensión\nNeon\nGPS\nRastreo", "Aceptar", "Atrás");}
				case 1: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_SPECIAL, DIALOG_STYLE_LIST, "-> Tuning avanzado <-", "Piezas Wheel Arch Angels\nVinilo Alien\nVinilo Acces\nVinilo X-Flow", "Aceptar", "Atrás");}
				case 2: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color, DIALOG_STYLE_LIST, "-> Cambiar Color <-", "Cambiar Color #1\nCambiar Color #2", "Aceptar", "Atrás");}
				case 3: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_name, DIALOG_STYLE_INPUT, "-> Cambiar Nombre Modelo <-", "Introduce el nuevo nombre del vehículo, ejemplo: Mercedes\n\nMáximo 12 carácteres.", "Cambiar", "Salir");}
				case 4: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_motor, DIALOG_STYLE_LIST, "-> Cambiar Motor <-", "Motor 95 \t(Capacidad gasolina: 100l)\nMotor 98 \t(Capacidad gasolina: 120l)\nMotor Diesel \t(Capacidad gasolina: 160l)\nMotor Biodiesel \t(Capacidad gasolina: 230l)", "Instalar","Salir");}
				case 5: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_bateria, DIALOG_STYLE_LIST, "-> Baterías <-", "Batería Cyclon 6V\t(Calidad: Baja)\nBatería Duncan 8V\t(Calidad: Media)\nBatería Bosch 12V\t(Calidad: Óptima)", "Instalar","Salir");}
			}
		}
	}

 if(dialogid == MECANICO_QUITAR)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                RemoveVehicleComponent(idcar,CarInfo[idcar][cNitro]);
	                CarInfo[idcar][cNitro] = 0;
	                SendClientMessage(playerid, COLOR_GRAD2, "Removistes el nitro del vehículo");
	            }
	            case 1:
	            {
                RemoveVehicleComponent(idcar,CarInfo[idcar][cHydraulics]);
                CarInfo[idcar][cHydraulics] = 0;
                SendClientMessage(playerid, COLOR_GRAD2, "Removistes el sistema hidraúlico del vehículo");
	            }
	            case 2:
	            {
	               RemoveVehicleComponent(idcar,CarInfo[idcar][cAlarm]);
	               CarInfo[idcar][cAlarm] = 0;
	               SendClientMessage(playerid, COLOR_GRAD2, "Removistes el sistema de alarma del vehículo");
   	            }
	            case 3:
	            {
                   RemoveVehicleComponent(idcar,CarInfo[idcar][cNeon]);
                   CarInfo[idcar][cNeon] = 0;
                   DestroyObject(Neon[idcar]);
	               SendClientMessage(playerid, COLOR_GRAD2, "Removistes el sistema de neon del vehículo");
	            }
	            case 4:
	            {
	            CarInfo[idcar][cPaintjob] = 0;
	               SendClientMessage(playerid, COLOR_GRAD2, "Quitastes los vinílicos del vehículo, para que se quite completamente, debe respawnear el vehículo.");
	            }

	        }
		}
	}
	if(dialogid == MECANICO_MENU_TUNING_SPECIAL)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                ShowPlayerDialog(playerid, TUNING_WAA, DIALOG_STYLE_LIST, "-> WAA <-", "Carrocería X-FLOW\nCarrocería Alien", "Aceptar", "Atrás");
	            }
	            case 1:
	            {
	                if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Vehículo sin dueño");
	                if(IsLocolowVehicle(idcar) || IsWAAVehicle(idcar))
	                {
	                    CarInfo[idcar][cPaintjob] = 1;
	                    ChangeVehiclePaintjob(idcar, CarInfo[idcar][cPaintjob]-1);
	                    Message(playerid, COLOR_GRAD2, "Vinilo instalado!");
	                } else Message(playerid, COLOR_GRAD2, "Este vehículo no permite vinilos!");
	            }
	            case 2:
	            {
	                if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Vehículo sin dueño");
	                if(IsLocolowVehicle(idcar) || IsWAAVehicle(idcar))
	                {
	                    CarInfo[idcar][cPaintjob] = 2;
	                    ChangeVehiclePaintjob(idcar, CarInfo[idcar][cPaintjob]-1);
	                    Message(playerid, COLOR_GRAD2, "Vinilo instalado!");
	                } else Message(playerid, COLOR_GRAD2, "Este vehículo no permite vinilos!");
	            }
	            case 3:
	            {
	                if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Vehículo sin dueño");
	                if(IsLocolowVehicle(idcar) || IsWAAVehicle(idcar))
	                {
	                    CarInfo[idcar][cPaintjob] = 3;
	                    ChangeVehiclePaintjob(idcar, CarInfo[idcar][cPaintjob]-1);
	                    Message(playerid, COLOR_GRAD2, "Vinilo instalado!");
	                } else Message(playerid, COLOR_GRAD2, "Este vehículo no permite vinilos!");
	            }
	        }
		}
	}
	if(dialogid == TUNING_WAA)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
	            // XFLOW TUNING
	            case 0:
	            {
	                Message(playerid, COLOR_GRAD2, "CASE0");
					switch(GetVehicleModel(idcar))
			        {
			            case 560:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1030;
	                        CarInfo[idcar][cRoof] = 		1033;
	                        CarInfo[idcar][cSpoiler] = 		1139;
	                        CarInfo[idcar][cRearBumper] = 	1140;
	                        CarInfo[idcar][cFrontBumper] = 	1170;
	                        CarInfo[idcar][cExhaust] = 	1029;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            }
			            case 562:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1039;
	                        CarInfo[idcar][cRoof] = 		1035;
	                        CarInfo[idcar][cRearBumper] = 	1148;
	                        CarInfo[idcar][cFrontBumper] = 	1172;
	                        CarInfo[idcar][cExhaust] = 	1037;
	                        CarInfo[idcar][cSpoiler] = 	1146;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            }
			            case 565:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1048;
	                        CarInfo[idcar][cRoof] = 		1053;
	                        CarInfo[idcar][cSpoiler] = 		1050;
	                        CarInfo[idcar][cRearBumper] = 	1151;
	                        CarInfo[idcar][cFrontBumper] = 	1152;
	                        CarInfo[idcar][cExhaust] = 	1045;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            }
			            case 559:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1070;
	                        CarInfo[idcar][cRoof] = 		1068;
	                        CarInfo[idcar][cSpoiler] = 		1158;
	                        CarInfo[idcar][cRearBumper] = 	1161;
	                        CarInfo[idcar][cFrontBumper] = 	1173;
	                        CarInfo[idcar][cExhaust] = 	1066;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            }
			            case 561:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1057;
	                        CarInfo[idcar][cRoof] = 		1061;
	                        CarInfo[idcar][cSpoiler] = 		1060;
	                        CarInfo[idcar][cRearBumper] = 	1156;
	                        CarInfo[idcar][cFrontBumper] = 	1157;
	                        CarInfo[idcar][cExhaust] = 	1059;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            }
			            case 558:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1093;
	                        CarInfo[idcar][cRoof] = 		1091;
	                        CarInfo[idcar][cSpoiler] = 		1163;
	                        CarInfo[idcar][cRearBumper] = 	1167;
	                        CarInfo[idcar][cFrontBumper] = 	1165;
	                        CarInfo[idcar][cExhaust] = 	1089;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            }
			            default: Message(playerid, COLOR_GRAD2, "Este vehículo no permite este tipo de tuning.");
			        }
	            }
	            // ALIEN TUNING
				case 1:
	            {
	                Message(playerid, COLOR_GRAD2, "CASE0");
					switch(GetVehicleModel(idcar))
			        {
			            case 560:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1026;
	                        CarInfo[idcar][cRoof] = 		1032;
	                        CarInfo[idcar][cSpoiler] = 		1138;
	                        CarInfo[idcar][cRearBumper] = 	1141;
	                        CarInfo[idcar][cFrontBumper] = 	1169;
	                        CarInfo[idcar][cExhaust] = 	1028;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            }
			            case 562:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1036;
	                        CarInfo[idcar][cRoof] = 		1038;
	                        CarInfo[idcar][cRearBumper] = 	1149;
	                        CarInfo[idcar][cFrontBumper] = 	1171;
	                        CarInfo[idcar][cExhaust] = 	1034;
	                        CarInfo[idcar][cSpoiler] = 	1147;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            }
			            case 565:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1047;
	                        CarInfo[idcar][cRoof] = 		1054;
	                        CarInfo[idcar][cSpoiler] = 		1049;
	                        CarInfo[idcar][cRearBumper] = 	1150;
	                        CarInfo[idcar][cFrontBumper] = 	1153;
	                        CarInfo[idcar][cExhaust] = 	1046;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            }
			            case 559:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1069;
	                        CarInfo[idcar][cRoof] = 		1067;
	                        CarInfo[idcar][cSpoiler] = 		1162;
	                        CarInfo[idcar][cRearBumper] = 	1159;
	                        CarInfo[idcar][cFrontBumper] = 	1160;
	                        CarInfo[idcar][cExhaust] = 	1065;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            }
			            case 561:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1056;
	                        CarInfo[idcar][cRoof] = 		1055;
	                        CarInfo[idcar][cSpoiler] = 		1058;
	                        CarInfo[idcar][cRearBumper] = 	1154;
	                        CarInfo[idcar][cFrontBumper] = 	1153;
	                        CarInfo[idcar][cExhaust] = 	1064;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            }
			            case 558:
			            {
	                        CarInfo[idcar][cSideskirt] = 	1094;
	                        CarInfo[idcar][cRoof] = 		1088;
	                        CarInfo[idcar][cSpoiler] = 		1164;
	                        CarInfo[idcar][cRearBumper] = 	1168;
	                        CarInfo[idcar][cFrontBumper] = 	1166;
	                        CarInfo[idcar][cExhaust] = 	1092;
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            }
			            default: Message(playerid, COLOR_GRAD2, "Este vehículo no permite este tipo de tuning.");
			        }
	            }
	        }
		}
	}
    if(dialogid == MECANICO_MENU_TUNING_global)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0: { ShowPlayerDialog(playerid, TUNING_MENU_NITRO, DIALOG_STYLE_LIST, "-> Nitroso <-", "x2\nx5\nx10", "Tunear", "<<"); }
	            case 1: { ShowPlayerDialog(playerid, TUNING_MENU_RUEDAS, DIALOG_STYLE_LIST, "-> Menú Llantas <-", "OffRoad\nShadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAcces", "Tunear", "<<"); }
	            case 2: { ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_global_suspensionystereo, DIALOG_STYLE_LIST, "-> Supensión & Stereo <-", "Suspensión Hidráulica", "Tunear", "<<"); }
	            case 3: { ShowPlayerDialog(playerid, MECANICO_MENU_NEON,  DIALOG_STYLE_LIST, "-> Neon <-", "Tubo Rojo\nTubo Azul\nTubo Verde\nTubo Amarillo\nTubo Rosa\nTubo Blanco","Tunear",""); }
                 case 4: { CarInfo[idcar][cGPS] = 1; Message(playerid, COLOR_WHITE, "* Has instalado un GPS en el vehículo.");   }
                 case 5: { CarInfo[idcar][cRastreo] = 1; Message(playerid, COLOR_WHITE, "* Has instalado el sistema de rastreo al vehículo.");   }
			}
		}
	}
	if(dialogid == MECANICO_MENU_NEON)
		{
	    if(response)
	    {
	        PlayerPlaySound(playerid, 1133, 0, 0, 0);
	        SendClientMessage(playerid, COLOR_GREY,"Neon Agregado.");
	        new idx = GetPlayerVehicleID(playerid);
	        CNeon[idx] = 1;
	        DestroyObject(Neon[idx]);
	        if(listitem == 0)
	        {
	            Neon[idx] = CreateObject(18647,0,0,0,0,0,0);
		    	AttachObjectToVehicle(Neon[idx], idx, 0.0, 0.0, -0.4, 0.0, 0.0, 0.0);
		    	VehiclesMod[idx][14] = 18647;
		    	VehiclesMod[idx][15] = 1;
			}
			if(listitem == 1)
	        {
	            Neon[idx] = CreateObject(18648,0,0,0,0,0,0);
		        AttachObjectToVehicle(Neon[idx], idx, 0.0, 0.0, -0.4, 0.0, 0.0, 0.0);
		        VehiclesMod[idx][14] = 18648;
		        VehiclesMod[idx][15] = 1;
	            return 1;
			}
			if(listitem == 2)
	        {
	            Neon[idx] = CreateObject(18649,0,0,0,0,0,0);
		        AttachObjectToVehicle(Neon[idx], idx, 0.0, 0.0, -0.4, 0.0, 0.0, 0.0);
		        VehiclesMod[idx][14] = 18649;
		        VehiclesMod[idx][15] = 1;
	            return 1;
			}
			if(listitem == 3)
	        {
	            Neon[idx] = CreateObject(18650,0,0,0,0,0,0);
		        AttachObjectToVehicle(Neon[idx], idx, 0.0, 0.0, -0.4, 0.0, 0.0, 0.0);
		        VehiclesMod[idx][14] = 18650;
		        VehiclesMod[idx][15] = 1;
			}
			if(listitem == 4)
	        {
	            Neon[idx] = CreateObject(18651,0,0,0,0,0,0);
		        AttachObjectToVehicle(Neon[idx], idx, 0.0, 0.0, -0.4, 0.0, 0.0, 0.0);
		        VehiclesMod[idx][14] = 18651;
		        VehiclesMod[idx][15] = 1;
			}
			if(listitem == 5)
	        {
	            Neon[idx] = CreateObject(18652,0,0,0,0,0,0);
		        AttachObjectToVehicle(Neon[idx], idx, 0.0, 0.0, -0.4, 0.0, 0.0, 0.0);
		        VehiclesMod[idx][14] = 18652;
		        VehiclesMod[idx][15] = 1;
			}
		}
		return 1;
	}
	if(dialogid == MECANICO_MENU_TUNING_color)
	{
		if(response == 1)
	    {
	        switch(listitem)
			{
				case 0: { ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color_1, DIALOG_STYLE_INPUT, "-> Cambiar Color #1 <-", "Inserta el ID del Color a pintar (0-255)", "Pintar", "Atrás"); }
				case 1: { ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color_2, DIALOG_STYLE_INPUT, "-> Cambiar Color #2 <-", "Inserta el ID del Color a pintar (0-255)", "Pintar", "Atrás"); }
			}
		}
	}
	if(dialogid == MECANICO_MENU_TUNING_name)
	{
	    if(response == 1)
	    {
            strmid(CarInfo[idcar][cName], inputtext, 0, strlen(inputtext), 12);
            format(string, sizeof(string), "- Nuevo modelo: %s", CarInfo[idcar][cPlate]);
            new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	    }
	}
	if(dialogid == MECANICO_MENU_TUNING_motor)
	{
		if(response == 1)
	    {
	        new Float:cx, Float:cy, Float:cz;
        	GetVehiclePos(idcar, cx, cy, cz);
        	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        switch(listitem)
			{
				case 0: { CarInfo[idcar][cGas] = 0; Message(playerid, COLOR_GRAD2, "Motor 95 instalado!"); }
				case 1: { CarInfo[idcar][cGas] = 1; Message(playerid, COLOR_GRAD2, "Motor 98 instalado!"); }
				case 2: { CarInfo[idcar][cGas] = 2; Message(playerid, COLOR_GRAD2, "Motor Diesel instalado!"); }
				case 3:	{ CarInfo[idcar][cGas] = 3; Message(playerid, COLOR_GRAD2, "Motor Biodiesel instalado!");  }
			}
		}
	}
	if(dialogid == MECANICO_MENU_TUNING_bateria)
	{
		if(response == 1)
	    {
	        new Float:cx, Float:cy, Float:cz;
        	GetVehiclePos(idcar, cx, cy, cz);
        	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        switch(listitem)
			{
				case 0: { CarInfo[idcar][cBattery] = 1000; Message(playerid, COLOR_GRAD2, "Batería Cyclon 6V instalado!"); }
				case 1: { CarInfo[idcar][cBattery] = 5000; Message(playerid, COLOR_GRAD2, "Batería Duncan 8V instalado!"); }
				case 2: { CarInfo[idcar][cBattery] = 10000; Message(playerid, COLOR_GRAD2, "atería Bosch 12V instalado!"); }
			}
		}
	}
	if(dialogid == MECANICO_MENU_TUNING_global_suspensionystereo)
	{
		if(response == 1)
	    {
	        new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        switch(listitem)
	        {
	            case 0: { Message(playerid, COLOR_WHITE, ">- Suspensión Hidráulica -<"); CarInfo[idcar][cHydraulics] = 1087; AddVehicleComponent(idcar, CarInfo[idcar][cHydraulics]);  return 1; }
			}
		}
	}
	if(dialogid == MECANICO_MENU_TUNING_color_1)
	{
		if(response == 1)
	    {
	        if(strval(inputtext) < 0 || strval(inputtext) > 255) return Message(playerid, COLOR_GRAD2, "ID Incorrecto de Color (0-255)");
	        new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1134, cx, cy, cz);
            CarInfo[idcar][cColorOne] = strval(inputtext);
            ChangeVehicleColor(idcar, CarInfo[idcar][cColorOne], CarInfo[idcar][cColorTwo]);
		}
	}
	if(dialogid == MECANICO_MENU_TUNING_color_2)
	{
		if(response == 1)
	    {
	        if(strval(inputtext) < 0 || strval(inputtext) > 255) return Message(playerid, COLOR_GRAD2, "ID Incorrecto de Color (0-255)");
	        new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1134, cx, cy, cz);
            CarInfo[idcar][cColorTwo] = strval(inputtext);
            ChangeVehicleColor(idcar, CarInfo[idcar][cColorOne], CarInfo[idcar][cColorTwo]);
		}
	}
	if(dialogid == TUNING_MENU_RUEDAS)
	{
		if(response == 1)
	    {
	        new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        switch(listitem)
	        {
	            case 0: { Message(playerid, COLOR_WHITE, ">- Llantas OffRoad puestas! -<"); CarInfo[idcar][cWheel] = 1025; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]); return 1; }
	            case 1: { Message(playerid, COLOR_WHITE, ">- Llantas Shadow puestas! -<"); CarInfo[idcar][cWheel] = 1073; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 2: { Message(playerid, COLOR_WHITE, ">- Llantas Mega puestas! -<"); CarInfo[idcar][cWheel] = 1074; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]); return 1; }
	            case 3: { Message(playerid, COLOR_WHITE, ">- Llantas Rimshine puestas! -<"); CarInfo[idcar][cWheel] = 1075; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 4: { Message(playerid, COLOR_WHITE, ">- Llantas Wires puestas! -<"); CarInfo[idcar][cWheel] = 1076; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 5: { Message(playerid, COLOR_WHITE, ">- Llantas Classic puestas! -<"); CarInfo[idcar][cWheel] = 1077; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 6: { Message(playerid, COLOR_WHITE, ">- Llantas Twist puestas! -<"); CarInfo[idcar][cWheel] = 1078; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 7: { Message(playerid, COLOR_WHITE, ">- Llantas Cutter puestas! -<"); CarInfo[idcar][cWheel] = 1079; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 8: { Message(playerid, COLOR_WHITE, ">- Llantas Switch puestas! -<"); CarInfo[idcar][cWheel] = 1080; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 9: { Message(playerid, COLOR_WHITE, ">- Llantas Grove puestas! -<"); CarInfo[idcar][cWheel] = 1081; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 10: { Message(playerid, COLOR_WHITE, ">- Llantas Import puestas! -<"); CarInfo[idcar][cWheel] = 1082; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 11: { Message(playerid, COLOR_WHITE, ">- Llantas Dollar puestas! -<"); CarInfo[idcar][cWheel] = 1083; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 12: { Message(playerid, COLOR_WHITE, ">- Llantas Trance puestas! -<"); CarInfo[idcar][cWheel] = 1084; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 13: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); CarInfo[idcar][cWheel] = 1085; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 14: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); CarInfo[idcar][cWheel] = 1096; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 15: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); CarInfo[idcar][cWheel] = 1097; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            case 16: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); CarInfo[idcar][cWheel] = 1098; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
			}
		}
	}
	if(dialogid == TUNING_MENU_NITRO)
	{
		if(response == 1)
	    {
	        new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        switch(listitem)
	        {
	            case 0: { Message(playerid, COLOR_WHITE, "Tuning x2 Instalado."); CarInfo[idcar][cNitro] = 1009; AddVehicleComponent(idcar, CarInfo[idcar][cNitro]); return 1; }
	            case 1: { Message(playerid, COLOR_WHITE, "Tuning x5 Instalado."); CarInfo[idcar][cNitro] = 1008; AddVehicleComponent(idcar, CarInfo[idcar][cNitro]); return 1; }
	            case 2: { Message(playerid, COLOR_WHITE, "Tuning x10 Instalado."); CarInfo[idcar][cNitro] = 1010; AddVehicleComponent(idcar, CarInfo[idcar][cNitro]); return 1; }
	        }
		}
	}
	if(dialogid == MECANICO_MENU_OTROS)
	{
		if(response == 1)
	    {
	        new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        switch(listitem)
	        {
	            case 0:
				{
				    ShowPlayerDialog(playerid, MECANICO_MENU_OTROS_matricula, DIALOG_STYLE_INPUT, "-> Matricula <-", "Inserta una matrícula, de 5 carácteres numéricos", "Matricular", "Atrás");
				}
				case 1:
				{
					KillTimer(mmtimer);
				    mmtimer = SetTimer("MM_Noise", 1000, true);
				    SetTimerEx("MM_Exam", 10000, false, "i", playerid);
				    Message(playerid, COLOR_WHITE, "* Examinando vehículo, espere");
				}
				case 2:
				{
					CarInfo[idcar][cAlarm] = 1;
				    Message(playerid, COLOR_WHITE, "Alarma instalada!");
				}
			}
		}
	}
	if(dialogid == MECANICO_MENU_OTROS_matricula)
	{
		if(response == 1)
	    {
	        if(strval(inputtext) > 99999 || strval(inputtext) < 11111) return ShowPlayerDialog(playerid, MECANICO_MENU_OTROS_matricula, DIALOG_STYLE_INPUT, "-> Matricula <-", "Inserta una matrícula, de 5 carácteres numéricos", "Matricular", "Atrás");
	        format(string, sizeof(string), "GW - %d", strval(inputtext));
	        strmid(CarInfo[idcar][cPlate], string, 0, strlen(string), 11);
	        SetVehicleNumberPlate(idcar, CarInfo[idcar][cPlate]);
	        Message(playerid, COLOR_WHITE, "Martrícula cambiada! Cuando respawnee el vehículo se verá la nueva matrícula!");
		}
	}
	if(dialogid == REQ_SOCIAL)
	{
	    if(response == 1)
	    {
	        format(string, sizeof(string), "¡Felicidades! Has entrado al grupo social %s!",ReqG_Social[playerid]);
	        Message(playerid, COLOR_YELLOW, string);
	        PlayerInfo[playerid][pGSocial]= ReqG_Social[playerid];
	        format(string, sizeof(string), "* %s acepta la entrada al club social", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        ReqF_Name[playerid] = "0"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
	    }
	    else
		{
            Message(playerid, COLOR_GRAD2, "Rechazaste el contrato.");
            format(string, sizeof(string), "* %s rechaza un contrato", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
		}
	}


		if(dialogid == REQF_ACCEPT)
	{
	    if(response == 1)
	    {
	        format(string, sizeof(string), "¡Felicidades! Ahora trabajas en %s, aceptaste el contrato!",ReqF_Name[playerid]);
	        Message(playerid, COLOR_YELLOW, string);
	        PlayerInfo[playerid][pMember]= ReqF_Faction[playerid];
	        PlayerInfo[playerid][pRank] = 1;
	        format(string, sizeof(string), "* %s accepta un contrato", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
	    }
	    else
		{
            Message(playerid, COLOR_GRAD2, "Rechazaste el contrato.");
            format(string, sizeof(string), "* %s rechaza un contrato", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
		}
	}
	if(dialogid == ENTER_LSTV)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
                    Pause(playerid);
	                SetPosEx(playerid, -2719.7854,519.2936,48.3752,0,0,0);//-1965.2617,779.8456,107.1754
	                GText(playerid, "~g~~h~lstv", 5000, 1);
	            }
	            case 1:
	            {
	                Pause(playerid);
	                SetPosEx(playerid, 243.2710,302.7583,999.1343+1,0,0,0);
	                GText(playerid, "~g~~h~lstv", 5000, 1);
	            }
	        }
	    }
	}
	if(dialogid == GASOLINA_DIALOG)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
             case 0: FuelCar(playerid, 0);
	            case 1: FuelCar(playerid, 1);
	            case 2: FuelCar(playerid, 2);
	            case 3: FuelCar(playerid, 3);
	        }
	    }
	}
	if(dialogid == IMPORTAR_MOTOR)
	{
	    if(response == 1)
	    {
    		new Float:A,Float:B,Float:C;
     		GetPlayerPos(playerid, A, B, C);

	        switch(listitem)
	        {
	            case 0:
				{
		        	Message(playerid, COLOR_YELLOW, "Motor instalado: sin plomo 95, capacidad: 100l");
					CarInfo[PlayerInfo[playerid][pPcarkey]][cGas] = 0;
					OnPropUpdate(2);
				}
	            case 1:
				{
		        	Message(playerid, COLOR_YELLOW, "Motor instalado: sin plomo 98, capacidad: 100l");
					CarInfo[PlayerInfo[playerid][pPcarkey]][cGas] = 1;
					OnPropUpdate(2);
				}
				case 2:
				{
		        	Message(playerid, COLOR_YELLOW, "Motor instalado: Diesel, capacidad: 100l");
					CarInfo[PlayerInfo[playerid][pPcarkey]][cGas] = 2;
					OnPropUpdate(2);
				}
				case 3:
				{
		        	Message(playerid, COLOR_YELLOW, "Motor instalado: Biodiesel, capacidad: 100l");
					CarInfo[PlayerInfo[playerid][pPcarkey]][cGas] = 3;
					OnPropUpdate(2);
				}
	        }
	    }
	    else
		{
			CarInfo[PlayerInfo[playerid][pPcarkey]][cGas] = 0;
			Message(playerid, COLOR_YELLOW, "Motor asignado estándar (Sin plomo 95), capacidad: 100 litros");
			OnPropUpdate(2);
		}
	}
//////////////////////////////////MP3//////////////////////////////////////
    ///////////////////TUTO
    if(dialogid == DIALOG_REG_MSN)
    	{
	        if(response)
    	    {
        	    new str[2] = "@";
            	if(strfind(inputtext, str, true) != -1 && strfind(inputtext, "=", true) == -1)
				{
					strmid(PlayerInfo[playerid][pMSN], inputtext, 0, strlen(inputtext), 48);
					format(string,sizeof(string),"¿ Confirmas tu e-mail %s ?",PlayerInfo[playerid][pMSN]);
					ShowPlayerDialog(playerid, DIALOG_REG_MSNC, DIALOG_STYLE_MSGBOX, "Información", string, "Confirmar", "Cancelar");
				} else return ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Formato Inválido","Has insertado un formato inválido \n Ej: tuemail@hotmail.com","Registrar","Cancelar");
    	    } else return ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Rellena tus datos","Para poder jugar debes registrar tu e-mail","Registrar","Cancelar");
		}
		if(dialogid == DIALOG_REG_MSNC)
		{
		    if(response)
		    {
		        ShowPlayerDialog(playerid,DIALOG_REG_TUT,DIALOG_STYLE_MSGBOX,"{00DD00}Fin del registro",\
				"{FFFFFF}Informacion anticipada al Tutorial:\n\n\
 				En este Tutorial puedes Pasar Pagina Cuando ya Los Hallas Leido\n\
				Presta mucha Atencion al Tutorial, Para que no Tengas Problemas en el Servidor.\n\
				Utiliza la tecla ESPACIO (sprint, correr) para pasar de concepto/página.\n\
				Utiliza la tecla C (crouch, agacharse) para comenzar de nuevo el tutorial.\n\n\
				\t\t\t¿ Listo para ver ver el tutorial ?"	,"Ver","");
				return 1;
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Rellena tus datos","Para poder jugar debes registrar tu e-mail","Registrar","Cancelar");
			}
		}
		if(dialogid == DIALOG_REG_TUT)
		{
		    if(response)
		    {
		        ClearChatbox(playerid, 10);
	    	    Message(playerid, COLOR_YELLOW2, "Fin del registro. Ahora verás el tutorial, si sabes rolear puedes usar /saltartutorial");
	        	TutTime[playerid] = 5;
	        	TutorialStep_Forward(playerid);
                SetPlayerVirtualWorld(playerid, 9);
			}
		}
    ///////////////////
if(dialogid == DIALOGO_Camara)
    {
        if(response)
        {
			if(listitem == 0)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			SetPlayerCameraPos(playerid,1629.4174,-1862.6952,21.2817);
			SetPlayerCameraLookAt(playerid,1575.0815,-1879.0133,10.8621);
			SetPosEx(playerid, 1587.9376,-1896.9320,10.5996,92.2134,0,0);
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 1)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
			SetPlayerCameraPos(playerid,1553.0366,-1700.0171,26.1420);
			SetPlayerCameraLookAt(playerid,1525.8433,-1670.5822,11.5199);
			SetPosEx(playerid, 1527.5068,-1675.8615,2.5624,241.6122,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 2)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,1498.5170,-1582.6498,17.8134);
			SetPlayerCameraLookAt(playerid,1485.0052,-1645.1971,13.5559);
			SetPosEx(playerid, 1488.6233,-1635.1669,6.3833,7.8806,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 3)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,1184.5601,-1366.8232,22.0680);
			SetPlayerCameraLookAt(playerid,1191.5835,-1329.8623,13.3337);
			SetPosEx(playerid, 1167.8824,-1329.5675,13.3337,22.3752,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 4)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,806.9362,-1367.8594,20.7077);
			SetPlayerCameraLookAt(playerid,765.2288,-1365.5760,20.2814);
			SetPosEx(playerid, 825.8449,-1367.4927,18.1099,262.0393,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 5)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,612.2947,-1361.3459,20.1094);
			SetPlayerCameraLookAt(playerid,640.1895,-1357.5656,13.4075);
			SetPosEx(playerid, 635.4176,-1352.6017,5.5653,226.0118,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 6)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,300.2555,-1610.3004,37.3035);
			SetPlayerCameraLookAt(playerid,306.1771,-1611.2263,33.2369);
			SetPosEx(playerid, 285.7726,-1609.8107,33.8794,85.2343,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 7)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,1789.5688,-1866.6549,26.8804);
			SetPlayerCameraLookAt(playerid,1825.2701,-1851.1630,13.4141);
			SetPosEx(playerid, 1828.8370,-1849.7885,8.7713,111.0776,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 8)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,1814.8540,-1698.0369,26.4442);
			SetPlayerCameraLookAt(playerid,1831.4166,-1685.9514,13.5469);
			SetPosEx(playerid, 1831.4166,-1685.9514,8.0675,5.4626,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 9)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,1362.7518,-1758.1841,16.8384);
			SetPlayerCameraLookAt(playerid,1349.8483,-1751.7522,13.3622);
			SetPosEx(playerid, 1350.7986,-1754.9395,4.3860,14.1522,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 10)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,1304.6465,-897.9586,40.3539);
			SetPlayerCameraLookAt(playerid,1314.7732,-903.9805,38.9886);
			SetPosEx(playerid, 1316.9097,-898.4781,34.7251,204.9949,0,0);
			TogglePlayerControllable(playerid, 0);
			}
			if(listitem == 11)
			{
			PlayerInfo[playerid][pCamaraV] = 1;
			Message(playerid,COLOR_GREEN,"Para dejar de mirar la camara use /dcamara");
		 	SetPlayerCameraPos(playerid,533.6365,-1292.5753,24.8249);
			SetPlayerCameraLookAt(playerid,548.1344,-1275.4069,17.2482);
			SetPosEx(playerid, 540.0005,-1284.8307,9.7257,320.3419,0,0);
			TogglePlayerControllable(playerid, 0);
			}
		}
        return 1;
    }

if(dialogid == DIALOGO_RADIO)
    {
        if(response)
        {
			if(listitem == 0)
			{
       			ShowPlayerDialog(playerid, DIALOGO_PLAYLIST, DIALOG_STYLE_LIST,"MENU", "95.5 FM - Radio 40 Principales\n104.3 FM - Radio Flaixbac\n90.3 FM - Radio Flaix FM, Dance\n100.4 FM - Radio Rap Hip-Hop\n95.6 FM - Radio Rock Ciudad\n99.9 FM - Radio Reggaeton","Aceptar","Cancelar");
				SendClientMessage(playerid, 0x018CFEFF,"MENU");
			}
			if(listitem == 1)
			{
			    ShowPlayerDialog(playerid, DIALOGO_MP3, DIALOG_STYLE_LIST,"Lista De Canciones", "The Time - Black Eyed Peas\nWhere Them Girls At - David Guetta\nVive la vida loca - DJ\nWaka Waka - Shakira\nRight Round - Florida\nHollywood undead - Eberywhere i go\nLinkin Park - In the end\nBlack Eyed Peas - I gotta feeling\nHollywood undead - Comin`in hot\nRocky - Eyed of the tiguer","Aceptar","Cancelar");
				SendClientMessage(playerid, 0x018CFEFF,"Entraste a la seleccion de Musica");
				format(string, sizeof(string), "* %s Maneja su MP3.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                RemovePlayerAttachedObject(playerid, 1);
			}
			if(listitem == 2)
			{
			    StopAudioStreamForPlayer(playerid);
				SendClientMessage(playerid, 0x018CFEFF,"Apagaste la radio.");
				format(string, sizeof(string), "* %s Apaga y guarda su MP3.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                RemovePlayerAttachedObject(playerid, 1);
			}
		}
        else
        {
        SendClientMessage(playerid, 0x018CFEFF,"Has abandonado el menu de la radio.");
        }
        return 1;
    }

    if(dialogid == DIALOGO_PLAYLIST)
    {
        if(response)
        {
			if(listitem == 0)
			{
       			StopAudioStreamForPlayer(playerid);
       			PlayAudioStreamForPlayer(playerid,"http://194.169.201.177:8085/live3.mp3.m3u");
				SendClientMessage(playerid, 0x018CFEFF,"Estas escuchando Los 40 Principales");
   			}
			if(listitem == 1)
			{
			    StopAudioStreamForPlayer(playerid);
			    PlayAudioStreamForPlayer(playerid,"http://194.224.110.205:80/flaix/flaixbac.mp3");
   			    SendClientMessage(playerid, 0x018CFEFF,"Estas escuchando Radio Flaixbac.");
			}
			if(listitem == 2)
			{
       			StopAudioStreamForPlayer(playerid);
       			PlayAudioStreamForPlayer(playerid,"http://194.169.201.177:8085/liveMaxima.mp3");
				SendClientMessage(playerid, 0x018CFEFF,"Estas escuchando Radio Flaix FM");
   			}
			if(listitem == 3)
			{
			    StopAudioStreamForPlayer(playerid);
			    PlayAudioStreamForPlayer(playerid,"http://broadcast.infomaniak.ch/generationfm-high.mp3.m3u");
   			    SendClientMessage(playerid, 0x018CFEFF,"Estas escuchando Radio Hip-Hop.");
			}
			if(listitem == 4)
			{
			    StopAudioStreamForPlayer(playerid);
			    PlayAudioStreamForPlayer(playerid,"http://www.play.cz/radio/beat128.mp3.m3u");
   			    SendClientMessage(playerid, 0x018CFEFF,"Estas escuchando Rock Ciudad");
			}
			if(listitem == 5)
			{
			    StopAudioStreamForPlayer(playerid);
			    PlayAudioStreamForPlayer(playerid,"http://dir.xiph.org/listen/3930732/listen.m3u");
   			    SendClientMessage(playerid, 0x018CFEFF,"Estas escuchando Radio Reggaeton");
			}
			if(listitem == 6)
			{
			    StopAudioStreamForPlayer(playerid);
			    PlayAudioStreamForPlayer(playerid,"http://67.212.179.138:8262");
   			    SendClientMessage(playerid, 0x018CFEFF,"Estas escuchando Radio Salsa & Merengue.");
			}
		}
        else
        {
        SendClientMessage(playerid, 0x018CFEFF,"Has abandonado el menu de la radio.");
        }
        return 1;
    }

////////////////////////////////// Paint Ball ////////////////////////////////////////////////////////

if(dialogid == DIALOG_PAINTBALL)
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(CheckMoney(playerid, 50))
	                {
	                    SetPosEx(playerid,-1410.72,1591.16,1052.53,0,14,0);
	                    Bought(playerid, 50);
						ArmarPaintBall(playerid);
						InPaintballDM[playerid] = 1;
					}
	            }
	            case 1:
	            {
                    ShowPlayerDialog(playerid, DIALOG_PAINTBALL_TVT, DIALOG_STYLE_LIST, "Equipo vs Equipo", "{FF7617}Equipo Naranja\n{41FF2F}Equipo Verde", "Aceptar", "Cancelar");
	            }
	            case 2:
	            {
	                if(CheckMoney(playerid, 50))
	                {
	                    SetPosEx(playerid,1975.8000,1619.4677,-11.8929,0,0,0);
	                    Bought(playerid, 50);
						ArmarPaintBall(playerid);
						InPaintPvP[playerid] = 1;
					}
	            }
			}
		}
	}
	if(dialogid == DIALOG_PAINTBALL_TVT)
	{
		if(response == 1)
    	{
        	switch(listitem)
        	{
            	case 0:
            	{
                	if(CheckMoney(playerid, 50))
                	{
	   	                SetPosEx(playerid,-973.1844,1061.3037,1345.6699,0,10,0);
	   	                Bought(playerid, 50);
						ArmarPaintBall(playerid);
						InPaintballTvT[playerid] = 1;
						InTvTNaranja[playerid] = 1;
						SetPlayerColor(playerid, ORANGE_ADMIN);
					}
	            }
     			case 1:
       			{
	                if(CheckMoney(playerid, 50))
	                {
	                    SetPosEx(playerid,-1131.2336,1057.7888,1346.4170,0,10,0);
	                    Bought(playerid, 50);
						ArmarPaintBall(playerid);
						InPaintballTvT[playerid] = 1;
						InTvTVerde[playerid] = 1;
						SetPlayerColor(playerid, VERDE_ADMIN);
					}
	            }
			}
		}
	}
    /////////////////////////////////////////////// Comida para llevar /////////////////////////////////////////////////////////////

	if(dialogid == BAR_MENU_LLEVAR)
	{
		if(response == 1)
	    {
         	if(ComidaParaLlevar[playerid] == 5) return Message(playerid, COLOR_FADE1, "Llevas demasiada comida encima, no puedes con mas.");
	        switch(listitem)
	        {
	            case 0:
	            {
                    ComidaParaLlevar[playerid]+=1;
	                Hotdog[playerid]+=1;
                    SendClientMessage(playerid, 0x018CFEFF,"Compras un Hotdog. (/Hotdog) Para comertelo.");
                    Bought(playerid, 45);
                    Till(0, 45);
		            Till(27, 45);
		            Till(3, 45);
		            Till(24, 45);
		            Till(25, 45);
                    return 1
	            }
	            case 1:
	            {
	                ComidaParaLlevar[playerid]+=1;
	                Hamburguesa[playerid]+=1;
	                SendClientMessage(playerid, 0x018CFEFF,"Compras una Hamburguesa. (/Hamburguesa) Para comertela.");
                    Bought(playerid, 45);
                    Till(0, 45);
		            Till(27, 45);
		            Till(3, 45);
		            Till(24, 45);
		            Till(25, 45);
					return 1


			 	}
		 	}
		}
		return 1
	}


	//////////////////////////////////////////////////////////////////////////////////////////////////


      if(dialogid == DIALOGO_MP3)
    {
        if(response)
        {
			if(listitem == 0)
			{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://dc316.4shared.com/img/481604719/c0280a37/dlink__2Fdownload_2FM676MCJc_3Ftsid_3D20110116-111575-8b7a5e20/preview.mp3");
        		    }
        		    if(listitem == 1)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://7e.media.v4.skyrock.net/music/7e5/f71/7e5f710f522d30f15893e24498547317.mp3");
        		    }
		    		if(listitem == 2)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://88.media.v4.skyrock.net/music/88e/81e/88e81e34f58873c2b9c4f0c253c64685.mp3");
        		    }
    				if(listitem == 3)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://4a.media.v4.skyrock.net/music/4a5/787/4a5787155c0bdf5cda57a83f20dad3d3.mp3");
        		    }
    				if(listitem == 4)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://www.degjo.com/upload/go/dldsegment1/(degjo.com)FloRida-Right%20Round.mp3");
              		}
    				if(listitem == 5)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://56.media.v4.skyrock.net/music/56f/f85/56ff85ace1742b1b3efb80853c7cdc0e.mp3");
        		    }
    				if(listitem == 6)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://5d.media.v4.skyrock.net/music/5d4/b6c/5d4b6c2834de1a5bad05c04a0c226847.mp3");
        		    }
					if(listitem == 7)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://39.media.v4.skyrock.net/music/39f/f98/39ff98ea1de8e9770e0e49105b31ddd2.mp3");
        		    }
					if(listitem == 8)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://dl4.zaycev.net/mini/8864/886492.mp3");
        		    }
					if(listitem == 9)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://www.saladospokes.com/Survivor_-_Eye_Of_A_Tiger_Rocky_.mp3");
        		    }
					if(listitem == 10)
					{
        		    	StopAudioStreamForPlayer(playerid);
        		    	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
                        PlayAudioStreamForPlayer(playerid, "http://dc238.4shared.com/img/410865852/8c04b2ac/dlink__2Fdownload_2FOjqkkZQS_3Ftsid_3D00000000-000000-00000000/preview.mp3");
        		    }


      }
 return 1;
    }

///////////////////////////////////////////////////////////////////////

return 1;
}

///////////////////////////// Paint Ball //////////////////////////////

ArmarPaintBall(playerid)
{
	SetHP(playerid, 100);
	SetPlayerArmour(playerid, 100);
 	SafeGivePlayerWeapon(playerid, 4, 1);
  	SafeGivePlayerWeapon(playerid, 27, 250);
   	SafeGivePlayerWeapon(playerid, 25, 200);
    SafeGivePlayerWeapon(playerid, 29, 500);
    SafeGivePlayerWeapon(playerid, 31, 500);
    return 1;
}

////////////////////////////////////////////////////////////////////////


stock ini_GetKey( line[] )
{
	new keyRes[128];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[128];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}
public OnPropUpdate(update)
{
	new idx;
	new File: file2;
	if(update == 2)
	{
	  idx = VV;
 	  while (idx < sizeof(CarInfo))
	  {
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d,%f,%f,%f,%f,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%s,%d,%d\n",
		CarInfo[idx][cModel],//
		CarInfo[idx][cLocationx],//
		CarInfo[idx][cLocationy],//
		CarInfo[idx][cLocationz],//
		CarInfo[idx][cAngle],//
		CarInfo[idx][cColorOne],//
		CarInfo[idx][cColorTwo],//
		CarInfo[idx][cOwner],//
		CarInfo[idx][cName],//
		CarInfo[idx][cValue],//
		CarInfo[idx][cOwned],//
		CarInfo[idx][cLock],
		CarInfo[idx][cBattery],
		CarInfo[idx][cSpoiler],
		CarInfo[idx][cHood],
		CarInfo[idx][cRoof],
		CarInfo[idx][cSideskirt],
		CarInfo[idx][cNitro],
		CarInfo[idx][cLamps],
		CarInfo[idx][cExhaust],
		CarInfo[idx][cWheel],
		CarInfo[idx][cHydraulics],
		CarInfo[idx][cPaintjob],
		CarInfo[idx][cNeon],
		CarInfo[idx][cFrontBumper],
		CarInfo[idx][cRearBumper],
		CarInfo[idx][cVents],
		CarInfo[idx][cEmbargo],
		CarInfo[idx][cMulta],
		CarInfo[idx][cPlate],
		CarInfo[idx][cGas],
		CarInfo[idx][cAlarm],
		CarInfo[idx][cGPS],
		CarInfo[idx][cRastreo]);
		if(idx == VV)
		{
			file2 = fopen("cars.cfg", io_write);
		}
		else
		{
			file2 = fopen("cars.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
		}
	}
	print("OnPlayerUpdate();");
	return 1;
}
function UpdateHouses()
{
    new idx, File: file2, coordsstring[300];
	while (idx < sizeof(HouseInfo))
	{
	    HouseInfo[idx][hWorld] = idx;

		format(coordsstring, sizeof(coordsstring), "%d,%s,%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLevel],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hWep],
		HouseInfo[idx][hAmmo],
		HouseInfo[idx][hMats],
		HouseInfo[idx][hDrugs],
		HouseInfo[idx][hSpeed],
		HouseInfo[idx][hEctasy],
		HouseInfo[idx][hRitalin],
		HouseInfo[idx][hHeroina],
		HouseInfo[idx][hMarihuana],
		HouseInfo[idx][hWorld],
		HouseInfo[idx][hTime]);

		if(idx == 0)	file2 = fopen("property.cfg", io_write);
		else			file2 = fopen("property.cfg", io_append);

		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
}

function UpdateBizz()
{
	new idx, File: file2, coordsstring[256];
	while (idx < sizeof(BizzInfo))
	{
		format(coordsstring, sizeof(coordsstring), "%d,%s,%s,%s,%f,%f,%f,%d,%d,%d,%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bName],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntrancex],
		BizzInfo[idx][bEntrancey],
		BizzInfo[idx][bEntrancez],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bTillEx]);

		if(idx == 0)	file2 = fopen("bizz.cfg", io_write);
		else			file2 = fopen("bizz.cfg", io_append);

		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
}
public BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return 1;
}

public ABroadCast(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pJDS] >= level && AdminChat[i] == 0)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	printf("%s", string);
	return 1;
}
public LSPDFBI(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pMember] == 24 || PlayerInfo[i][pLeader] == 24 || PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
			{
				SendClientMessage(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
public SOLOLSPD(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
			{
				SendClientMessage(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
public A_Info(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pJDS] >= 1)
			{
				SendClientMessage(i, 0xFF9562FF, string);
			}
		}
	}
	return 1;
}
public A_PREMIUM(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pDonateT] >= 1)
			{
			if(!gpre[i])
                {
     SendClientMessage(i, POSITIVO, string);
				}
			}
		}
	}
	return 1;
}
stock OOCOff(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gOoc[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock Sendmensajepremium(nivelpremium, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pDonateT] == nivelpremium)
		    {
                if(!gpre[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}
stock OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gNews[i] == 0)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

stock SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
		    {
                if(RadioOn[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

stock SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

stock SendAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJDS] >= 1 && AdminChat[i] == 0)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendAdminMessaged(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJDS] >= 9)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
//*********************************Autos Dinamicos***********************//
    /*CMD:comprarcoche(playerid, params[])
{
	new string[128];
   	if(!IsPlayerLoggedIn(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Usted necesita a la conexión primero antes de la utilización de cualquier mando.");
	if(!IsPlayerInRangeOfPoint(playerid, 2, 545.6661,-1292.2437,17.2422)) return SendClientMessage(playerid, COLOR_GREY, "You are not near the vehicles dealership.");
		if(CarInfo2[playerid][vModel])
	{
		format(string, sizeof(string), "Usted ya posee el vehículo ID %d.", CarInfo2[playerid][vVeh]);
		SendClientMessage(playerid, COLOR_GREY, string);
	    return 1;
	}
	ShowDialog(playerid, 10);
	return 1;
}
CMD:llaves(playerid, params[])
{
	new Float:vx, Float:vy, Float:vz;
    if(!IsPlayerLoggedIn(playerid)) return Message(playerid, COLOR_GREY, "Usted necesita a la conexión primero antes de la utilización de cualquier mando.");
    if(!CarInfo2[playerid][vModel]) return Message(playerid, COLOR_GREY, "Usted no posee un vehículo.");
    if(CarInfo2[playerid][vVeh])
    	{
		GetVehiclePos(CarInfo2[playerid][vVeh], vx, vy, vz);
		SetPlayerCheckpoint(playerid, vx, vy, vz, 2);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, " Un marcador sobre su GPS que muestra donde su vehículo ha sido colocado.");
	}
	return 1;
}
CMD:estacionar(playerid, params[])
{
   	if(!IsPlayerLoggedIn(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Usted necesita a la conexión primero antes de la utilización de cualquier mando.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Usted no está en un vehículo.");
	// Owned Vehicles
	if(GetPlayerVehicleID(playerid) != CarInfo2[playerid][vVeh]) return SendClientMessage(playerid, COLOR_GREY, "You are not in a vehicle you can park.");
	SendClientMessage(playerid, COLOR_LIGHTBLUE, " Usted ha aparcado su vehículo, esto siempre spawneara aquí hasta que usted lo estacione en otra parte.");
	if(GetPlayerVehicleID(playerid) == CarInfo2[playerid][vVeh])
	{
		for(new i=0; i<14; i++)
		{
		    CarInfo2[playerid][vVehMod][i] = GetVehicleComponentInSlot(CarInfo2[playerid][vVeh], i);
		}
		GetVehiclePos(CarInfo2[playerid][vVeh],CarInfo2[playerid][vvX], CarInfo2[playerid][vvY], CarInfo2[playerid][vvZ]);
		GetVehicleZAngle(CarInfo2[playerid][vVeh],CarInfo2[playerid][vvA]);
		DestroyVehicle(CarInfo2[playerid][vVeh]);
		CarInfo2[playerid][vVeh] = CreateVehicle(CarInfo2[playerid][vModel], CarInfo2[playerid][vvX], CarInfo2[playerid][vvY], CarInfo2[playerid][vvZ],CarInfo2[playerid][vvA],CarInfo2[playerid][vC1],CarInfo2[playerid][vC2],1200);
	    ChangeVehiclePaintjob(CarInfo2[playerid][vVeh], CarInfo2[playerid][vPJ]);
		for(new i=0; i<14; i++)
		{
		    AddVehicleComponent(CarInfo2[playerid][vVeh], CarInfo2[playerid][vVehMod][i]);
		}
	}
	return 1;
	}
CMD:motor(playerid, params[])
{
    new engine, lights, alarm, doors, bonnet, boot, objective, vehicleid, string[128];
   	if(!IsPlayerLoggedIn(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Usted necesita a la conexión primero antes de la utilización de cualquier mando.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Usted no conduce un vehículo.");
	if(vehicleid == 509 || vehicleid == 481 || vehicleid == 510) return SendClientMessage(playerid, COLOR_GREY, "Las bicicletas no tienen ningún motor.");
	vehicleid = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(!engine)
	{
	    SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
	    if(GetPlayerVehicleID(playerid) == CarInfo2[playerid][vVeh])
	    {SetVehicleParamsEx(vehicleid, 1, lights, alarm, CarInfo2[playerid][vLocked], bonnet, boot, objective);}
	    SendClientMessage(playerid,COLOR_WHITE, "El motor del vehículo a sido encendido..");
	    format(string, sizeof(string), "* %s gira la tranca y enciende el motor.", RPN(playerid));
 		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else
	{
				SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
			    if(GetPlayerVehicleID(playerid) == CarInfo2[playerid][vVeh])
			    {SetVehicleParamsEx(vehicleid, 0, 0, 0, CarInfo2[playerid][vLocked], 0, 0, 0);}
	    SendClientMessage(playerid,COLOR_WHITE, "El motor del vehículo a sido apagado.");
	    format(string, sizeof(string), "* %s gira la tranca y apaga el motor.", RPN(playerid));
 		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

CMD:seguroprueba(playerid, params[])
{
	new string[128], idx, lockdone;
   	if(!IsPlayerLoggedIn(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Usted necesita a la conexión primero antes de la utilización de cualquier mando.");
	if(CarInfo2[playerid][vVeh])
    {
        new Float:vx, Float:vy, Float:vz;
	    GetVehiclePos(CarInfo2[playerid][vVeh], vx, vy, vz);
	    if(IsPlayerInRangeOfPoint(playerid, 3, vx, vy, vz))
	    {
	        idx = CarInfo2[playerid][vVeh];
	        new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(idx, engine, lights, alarm, doors, bonnet, boot, objective);
			if(doors)
			{

			    SetVehicleParamsEx(idx, engine, lights, alarm, 0, bonnet, boot, objective);
			    CarInfo2[playerid][vLocked] = 0;
			    format(string, sizeof(string), "* %s saca sus llaves de vehículo y lo abre.", RPN(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GameTextForPlayer(playerid, "~g~Vehiculo abierto", 3500, 3);
			}
			else
			{
			    SetVehicleParamsEx(idx, engine, lights, alarm, 1, bonnet, boot, objective);
			    CarInfo2[playerid][vLocked] = 1;
			    format(string, sizeof(string), "* %s saca sus llaves de vehículo y lo cierra.", RPN(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GameTextForPlayer(playerid, "~r~Vehiculo cerrado", 3500, 3);
			}
			lockdone = 1;
			return 1;
	    }
	    return 1;
    }
    if(lockdone)
	{
	    SendClientMessage(playerid, COLOR_GREY, "Usted no está cerca de algo que usted puede cerrar/abrir.");
}
	return 1;
}*/

//PUNTOS DE ROL///////////

zcmd(sacardefacciona, playerid, params[]) {
if(!sscanf(params, "u", params[0], params[1])) {
if(params[0] != INVALID_PLAYER_ID) {
if(PlayerInfo[playerid][pFacciones] == 1) {
if(PlayerInfo[params[0]][pLeader] == 1) return Message(playerid, COLOR_WHITE, "Así no se saca a un líder, usa /hacerlider ID 0" );
 new string[80];
PlayerInfo[params[0]][pMember] = 0;
PlayerInfo[params[0]][pRank] = 0;
format(string, 256, "Atención: %s sacó de la facción a %s .",PlayerName(playerid),PlayerName(params[0]));
ABroadCast(COLOR_YELLOW,string,1); format(string, sizeof(string), "El administrador %s te sacó de la facción", PlayerName(playerid)); Message(params[0], 0xFFE900FF, string);
OnPlayerUpdateTime(playerid);
return 1;
} else SendClientMessage(playerid, COLOR_GRAD2, "No autorizado!");
} else SendClientMessage(playerid, COLOR_GRAD2, "No conectado");
} else SendClientMessage(playerid, COLOR_GRAD2, "Usa, /sacardefacciona [PlayerID]");
return 1;
}
zcmd(darpuntorol, playerid, params[]) {
if(!sscanf(params, "ui", params[0], params[1])) {
if(params[0] != INVALID_PLAYER_ID) {
if(PlayerInfo[playerid][pJDS] >= 2) {
 new string[80];
PlayerInfo[params[0]][pGPS] += params[1];
format(string, 256, "AdmWarning: %s le a dado a %s %d punto/s de Rol.",PlayerName(playerid),PlayerName(params[0]),params[1]);
ABroadCast(COLOR_YELLOW,string,1); format(string, sizeof(string), "Acabas de recibir %d Punto de Rol, por parte del administrador %s",params[1], PlayerName(playerid)); Message(params[0], 0xFFE900FF, string);
OnPlayerUpdateTime(playerid);
return 1;
} else SendClientMessage(playerid, COLOR_GRAD2, "No eres administrador!");
} else SendClientMessage(playerid, COLOR_GRAD2, "ID Inválida");
} else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /darpuntorol [PlayerID] [puntos rol]");
return 1;
}
zcmd(quitarprol, playerid, params[]) {
if(!sscanf(params, "ui", params[0], params[1])) {
if(params[0] != INVALID_PLAYER_ID) {
if(PlayerInfo[playerid][pJDS] >= 2) {
new string[80]; PlayerInfo[params[0]][pGPS] -= params[1];
format(string, 256, "AdmWarning: %s le a quitado a %s %d punto/s de Rol.", PlayerName(playerid),PlayerName(params[0]),params[1]);
ABroadCast(COLOR_YELLOW,string,1); format(string, sizeof(string), "Acabas de perder %d Punto de Rol, por parte del administrador %s",params[1], PlayerName(playerid));
SendClientMessage(params[0], 0xFFE900FF, string); OnPlayerUpdateTime(playerid); return 1;
} else SendClientMessage(playerid, COLOR_GRAD2, "No eres administrador!");
} else SendClientMessage(playerid, COLOR_GRAD2, "ID Inválida");
} else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /darpuntorol [PlayerID] [puntos rol]");
return 1;
}
	// zcmd:nps/anims ============================================================================================================================
	zcmd(estado,playerid,params[])
{
   new estadoo[200],str[256],mensaje[256];
   if(ConEstado[playerid] == true) return SendClientMessage(playerid,COLOR_GRAD2,"Ya tienes un estado, usa /qestado");
   if(sscanf(params, "s[128]", estadoo) )return SendClientMessage(playerid,COLOR_GRAD2,"Debés usar: /estado [Tú estado] ");
    format(str, sizeof(str), "Estado: {FFFFFF}%s",estadoo);
    format(mensaje, sizeof(mensaje), "Tu estado es: {FFFFFF}%s",estadoo);
    estado[playerid] = Create3DTextLabel(str,COLOR_GRAD2,30.0,40.0,5.0,40.0,1);
     Attach3DTextLabelToPlayer(estado[playerid], playerid, 0.0, 0.0, 0.40);
      SendClientMessage(playerid, POSITIVO, mensaje);
      SendClientMessage(playerid, COLOR_RED, "Para borrar tu estado usa {FFFFFF}/qestado");
    ConEstado[playerid] = true;
    return 1;
}
zcmd(qestado,playerid,params[])
{
   if(ConEstado[playerid] == true){
         SendClientMessage(playerid,COLOR_GRAD2,"Borraste tu estado!");
         Delete3DTextLabel(estado[playerid]);
         ConEstado[playerid] = false; return 1; }
   if(ConEstado[playerid] == false) return SendClientMessage(playerid,COLOR_GRAD2,"No tienes ningun estado");
    return 1;
}
    zcmd(ayudarol, playerid, params[])
	{
	    return ShowPlayerDialog(playerid, AYUDA_DIALOG, DIALOG_STYLE_LIST, "{FF0D00}>{6CF600}GameWorld{FFFFFF}-{9024D3}Reglas de Rol", " {00FF00}>{FFFFFF}CarJack \n {00FF00}>{FFFFFF}DeathMatch \n {00FF00}>{FFFFFF}MetaGaming \n {00FF00}>{FFFFFF}PowerGaming \n {00FF00}>{FFFFFF}Badly Parked Car \n {00FF00}>{FFFFFF}Bad Driving \n {00FF00}>{FFFFFF}Revenge Kill \n {00FF00}>{FFFFFF}Noob Abuser", "Ver", "Salir");
	}
	zcmd(estilocaminar, playerid, params[])
    {
        if(!sscanf(params, "i", params[0]))
        {
            if(params[0] > 0 && params[0] < 14)
            {
	            PlayerInfo[playerid][pWalk] = params[0];
	            SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
	            Message(playerid, COLOR_GRAD2, "* Estilo de caminar ha sido cambiado.");
			} else Message(playerid, COLOR_GRAD2, "/estilo [1-13]");
		} else Message(playerid, COLOR_GRAD2, "/estilo [1-13]");
		return 1;
    }
    //anims ============================================================================================================================
// native ApplyAnimation(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 0);
// By Zume-Zero
function ShowInfoClient(texto[], interval, playerid)
	{
	TextDrawShowForPlayer(playerid, KeyHelp[playerid]);
	TextDrawSetString(KeyHelp[playerid], texto);
	SetTimerEx("ShowInfoClientDestroy", interval, false, "d", playerid);
	}
function ShowInfoClientDestroy(playerid)
	{
	TextDrawHideForPlayer(playerid, KeyHelp[playerid]);
	}
    zcmd(sentarse, playerid, params[])
	{
	    new anim;
	   if(sscanf(params, "d", anim)) return Message(playerid,COLOR_WHITE,"USA: /sentarse [1-5]");
        switch(anim){
			case 1:{ ApplyAnimation(playerid,"BEACH","bather",4.0,1,0,0,0,0); ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
			case 2:{ ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.0,1,0,0,0,0); ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ ApplyAnimation(playerid,"BEACH","ParkSit_W_loop",4.0,1,0,0,0,0); ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 4:{ ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.0,1,0,0,0,0); ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 5:{ ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 6:{ ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			default: return Message(playerid,COLOR_WHITE,"USA: /sentarse [1-5]");
		}
		return 1;
	}
	zcmd(orinar, playerid, params[]){
		SetPlayerSpecialAction(playerid, 68); ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);
		return 1;
	}
    zcmd(dj, playerid, params[]){
	    new anim;
        if(sscanf(params, "d", anim)) return Message(playerid,COLOR_WHITE,"USA: /dj [1-4]");
        switch(anim){
			case 1:{ ApplyAnimation(playerid,"SCRATCHING","scdldlp",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid,"SCRATCHING","scdlulp",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ ApplyAnimation(playerid,"SCRATCHING","scdrdlp",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 4:{ ApplyAnimation(playerid,"SCRATCHING","scdrulp",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
		 	default: return Message(playerid,COLOR_WHITE,"USA: /dj [1-4]");
		}
		return 1;
	}
	zcmd(sinaliento, playerid, params[]){
	    new anim;
	   if(sscanf(params, "d", anim)) return Message(playerid,COLOR_WHITE,"USA: /sinaliento [1-2]");
        switch(anim){
			case 1:{ ApplyAnimation(playerid,"PED","IDLE_tired",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
            default: return Message(playerid,COLOR_WHITE,"USA: /sinaliento [1-2]");
		}
		return 1;
	}
	zcmd(poli, playerid, params[]){
	    new anim;
	    if(sscanf(params, "d", anim)) return Message(playerid,COLOR_WHITE,"USA: /poli [1-2]");
		switch(anim){
			case 1:{ApplyAnimation(playerid,"POLICE","CopTraf_Come",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			default: return Message(playerid,COLOR_WHITE,"USA: /poli [1-2]");
		}
		return 1;
	}
    zcmd(asiento, playerid, params[]){
	    new anim;
		if(sscanf(params, "d", anim)) return Message(playerid,COLOR_WHITE,"USA: /asiento [1-7]");
		if(anim < 1 || anim > 7) return Message(playerid,COLOR_WHITE,"USA: /asiento [1-7]");
		switch(anim){
			case 1:{ ApplyAnimation(playerid,"Attractors","Stepsit_in",4.0,0,0,0,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid,"CRIB","PED_Console_Loop",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.0,0,0,0,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 4:{ ApplyAnimation(playerid,"MISC","SEAT_LR",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 5:{ ApplyAnimation(playerid,"MISC","Seat_talk_01",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 6:{ ApplyAnimation(playerid,"MISC","Seat_talk_02",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 7:{ ApplyAnimation(playerid,"ped","SEAT_down",4.0,0,0,0,1,0); ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
		}
		return 1;
	}
    zcmd(bailar, playerid, params[]){
	    new dancestyle;
		if(sscanf(params, "d", dancestyle)) return Message(playerid,COLOR_WHITE,"USA: /bailar [1-3]");
 		switch(dancestyle){
			case 1:{ SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 4:{ SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
		}
	   	return 1;
	}
    zcmd(cruzar, playerid, params[]){
	    new anim;
        if(sscanf(params, "d", anim)) return Message(playerid,COLOR_WHITE,"USA: /cruzar [1-5]");
		switch(anim){
			case 1:{ ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.0, 0, 1, 1, 1, -1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ ApplyAnimation(playerid, "DEALER", "DEALER_IDLE_01", 4.0, 0, 1, 1, 1, -1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1;}
			case 4:{ ApplyAnimation(playerid,"GRAVEYARD","mrnM_loop",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 5:{ ApplyAnimation(playerid,"GRAVEYARD","prst_loopa",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			default: return Message(playerid,COLOR_WHITE,"USA: /cruzar [1-5]");
		}
		return 1;
	}
    zcmd(jiggy, playerid, params[])
	{
	    new anim;
        if(sscanf(params, "d", anim)) return Message(playerid,COLOR_WHITE,"USA: /jiggy [1-10]");
        switch(anim){
			case 1:{ ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 4:{ ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
   			case 5:{ ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 6:{ ApplyAnimation(playerid,"DANCING","dnce_M_a",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 7:{ ApplyAnimation(playerid,"DANCING","dnce_M_b",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 8:{ ApplyAnimation(playerid,"DANCING","dnce_M_c",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 9:{ ApplyAnimation(playerid,"DANCING","dnce_M_c",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 10:{ ApplyAnimation(playerid,"DANCING","dnce_M_d",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			default: return Message(playerid,COLOR_WHITE,"USA: /jiggy [1-10]");
		}
		return 1;
	}
	zcmd(ped, playerid, params[]){
	    new anim;
        if(sscanf(params, "d", anim)) return Message(playerid,COLOR_WHITE,"USA: /ped [1-26]");
        switch(anim){
			case 1:{ ApplyAnimation(playerid,"PED","JOG_femaleA",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid,"PED","JOG_maleA",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ ApplyAnimation(playerid,"PED","WOMAN_walkfatold",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 4:{ ApplyAnimation(playerid,"PED","run_fat",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 5:{ ApplyAnimation(playerid,"PED","run_fatold",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 6:{ ApplyAnimation(playerid,"PED","run_old",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 7:{ ApplyAnimation(playerid,"PED","Run_Wuzi",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 8:{ ApplyAnimation(playerid,"PED","swat_run",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 9:{ ApplyAnimation(playerid,"PED","WALK_fat",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 10:{ ApplyAnimation(playerid,"PED","WALK_fatold",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 11:{ ApplyAnimation(playerid,"PED","WALK_gang1",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 12:{ ApplyAnimation(playerid,"PED","WALK_gang2",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 13:{ ApplyAnimation(playerid,"PED","WALK_old",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 14:{ ApplyAnimation(playerid,"PED","WALK_shuffle",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 15:{ ApplyAnimation(playerid,"PED","woman_run",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 16:{ ApplyAnimation(playerid,"PED","WOMAN_runbusy",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 17:{ ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 18:{ ApplyAnimation(playerid,"PED","woman_runpanic",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 19:{ ApplyAnimation(playerid,"PED","WOMAN_runsexy",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 20:{ ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 21:{ ApplyAnimation(playerid,"PED","WOMAN_walkfatold",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 22:{ ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 23:{ ApplyAnimation(playerid,"PED","WOMAN_walkold",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 24:{ ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 25:{ ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 26:{ ApplyAnimation(playerid,"PED","WOMAN_walkshop",4.0,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			default: return Message(playerid,COLOR_WHITE,"USA: /ped [1-26]");
		}
		return 1;
	}
	zcmd(rap, playerid, params[]){
	    new rapstyle;
        if(sscanf(params, "d", rapstyle)) return Message(playerid, COLOR_WHITE, "USA: /rap [1-3]");
		switch(rapstyle){
			case 1:{ ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.0,1,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ ApplyAnimation(playerid,"RAPPING","RAP_C_Loop",4.0,1,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			default: return Message(playerid,COLOR_WHITE,"USA: /rap [1-3]");
		}
	   	return 1;
	}
	zcmd(gesto, playerid, params[]){
	    new gesto;
        if(sscanf(params, "d", gesto)) return Message(playerid, COLOR_WHITE, "USA: /gesto [1-15]");
        switch(gesto){
			case 1:{ ApplyAnimation(playerid,"GHANDS","gsign1",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ ApplyAnimation(playerid,"GHANDS","gsign2",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 4:{ ApplyAnimation(playerid,"GHANDS","gsign2LH",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 5:{ ApplyAnimation(playerid,"GHANDS","gsign3",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 6:{ ApplyAnimation(playerid,"GHANDS","gsign3LH",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 7:{ ApplyAnimation(playerid,"GHANDS","gsign4",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 8:{ ApplyAnimation(playerid,"GHANDS","gsign4LH",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 9:{ ApplyAnimation(playerid,"GHANDS","gsign5",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 10:{ ApplyAnimation(playerid,"GHANDS","gsign5",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 11:{ ApplyAnimation(playerid,"GHANDS","gsign5LH",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 12:{ ApplyAnimation(playerid,"GANGS","Invite_No",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 13:{ ApplyAnimation(playerid,"GANGS","Invite_Yes",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 14:{ ApplyAnimation(playerid,"GANGS","prtial_gngtlkD",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 15:{ ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			default: return Message(playerid,COLOR_WHITE,"USA: /gesto [1-15]");
		}
		return 1;
	}
    zcmd(sexo, playerid, params[]){
	    new sexstyle;
	    if(sscanf(params, "d", sexstyle)) return Message(playerid, COLOR_WHITE, "USA: /fuck [1-8]");
 		switch(sexstyle){
 			case 1:{ ApplyAnimation(playerid,"SNM","SPANKING_IDLEW",4.1,0,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid,"SNM","SPANKING_IDLEP",4.1,0,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 3:{ ApplyAnimation(playerid,"SNM","SPANKINGW",4.1,0,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 4:{ ApplyAnimation(playerid,"SNM","SPANKINGP",4.1,0,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 5:{ ApplyAnimation(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 6:{ ApplyAnimation(playerid,"SNM","SPANKEDP",4.1,0,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 7:{ ApplyAnimation(playerid,"SNM","SPANKING_ENDW",4.1,0,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 8:{ ApplyAnimation(playerid,"SNM","SPANKING_ENDP",4.1,0,1,1,1,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			default: return Message(playerid,0xFF0000FF,"USA: /fuckme [style 1-8]");
		}
 	  	return 1;
	}
	zcmd(fumar, playerid, params[]){
	    new gesto;
	    if(sscanf(params, "d", gesto)) return Message(playerid, COLOR_WHITE, "USA: /fumar [1-2]");
		switch(gesto){
			case 1:{ ApplyAnimation(playerid,"SMOKING","M_smk_in",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			case 2:{ ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
			default: return Message(playerid, COLOR_WHITE, "USA: /fumar [1-2]");
		}
		return 1;
	}
	zcmd(chora, playerid, params[]) { ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
	zcmd(relax, playerid, params[]) { ApplyAnimation(playerid, "CRACK", "crckidle1",4.0,0,1,1,1,-1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
	zcmd(crabs, playerid, params[]) { ApplyAnimation(playerid,"MISC","Scratchballs_01",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
	zcmd(saludo2, playerid, params[]) { ApplyAnimation(playerid,"ON_LOOKERS","Pointup_loop",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
	zcmd(stop, playerid, params[]) { ApplyAnimation(playerid,"PED","endchat_01",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
	zcmd(lavarse, playerid, params[]) { ApplyAnimation(playerid,"BD_FIRE","wash_up",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
	zcmd(llorar, playerid, params[]) { ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.0,1,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(sigueme, playerid, params[]) { ApplyAnimation(playerid,"WUZI","Wuzi_follow",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(saludo, playerid, params[]) { ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(quieto, playerid, params[]) { ApplyAnimation(playerid,"WUZI","Wuzi_stand_loop", 4.0, 1, 0, 0, 0, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(enganche, playerid, params[]) { ApplyAnimation(playerid,"MISC","Hiker_Pose", 4.0, 1, 0, 0, 0, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(palmaputa, playerid, params[]) { ApplyAnimation(playerid,"MISC","bitchslap",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(cpr, playerid, params[]) { ApplyAnimation(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(darregalo, playerid, params[]) { ApplyAnimation(playerid,"KISSING","gift_give",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(palmada, playerid, params[]) { ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.0,0,0,0,0,0); ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
    zcmd(borracho, playerid, params[]) { ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(bomba, playerid, params[]) { ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(arobar, playerid, params[]) { ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(reir, playerid, params[]) { ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(lookout, playerid, params[])  { ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(robman, playerid, params[]) { ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
    zcmd(esconder, playerid, params[]) { ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(vomitar, playerid, params[]) { ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(crack, playerid, params[]) { ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(jodete, playerid, params[]) { ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(taichi, playerid, params[]) { ApplyAnimation(playerid,"PARK","Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid); return 1; }
    zcmd(beso, playerid, params[]) { ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.0,0,0,0,0,0); ShowInfoClient("~w~Escriba ~r~/Pararanim ~w~ o Presione ~r~F ~w~Para detener la Animacion", 4000, playerid);return 1; }
    zcmd(pararanim, playerid, params[]) { ClearAnimations(playerid); return 1; }
	zcmd(animaciones, playerid, params[]){
		Message(playerid, COLOR_GREEN,"_________________________________________________________________________________");
        Message(playerid,COLOR_WHITE,"Animaciones:");
        Message(playerid,COLOR_WHITE,"/poli /rendirse /sentarse /sinaliento /asiento /bailar /rap /cruzar /ped /jiggy");
        Message(playerid,COLOR_WHITE,"/gesto /fumar /sexo /orinar /chora /relax /crabs /saludo2 /stop /lavarse /llorar");
        Message(playerid,COLOR_WHITE,"/sigueme /saludo /quieto /enganche /palmaputa /cpr /darregalo /palmada /borracho /bomba");
        Message(playerid,COLOR_WHITE,"/arobar /reir /lookout /robman /esconder /vomitar /crack /jodete /taichi /beso");
		return Message(playerid, COLOR_GREEN,"_________________________________________________________________________________");
	}
	zcmd(apelear, playerid, params[]){
        if(PlayerToPoint(10, playerid, 767.6719,13.6320,1000.7010) || PlayerToPoint(10, playerid, 768.6885,-36.5168,1000.6865)){
	        ShowPlayerDialog(playerid, FSTYLE_DIALOG, DIALOG_STYLE_LIST, " Que le gustaria aprender?", "Me gustaría aprender Knee Head\t 150$\nMe gustaría aprender Kung Fu\t 100$\nMe gustaría aprender Boxeo\t 80$", "Sí", "No");
		} else Message(playerid, COLOR_GRAD2, " No estas en el GYM !");
		return 1;
	}
	zcmd(practicaralexis, playerid, params[]){
        if(PlayerToPoint(10, playerid, -105.7816,-1574.7482,2.7094)){
	        ShowPlayerDialog(playerid, FSTYLE_DIALOG, DIALOG_STYLE_LIST, " En tu casa puedes aprender..", "Knee Head\nKung Fu\nBoxeo", "Aceptar", "Cancelar");
		} else Message(playerid, COLOR_GRAD2, " No estas en el gimnasio de Alexis!");
		return 1;
	}
	zcmd(p1, playerid, params[])
	{
	    return ApplyAnimation(playerid,"Freeweights", "gym_free_B",4.0,1,1,1,1,500);
	}
	zcmd(astrip1, playerid, params[])
	{
	    return ApplyAnimation(playerid,"STRIP","STR_C2",3.0, 1, 1, 1, 1, 1);
	}
	zcmd(astrip2, playerid, params[])
	{
	    return ApplyAnimation(playerid,"STRIP","strip_D",4.1,7,5,1,1,1);
	}
	zcmd(astrip3, playerid, params[])
	{
	    return ApplyAnimation(playerid,"STRIP","STR_C1",3.0, 1, 1, 1, 1, 1);
	}
	zcmd(avigilar, playerid, params[])
	{
	    return ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000);
	}
	zcmd(atraficar, playerid, params[])
	{
	    return ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 1, 0, 0, 0, 4000);
	}
    zcmd(carmas, playerid, params[])
    {
    if(PlayerInfo[playerid][pConnectTime] < 3 || PlayerInfo[playerid][pWRestricted] == 1) return Message(playerid, COLOR_GRAD2, "*Tienes protección de armas las 3 primeras horas");
    if(PlayerToPoint(5, playerid, 308.4166,-141.4639,999.6016))
	{
	ShowAmmunation(playerid);
	}else Message(playerid, COLOR_GRAD2, "No estas en el Ammunation o No estas en el lugar indicado.");
	return 1;
	}
	zcmd(asaltarbanco,playerid, params[])
	{
	if(PlayerToPoint(5.0,playerid,2396.1411,2490.1655,-19.0217))
	{
	if(PlayerInfo[playerid][pROBO] == 0)
	{
	if((nobancoc)) return Message(playerid, COLOR_GRAD2, "El robo al banco se encuentra desactivado por un administrador.");
	if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "Sólo líderes");
	if(GetPlayerWeapon(playerid) > 0) // Mayor del arma 0(Puño).
	{
	new string[MAX_PLAYERS];
	SendClientMessage(playerid, COLOR_GREEN, "¡Estas Robando No Te Puedes Mover Hasta Que No Termines De Robar El Banco!");
    ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);
	Freezed[playerid] = 1;
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("CARGAR", 25000, 0, "d", playerid);
	format(string, sizeof(string), " %s Saca Una Bolso Y Empieza A Meter El Dinero.", PlayerName(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	ProxDetector(30.0, playerid, "La camara capta a un sospechoso", COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(string, sizeof(string), "¡Joder! Te Capto La Camara Y Se Le Informo A LSPD Y FBI, Lo Bueno Le Quitaste $10.000 A La Caja");
 	GivePlayerMoney(playerid,15000);
   	SendClientMessage(playerid,COLOR_YELLOW,string);
   	format(string, 256, "¡La Camara Capto A %s Robando El Banco, Dejen Todo Y Acudan Al Banco!",PlayerName(playerid));
	LSPDFBI(TEAM_ORANGE_COLOR,string,1);
   	PlayerInfo[playerid][pROBO] = 1;
	return 1;
	} else SendClientMessage(playerid, COLOR_WHITE, "¡No puedes robar sin un arma!");
	} else SendClientMessage(playerid, COLOR_WHITE, "¡Ya has robado el banco! ¡únicamente cada payday!");
	} else SendClientMessage(playerid, COLOR_WHITE, "¡No estás en el banco!");
	return 1;
	}
	zcmd(aleccion, playerid, params[])
    {
    if(PlayerToPoint(5, playerid, 314.2575,-133.4665,999.6016))
	{
	ShowPlayerDialog(playerid, DIALOG_AMMU_MANAGER,DIALOG_STYLE_LIST,"Ammunation", "Deseo mejorar mis habilidades a través de libros comprados\nQuiero informarme sobre mis habilidades con las diferentes armas\nObtener licencia de armas (400$)", "Aceptar", "Cancelar");
    }else Message(playerid, COLOR_GRAD2, "No estas en el Ammunation o No estas en el lugar indicado.");
	return 1;
	}
	zcmd(dcamara, playerid, params[])
	{
		if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)
		{
			if(PlayerInfo[playerid][pCamaraV] == 1)
			{
			SendClientMessage(playerid,COLOR_GREEN,"Dejaste de ver las camaras");
			PlayerInfo[playerid][pCamaraV] = 0;
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			SetPosEx(playerid, 1580.0735,-1635.2903,13.5608,326.5774,0,0);
			}else Message(playerid, COLOR_GRAD2, "No estas mirando una camara");
			}else Message(playerid, COLOR_GRAD2, "No autorizado");
			return 1;
	}
    zcmd(trajepizza, playerid, params[])
    {
  		if(PlayerInfo[playerid][pJob] != 6) return Message(playerid, COLOR_GRAD2, " Usted no trabaja de Pizzero");
		if(PlayerToPoint(5, playerid, 369.0226,-114.5778,1001.4995)){
  				ShowPlayerDialog(playerid,EQUIPO_PIZZA,DIALOG_STYLE_LIST,">> Equipo {FF0400}Pizza {D6D300}Stack {FFFFFF}<<","Ropa de Trabajo\nRopa Normal","Usar","Salir");
  				return 1;
            }
            return 1;
    }
    zcmd(cfumar, playerid, params[])
    {
        if(cNicotina[playerid] == 1) 					return Message(playerid, COLOR_GREY, 		"¡No tienes ganas de fumar!");
    	else if(PlayerInfo[playerid][pCigarettes] == 0) return Message(playerid, COLOR_GRAD2, 		"¡No tienes cigarros!");
	    else if(PlayerInfo[playerid][pLighter] == 0) 	return Message(playerid, COLOR_GRAD2, 		"¡No tienes encendedor!");
	    else if(IsSmoking[playerid] > 0) 				return Message(playerid, COLOR_GRAD2, 		"¡Ya estas fumando!");
	    else
	    {
	        new randsmoke = random(6);
	        if(randsmoke < 5)
	        {
				new string[128];
	            PlayerInfo[playerid][pLighter] -= 1;	PlayerInfo[playerid][pCigarettes] -= 1;
	    		format(string, sizeof(string), "* %s abre su cajetilla y se enciende un cigarro.", PlayerName(playerid));
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    IsSmoking[playerid] = 80;
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
				Message(playerid, COLOR_WHITE, "(Fumando) Ahora puedes utilizar /fumar, /dfumar (para dejar de fumar).");
				SmokeTimer[playerid] = SetTimerEx("SmokingCigarette", 1000, true, "i", playerid);
	        }
	        else
	        {
	            PlayerInfo[playerid][pLighter] -= 1;
    			Message(playerid, COLOR_GRAD2, "¡Fallaste al encender el cigarro!");
	        }
	    }
	    return 1;
	}
    zcmd(dfumar, playerid, params[]){
        if(IsSmoking[playerid] > 0){
            new string[128];
        	IsSmoking[playerid] = 0;
         	format(string, sizeof(string), "* %s tira el cigarro al suelo y lo pisa.", PlayerName(playerid));
         	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
          	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
          	KillTimer(SmokeTimer[playerid]);
          	ClearAnimations(playerid);
        }
        else Message(playerid, COLOR_GREY, "¡No está fumando!");
        return 1;
    }
	zcmd(comer, playerid, params[]){
        if(!IsAtBar(playerid)) return Message(playerid, COLOR_GRAD2, "  No estas en un lugar donde beber!");
        if(GetPlayerMoney(playerid) < 0) return Message(playerid, COLOR_FADE2, "Camarero dice: Vete a otro lugar a comer gratis!");
	    if(IsPlayerConnected(playerid)){
		    ShowPlayerDialog(playerid, BAR_MENU, DIALOG_STYLE_LIST, "Menú del Día", "Platos Combinados & Tapas\nRefrescos & Bebidas & Vinos\nComida Para Llevar", "Ver", "Salir");
	    } else Message(playerid, COLOR_GRAD2, " Usted no esta conectado! ");
	    return 1
 }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(hotdog, playerid, params[])
		{
		if(ComidaParaLlevar[playerid] == 0) return Message(playerid, COLOR_FADE1, "No llevas nada encima con lo que poder comer.");
        if(Hotdog[playerid] > 0)
			{
           	new Float:Health;
            new string[90];
			GetPlayerHealth(playerid, Health);
			ComidaParaLlevar[playerid]-=1;
			Hotdog[playerid]-=1;
			SetHP(playerid, Health+25);
	        Message(playerid, COLOR_GRAD2, " Te comes un Hotdog");
            format(string, 90, "* Te quedan en tu bolsa %d Hotdogs.",Hotdog[playerid]);
            Message(playerid, COLOR_GRAD2, string);
			}
		else return Message(playerid, COLOR_FADE1, "No llevas ningun Hotdog en tu bolsa.");
		return 1
      }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(hamburguesa, playerid, params[])
		{
		if(ComidaParaLlevar[playerid] == 0) return Message(playerid, COLOR_FADE1, "No llevas nada encima con lo que poder comer.");
        if(Hamburguesa[playerid] > 0)
			{
            new Float:Health;
            new string[90];
			GetPlayerHealth(playerid, Health);
			ComidaParaLlevar[playerid]-=1;
			Hamburguesa[playerid]-=1;
			SetHP(playerid, Health+45);
            Message(playerid, COLOR_GRAD2, " Te comes una Hamburguesa");
   			format(string, 90, "* Te quedan en tu bolsa %d Hamburguesas.", Hamburguesa[playerid]);
            Message(playerid, COLOR_GRAD2, string);
			}
        else return Message(playerid, COLOR_FADE1, "No llevas ninguna Hamburguesa en tu bolsa.");
		return 1
      }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	zcmd(lockhq, playerid, params[])
	{
	    if(IsPlayerConnected(playerid)){
	        if(gPlayerLogged[playerid] == 0) return Message(playerid, COLOR_GREY, "No has logeado!");
         	if(Team_Groove(playerid)){
				if(hqlock[GS] == 0) {hqlock[GS] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
				else if(hqlock[GS] == 1) {hqlock[GS] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
			}
            if(Mafia_Espanola(playerid)){
				if(hqlock[ESP] == 0) {hqlock[ESP] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[ESP] == 1) {hqlock[ESP] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
			if(Team_Hermandad(playerid)){
				if(hqlock[LH] == 0) {hqlock[LH] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[LH] == 1) {hqlock[LH] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
    		if(Team_LK(playerid)){
				if(hqlock[LK] == 0) {hqlock[LK] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[LK] == 1) {hqlock[LK] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(Mafia_Italiana(playerid)){
				if(hqlock[ITA] == 0) {hqlock[ITA] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[ITA] == 1) {hqlock[ITA] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(Mafia_Rusa(playerid)){
				if(hqlock[RUS] == 0) {hqlock[RUS] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[RUS] == 1) {hqlock[RUS] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(Mafia_Yakuza(playerid)){
				if(hqlock[YAK] == 0) {hqlock[YAK] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[YAK] == 1) {hqlock[YAK] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(TriadasTeam(playerid)){
				if(hqlock[TRI] == 0) {hqlock[TRI] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[TRI] == 1) {hqlock[TRI] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(Team_Blood(playerid)){
				if(hqlock[BLO] == 0) {hqlock[BLO] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[BLO] == 1) {hqlock[BLO] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(Hitman(playerid)){
				if(hqlock[HIT] == 0) {hqlock[HIT] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[HIT] == 1) {hqlock[HIT] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(Mafia_Capone(playerid)){
				if(hqlock[CAP] == 0) {hqlock[CAP] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[CAP] == 1) {hqlock[CAP] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(Mafia_Alemana(playerid)){
				if(hqlock[ALE] == 0) {hqlock[ALE] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[ALE] == 1) {hqlock[ALE] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(Mafia_Alqaeda(playerid)){
				if(hqlock[ALQ] == 0) {hqlock[ALQ] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[ALQ] == 1) {hqlock[ALQ] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	if(Team_Mecanicos(playerid)){
				if(hqlock[MEC] == 0) {hqlock[MEC] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[MEC] == 1) {hqlock[MEC] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	} else return Message(playerid, COLOR_GREY, "No tienes las llaves del HQ!");
	    }
	    return 1;
	}
	//zcmd: Buy Vehicle
    zcmd(cvehiculo3, playerid, params[]){
 	    if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_RED2, "Necesitas ser premium");
 	    new newcar = GetPlayerVehicleID(playerid), idcar = GetPlayerVehicleID(playerid);
 	    if(CarInfo[idcar][cOwned] == 1) return Message(playerid, COLOR_RED2, "El vehículo no está en venta.");
  	    if(PlayerInfo[playerid][pCarPremium] != 9999) return Message(playerid, COLOR_RED2, "Ya posees un vehículo.");
        if(!IsAnOwnableCar(newcar)) return Message(playerid, COLOR_RED2, "Este vehículo no está en venta.");
   	    if(GetPlayerMoney(playerid) >= CarInfo[idcar][cValue]){
            ShowPlayerDialog(playerid, IMPORTAR_MOTOR, DIALOG_STYLE_LIST, "Elegir prestaciones", "Motor sin plomo 95\t\tCapacidad: 100l (1$/l)\nMotor sin plomo 98\t\tCapacidad: 120l (1$/l)\nMotor Diesel\t\tCapacidad: 160l (2$/l)\nMotor Biodiesel\t\tCapacidad: 230l (3$/l)", "Instalar", "Salir");
    	    PlayerInfo[playerid][pCarPremium] = idcar;
     	    CarInfo[idcar][cOwned] = 1;
      	    CarInfo[idcar][cBattery] = 5000;
		    strmid(CarInfo[PlayerInfo[playerid][pCarPremium]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 32);
		    GivePlayerMoney(playerid,-CarInfo[PlayerInfo[playerid][pCarPremium]][cValue]);
	    	SetVehicleParamsEx(idcar, 0,0,0,0,0,0,0);
		    gEngine[playerid] = 0;
	    	engineOn[idcar] = false;
	    	ClearChatbox(playerid, 10);
	    	Till(6,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            Till(8,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            Till(7,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
	    	Message(playerid, COLOR_GREEN, "Felicidades! Has adquirido este vehículo, utiliza (/ayuda vehiculo)");
	    	strmid(CarInfo[idcar][cPlate], "00000", 0, strlen("00000"), 255);
	    	SetVehicleNumberPlate(idcar, CarInfo[idcar][cPlate]);
	    	OnPropUpdate(2);
	    } else Message(playerid, COLOR_RED2, "No tienes dinero suficiente!");
	    return 1;
	}
 zcmd(cvehiculo4, playerid, params[]){
 	    if(PlayerInfo[playerid][pDonateT] <= 1) return Message(playerid, COLOR_RED2, "Necesitas ser premium especial");
 	    new newcar = GetPlayerVehicleID(playerid), idcar = GetPlayerVehicleID(playerid);
 	    if(CarInfo[idcar][cOwned] == 1) return Message(playerid, COLOR_RED2, "El vehículo no está en venta.");
  	    if(PlayerInfo[playerid][pCarPremium2] != 9999) return Message(playerid, COLOR_RED2, "Ya posees un vehículo.");
        if(!IsAnOwnableCar(newcar)) return Message(playerid, COLOR_RED2, "Este vehículo no está en venta.");
   	    if(GetPlayerMoney(playerid) >= CarInfo[idcar][cValue]){
            ShowPlayerDialog(playerid, IMPORTAR_MOTOR, DIALOG_STYLE_LIST, "Elegir prestaciones", "Motor sin plomo 95\t\tCapacidad: 100l (1$/l)\nMotor sin plomo 98\t\tCapacidad: 120l (1$/l)\nMotor Diesel\t\tCapacidad: 160l (2$/l)\nMotor Biodiesel\t\tCapacidad: 230l (3$/l)", "Instalar", "Salir");
    	    PlayerInfo[playerid][pCarPremium2] = idcar;
     	    CarInfo[idcar][cOwned] = 1;
      	    CarInfo[idcar][cBattery] = 5000;
		    strmid(CarInfo[PlayerInfo[playerid][pCarPremium2]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 32);
		    GivePlayerMoney(playerid,-CarInfo[PlayerInfo[playerid][pCarPremium2]][cValue]);
	    	SetVehicleParamsEx(idcar, 0,0,0,0,0,0,0);
		    gEngine[playerid] = 0;
	    	engineOn[idcar] = false;
	    	ClearChatbox(playerid, 10);
	    	Till(6,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            Till(8,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            Till(7,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
	    	Message(playerid, COLOR_GREEN, "Felicidades! Has adquirido este vehículo, utiliza (/ayuda vehiculo)");
	    	strmid(CarInfo[idcar][cPlate], "00000", 0, strlen("00000"), 255);
	    	SetVehicleNumberPlate(idcar, CarInfo[idcar][cPlate]);
	    	OnPropUpdate(2);
	    } else Message(playerid, COLOR_RED2, "No tienes dinero suficiente!");
	    return 1;
	}
	zcmd(cvehiculo, playerid, params[]){
 	    if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_RED2, "Debes ser como mínimo nivel 2");
 	    new newcar = GetPlayerVehicleID(playerid), idcar = GetPlayerVehicleID(playerid);
 	    if(CarInfo[idcar][cOwned] == 1) return Message(playerid, COLOR_RED2, "El vehículo no está en venta.");
 	    if(PlayerInfo[playerid][pPcarkey] != 9999) return Message(playerid, COLOR_RED2, "Ya posees un vehículo.");
        if(!IsAnOwnableCar(newcar)) return Message(playerid, COLOR_RED2, "Este vehículo no está en venta.");
   	    if(GetPlayerMoney(playerid) >= CarInfo[idcar][cValue]){
            ShowPlayerDialog(playerid, IMPORTAR_MOTOR, DIALOG_STYLE_LIST, "Elegir prestaciones", "Motor sin plomo 95\t\tCapacidad: 100l (1$/l)\nMotor sin plomo 98\t\tCapacidad: 120l (1$/l)\nMotor Diesel\t\tCapacidad: 160l (2$/l)\nMotor Biodiesel\t\tCapacidad: 230l (3$/l)", "Instalar", "Salir");
            PlayerInfo[playerid][pPcarkey] = idcar;
            CarInfo[idcar][cOwned] = 1;
            CarInfo[idcar][cBattery] = 5000;
            strmid(CarInfo[PlayerInfo[playerid][pPcarkey]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 32);
            GivePlayerMoney(playerid,-CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            SetVehicleParamsEx(idcar, 0,0,0,0,0,0,0);
            gEngine[playerid] = 0;
            Till(6,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            Till(8,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            Till(7,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            engineOn[idcar] = false;
            ClearChatbox(playerid, 10);
            Message(playerid, COLOR_GREEN, "Felicidades! Has adquirido este vehículo, utiliza (/ayuda vehiculo)");
            strmid(CarInfo[idcar][cPlate], "00000", 0, strlen("00000"), 255);
            SetVehicleNumberPlate(idcar, CarInfo[idcar][cPlate]);
            OnPropUpdate(2);
	    } else Message(playerid, COLOR_RED2, "No tienes dinero suficiente!");
	    return 1;
	}
	zcmd(cvehiculo2, playerid, params[]){
 	    if(PlayerInfo[playerid][pLevel] < 5) return Message(playerid, COLOR_RED2, "Debes ser como mínimo nivel 5");
 	    new newcar = GetPlayerVehicleID(playerid), idcar = GetPlayerVehicleID(playerid);
 	    if(CarInfo[idcar][cOwned] == 1) return Message(playerid, COLOR_RED2, "El vehículo no está en venta.");
 	    if(PlayerInfo[playerid][pPcarkey2] != 9999) return Message(playerid, COLOR_RED2, "Ya posees un vehículo.");
        if(!IsAnOwnableCar(newcar)) return Message(playerid, COLOR_RED2, "Este vehículo no está en venta.");
   	    if(GetPlayerMoney(playerid) >= CarInfo[idcar][cValue]){
            ShowPlayerDialog(playerid, IMPORTAR_MOTOR, DIALOG_STYLE_LIST, "Elegir prestaciones", "Motor sin plomo 95\t\tCapacidad: 100l (1$/l)\nMotor sin plomo 98\t\tCapacidad: 120l (1$/l)\nMotor Diesel\t\tCapacidad: 160l (2$/l)\nMotor Biodiesel\t\tCapacidad: 230l (3$/l)", "Instalar", "Salir");
            PlayerInfo[playerid][pPcarkey2] = idcar;
            CarInfo[idcar][cOwned] = 1;
            CarInfo[idcar][cBattery] = 5000;
            strmid(CarInfo[PlayerInfo[playerid][pPcarkey2]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 32);
            GivePlayerMoney(playerid,-CarInfo[PlayerInfo[playerid][pPcarkey2]][cValue]);
            SetVehicleParamsEx(idcar, 0,0,0,0,0,0,0);
            gEngine[playerid] = 0;
            engineOn[idcar] = false;
            ClearChatbox(playerid, 10);
            Till(6,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            Till(8,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            Till(7,CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            Message(playerid, COLOR_GREEN, "Felicidades! Has adquirido este vehículo, utiliza (/ayuda vehiculo)");
            strmid(CarInfo[idcar][cPlate], "00000", 0, strlen("00000"), 255);
            SetVehicleNumberPlate(idcar, CarInfo[idcar][cPlate]);
            OnPropUpdate(2);
	    } else Message(playerid, COLOR_RED2, "No tienes dinero suficiente!");
	    return 1;
	}
    //zcmd: Evento
    new Float:xe, Float:ye, Float:ze;
    zcmd(evento, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 4) return Message(playerid, COLOR_GRAD2, " No Autorizado!");
        if(EventoOn != 1){
            EventoOn = 1;
			new string[128];
            GlobalMsg(-1, " {CDE8F0}Atención <<");
            format(string, sizeof(string), "{FFFFFF}El modo evento ha sido activado por {CDE878}%s, {FFFFFF}usa {519760}/participar {FFFFFF}para entrar.", PlayerName(playerid));
            GlobalMsg(-1, string);
            GlobalMsg(-1, "{FFFFFF}Recuerde que al entrar al evento perderá sus armas. Si entra siga las indicaciones de los administradores.");
            GetPlayerPos(playerid,xe,ye,ze);
		}else{
            EventoOn = 0;
            GlobalMsg(-1, "{FFFFFF}El modo evento ha sido {F80F60}desactivado.");
        }
        return 1;
	}
	zcmd(participar, playerid, params[]){
        if(EventoOn == 1){
            SetPlayerPos(playerid,xe,ye,ze);
            SetPlayerArmour(playerid, 100);
            ResetPlayerWeapons(playerid);
            SetHP(playerid, 100);
            GText(playerid, "~g~Entraste al modo evento~n~~w~Sigue las instrucciones del organizador", 7000, 4);
		} else Message(playerid, COLOR_GRAD2, "No está activado el modo evento");
		return 1;
	}
	// zcmd:info ============================================================================================================================
	zcmd(soporte, playerid, params[])
	{
        ClearChatbox(playerid, 8);
	    Message(playerid, -1, "{C8D228}-= {00B39D}Centro de Soporte {FFFFFF}GameWorld {C8D228}=-");
	    Message(playerid, -1, "{FFFFFF}- Dudas sobre terminos de juego - {FF0828}/duda");
	    Message(playerid, -1, "{FFFFFF}- Reportar a un jugador por infringir las normas - {46ED8F}/re");
	    return Message(playerid, -1, "{FFFFFF}- ¿Necesistas asistencia? - {00A400}/solicitaradmin");
	}
	zcmd(servicios, playerid, params[]){
        ClearChatbox(playerid, 10);
	    Message(playerid, -1, " {FFFFFF}* {658EBB}Números de Servicios {FFFFFF}*");
	 	Message(playerid, -1, " {FFFFFF}* Emergencias - {65BD7D}# 911");
	 	Message(playerid, -1, " {FFFFFF}* Mecanicos - {65BD7D}# 555");
	 	Message(playerid, -1, " {FFFFFF}* Pizza Stack - {65BD7D}# 111");
	 	return Message(playerid, -1, " {FFFFFF}* Taxi Cab Company - {65BD7D}# 444");
	}
    zcmd(facciones, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] > 0){
			Message(playerid, COLOR_BLUE, "= ID'S de Facciones =");
			Message(playerid, -1, "1. LSPD - 2. LVPD - 3. SAEM");
			Message(playerid, -1, "4. LSMC - 5. LVMC - 6. Taxistas LS");
			Message(playerid, -1, "7. MecanicosLS - 8. C. Inteligencia - 9. Groove");
			Message(playerid, -1, "10. Sureños 13 - 11. L. Kings - 12. LCN - 13. Yakuza");
			Message(playerid, -1, "14. Familia Korsakuva - 15. Licencieros - 16. Gobierno - 17. SATV");
			Message(playerid, -1, "18. MecanicosLV ELIMINADA - 19. Traficantes - 20. Triadas - 21. TaxiLV");
			Message(playerid, -1, "22. Los 14 diamantes negros - 23. Hitman - 24. FBI - 25. Blood's - 26. Cripz");
			Message(playerid, -1, "27. Alqaeda - 28. The Visage - 29, Alemana");
		} else Message(playerid, COLOR_GRAD2, "No autorizado");
		return 1;
	}
	zcmd(idtrabajos, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] > 1){
			Message(playerid, COLOR_BLUE, "= ID'S de Trabajos =");
			Message(playerid, -1, "1. Conductor de Tren - 2. Barrendero - 3. Piloto");
			Message(playerid, -1, "4. Vendedor de móviles - 5. Ladrón - 6. Pizzero");
			Message(playerid, -1, "7. Heladero - 8. Camionero");
			Message(playerid, -1, "Mas trabajos Proxima version ;)");
		} else Message(playerid, COLOR_GRAD2, "No autorizado");
		return 1;
	}
	//Canales
	zcmd(togpm, playerid, params[]){
		if (!HidePM[playerid]){
			HidePM[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "¡PMs Bloqueados!");
		}
		else if (HidePM[playerid]){
			HidePM[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "¡PMs Habilitados!");
		}
        return 1;
    }
    zcmd(togfam, playerid, params[]){
        if(!gFam[playerid]){
			gFam[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Chat de Facción desactivado.");
		}
		else{
			gFam[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Chat de Facción activado.");
		}
        return 1;
    }
    zcmd(tognews, playerid, params[]){
        if(!gNews[playerid]){
			gNews[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Chat de Radio/Ads desactivado.");
		}
		else{
			gNews[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Chat de Radio/Ads activado.");
		}
        return 1;
    }
	zcmd(togphone, playerid, params[]){
        if (!PhoneOnline[playerid]){
			PhoneOnline[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Teléfono apagado.");
		}
		else{
			PhoneOnline[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Teléfono encendido.");
		}
        return 1;
    }
	zcmd(togooc, playerid, params[]){
		if (!gOoc[playerid]){
			gOoc[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "    Desactivaste el chat de ayuda.");
		}
		else{
			gOoc[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "    Activaste el chat de ayuda.");
		}
		return 1;
	}
	zcmd(togpre, playerid, params[]){
		if (!gpre[playerid]){
			gpre[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "    Desactivaste el chat premium.");
		}
		else{
			gpre[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "    Activaste el chat premium.");
		}
		return 1;
	}
    zcmd(id, playerid, params[]){
        if(!sscanf(params, "u", params[0])){
            new string[32];
            format(string, sizeof(string), "(%d) - %s",params[0], PlayerName(params[0]));
			Message(playerid, COLOR_GRAD2, string);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /id <NombreJugador>");
        return 1;
    }
    zcmd(gpstaxi, playerid, params[]){
        if(!Team_Taxi(playerid)) return Message(playerid, COLOR_GRAD2, " No eres Taxista!");
        if(OnDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, " No estás en servicio!");
        if(!sscanf(params, "u", params[0])){
            new Float:X,Float:Y,Float:Z;
			GetPlayerPos(params[0], X,Y,Z);
			SetPlayerCheckpoint(playerid, X,Y,Z, 6);
			Message(playerid, COLOR_RED, "Posición del jugador marcado en el mapa.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /gpstaxi <NombreJugador>");
        return 1;
    }
    zcmd(removegps, playerid, params[]){
    	if(IsPlayerConnected(playerid)){
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
	zcmd(hidetaximeter, playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			TextDrawHideForPlayer(playerid, Taximeter[playerid]);
		}
		return 1;
    }
    zcmd(eject, playerid, params[])
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            new State = GetPlayerState(playerid), string[90];
            if(State!=PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GRAD2, "¡No eres conductor!");
            if(!sscanf(params, "u", params[0]))
            {
                if(IsPlayerConnected(params[0]))
				{
    				if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No te puedes echar ati mismo!");
        			if(IsPlayerInAnyVehicle(params[0]))
			        {
						if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(params[0]))
						{
	      					format(string, sizeof(string), "* %s agarra fuertemente a %s y lo expulsa del vehículo", PlayerName(playerid), PlayerName(params[0]));
					    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    	    RemovePlayerFromVehicle(params[0]);
						} else Message(playerid, COLOR_GRAD2, "El jugador no está en tu vehículo");
					} else Message(playerid, COLOR_GRAD2, "El jugador no está en un vehículo");
				} else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
            } else Message(playerid, COLOR_GRAD2, "Utilize: /eject <ID>");
        } else Message(playerid, COLOR_GRAD2, "¡No estás en ningún vehículo!");
        return 1;
    }
    //zcmd [Cmd's Houses]
    zcmd(vendercasa, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_RED, "No posees una propiedad.");
        if(PlayerToPoint(3.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez]))
		{
		    new string[128];
			if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				new sell = HouseInfo[PlayerInfo[playerid][pPhousekey]][hValue]+HouseInfo[PlayerInfo[playerid][pPhousekey]][hRentabil];
				Earn(playerid, sell);
				format(string, sizeof(string), "Has vendido tu propiedad. Has recuperado %d$",sell);
				Message(playerid, COLOR_WHITE, string);
				SellHouse(playerid, PlayerInfo[playerid][pPhousekey]);
				PlayerInfo[playerid][pPhousekey] = 9999;
			} else Message(playerid, COLOR_RED, "No posees una propiedad.");
		} else Message(playerid, COLOR_RED, "¡Debes estar cerca de tu casa para venderla!");
        return 1;
    }
    zcmd(vendercasa2, playerid, params[])
    {
        if(PlayerInfo[playerid][pDonateT] < 3) return Message(playerid, COLOR_GRAD2, "No eres premium nivel 3");
        if(PlayerInfo[playerid][pPhousekey2] == 9999) return Message(playerid, COLOR_RED, "No posees una propiedad.");
        if(PlayerToPoint(3.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hEntrancex],HouseInfo[PlayerInfo[playerid][pPhousekey2]][hEntrancey],HouseInfo[PlayerInfo[playerid][pPhousekey2]][hEntrancez]))
		{
		    new string[128];
			if(PlayerInfo[playerid][pPhousekey2] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey2]][hOwner], true) == 0)
			{
				new sell = HouseInfo[PlayerInfo[playerid][pPhousekey2]][hValue]+HouseInfo[PlayerInfo[playerid][pPhousekey2]][hRentabil];
				Earn(playerid, sell);
				format(string, sizeof(string), "Has vendido tu propiedad. Has recuperado %d$",sell);
				Message(playerid, COLOR_WHITE, string);
				SellHouse(playerid, PlayerInfo[playerid][pPhousekey2]);
				PlayerInfo[playerid][pPhousekey2] = 9999;
			} else Message(playerid, COLOR_RED, "No posees una propiedad.");
		} else Message(playerid, COLOR_RED, "¡Debes estar cerca de tu casa para venderla!");
        return 1;
    }
 	zcmd(avendercasa, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0]))
        {
            if(params[0] > MAX_HOUSES || params[0] < 1) return Message(playerid, COLOR_GRAD2, "ID incorrecto.");
            else SellHouse(playerid, params[0]);
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /avendercasa <id>");
        return 1;
    }
     zcmd(rcuarto, playerid, params[])
    {
        for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
			{
   				if(HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRent] > 0)
			    {
			        new string[64];
					if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
     					Message(playerid, COLOR_RED2, "Tú posees una propiedad. No hace falta que rentes una.");
          				return 1;
					}
					if(HouseInfo[h][hRooms] < 1) return Message(playerid, COLOR_RED2, "¡No hay habitaciones disponibles!");
					if(PlayerInfo[playerid][pRent] > 0) return Message(playerid, COLOR_RED2, "¡Ya estás pagando una renta!");
					if(GetPlayerMoney(playerid) >= HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPhousekey] = h;
      					PlayerInfo[playerid][pEntered] = h;
						PlayerInfo[playerid][pRent] = HouseInfo[PlayerInfo[playerid][pPhousekey]][hRent];
						Bought(playerid, HouseInfo[h][hRent]);
						HouseInfo[PlayerInfo[playerid][pPhousekey]][hRentabil] = HouseInfo[PlayerInfo[playerid][pPhousekey]][hRentabil]+HouseInfo[h][hRent];
						Message(playerid, COLOR_WHITE, "Has rentado esta casa. Ahora podrás vivir aquí.");
						format(string, sizeof(string), "Cada PayDay, pagarás %d$ de Renta.", PlayerInfo[playerid][pRent]);
						Message(playerid, COLOR_WHITE, string);
						Message(playerid, COLOR_WHITE, "Utiliza /desrentar para cancelar la renta.");
						HouseInfo[PlayerInfo[playerid][pPhousekey]][hRooms] -= 1;
						OnPropTextdrawUpdate(PlayerInfo[playerid][pPhousekey]);
					} else Message(playerid, COLOR_RED2, "No tienes suficientes fondos para rentar esta casa.");
				} else Message(playerid, COLOR_RED2, "Esta casa no se encuentra disponible para alquilarla.");
			}
		}
        return 1;
    }
    // Other's
    zcmd(tlc, playerid, params[])
    {
        if(Team_LSPD(playerid) || Team_LVPD(playerid))
        {
        	if(pdtrace == 1 || pdtrace_x == 0 || pdtrace_y == 0 || pdtrace_z == 0)
         	{
                SendClientMessage(playerid, 0xFF8080FF, ">><<>><<>> Estableciendo contacto ... >><<>><<>>");
	            SendClientMessage(playerid, COLOR_WHITE, "GPS: Contacto establecido, ubicación marcada en el mapa.");
				SetPlayerCheckpoint(playerid,pdtrace_x,pdtrace_y,pdtrace_z,8.0);
	        }
	        else Message(playerid, COLOR_WHITE, "Error en la localizacion de la persona que llama.");
		}
	    else if(Team_SAMUR(playerid) || Team_LVMD(playerid))
        {
        	if(emdtrace == 1 || emdtrace_x == 0 || emdtrace_y == 0 || emdtrace_z == 0)
         	{
	            SendClientMessage(playerid, COLOR_WHITE, "Ultima llamada del lugar marcados en rojo en el mapa");
	            SendClientMessage(playerid, COLOR_WHITE, "Utiliza: /removergps para remover el checkpoint");
				SetPlayerCheckpoint(playerid,emdtrace_x,emdtrace_y,emdtrace_z,8.0);
	        } else Message(playerid, COLOR_WHITE, "Error al localizar!");
		} else Message(playerid, COLOR_WHITE, "¡No autorizado!");
        return 1;
    }
	zcmd(desalojar, playerid, params[]){
        if(!sscanf(params, "u", params[0])){
            new bouse = PlayerInfo[playerid][pPhousekey], string[64];
			if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0){
			    if(IsPlayerConnected(params[0]) || params[0] == playerid){
			        if(PlayerInfo[params[0]][pPhousekey] == PlayerInfo[playerid][pPhousekey]){
	    				format(string,sizeof(string), "Desalojaste a %s", PlayerName(params[0]));
		    			Message(playerid, COLOR_WHITE, string);
						Message(params[0], COLOR_RED2, "No tienes casa, tu amo canceló la renta.");
						PlayerInfo[params[0]][pPhousekey] = 9999;
						PlayerInfo[params[0]][pRent] = 0;
						HouseInfo[bouse][hRooms] += 1;
						OnPropTextdrawUpdate(bouse);
					} else Message(playerid, COLOR_RED2, "El jugador no te ha alquilado la casa.");
			    } else Message(playerid, COLOR_RED2, "Jugador no conectado.");
			} else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /desalojar <PlayerID>");
        return 1;
    }
    zcmd(desalojar2, playerid, params[]){
        if(!sscanf(params, "u", params[0])){
        if(PlayerInfo[playerid][pDonateT] < 3) return Message(playerid, COLOR_GRAD2, "No eres premium nivel 3");
            new bouse = PlayerInfo[playerid][pPhousekey2], string[64];
			if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey2]][hOwner], true) == 0){
			    if(IsPlayerConnected(params[0]) || params[0] == playerid){
			        if(PlayerInfo[params[0]][pPhousekey2] == PlayerInfo[playerid][pPhousekey2]){
	    				format(string,sizeof(string), "Desalojaste a %s", PlayerName(params[0]));
		    			Message(playerid, COLOR_WHITE, string);
						Message(params[0], COLOR_RED2, "No tienes casa, tu amo canceló la renta.");
						PlayerInfo[params[0]][pPhousekey2] = 9999;
						PlayerInfo[params[0]][pRent] = 0;
						HouseInfo[bouse][hRooms] += 1;
						OnPropTextdrawUpdate(bouse);
					} else Message(playerid, COLOR_RED2, "El jugador no te ha alquilado la casa.");
			    } else Message(playerid, COLOR_RED2, "Jugador no conectado.");
			} else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /desalojar <PlayerID>");
        return 1;
    }
    zcmd(desrentarbici, playerid, params[]){
        new idcar = GetPlayerVehicleID(playerid);
        if(IsaRent[playerid] == 0) return Message(playerid, COLOR_GRAD2, "No has rentado ninguna bicicleta !");
		if(IsARentCar2(idcar) && HireKey2[playerid] == idcar)
		{
		    SetVehicleParamsEx(idcar,0,0,0,0,0,0,0);
  			SetVehicleToRespawn(HireKey2[playerid]);
  			Message(playerid, COLOR_GRAD2, "Gracias, así ayudas a mantener en orden la ciudad.");
  			IsaRent[playerid] = 0;
  			RentTime[playerid] = 0; HireKey2[playerid] = 9999;
		}
        return 1;
    }
	zcmd(desrentar, playerid, params[])
    {
        new playername[MAX_PLAYER_NAME];
        GetPlayerName(playerid, playername, sizeof(playername));
		if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			Message(playerid, COLOR_RED2, "No puedes desrentar tu propia casa.");
			return 1;
		}

		if(PlayerInfo[playerid][pRent] < 1 || PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_RED2, "¡No has rentado nada!");

		HouseInfo[PlayerInfo[playerid][pPhousekey]][hRooms] += 1;
		OnPropTextdrawUpdate(PlayerInfo[playerid][pPhousekey]);
		PlayerInfo[playerid][pPhousekey] = 9999;
		PlayerInfo[playerid][pRent] = 0;
		Message(playerid, COLOR_WHITE, "Dejaste de rentar una casa. Ahora eres un sin-techo.");
		OnPlayerUpdateTime(playerid);
		return 1;
    }
    zcmd(cinfo2, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x[64];
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
			    if(PlayerToPoint(3.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
				{
				    if(HouseInfo[h][hOwned] == 0)
				    {
				        Message(playerid, COLOR_GREEN, "- Propiedad en Venta - Información");
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Valor: %d   -   Nivel: %d", HouseInfo[h][hValue],HouseInfo[h][hLevel]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "ID: %d", HouseInfo[h][hWorld]);
				        Message(playerid, COLOR_WHITE, x);
				        Message(playerid, COLOR_YELLOW2, "- Utiliza /comprarcasa, para comprar la casa");
				        return 1;
					}
					if(PlayerInfo[playerid][pPhousekey2] == h)
				    {
				        Message(playerid, COLOR_RED, "- Propiedad Privada -");
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Valor: %d   -   Nivel: %d", HouseInfo[h][hValue],HouseInfo[h][hLevel]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones Disponibles: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Armario: (Wep: %d - Ammo: %d)", HouseInfo[h][hWep],HouseInfo[h][hAmmo]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Bloqueada: %d", HouseInfo[h][hLock]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "ID: %d", HouseInfo[h][hWorld]);
				        Message(playerid, COLOR_WHITE, x);
				        return 1;
					}
					if(HouseInfo[h][hRent] > 0 && PlayerInfo[playerid][pPhousekey2] != h)
				    {
				        Message(playerid, COLOR_YELLOW, "- Propiedad en Renta - Información");
				        format(x, sizeof(x), "Dueño: %s", HouseInfo[h][hOwner]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Renta: %d$", HouseInfo[h][hRent]);
				        Message(playerid, COLOR_WHITE, x);
				        Message(playerid, COLOR_YELLOW2, "- Utiliza /rcuarto, para rentar una habitación");
				        return 1;
					} else return Message(playerid, COLOR_GRAD2, "No hay información disponible para esta propiedad!");
				}
			}
		} else Message(playerid, COLOR_GRAD2, "¡Necesitas estar conectado!");
		return 1;
	}
zcmd(cinfo, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x[64];
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
			    if(PlayerToPoint(3.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
				{
				    if(HouseInfo[h][hOwned] == 0)
				    {
				        Message(playerid, COLOR_GREEN, "- Propiedad en Venta - Información");
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Valor: %d   -   Nivel: %d", HouseInfo[h][hValue],HouseInfo[h][hLevel]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "ID: %d", HouseInfo[h][hWorld]);
				        Message(playerid, COLOR_WHITE, x);
				        Message(playerid, COLOR_YELLOW2, "- Utiliza /comprarcasa, para comprar la casa");
				        return 1;
					}
					if(PlayerInfo[playerid][pPhousekey] == h)
				    {
				        Message(playerid, COLOR_RED, "- Propiedad Privada -");
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Valor: %d   -   Nivel: %d", HouseInfo[h][hValue],HouseInfo[h][hLevel]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones Disponibles: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Armario: (Wep: %d - Ammo: %d)", HouseInfo[h][hWep],HouseInfo[h][hAmmo]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Bloqueada: %d", HouseInfo[h][hLock]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "ID: %d", HouseInfo[h][hWorld]);
				        Message(playerid, COLOR_WHITE, x);
				        return 1;
					}
					if(HouseInfo[h][hRent] > 0 && PlayerInfo[playerid][pPhousekey] != h)
				    {
				        Message(playerid, COLOR_YELLOW, "- Propiedad en Renta - Información");
				        format(x, sizeof(x), "Dueño: %s", HouseInfo[h][hOwner]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Renta: %d$", HouseInfo[h][hRent]);
				        Message(playerid, COLOR_WHITE, x);
				        Message(playerid, COLOR_YELLOW2, "- Utiliza /rcuarto, para rentar una habitación");
				        return 1;
					} else return Message(playerid, COLOR_GRAD2, "No hay información disponible para esta propiedad!");
				}
			}
		} else Message(playerid, COLOR_GRAD2, "¡Necesitas estar conectado!");
		return 1;
	}
	zcmd(colocarneon, playerid, params[])
	{
	if(Team_Mecanicos(playerid))
	{
	if(IsPlayerInAnyVehicle(playerid))
	{
	ShowInfoClient("~w~Recuerda que hay ~r~3 Tipos", 4000, playerid);
	ShowPlayerDialog(playerid, C_NEON_DIAL_1, DIALOG_STYLE_LIST, "Menu de neones", "Neon Bajo\nNeon Medio\nNeon Alto", "Aceptar", "Cancelar");
	return 1;
	}else SendClientMessage(playerid,COLOR_GREY,"[ERROR]: ¡Necesitas estar en un coche para usar este comando!");
	}else SendClientMessage(playerid,COLOR_GREY,"¡No eres Mecanico!");
	return 1;
	}
	zcmd(entrar, playerid, params[])
	{
        new idcar = GetPlayerVehicleID(playerid);
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerToPoint(2.0, playerid, 1667.2999,2196.1785,10.5119) || PlayerToPoint(2.0, playerid, 1674.3859,2197.1392,10.5143)) // Taller
		    {
          		if(IsPlayerInAnyVehicle(playerid))
          		{
          		    if(hqlock[MEC] == 0)
          		    {
	          		   	SetVehiclePos(idcar, -1518.4218,291.1720,53.0837);
	          		   	Message(playerid, COLOR_WHITE, "Entraste en el taller. No te muevas hasta que te lo indique un mecánico");
					}
					else return GText(playerid, "~r~cerrado", 5000, 1);
          		}
          		if(Team_Mecanicos(playerid))
      		    {
  		        	SetVehiclePos(idcar, -1518.4218,291.1720,53.0837);
	          	   	Message(playerid, COLOR_WHITE, "Entraste en el taller. No te muevas hasta que te lo indique un mecánico");
      		    }

		    }
		    else if(PlayerToPoint(2.0, playerid, 1643.7784,2196.5479,10.5173) || PlayerToPoint(2.0, playerid, 1649.4414,2196.8416,10.5183)) // Taller
		    {
          		if(IsPlayerInAnyVehicle(playerid))
          		{
          		    if(hqlock[MEC] == 0)
          		    {
	          		   	SetVehiclePos(idcar, 613.0524,-124.2267,997.9922);
	          		   	LinkVehicleToInterior(idcar, 3);
	          		   	SetPlayerInterior(playerid, 3);
	          		   	Message(playerid, COLOR_WHITE, "Entraste en el taller tuning. Espere órdenes del mecánico.");
          		   	}
					else return GText(playerid, "~r~cerrado", 5000, 1);
          		}
          		else if(Team_Mecanicos(playerid))
   		       {
          		    SetPosEx(idcar, 613.0524,-124.2267,997.9922,0,3,0);
          		}
          		else return GText(playerid, "~r~cerrado", 5000, 1);

		    }
		    else if(PlayerToPoint(5.0, playerid, 1181.1255,1267.5150,10.0369)) //EXIT AUTOESCUELA
		    {
          		if(IsPlayerInAnyVehicle(playerid))
    		      {
                	if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15 || IsPractising[playerid] > 0)
          		    {
	          		   	SetVehiclePos(idcar, 1171.9594,1267.3438,10.7176);
	          		   	SetVehicleZAngle(idcar, 91.0486);
          		   	}
          		   	else return GText(playerid, "~r~cerrado", 5000, 1);
          		}
		    }
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0 || PlayerInfo[playerid][pPhousekey2] == i)
					{
	 					GameTextForPlayer(playerid, "~g~~h~Bienvenido a casa", 5000, 1);
                         SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
                       SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
                       PlayerInfo[playerid][pEntered] = i;
					}
					else
					{
						GameTextForPlayer(playerid, "~r~puerta cerrada", 5000, 1);
					}
				}
			}
		}
		return 1;
	}
    zcmd(comprarcasa, playerid, params[])
    {
        for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
			{
			    new string[128];
   				if(HouseInfo[h][hOwned] == 1) return Message(playerid, COLOR_RED2, "¡Esta casa ya tiene dueño!");
   				if(PlayerInfo[playerid][pDonateT] == 3)
				   {
				if(PlayerInfo[playerid][pPhousekey] != 9999 && PlayerInfo[playerid][pPhousekey2] != 9999) return Message(playerid, COLOR_RED2, "¡Ya posees dos propiedades!");
				}
				if(PlayerInfo[playerid][pDonateT] <= 2)
				   {
				if(PlayerInfo[playerid][pPhousekey] != 9999) return Message(playerid, COLOR_RED2, "¡Ya posees una propiedad!");
				}
				if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
				{
						format(string, sizeof(string), "Esta propiedad requiere que seas nivel %d", HouseInfo[h][hLevel]);
						Message(playerid, COLOR_RED2, string);
						return 1;
				}
				if(GetPlayerMoney(playerid) >= HouseInfo[h][hValue])
				{
				if(PlayerInfo[playerid][pDonateT] == 3 && PlayerInfo[playerid][pPhousekey] == 9999)
			    	{
					PlayerInfo[playerid][pPhousekey] = h;
					HouseInfo[h][hOwned] = 1;
					HouseInfo[h][hTime] = gettime() + 2592000;
					PlayerInfo[playerid][pEntered] = h;
					strmid(HouseInfo[h][hOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
					Bought(playerid, HouseInfo[h][hValue]);
					SetPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],0,HouseInfo[h][hInt],HouseInfo[h][hWorld]);
					Message(playerid, COLOR_WHITE, "Felicidades por comprar esta casa. Utiliza /ayuda casa");
					OnPropTextdrawUpdate(h);
					UpdateHouses();
					}
				else if(PlayerInfo[playerid][pDonateT] == 3 && PlayerInfo[playerid][pPhousekey2] == 9999)
				{
					PlayerInfo[playerid][pPhousekey2] = h;
					HouseInfo[h][hOwned] = 1;
					HouseInfo[h][hTime] = gettime() + 2592000;
					PlayerInfo[playerid][pEntered] = h;
					strmid(HouseInfo[h][hOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
					Bought(playerid, HouseInfo[h][hValue]);
					SetPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],0,HouseInfo[h][hInt],HouseInfo[h][hWorld]);
					Message(playerid, COLOR_WHITE, "Felicidades por comprar esta casa. Utiliza /ayuda casa");
					OnPropTextdrawUpdate(h);
					UpdateHouses();
					}
                   else if(PlayerInfo[playerid][pDonateT] <= 3)
			    	{
					PlayerInfo[playerid][pPhousekey] = h;
					HouseInfo[h][hOwned] = 1;
					HouseInfo[h][hTime] = gettime() + 2592000;
					PlayerInfo[playerid][pEntered] = h;
					strmid(HouseInfo[h][hOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
					Bought(playerid, HouseInfo[h][hValue]);
					SetPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],0,HouseInfo[h][hInt],HouseInfo[h][hWorld]);
					Message(playerid, COLOR_WHITE, "Felicidades por comprar esta casa. Utiliza /ayuda casa");
					OnPropTextdrawUpdate(h);
					UpdateHouses();
					}
					return 1;
				}
				else Message(playerid, COLOR_RED2, "No tienes fondos suficientes para comprarte esta propiedad.");
			}
		}
 		return 1;
    }
	zcmd(opendoor, playerid, params[])
	{
		if (GetPlayerState(playerid) == 1) TeleportPlayer(playerid);
		return 1;
	}
	zcmd(salir, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	   		{
                TogglePlayerControllable(playerid, 1);
	        	RemovePlayerFromVehicle(playerid);
	    	}
			else if(NoFuel[playerid] == 1)
			{
			    TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
			}
			else if(DressRoom[playerid] > 0)
			{
			    new key = PlayerInfo[playerid][pPhousekey];
			    if(ClothShop[playerid] == 1) { SetPosEx(playerid, 207.7432,-135.1565,1002.8672,5.7000, 3, 0); }
				if(ClothShop[playerid] == 2) { SetPosEx(playerid, 211.7609,-7.6523,1001.2109,5.7000, 5, 0); }
				if(ClothShop[playerid] == 3) { SetPosEx(playerid, 207.7558,-103.3743,1005.2578,5.7000, 15, 0); }
				if(ClothShop[playerid] == 4) { SetPosEx(playerid, 205.1670,-166.4858,1000.5234,76.5140, 14, 0); }
				else {SetPosEx(playerid, HouseInfo[key][hEntrancex],HouseInfo[key][hEntrancex],HouseInfo[key][hEntrancex],0,0,0);}
			}
		}
		return 1;
	}
	zcmd(timehouse, playerid, params[])
	{
	    new h = PlayerInfo[playerid][pPhousekey], string[128];
	    if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "No posees una propiedad.");
	    if(!PlayerToPoint(3.0, playerid, HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez])) return Message(playerid, COLOR_GRAD2, "No estas cerca de tu casa.");
	    new
	        TimeHouse = HouseInfo[h][hTime] - gettime(),
            dias = TimeHouse/60/60/24,
			horas = TimeHouse/60/60 - dias*24,
			minutos = TimeHouse/60 - dias*24*60 - horas*60;
   		format(string, sizeof(string), "{FF8000}%d {FFFFFF}Dias, {FF8000}%d {FFFFFF}Horas, {FF8000}%d {FFFFFF}Minutos para pagar impuestos.", dias, horas, minutos);
		Message(playerid, COLOR_WHITE, string);
		return 1;
	}
      zcmd(timehouse2, playerid, params[])
	{
	    new h = PlayerInfo[playerid][pPhousekey2], string[128];
	    if(PlayerInfo[playerid][pDonateT] < 3) return Message(playerid, COLOR_GRAD2, "No eres premium nivel 3");
	    if(PlayerInfo[playerid][pPhousekey2] == 9999) return Message(playerid, COLOR_GRAD2, "No posees una propiedad.");
	    if(!PlayerToPoint(3.0, playerid, HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez])) return Message(playerid, COLOR_GRAD2, "No estas cerca de tu casa.");
	    new
	        TimeHouse = HouseInfo[h][hTime] - gettime(),
            dias = TimeHouse/60/60/24,
			horas = TimeHouse/60/60 - dias*24,
			minutos = TimeHouse/60 - dias*24*60 - horas*60;
   		format(string, sizeof(string), "{FF8000}%d {FFFFFF}Dias, {FF8000}%d {FFFFFF}Horas, {FF8000}%d {FFFFFF}Minutos para pagar impuestos.", dias, horas, minutos);
		Message(playerid, COLOR_WHITE, string);
		return 1;
	}
	zcmd(pagarimpuestos, playerid, params[])
	{
		if(!PlayerToPoint(5.0,playerid,1510.8704,-1766.3086,-22.5984)) return Message(playerid, COLOR_GRAD2, "No estas en la recaudadora de impuestos.");
		if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes una casa.");
		if(CheckMoney(playerid, 25000)){
			ShowPlayerDialog(playerid, HOUSE_IMPUESTOS, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Por favor ingrese su numero de DNI", "Aceptar", "Cancelar");
		}
		return 1;
	}
	zcmd(pagarimpuestos2, playerid, params[])
	{
		if(!PlayerToPoint(5.0,playerid,1510.8704,-1766.3086,-22.5984)) return Message(playerid, COLOR_GRAD2, "No estas en la recaudadora de impuestos.");
		if(PlayerInfo[playerid][pDonateT] < 3) return Message(playerid, COLOR_GRAD2, "No eres premium nivel 3");
		if(PlayerInfo[playerid][pPhousekey2] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes segunda casa.");
		if(CheckMoney(playerid, 25000)){
			ShowPlayerDialog(playerid, HOUSE_IMPUESTOS2, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Por favor ingrese su numero de DNI", "Aceptar", "Cancelar");
		}
		return 1;
	}
 	zcmd(house, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, " No autorizado");
            if(!sscanf(params, "i", params[0]))
            {
				PlayerInfo[playerid][pEntered] = HouseInfo[params[0]][hWorld];
				SetPosEx(playerid,HouseInfo[params[0]][hExitx],HouseInfo[params[0]][hExity],HouseInfo[params[0]][hExitz],0,HouseInfo[params[0]][hInt],HouseInfo[params[0]][hWorld]);
				GameTextForPlayer(playerid, "~w~Teletrasportado", 5000, 1);
			}
		}
		else Message(playerid, COLOR_GRAD2, " Necesitas estar conectado!");
		return 1;
	}
	zcmd(houseo, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pJDS] < 2) return Message(playerid, COLOR_GRAD2, " No autorizado");
            if(!sscanf(params, "i", params[0]))
            {
				SetPlayerPos(playerid,HouseInfo[params[0]][hEntrancex],HouseInfo[params[0]][hEntrancey],HouseInfo[params[0]][hEntrancez]);
				GameTextForPlayer(playerid, "~w~Teletrasportado", 5000, 1);
			}
		}
		else Message(playerid, COLOR_GRAD2, " Necesitas estar conectado!");
		return 1;
	}
    zcmd(sarma, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] != 9999)
		{
  			if(PlayerToPoint(20.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitx],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExity],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hWorld])
	    	{
      			if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] != 0)
	        	{
                    SafeGivePlayerWeapon(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep], HouseInfo[PlayerInfo[playerid][pPhousekey]][hAmmo]);
	            	HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] = 0;
              		HouseInfo[PlayerInfo[playerid][pPhousekey]][hAmmo] = 0;
                	Message(playerid, COLOR_YELLOW, "Sacaste tu arma de tu armario. Utiliza /garma para volverla a guardar.");
	        	}
          		else Message(playerid, COLOR_GRAD2, "¡No tienes un arma en tu armario!");
			}
			else Message(playerid, COLOR_RED2, "¡No estás en tu casa!");
		}
		else Message(playerid, COLOR_RED2, "¡No tienes casa!");
        return 1;
    }
    zcmd(garma, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] != 9999)
		{
  			if(PlayerToPoint(20.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitx],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExity],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hWorld])
	    	{
      			if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] > 0) return Message(playerid, COLOR_RED2, "¡Tu armario está lleno!");

				new gunID = GetPlayerWeapon(playerid);
				new gunAmmo = GetPlayerAmmo(playerid);
				if(gunID != 0 && gunAmmo != 0)
				{
					HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] = gunID;
					HouseInfo[PlayerInfo[playerid][pPhousekey]][hAmmo] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
     				Message(playerid, COLOR_YELLOW, "Guardaste tu arma en tu armario. Utiliza /sarma para removerla.");
      			}
      			else Message(playerid, COLOR_RED2, "¡No tienes arma!");
			}
			else Message(playerid, COLOR_RED2, "¡No estás en tu casa!");
		}
		else Message(playerid, COLOR_RED2, "¡No tienes casa!");
        return 1;
    }
	zcmd(heal, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new bouse = PlayerInfo[playerid][pPhousekey];
	        if(bouse != 999)
	        {
		        if(PlayerToPoint(20.0,playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
		        {
		            SetHP(playerid, 100.0);
		            PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
		        }
			}
			else Message(playerid, COLOR_RED2, "No posees una propiedad.");
		}
		else Message(playerid, COLOR_RED2, "! Primero Conectate !");
		return 1;
	}
 zcmd(sarma2, playerid, params[])
    {
	if(PlayerInfo[playerid][pDonateT] < 3) return Message(playerid, COLOR_GRAD2, "No eres premium nivel 3");
        if(PlayerInfo[playerid][pPhousekey2] != 9999)
		{
  			if(PlayerToPoint(20.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hExitx],HouseInfo[PlayerInfo[playerid][pPhousekey2]][hExity],HouseInfo[PlayerInfo[playerid][pPhousekey2]][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWorld])
	    	{
      			if(HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWep] != 0)
	        	{
                    SafeGivePlayerWeapon(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWep], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hAmmo]);
	            	HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWep] = 0;
              		HouseInfo[PlayerInfo[playerid][pPhousekey2]][hAmmo] = 0;
                	Message(playerid, COLOR_YELLOW, "Sacaste tu arma de tu armario. Utiliza /garma para volverla a guardar.");
	        	}
          		else Message(playerid, COLOR_GRAD2, "¡No tienes un arma en tu armario!");
			}
			else Message(playerid, COLOR_RED2, "¡No estás en tu casa!");
		}
		else Message(playerid, COLOR_RED2, "¡No tienes casa!");
        return 1;
    }
    zcmd(garma2, playerid, params[])
    {
	if(PlayerInfo[playerid][pDonateT] < 3) return Message(playerid, COLOR_GRAD2, "No eres premium nivel 3");
        if(PlayerInfo[playerid][pPhousekey2] != 9999)
		{
  			if(PlayerToPoint(20.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hExitx],HouseInfo[PlayerInfo[playerid][pPhousekey2]][hExity],HouseInfo[PlayerInfo[playerid][pPhousekey2]][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWorld])
	    	{
      			if(HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWep] > 0) return Message(playerid, COLOR_RED2, "¡Tu armario está lleno!");

				new gunID = GetPlayerWeapon(playerid);
				new gunAmmo = GetPlayerAmmo(playerid);
				if(gunID != 0 && gunAmmo != 0)
				{
					HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWep] = gunID;
					HouseInfo[PlayerInfo[playerid][pPhousekey2]][hAmmo] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
     				Message(playerid, COLOR_YELLOW, "Guardaste tu arma en tu armario. Utiliza /sarma para removerla.");
      			}
      			else Message(playerid, COLOR_RED2, "¡No tienes arma!");
			}
			else Message(playerid, COLOR_RED2, "¡No estás en tu casa!");
		}
		else Message(playerid, COLOR_RED2, "¡No tienes casa!");
        return 1;
    }
	zcmd(heal2, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
		if(PlayerInfo[playerid][pDonateT] < 3) return Message(playerid, COLOR_GRAD2, "No eres premium nivel 3");
	        new bouse = PlayerInfo[playerid][pPhousekey2];
	        if(bouse != 999)
	        {
		        if(PlayerToPoint(20.0,playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
		        {
		            SetHP(playerid, 100.0);
		            PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
		        }
			}
			else Message(playerid, COLOR_RED2, "No posees una propiedad.");
		}
		else Message(playerid, COLOR_RED2, "! Primero Conectate !");
		return 1;
	}
    zcmd(renta, playerid, params[])
    {
        if(!sscanf(params, "i", params[0]))
        {
            new bouse = PlayerInfo[playerid][pPhousekey], string[64];
			if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				if(params[0] < 0 || params[0] > 1000) return Message(playerid, COLOR_GRAD2, "Valor entre 1 - 1000$; 0 = No rentable");

				HouseInfo[bouse][hRent] = params[0];
				OnPropTextdrawUpdate(bouse);
				format(string, sizeof(string), "Renta de la propiedad: %d", HouseInfo[bouse][hRent]);
				Message(playerid, COLOR_WHITE, string);
			}
			else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /renta <precio>");
        return 1;
    }
    zcmd(renta2, playerid, params[])
    {
        if(!sscanf(params, "i", params[0]))
        {
           if(PlayerInfo[playerid][pDonateT] < 3) return Message(playerid, COLOR_GRAD2, "No eres premium nivel 3");
            new bouse = PlayerInfo[playerid][pPhousekey2], string[64];
			if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey2]][hOwner], true) == 0)
			{
				if(params[0] < 0 || params[0] > 1000) return Message(playerid, COLOR_GRAD2, "Valor entre 1 - 1000$; 0 = No rentable");

				HouseInfo[bouse][hRent] = params[0];
				OnPropTextdrawUpdate(bouse);
				format(string, sizeof(string), "Renta de la propiedad: %d", HouseInfo[bouse][hRent]);
				Message(playerid, COLOR_WHITE, string);
			}
			else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /renta <precio>");
        return 1;
    }
      zcmd(cerradura, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_RED, "No posees una propiedad.");
        new x = PlayerInfo[playerid][pPhousekey];
        if(PlayerToPoint(3.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez]))
		{
			if(HouseInfo[x][hLock] == 1)
			{
				HouseInfo[x][hLock] = 0;
				GameTextForPlayer(playerid, "~w~Puerta ~g~Abierta", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
   }
			else
			{
				HouseInfo[x][hLock] = 1;
				GameTextForPlayer(playerid, "~w~Puerta ~r~cerrada", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en la puerta de tu casa!");
        return 1;
    }
    zcmd(cerradura2, playerid, params[])
    {
        if(PlayerInfo[playerid][pDonateT] < 3) return Message(playerid, COLOR_GRAD2, "No eres premium nivel 3");
        if(PlayerInfo[playerid][pPhousekey2] == 9999) return Message(playerid, COLOR_RED, "No posees una propiedad.");
        new x = PlayerInfo[playerid][pPhousekey2];
        if(PlayerToPoint(3.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hEntrancex],HouseInfo[PlayerInfo[playerid][pPhousekey2]][hEntrancey],HouseInfo[PlayerInfo[playerid][pPhousekey2]][hEntrancez]))
		{
			if(HouseInfo[x][hLock] == 1)
			{
				HouseInfo[x][hLock] = 0;
				GameTextForPlayer(playerid, "~w~Puerta ~g~Abierta", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
   }
			else
			{
				HouseInfo[x][hLock] = 1;
				GameTextForPlayer(playerid, "~w~Puerta ~r~cerrada", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en la puerta de tu casa!");
        return 1;
    }
    zcmd(cajafuerte, playerid, params[])
    {
        new bouse = PlayerInfo[playerid][pPhousekey], string[64];
		if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
		    if(!sscanf(params, "i", params[0]))
		    {
		        if(PlayerToPoint(20.0,playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
			    {
					if (params[0] >  HouseInfo[bouse][hRentabil] || params[0] < 1) return Message(playerid, COLOR_RED2, "No dispones de esa cantidad.");
					else
					{
						GivePlayerMoney(playerid,params[0]);
						HouseInfo[bouse][hRentabil]=HouseInfo[bouse][hRentabil]-params[0];
						format(string, sizeof(string), "Extraiste %d$ de tu caja fuerte. Te quedan: %d$", params[0],HouseInfo[bouse][hRentabil]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
				else Message(playerid, COLOR_RED2, "No estás en tu casa.");
		    }
		    else
			{
				format(string, sizeof(string), "Utilize: /cajafuerte <$> (Tiene %d$ de ganancias)", HouseInfo[bouse][hRentabil]);
				Message(playerid, COLOR_GRAD2, string);
			}
		}
		else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        return 1;
    }
    zcmd(cajafuerte2, playerid, params[])
    {
        new bouse = PlayerInfo[playerid][pPhousekey2], string[64];
		if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey2]][hOwner], true) == 0)
		{
		    if(!sscanf(params, "i", params[0]))
		    {
		        if(PlayerToPoint(20.0,playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
			    {
					if (params[0] >  HouseInfo[bouse][hRentabil] || params[0] < 1) return Message(playerid, COLOR_RED2, "No dispones de esa cantidad.");
					else
					{
						GivePlayerMoney(playerid,params[0]);
						HouseInfo[bouse][hRentabil]=HouseInfo[bouse][hRentabil]-params[0];
						format(string, sizeof(string), "Extraiste %d$ de tu caja fuerte. Te quedan: %d$", params[0],HouseInfo[bouse][hRentabil]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
				else Message(playerid, COLOR_RED2, "No estás en tu casa.");
		    }
		    else
			{
				format(string, sizeof(string), "Utilize: /cajafuerte <$> (Tiene %d$ de ganancias)", HouseInfo[bouse][hRentabil]);
				Message(playerid, COLOR_GRAD2, string);
			}
		}
		else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        return 1;
    }
    //zcmd (CMD's Bizzes)
    zcmd(bizz, playerid, params[])
	{
 		if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
   		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /bizz <House ID>");
		if(params[0] < 0 || params[0] >= MAX_BIZZ) return Message(playerid, COLOR_GRAD2, "¡ID de negocio errónea!");
			SetPlayerPos(playerid,BizzInfo[params[0]][bEntrancex],BizzInfo[params[0]][bEntrancey],BizzInfo[params[0]][bEntrancez]);
			Message(playerid, COLOR_GRAD2, "¡Teleportado!");
			return 1;
	}
	zcmd(comprarnegocio, playerid, params[])
	{
	    for(new b = 0; b < sizeof(BizzInfo); b++)
		{
		    new string[128];
		    if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
			{
		        if(BizzInfo[b][bOwned] == 1) return Message(playerid, COLOR_RED2, "¡Este negocio ya tiene dueño!");
		        if(PlayerInfo[playerid][pPbiskey] != 255) return Message(playerid, COLOR_RED2, "¡Ya posees un negocio!");
		        if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
		        {
		            format(string, sizeof(string), "Este negocio requiere que seas nivel %d", BizzInfo[b][bLevelNeeded]);
					Message(playerid, COLOR_RED2, string);
					return 1;
				}
				if(GetPlayerMoney(playerid) >= BizzInfo[b][bBuyPrice])
				{
					PlayerInfo[playerid][pPbiskey] = b;
					BizzInfo[b][bOwned] = 1;
					strmid(BizzInfo[b][bOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
					Bought(playerid, BizzInfo[b][bBuyPrice]);
					Message(playerid, COLOR_WHITE, "Felicidades, has adquirido este negocio. Utiliza /ayuda negocio");
					OnBizzTextdrawUpdate(b);
					UpdateBizz();
					return 1;
				} else Message(playerid, COLOR_RED2, "No tienes los fondos necesarios para adquirir este negocio.");
			}
		}
		return 1;
	}
	zcmd(vendernegocio, playerid, params[])
	{
	    new string[128], bid = PlayerInfo[playerid][pPbiskey];
	    if(PlayerInfo[playerid][pPbiskey] == 255) return Message(playerid, COLOR_RED2, "No tienes un negocio.");
	    if(PlayerToPoint(3.0, playerid, BizzInfo[bid][bEntrancex],BizzInfo[bid][bEntrancey],BizzInfo[bid][bEntrancez]))
		{
			if(PlayerInfo[playerid][pPbiskey] != 255 && strcmp(PlayerName(playerid), BizzInfo[bid][bOwner], true) == 0)
			{
	            new money = BizzInfo[bid][bBuyPrice]+BizzInfo[bid][bTill]+BizzInfo[bid][bTillEx];
				Earn(playerid, money);
				format(string, sizeof(string), "Has vendido tu negocio. Has recuperado %d$",money);
				Message(playerid, COLOR_WHITE, string);
				SellBizz(bid);
				PlayerInfo[playerid][pPbiskey] = 255;
			} else Message(playerid, COLOR_RED2, "Este negocio no está a tu nombre.");
		} else Message(playerid, COLOR_RED2, "¡Debes estar cerca de tu negocio para vernderlo!");
	    return 1;
	}
	zcmd(sganancias, playerid, params[])
	{
	    new string[128], bid = PlayerInfo[playerid][pPbiskey];
	    if(PlayerInfo[playerid][pPbiskey] == 255) return Message(playerid, COLOR_RED, "No tienes un negocio.");
	    if(PlayerToPoint(3.0, playerid, BizzInfo[bid][bEntrancex],BizzInfo[bid][bEntrancey],BizzInfo[bid][bEntrancez]))
		{
		    if(!sscanf(params,"d",params[0])){
				if(params[0] < 1 || params[0] > BizzInfo[bid][bTill]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
		    	if(PlayerInfo[playerid][pPbiskey] != 255 && strcmp(PlayerName(playerid), BizzInfo[bid][bOwner], true) == 0)
				{

			    	Earn(playerid, params[0]);
			    	format(string, sizeof(string), "Has retirado %d$ de la caja fuerte de tu negocio.", params[0]);
			    	Message(playerid, COLOR_GRAD4, string);
	            	BizzInfo[bid][bTill] -= params[0];
	        	} else Message(playerid, COLOR_GRAD4, "Este negocio no está a tu nombre.");
       		} else Message(playerid, COLOR_GRAD2, "Utilize: /sganancias <Cantidad>");
  		} else Message(playerid, COLOR_GRAD4, "¡Debes estar cerca de tu negocio para retirar dinero de la caja!");
		return 1;
  	}
  	zcmd(binfo, playerid, params[])
  	{
  	    new string[128];
  	    for(new b = 0; b < sizeof(BizzInfo); b++)
		{
		    if(PlayerToPoint(3.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
			{
		        if(BizzInfo[b][bOwned] == 0)
                {
		        	Message(playerid, 0xAAAAFFFF, "- Negocio en Venta - Información");
		        	format(string, sizeof(string), "Nombre: %s", BizzInfo[b][bName]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Valor: %d   -   Nivel: %d", BizzInfo[b][bBuyPrice],BizzInfo[b][bLevelNeeded]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Negocio ID: %d", b);
			        Message(playerid, COLOR_WHITE, string);
			        Message(playerid, AMARILLO_ADMIN, "- Utiliza /comprarnegocio, para comprar este negocio.");
			        return 1;
				}
				if(PlayerInfo[playerid][pPbiskey] == b)
    			{
				    Message(playerid, 0xAAAAFFFF, "- Propiedad Privada -");
        			format(string, sizeof(string), "Nombre: %s", BizzInfo[b][bName]);
		        	Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Valor: %d   -   Nivel: %d", BizzInfo[b][bBuyPrice],BizzInfo[b][bLevelNeeded]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Ganancias: %d", BizzInfo[b][bTill]);
			        Message(playerid, COLOR_WHITE, string);
			        return 1;
				} else Message(playerid, COLOR_GRAD2, "No hay información disponible para este negocio.");
			}
		}
		return 1;
	}
	zcmd(extorcion, playerid, params[]){
	    new string[128], bkey = PlayerInfo[playerid][pPbiskey];
	    if(PlayerInfo[playerid][pPbiskey] == 255) return Message(playerid, COLOR_RED2, "¡No tienes un negocio!");
		if(!sscanf(params,"u",params[0])){
		    if(PlayerToPoint(4.0, playerid, BizzInfo[bkey][bEntrancex], BizzInfo[bkey][bEntrancey], BizzInfo[bkey][bEntrancez])){
		        if(IsPlayerConnected(params[0])){
		            if(params[0] != playerid){
		       	 		if(ProxDetectorS(5.0, playerid, params[0])){
							if(strcmp("Nadie", BizzInfo[bkey][bExtortion], true) == 0){
            	    			strmid(BizzInfo[bkey][bExtortion], PlayerName(params[0]), 0, strlen(PlayerName(params[0])), 255);
								format(string, sizeof(string), "Desde ahora {FF4FD4}%s {FFFFFF}será el extorcionista de tu negocio.", PlayerName(params[0]));
								Message(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "%s te ha puesto como extorcionista de su negocio, ahora puedes usar {FF4FD4}/recaudar.", PlayerName(playerid));
								Message(params[0], COLOR_WHITE, string);
								OnBizzTextdrawUpdate(bkey);
								UpdateBizz();
				        	} else Message(playerid, COLOR_GRAD2, "* Tu negocio ya tiene un extorcionista, primero usa /qextorcion.");
                        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				   	} else Message(playerid, COLOR_GRAD2, "¡No te puedes poner como extorcionista tu mismo!");
  				} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
			} else Message(playerid, COLOR_GRAD2, "¡Debes estar cerca de tu negocio!");
    	} else Message(playerid, COLOR_GRAD2, "Utilize: /extorcion <PlayerID>");
	    return 1;
	}
	zcmd(qextorcion, playerid, params[]){
	    new string[128], bkey = PlayerInfo[playerid][pPbiskey];
	    if(PlayerInfo[playerid][pPbiskey] == 255) return Message(playerid, COLOR_RED2, "¡No tienes un negocio!");
	    if(!sscanf(params,"u",params[0])){
	        if(PlayerToPoint(4.0, playerid, BizzInfo[bkey][bEntrancex], BizzInfo[bkey][bEntrancey], BizzInfo[bkey][bEntrancez])){
	            if(IsPlayerConnected(params[0])){
                    if(params[0] != playerid){
                        if(ProxDetectorS(5.0, playerid, params[0])){
                            if(strcmp(PlayerName(params[0]), BizzInfo[bkey][bExtortion], true) == 0){
                                format(string, sizeof(string), "{FFFFFF}%s ha dedicido quitarte como extorcionista de su negocio.\n\t¿Estás de acuerdo con esta decisión?",PlayerName(playerid));
                                ShowPlayerDialog(params[0], QUIT_EXTORTION, DIALOG_STYLE_MSGBOX, "Confirmacion Negocios", string, "Si", "No");
                                Message(playerid, COLOR_GRAD4, "* La solicitud fue enviada, espera su respuesta.");
                                QuitExtortion[params[0]] = bkey;
								ExtortionID[params[0]] = playerid;
                            } else Message(playerid, COLOR_GRAD2, "* Esa persona no es extorcionista de tu negocio.");
                        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
                    } else Message(playerid, COLOR_GRAD2, "¡No puedes usar este comando contigo mismo!");
	            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
			} else Message(playerid, COLOR_GRAD2, "¡Debes estar cerca de tu negocio!");
	    } else Message(playerid, COLOR_GRAD2, "Utilize: /qextorcion <PlayerID>");
	    return 1;
	}
	zcmd(recaudar, playerid, params[])
	{
		for(new b = 0; b < sizeof(BizzInfo); b++)
		{
		    if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
			{
	            if(strcmp(PlayerName(playerid), BizzInfo[b][bExtortion], true) == 0){
	                if(BizzInfo[b][bTillEx] > 0){
	                	new string[128];
	                	Earn(playerid, BizzInfo[b][bTillEx]);
						format(string, sizeof(string), "Has recaudado {DC092F}%d$ {FFFFFF}de este negocio del cual eres extorcionista.", BizzInfo[b][bTillEx]);
						Message(playerid, COLOR_WHITE, string);
						BizzInfo[b][bTillEx] = 0;
					} else Message(playerid, COLOR_GRAD2, "* No hay dinero para recaudar.");
				}
			}
		}
		return 1;
	}
	zcmd(asellbizz, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0]))
        {
        	new string[128];
            if(params[0] >= MAX_BIZZ || params[0] < 0) return Message(playerid, COLOR_GRAD2, "ID incorrecto.");
            else{
				SellBizz(params[0]);
            	format(string, sizeof(string), "Negocio %d vendido.", params[0]);
				Message(playerid, COLOR_GRAD2, string);
			}
        } else Message(playerid, COLOR_GRAD2, "Utilize: /asellbizz <BizzID>");
        return 1;
   	}
    //zcmd [Sell Adm]
    zcmd(asellcar, playerid, params[])
	{
	    if(PlayerInfo[playerid][pJDS] < 9) Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    else
	    {
	        if(IsPlayerInAnyVehicle(playerid))
	        {
                new vehid = GetPlayerVehicleID(playerid);
	            if(IsAnOwnableCar(vehid))
	            {
					new Float:x,Float:y,Float:z;
					new Float:a;
					CarInfo[vehid][cOwned] = 0;
					strmid(CarInfo[vehid][cOwner], "Concesionario", 0, strlen("Concesionario"), 999);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					Message(playerid, COLOR_GRAD2, "¡Has vendido el vehículo!");
					GetVehiclePos(vehid, x, y, z);
					GetVehicleZAngle(vehid, a);
					CarInfo[vehid][cLocationx] = x;
					CarInfo[vehid][cLocationy] = y;
					CarInfo[vehid][cLocationz] = z;
					CarInfo[vehid][cAngle] = a;
					CarInfo[vehid][cBattery] = 0;
					CarInfo[vehid][cGas] = 0;
					CarInfo[vehid][cAlarm] = 0;
					CarInfo[vehid][cLock] = 0;
					CarInfo[vehid][cSpoiler] = 0;
					CarInfo[vehid][cHood] = 0;
					CarInfo[vehid][cRoof] = 0;
					CarInfo[vehid][cSideskirt] = 0;
					CarInfo[vehid][cNitro] = 0;
					CarInfo[vehid][cLamps] = 0;
					CarInfo[vehid][cExhaust] = 0;
					CarInfo[vehid][cWheel] = 0;
					CarInfo[vehid][cHydraulics] = 0;
					CarInfo[vehid][cPaintjob] = 0;
					CarInfo[vehid][cNeon] = 0;
					CarInfo[vehid][cFrontBumper] = 0;
					CarInfo[vehid][cVents] = 0;
					CarInfo[vehid][cEmbargo] = 0;
					CarInfo[vehid][cMulta] = 0;
					SetVehicleVirtualWorld(vehid, 0);
					strmid(CarInfo[vehid][cPlate], "For Sale", 0, strlen("For Sale"), 999);
					SetVehicleNumberPlate(vehid,CarInfo[vehid][cPlate]);
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					OnPropUpdate(2);
					return 1;
				}
	            else Message(playerid, COLOR_GRAD2, "¡No es un vehículo en venta!");
	        }
	        else Message(playerid, COLOR_GRAD2, "¡No estás en ningún vehículo!");
	    }
	    return 1;
 	}
 	zcmd(setvwcar, playerid, params[]){
	    if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(!sscanf(params, "id", params[0], params[1])){
			SetVehicleVirtualWorld(params[0], params[1]);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /setvwcar <VehicleID> <VirtualWorld>");
		return 1;
	}
	zcmd(setvwcarall2autos, playerid, params[]){
	    if(PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    for(new car = 1; car <= VEH; car++)
			{
			if(CarInfo[car][cOwned] == 1)
			{
			SetVehicleVirtualWorld(car, 2);
}
}
		return 1;
	}
	zcmd(setvwcarallautos, playerid, params[]){
	    if(PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    for(new car = 1; car <= VEH; car++)
			{
			if(CarInfo[car][cOwned] == 1)
			{
			SetVehicleVirtualWorld(car, 0);
}
}
		return 1;
	}
    zcmd(hitman, playerid, params[])
    {
        if(Hitman(playerid)) return SendClientMessage(playerid, COLOR_GRAD2, "No puedes contratar siendo un hitman!");
        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood de checkpoints, puedes usar el comando cada 1 minuto, para más info /infocheck");
		if(PlayerToPoint(2.0, playerid, 2230.9795,-2209.1138,13.5469))
		{
        if(!sscanf(params, "ud", params[0], params[1]))
    	{
			if(params[1] < 10000 || params[1] > 150000) return Message(playerid, COLOR_GRAD2, "Máx: 150,000$ || Mín: 10000$");
			if(IsPlayerConnected(params[0]))
			{
			    if(Hitman(params[0])) return Message(playerid, COLOR_GRAD2, "¡No puedes exterminar a un hitman!");
				if (GetPlayerMoney(playerid) > params[1])
				{
				    new string[128];
					Bought(playerid, params[1]);
					PlayerInfo[params[0]][pHead] += params[1];
					SendRadioMessage(23, TEAM_RADIO_COLOR, "** Atención - Hay un objetivo nuevo! **");
					format(string, sizeof(string), "[Cliente: %s] - [Objectivo: %s] - [Recompensa: %d$]",PlayerName(playerid), PlayerName(params[0]), params[1], PlayerInfo[params[0]][pHead]);
					SendRadioMessage(23, TEAM_RADIO_COLOR, string);
					format(string, sizeof(string), "* ¡%s está ahora en la lista de objetivos con una recompensa de %d!",PlayerName(params[0]), PlayerInfo[params[0]][pHead]);
					Message(playerid, COLOR_WHITE, string);
					SetTimerEx("proponerflood",60000,0,"i",playerid);
				}
				else Message(playerid, COLOR_RED2, "Transacción inválida.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
    	}
    	else Message(playerid, COLOR_GRAD2, "Utilize: /hitman <jugador> <recompensa>");
    	}
    	else
    	{
		Message(playerid, COLOR_GRAD2, "Aquí no puedes contratar un hitman, se te marcó la posición de la ubicación correspondiendo");
		SetPlayerCheckpoint(playerid, 2230.9795,-2209.1138,13.5469, 8.0);
		}
        return 1;
    }
	zcmd(disfraz, playerid, params[])
	{
        if(Hitman(playerid)){
	    	if(PlayerToPoint(5, playerid, -2178.8694,897.3518,96.9397)){
            	ShowPlayerDialog(playerid, DIALOG_HIT, DIALOG_STYLE_INPUT, "> Disfraz <", "{78F700}Escribe el ID del que desees\n{FFFFFF}Skin's libres para hitman's.\nTIP <1 - 299>\n", "Ok", "Salir");
			}
		}
		else Message(playerid, COLOR_GRAD2, " No eres hitman.");
		return 1;
	}
	zcmd(amascara, playerid, params[]){
        if(PlayerInfo[playerid][pMask] == 1) return Message(playerid, COLOR_GRAD2, " Ya tienes una máscara.");
        if(Hitman(playerid)){
	    	if(PlayerToPoint(5, playerid, -2178.8694,897.3518,96.9397)){
            	Message(playerid, COLOR_LIGHTBLUE, "Cogiste una máscara, /mascara para ponertela.");
            	PlayerInfo[playerid][pMask] = 1;
			}
		}
		else Message(playerid, COLOR_GRAD2, " No eres hitman.");
		return 1;
	}
	zcmd(radio, playerid, params[]){
        if(!RadioOn[playerid]){
			RadioOn[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Prendiste tu radio");
		}
		else{
			RadioOn[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Apagaste tu radio");
		}
        return 1;
    }
	zcmd(duty, playerid, params[]){
        new string[128];
        if(IsACop(playerid) || Team_FBI(playerid)){
                    if(PlayerToPoint(5, playerid,255.3,77.4,1003.6) || PlayerToPoint(5, playerid,1565.5460,-1684.7971,1723.1050) || PlayerToPoint(10,playerid,246.4590,125.8930,1003.2188) ||
					PlayerToPoint(10,playerid,197.0950,168.6891,1003.0234) || PlayerToPoint(10,playerid,222.6635,186.8341,1003.0313) || PlayerToPoint(10, playerid, 2470.1758,2368.2517,-8.7688) ||
					PlayerToPoint(10, playerid, 229.03,164.86,1003.02) || PlayerToPoint(10, playerid, 2913.7371,2135.0974,0.3278) || PlayerToPoint(10, playerid,1555.7057,-1822.8688,-22.6631)){
                if(OnDuty[playerid]== 0){
        		    format(string, sizeof(string), "* %s coge su placa y su radio.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		    OnDuty[playerid] = 1;
        		}
        		else{
        		    format(string, sizeof(string), "* %s deja su placa y su radio.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		    ResetPlayerWeapons(playerid);
        		    OnDuty[playerid] = 0;
        		}
            }
            else    Message(playerid, COLOR_GRAD2, "No estás en el lugar adecuado.");
        }
        else if(Team_SAMUR(playerid) || Team_LVMD(playerid))
		{
            if(OnDuty[playerid]== 0)
      		{
      		    	OnDuty[playerid] = 1;
        		    format(string, sizeof(string), "{00E45B}* [LSMD] Doctor %s está en servicio {FFFFFF}(Tlf. 911)", PlayerName(playerid));
					OOCNews(-1,string);
    		}
      		else{
        		    OnDuty[playerid] = 0;
                    Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
			  }
        }
        else if(Team_Taxi(playerid) || Team_Mecanicos(playerid)){
            if(OnDuty[playerid]== 0){
      		    	OnDuty[playerid] = 1;
        		    Message(playerid, COLOR_WHITE, "* Recibirás llamadas, estás de servicio.");
      		}
      		else{
        		    OnDuty[playerid] = 0;
        		    Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
      		}
        }
        else if(Team_NG(playerid)){
            if(OnDuty[playerid]== 0){
      		    	OnDuty[playerid] = 1;
        		    Message(playerid, COLOR_WHITE, "* %s coge su placa y su radio.");
      		}
      		else{
        		    OnDuty[playerid] = 0;
        		    Message(playerid, COLOR_WHITE, "* %s deja su placa y su radio.");
      		}
        }
        else if(IsAnInstructor(playerid)){
            if(OnDuty[playerid]== 0)
      		{
      		    	OnDuty[playerid] = 1;
        		    format(string, sizeof(string), "{00E45B}* Licenciero %s está en servicio {FFFFFF}(Tlf. %d)", PlayerName(playerid), PlayerInfo[playerid][pPnumber]);
					OOCNews(-1,string);
    		}
      		else{
        		    OnDuty[playerid] = 0;
        		    Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
      		}
        }
        else if(Umbrella7(playerid))
			{
            if(PlayerToPoint(5, playerid,255.3,77.4,1003.6) || PlayerToPoint(20,playerid,2911.6252,2137.3911,0.3281) || PlayerToPoint(10,playerid,246.4590,125.8930,1003.2188) || PlayerToPoint(10,playerid,197.0950,168.6891,1003.0234) || PlayerToPoint(10,playerid,222.6635,186.8341,1003.0313) || PlayerToPoint(10, playerid, 2470.1758,2368.2517,-8.7688) || PlayerToPoint(10, playerid, 1566.2216,-1672.1409,1723.1050))
				{
				if(OnDuty[playerid]== 0)
            		{
      		    	OnDuty[playerid] = 1;
        		    format(string, sizeof(string), "{00E45B}* Agente de la Agencia Central de Inteligencia %s está en servicio {FFFFFF}(Tlf. %d)", PlayerName(playerid), PlayerInfo[playerid][pPnumber]);
					OOCNews(-1,string);
    				}
      			else
		  			{
        		    OnDuty[playerid] = 0;
        		    Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
      				}
        		}
        	else Message(playerid, COLOR_GRAD2, "No estás en el lugar adecuado.");
        }
        else if(Gobierno(playerid)){
            if(OnDuty[playerid]== 0){
      		    	OnDuty[playerid] = 1;
        		    Message(playerid, COLOR_WHITE, "* Te encuentras On Duty. Tu radio se encendera Automaticamente");
        		    RadioOn[playerid] = 1;
      		}
      		else{
        		    OnDuty[playerid] = 0;
        		    Message(playerid, COLOR_WHITE, "* Te encuentras Off Duty. Tu radio se apagara Automaticamente.");
        		    RadioOn[playerid] = 0;
      		}
        }
        else Message(playerid, -1, "No puedes usar este comando.");
        return 1;
    }
    // Walkie Talkie
    zcmd(walkie, playerid, params[]){
        if(!sscanf(params, "s[32]", params[0])){
			if(PlayerInfo[playerid][pWalkie] == 0)    return Message(playerid, COLOR_GRAD2, "No tiene un Walkie Talkie.");
            if(strcmp(params[0],"prender",true) == 0){
			    if(!RadioOn[playerid]){
			    	return RadioOn[playerid] = 1,
			    	PFrecuencia[playerid] = 0,
				    Message(playerid, COLOR_GREEN, "* Walkie-Talkie encendido.");
			    }
				else Message(playerid, COLOR_GRAD2, "* Ya está prendido.");
			}
			else if(strcmp(params[0],"apagar",true) == 0){
			    if(RadioOn[playerid]){
			    	return RadioOn[playerid] = 0,
			    	PFrecuencia[playerid] = 0,
			    	Message(playerid, COLOR_RED, "* Walkie-Talkie fue apagado.");
			    }
				else Message(playerid, COLOR_GRAD2, "* Ya está apagado.");
			}
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /walkie <prender, apagar>");
        return 1;
    }
    zcmd(frecuencia, playerid, params[]){
        if(PlayerInfo[playerid][pWalkie] > 0 && RadioOn[playerid]){
            new string[128];
            if(!sscanf(params, "i", params[0])){
					if(params[0] < 1 || params[0] > 9999)
						return Message(playerid, TEAM_RADIO_COLOR, "* Conéctese a un canal entre '1' y '9999'.");
						PFrecuencia[playerid] = params[0],
						format(string, sizeof string, "* Ahora tu frecuencia es: '%d'.",PFrecuencia[playerid]),
						Message(playerid, COLOR_GREEN, string);
            }
            else Message(playerid, COLOR_GRAD2, "Utilize: /frecuencia <Nro> entre 1 - 9999");
        }
        else Message(playerid, COLOR_GRAD2, "* No tienes una radio con la que hablar / o está apagada.");
        return 1;
    }
    zcmd(wt, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!RadioOn[playerid]) return Message(playerid, COLOR_GRAD2, "* Radio apagada. Utilize: '/walkie prender'");
            if(PFrecuencia[playerid] == 0) return Message(playerid, COLOR_GRAD2, "* No estás en ninguna frecuencia. Utilize: '/frecuencia'");
				if(!sscanf(params, "s[128]", params[0]))
				{
					new string[128];
					format(string, sizeof string, "* (F#%d) %s: %s", PFrecuencia[playerid], PlayerName(playerid), params[0]);
					RadioMsg(PFrecuencia[playerid], string);
					format(string, sizeof(string), "* (WT) %s: %s", PlayerName(playerid), params[0]);
            		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else Message(playerid, COLOR_GRAD2, "Utilize: /wt <mensaje>");
            return 1;
    }
	zcmd(d, playerid, params[]){
		if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
	    if(RadioOn[playerid] == 0) return Message(playerid, COLOR_GRAD2, " Tu radio está apagada.");
	    if(!sscanf(params, "s[128]", params[0])){
            new string[128];
			if(Team_LSPD(playerid)){
			    	 if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** [LS]Comandante  %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** [LS]Inspector %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** [LS]Capitán %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** [LS]Teniente %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** [LS]Sargento %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** [LS]Investigador %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** [LS]Oficial %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** [LS]Cadete %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else{
					format(string, sizeof(string), "** [LS]Cadete %s: %s, cambio. **", PlayerName(playerid), params[0]);
				}
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(5, COLOR_ALLDEPT, string);
                SendRadioMessage(16, COLOR_ALLDEPT, string);
				SendRadioMessage(24, COLOR_ALLDEPT, string);
				SendRadioMessage(8, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(Team_LVPD(playerid)){
			    	 if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** [LV]Comandante  %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** [LV]Inspector %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** [LV]Capitán %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** [LV]Teniente %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** [LV]Sargento %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** [LV]Investigador %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** [LV]Oficial %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** [LV]Cadete %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else{
					format(string, sizeof(string), "** [LS]Cadete %s: %s, cambio. **", PlayerName(playerid), params[0]);
				}
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(5, COLOR_ALLDEPT, string);
                SendRadioMessage(16, COLOR_ALLDEPT, string);
				SendRadioMessage(24, COLOR_ALLDEPT, string);
				SendRadioMessage(8, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(Team_NG(playerid)){
			    	 if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** Coronel  %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** Mayor %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Capitán %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Teniente %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Sargento %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Trooper %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Soldado %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Cabo %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else{
					format(string, sizeof(string), "** Cabo %s: %s, cambio. **", PlayerName(playerid), params[0]);
				}
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(5, COLOR_ALLDEPT, string);
				SendRadioMessage(16, COLOR_ALLDEPT, string);
				SendRadioMessage(24, COLOR_ALLDEPT, string);
				SendRadioMessage(8, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(Team_SAMUR(playerid)){
					 if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Responsable técnico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Supervisor %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Médico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Paramédico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Práctico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else{
					format(string, sizeof(string), "** Práctico %s: %s, cambio. **", PlayerName(playerid), params[0]);
				}
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(5, COLOR_ALLDEPT, string);
				SendRadioMessage(16, COLOR_ALLDEPT, string);
				SendRadioMessage(24, COLOR_ALLDEPT, string);
				SendRadioMessage(8, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(Team_LVMD(playerid)){
					 if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Responsable técnico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Supervisor %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Médico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Paramédico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Práctico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else{
					format(string, sizeof(string), "** Práctico %s: %s, cambio. **", PlayerName(playerid), params[0]);
				}
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(5, COLOR_ALLDEPT, string);
				SendRadioMessage(16, COLOR_ALLDEPT, string);
				SendRadioMessage(24, COLOR_ALLDEPT, string);
				SendRadioMessage(8, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(Team_FBI(playerid)){
					 if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Sub-Director %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Criminalista %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Especial %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** S. Agente %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Agente %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else{
					format(string, sizeof(string), "** Práctico %s: %s, cambio. **", PlayerName(playerid), params[0]);
				}
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(5, COLOR_ALLDEPT, string);
				SendRadioMessage(16, COLOR_ALLDEPT, string);
				SendRadioMessage(24, COLOR_ALLDEPT, string);
				SendRadioMessage(8, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else if(Gobierno(playerid)){
			    if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** Presidente %s: %s **", PlayerName(playerid), params[0]); }
                else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** Vicepresidente %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** Alcalde LS %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Alcalde LV %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Ministro General %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Ministro %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Agente del Servico Secreto %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Agente en practicas %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Chofer del gobierno %s: %s **", PlayerName(playerid), params[0]); }
				else{
					format(string, sizeof(string), "** ** Chofer del gobierno %s: %s, cambio. **", PlayerName(playerid), params[0]);
				}
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(5, COLOR_ALLDEPT, string);
				SendRadioMessage(16, COLOR_ALLDEPT, string);
				SendRadioMessage(24, COLOR_ALLDEPT, string);
				SendRadioMessage(8, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
    		else if(Umbrella7(playerid)){
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Agente 47 %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Super Agente %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Guardaespaldas %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Detective %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Secretario %s: %s **", PlayerName(playerid), params[0]); }
				else{
					format(string, sizeof(string), "** ** Secretario %s: %s, cambio. **", PlayerName(playerid), params[0]);
				}
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(5, COLOR_ALLDEPT, string);
				SendRadioMessage(16, COLOR_ALLDEPT, string);
				SendRadioMessage(24, COLOR_ALLDEPT, string);
				SendRadioMessage(8, COLOR_ALLDEPT, string);
				printf("%s", string);
				return 1;
			}
			else Message(playerid, COLOR_GRAD2, "   No eres parte de un equipo !");
		}
		else Message(playerid, COLOR_GRAD2, "   Uso: /d <Texto> !");
		return 1;
	}
	zcmd(f, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!sscanf(params, "s[128]", params[0]))
	    {
            new string[128];
			if (PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0)
			{
			    new leader = PlayerInfo[playerid][pLeader];
			    new member = PlayerInfo[playerid][pMember];
			    if(member==1 || member ==2)
			    {
			        if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( Comandante %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Inspector %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Capitán %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Teniente %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Sargento %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Detective %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Oficial %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Cadete %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Cadete %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    if(member==3)
			    {
			        if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( Coronel %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Mayor %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Capitan %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Teniente %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Sargento %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Trooper %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldado %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Cabo %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Cadete %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    if(member==4 || member==5)
			    {
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Director %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Responsable técnico %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Supervisor %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Médico %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Paramédico %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Práctico %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Práctico %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    if(member==6 || member==21)
			    {
					if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Director %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Supervisor %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Taxista %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Conductor autobús %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Conductor autobús %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				if(member==7)
			    {
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Director %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Supervisor %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Ingeniero %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Mecánico %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Trucker %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Ayudante %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Ayudante %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==8)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Director %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Agente 47 %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Super Agente %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Guardaespaldas %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Detective %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Secretario %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Secretario %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==9 || member==10 || member==11 || member==25 || member==26) // Pandillas
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Líder %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( General %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Cabezilla %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Soldado %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Propagador %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Joto %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** ((Joto %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==12) // ITA
				{
				    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Capi Di Tutti Capi %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Don %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Sottocapo %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Consigliere %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Capo %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldado %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Giovane d' Honore %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Giovane d' Honore %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==13) // YAK
				{
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Oyabun %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Sumiyoshi %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Saiko Komon %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Senpai Kohai %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Wakashu %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Kyodai %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Liányíng gongsi %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==14) // RUS
				{
				    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Hannibal Lecter %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Don %s: %s )) **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Zamestitel %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Konsul'tant %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Kapo %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldat %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Assotsiirovat %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Assotsiirovat %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==15) // Licencieros
				{
					if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Director %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Supervisor %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Evaluador %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Maestro %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Secretario %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Secretario %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==16) // Gobierno
				{
					if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** (( Presidente %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Chofer gobierno %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Agente practicas %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( A.Servico Secreto %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Ministro %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Ministro General %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Alcalde LV %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Alcalde LS %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( Vicepresidente %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Ministro %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==17) // CNN
				{
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Director CNN %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Presentador %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Enviado Especial %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Periodista %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Redactor %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Becario %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Becario %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==19) // Narcos
				{
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Jefazo %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Mano derecha %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Narcotraficante %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Contrabandista %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Cosechador %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Guardia %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Secretario %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==20) // Triadas
				{
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Patrón %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Mano derecha %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Consejero %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Satelite %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Jivaro %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Aprendiz %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Aprendiz %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==22) // Familia Capone
				{
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Dirigente %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Mano Derecha %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Manager %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Capo %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Miembro de Honor %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Socio %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Turro %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Asociado %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==23) // Terro
				{
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Director %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vice-Director %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Agente Especial %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sicario %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Asesino %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Novato %s: %s ))  **", PlayerName(playerid), params[0]); }
					else { format(string, sizeof(string), "** (( Novato %s: %s )) **", PlayerName(playerid), params[0]); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==24) // FBI
				{
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Director %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Sub-Director %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Criminalista %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Especial %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( S. Agente %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Agente %s: %s ))  **", PlayerName(playerid), params[0]); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
                }
                else if(member==27) // Al Qaeda
				{
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Mandatario %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Mano Derecha %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Terrorista %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Hacker %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldado %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Novato %s: %s ))  **", PlayerName(playerid), params[0]); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
                }
                else if(member==28) // Mafia Española
				{
					if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Lord %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Sub Lord %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Right Hand %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Assassin master %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Trafficker %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Associated %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Novice  %s: %s ))  **", PlayerName(playerid), params[0]); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
                }
                else if(member==29) // Mafia Española
				{
					if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Fuhrer %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( AnFuhrer %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Rechte Hand %s: %s ))  **", PlayerName(playerid), params[0]); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Infiltrieren %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( SpecializedKriminel %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Mitarbeiter %s: %s ))  **", PlayerName(playerid), params[0]); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Neuling  %s: %s ))  **", PlayerName(playerid), params[0]); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
                }
				else if(leader==1 || leader==2)
				{
				    format(string, sizeof(string), "** (( Comandante %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==3)
				{
				    format(string, sizeof(string), "** (( Coronel %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==4 || leader==5 || leader==6 || leader==7 || leader==8 || leader==15 || leader==17 || leader==21 || leader==23 || leader==24)
				{
				    format(string, sizeof(string), "** (( Director %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==9 || leader==10 || leader==11 || leader==25 || leader==26)
				{
				    format(string, sizeof(string), "** (( Líder %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==12)
				{
				    format(string, sizeof(string), "** (( Capi Di Tutti Capi %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==13)
				{
				    format(string, sizeof(string), "** (( Oyabun %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==14)
				{
				    format(string, sizeof(string), "** (( Hannibal Lecter %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==16)
				{
				    format(string, sizeof(string), "** (( Presidente %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==19)
				{
				    format(string, sizeof(string), "** (( Jefazo %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==20)
				{
				    format(string, sizeof(string), "** (( Patrón %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==22)
				{
				    format(string, sizeof(string), "** (( Dirigente %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==27)
				{
				    format(string, sizeof(string), "** (( Mandatario %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==28)
				{
				    format(string, sizeof(string), "** (( Lord %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				else if(leader==29)
				{
				    format(string, sizeof(string), "** (( Fuhrer %s: %s )) **", PlayerName(playerid), params[0]);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
				}
				printf("%s", string);
				return 1;
			}
			else Message(playerid, COLOR_GRAD2, "   No estás en una facción!");
		}
		else Message(playerid, COLOR_GRAD2, "   Use: /f <texto>");
		return 1;
	}
    zcmd(r, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(RadioOn[playerid] == 0) return Message(playerid, COLOR_GRAD2, " Tu radio está apagada, usa /radio para encenderla");
	    if(!sscanf(params, "s[128]", params[0])){
            new string[128];
			if(Team_LSPD(playerid)){
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** Comisario %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** Inspector Jefe %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Científico %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Inspector %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Antidisturbio %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Oficial %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Guardia Civil %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Cadete %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
    			SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				return 1;
		    }
		    else if(Team_LVPD(playerid)){
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** Comisario %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** Inspector Jefe %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Científico %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Inspector %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Antidisturbio %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Oficial %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Guardia Civil %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Cadete %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
    			SendRadioMessage(2, TEAM_RADIO_COLOR, string);
				return 1;
		    }
		    else if(Team_NG(playerid)){
                if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** Coronel %s: %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** Mayor %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Capitan %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Teniente %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Sargento %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Trooper %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Soldado %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Cabo %s(radio): %s, cambio. **", PlayerName(playerid), params[0]); }
    			SendRadioMessage(3, TEAM_RADIO_COLOR, string);
				return 1;
		    }
		    else if(Team_SAMUR(playerid)){
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Responsable Técnico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Supervisor %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Médico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Paramedico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Práctico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
    			SendRadioMessage(4, TEAM_RADIO_COLOR, string);
				return 1;
		    }
		    else if(Team_LVMD(playerid)){
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Responsable Técnico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Supervisor %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Médico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Paramedico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Práctico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
    			SendRadioMessage(5, TEAM_RADIO_COLOR, string);
				return 1;
		    }
		    else if(Team_Taxi(playerid)){
			    if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Director %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Supervisor %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Taxista %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Conductor de Bus %s: %s, cambio. **", PlayerName(playerid), params[0]); }
	  			SendRadioMessage(6, TEAM_RADIO_COLOR, string);
				return 1;
		    }
		    else if(Team_Mecanicos(playerid)){
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Supervisor %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Ingeniero %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Mecánico %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Trucker %s: %s, cambio. **", PlayerName(playerid), params[0]); }
			    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Ayudante %s: %s, cambio. **", PlayerName(playerid), params[0]); }
    			SendRadioMessage(7, TEAM_RADIO_COLOR, string);
				return 1;
		    }
		    else if(Umbrella7(playerid)){
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Agente 47 %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Super Agente %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Guardaespaldas %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Detective %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Secretario %s: %s **", PlayerName(playerid), params[0]); }
				SendRadioMessage(8, TEAM_RADIO_COLOR, string);
				return 1;
   	        }
   	        else if(Team_FBI(playerid)){
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Sub-Director %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Criminalista %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Especial %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** S. Agente %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Agente %s: %s **", PlayerName(playerid), params[0]); }
				SendRadioMessage(24, TEAM_RADIO_COLOR, string);
				return 1;
   	        }
   	        else if(Journalist(playerid)){
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Presentador %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Enviado Especial %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Periodista %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Redactor %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Becario %s: %s **", PlayerName(playerid), params[0]); }
				SendRadioMessage(17, TEAM_RADIO_COLOR, string);
				return 1;
			}
			else if(Hitman(playerid))
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Vice-Director %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Agente Especial %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Sicario %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Asesino %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Novato %s: %s **", PlayerName(playerid), params[0]); }
				SendRadioMessage(23, TEAM_RADIO_COLOR, string);
				return 1;
			}
			else if(Gobierno(playerid))
			{
			    if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** Presidente %s: %s **", PlayerName(playerid), params[0]); }
                else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** Vicepresidente %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** Alcalde LS %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Alcalde LV %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Ministro General %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Ministro %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Agente del Servico Secreto %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Agente en practicas %s: %s **", PlayerName(playerid), params[0]); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Chofer del gobierno %s: %s **", PlayerName(playerid), params[0]); }
				SendRadioMessage(16, TEAM_RADIO_COLOR, string);
				return 1;
			}

			else Message(playerid, COLOR_GRAD2, "   Tu facción no tiene una radio !");
		}
		else Message(playerid, COLOR_GRAD2, "   Use: /r <texto> !");
		return 1;
	}
 	zcmd(contratar, playerid, params[])
    {
         if(PlayerInfo[playerid][pYoutuber] == 1) return Message(playerid, COLOR_GRAD2, "No puedes contratar a nadie");
        if(PlayerInfo[playerid][pLeader] > 0)
        {
        	if(!sscanf(params, "u", params[0]))
        	{
        	    if(IsPlayerConnected(params[0]))
        	    {
        	        if(ProxDetectorS(8.0, playerid, params[0]))
	            	{
	            	    if(params[0] == playerid) 		return	Message(playerid, COLOR_GRAD2, "¡No puedes invitarte ati mismo!");
	            	    if(Facturing[params[0]] > 0)    return 	Message(playerid, COLOR_GRAD2, "Este jugador está en otra tarea, espera.");
	            	    if(PlayerInfo[params[0]][pMember] > 0 || PlayerInfo[params[0]][pLeader] > 0) return 	Message(playerid, COLOR_GRAD2, "Este jugador ya tiene facción.");

	            	    new string[256];
	            	    switch(PlayerInfo[playerid][pLeader])
	            	    {
						    case 1: 	ReqF_Name[params[0]] = "Policía Local LS";
						    case 2: 	ReqF_Name[params[0]] = "Policía Local LV";
						    case 3: 	ReqF_Name[params[0]] = "San Andreas Ejercito M.";
						    case 4: 	ReqF_Name[params[0]] = "LS Medical Center";
						    case 5:     ReqF_Name[params[0]] = "LV Medical Center";
						    case 6: 	ReqF_Name[params[0]] = "Compañia de Taxi LS";
						    case 7: 	ReqF_Name[params[0]] = "Mecánico Los Santos";
						    case 8: 	ReqF_Name[params[0]] = "Centro de Inteligencia";
						    case 9: 	ReqF_Name[params[0]] = "Groove Street";
						    case 10: 	ReqF_Name[params[0]] = "Sureños 13";
						    case 11:    ReqF_Name[params[0]] = "Latin Kings";
						    case 12:    ReqF_Name[params[0]] = "La Cosa Nostra";
						    case 13:    ReqF_Name[params[0]] = "Yakuza";
						    case 14:    ReqF_Name[params[0]] = "Família Korsakova";
						    case 15:    ReqF_Name[params[0]] = "Compañia de Licencias";
						    case 16:    ReqF_Name[params[0]] = "Gobierno";
						    case 17:    ReqF_Name[params[0]] = "CNN+";
						    case 19:    ReqF_Name[params[0]] = "Narcotraficantes";
						    case 20:    ReqF_Name[params[0]] = "Triadas";
						    case 22:    ReqF_Name[params[0]] = "Los 14 diamantes negros";
						    case 23:    ReqF_Name[params[0]] = "Hitman Agency";
						    case 24:    ReqF_Name[params[0]] = "FBI";
						    case 25:    ReqF_Name[params[0]] = "Blood's";
						    case 26:    ReqF_Name[params[0]] = "Cripz";
						    case 27:    ReqF_Name[params[0]] = "Alqaeda";
						    case 28:    ReqF_Name[params[0]] = "The Visage";
						    case 29:    ReqF_Name[params[0]] = "Alemana";
						}
                            ReqF_Faction[params[0]] = PlayerInfo[playerid][pLeader];
                            Facturing[params[0]] = 1;
							format(string, sizeof(string), "\t\t----- OFERTA DE TRABAJO -----\n\n\t%s te ofrece contrato a la facción %s\n\t¿ Quieres aceptarlo y pertenecer a esta facción ?", PlayerName(playerid), ReqF_Name[params[0]]);
		        			ShowPlayerDialog(params[0], REQF_ACCEPT, DIALOG_STYLE_MSGBOX, "Contrato de Trabajo", string, "Aceptar", "Rechazar");
	            	}
	            	else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        	    }
        	    else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        	}
        	else Message(playerid, COLOR_GRAD2, "Utilize: /contratar <jugador>");
		 }
		 else Message(playerid, COLOR_GRAD2, "Usted no es lider de facción.");
        return 1;
	}
	zcmd(gruposocialIN, playerid, params[])
    {
        if(PlayerInfo[playerid][pGSocial] > 0)
        {
        	if(!sscanf(params, "u", params[0]))

			{

			    if(IsPlayerConnected(params[0]))
        	    {
        	        if(ProxDetectorS(8.0, playerid, params[0]))
	            	{
	            	    if(params[0] == playerid) 		return	Message(playerid, COLOR_GRAD2, "¡No puedes invitarte ati mismo!");
	            	    if(Facturing[params[0]] > 0)    return 	Message(playerid, COLOR_GRAD2, "Este jugador está en otra tarea, espera.");
	            	    if(PlayerInfo[params[0]][pGSocial] > 0 || PlayerInfo[params[0]][pGSocial] > 0) return 	Message(playerid, COLOR_GRAD2, "Este jugador ya tiene facción.");

	            	    new string[128];
	            	    switch(PlayerInfo[playerid][pGSocial])
	            	    {
						    case 1: 	ReqF_Name[params[0]] = "Ciclistas LS";

						}
                            ReqG_Social[params[0]] = PlayerInfo[playerid][pGSocial];
                            Facturing[params[0]] = 1;
							format(string, sizeof(string), "\t\t----- GRUPO SOCIAL -----\n\n\t%s te ofrece contrato para entrar al grupo social\n\t¿ Quieres aceptarlo y pertenecer a este club ?", PlayerName(playerid), ReqF_Name[params[0]]);
		        			ShowPlayerDialog(params[0], REQ_SOCIAL, DIALOG_STYLE_MSGBOX, "Grupo Social", string, "Aceptar", "Rechazar");
	            	}
	            	else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        	    }
        	    else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        	}
        	else Message(playerid, COLOR_GRAD2, "Utilize: /gruposocialIN <jugador>");
		 }
		 else Message(playerid, COLOR_GRAD2, "Usted no pertenece al club social.");
        return 1;
	}
    zcmd(despedir, playerid, params[])
    {
        if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "Usted no es lider de facción.");
        if(PlayerInfo[playerid][pYoutuber] == 1) return Message(playerid, COLOR_GRAD2, "No puedes despedir a nadie");
		if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /despedir <jugador>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        if(PlayerInfo[playerid][pLeader] == PlayerInfo[params[0]][pMember])
		{
			new string[80];
			format(string, sizeof(string), "  Tu líder %s te ha despedido", PlayerName(playerid));
			Message(params[0], COLOR_RED2, "--- [ Contrato de Trabajo Terminado ] --");
			Message(params[0], COLOR_WHITE, string);
			format(string, sizeof(string), "  Despediste a %s", PlayerName(params[0]));
			Message(playerid, COLOR_WHITE, string);
			PlayerInfo[params[0]][pMember] = 0;
			PlayerInfo[params[0]][pRank] = 0;
			SetPlayerSkin(params[0], 299);
		} else Message(playerid, COLOR_GRAD2, "El jugador no pertenece a tu facción.");
        return 1;
    }
	zcmd(giverank, playerid, params[])
    {
        if(!sscanf(params, "ui", params[0], params[1]))
		{
            if(params[1] > 8 || params[1] < 0) { SendClientMessage(playerid, COLOR_GREY, " No hay rango tan alto!"); return 1; }
		    if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "No eres líder de facción.");
		    if(IsPlayerConnected(params[0]))
		    {
		        if(PlayerInfo[params[0]][pLeader] > 0) return Message(playerid, COLOR_GRAD2, "¡No puedes asignar rango a un líder!");
          		if(PlayerInfo[playerid][pLeader] == PlayerInfo[params[0]][pMember])
            	{
            	    new string[128];
            	    PlayerInfo[params[0]][pRank] = params[1];
            	    format(string, sizeof(string), "Líder %s asignó rango %d al miembro %s", PlayerName(playerid), PlayerInfo[params[0]][pRank], PlayerName(params[0]));
					Message(params[0], COLOR_LIGHTBLUE, string);
					Message(playerid, COLOR_LIGHTBLUE, string);
            	}
            	else Message(playerid, COLOR_GRAD2, "¡Este miembro no es de tu facción!");
		    }
		    else Message(playerid, COLOR_GREY, "Jugado desconectado.");
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /giverank <jugador> <rango>");
        return 1;
    }
	///////////////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(equipo, playerid, params[]){
	if(PlayerInfo[playerid][pConnectTime] < 3 || PlayerInfo[playerid][pWRestricted] == 1) return Message(playerid, COLOR_GRAD2, "*Tienes protección de armas las 3 primeras horas");
        if(IsACop(playerid)){
	    	if(PlayerToPoint(5, playerid, 255.0014,74.5900,1003.6406) || PlayerToPoint(5.0, playerid, 222.3244,186.7450,1003.0313)){
            	new eq[] = "Cadete\nAgente\nFemenino\nMotorista\nAntidisturbio\nInspector\nPolicía Científica\nTraje de Comisario\nChaleco + Salud\nPistola + Porra\nRopa Normal";
            	ShowPlayerDialog(playerid,EQUIPO_DIALOG,DIALOG_STYLE_LIST,">> Equipo Policía <<",eq,"Equipar","Cancelar");
			}
		}
        if(Gobierno(playerid)){
	    	if(PlayerToPoint(5, playerid, 1555.6058,-1822.8219,-22.6631)){
            	new gob[] = "Chofer del gobierno\nAgente en practicas\nAgente del Servico Secreto\nMinistro\nMinistro General\nBotiquin y Chaleco";
            	ShowPlayerDialog(playerid,EQUIPO_GOB,DIALOG_STYLE_LIST,">> Equipo Gobierno <<",gob,"Equipar","Cancelar");
			}
		}
		if(Team_FBI(playerid)){
	    	if(PlayerToPoint(5, playerid, 229.03,164.86,1003.02)){
            	new eq[] = "Equipo FBI\nEquipo FBI2\nSWAT\nEncubierto 1\nEncubierto 2\nEncubierto 3\nChaleco + Salud\nRopa Normal";
            	ShowPlayerDialog(playerid,EQUIPO_FBI,DIALOG_STYLE_LIST,">> Equipo FBI <<",eq,"Equipar","Cancelar");
			}
		}
        else if(Team_NG(playerid)){
	    	if(PlayerToPoint(20, playerid,2913.7371,2135.0974,0.3278) || PlayerToPoint(60, playerid, 2911.2637,2137.0874,0.3281)){//243.0874,2030.2115,-6.7553
            	new eq1[] = "Entrenamiento\nSoldado\nFrancotirador\nUS Army Liviana\nUS Army Pesada\nNormal\nChaleco+Salud";
            	ShowPlayerDialog(playerid,EQUIPO_NG,DIALOG_STYLE_LIST,">> Equipo SAEM <<",eq1,"Equipar","Cancelar");
			}
		}
		else if(Team_SAMUR(playerid) || Team_LVMD(playerid)){
			if(PlayerToPoint(5, playerid, -2639.9487,535.6438,51.6134) || PlayerToPoint(5.0, playerid, 1601.4702,1757.8895,-60.5596)){
			    new eq[] = "Traje Doctor\nTraje Médico Blanco\nTraje Médico Azul\nTraje Médico Verde\nIndumentario Normal";
			    ShowPlayerDialog(playerid,EQUIPO_DIALOG4,DIALOG_STYLE_LIST,">> Equipo SAMUR <<",eq,"Equipar","Cancelar");
			}
		}
		else if(Team_Taxi(playerid))
		{
            if(PlayerToPoint(5, playerid, -1825.4268,137.4265,18.9315) || PlayerToPoint(5, playerid, 1639.2286,1311.7960,10.8685))
            {
                new eq[] = "Traje I\nTraje II\nTraje III\nIndumentario Normal";
                ShowPlayerDialog(playerid,EQUIPO_DIALOG5,DIALOG_STYLE_LIST,">> Equipo Taxi <<",eq,"Equipar","Cancelar");
            }
        }
        else if(Hitman(playerid)){
            if(PlayerToPoint(5, playerid, -2178.8694,897.3518,96.9397)){
                new hit[] = "Pistol SD + Cuchillo\nSniper + Cuchillo\nD. Eagle + Cuchillo\nAk-47 + Cuchillo\nM4 + Cuchillo\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_HITMAN,DIALOG_STYLE_LIST,">> Equipo Hitman <<",hit,"Equipar","Cancelar");
            }
        }
        else if(Mafia_Italiana(playerid)){
            if(PlayerToPoint(5, playerid, 1517.6222,-990.7539,1959.8866))
			{
                new ita[] = "Pistol SD + Cuchillo + Ak-47\nPistol SD + Cuchillo + Sniper\nD. Eagle + Cuchillo + M4\nD. Eagle + Cuchillo + MP5\nEquipo profesional\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_ITALIANO,DIALOG_STYLE_LIST,">> Equipo Italiano <<",ita,"Equipar","Cancelar");
            }
        }
        else if(Mafia_Rusa(playerid)){
            if(PlayerToPoint(5, playerid, 1275.1790,-801.0087,1089.9375)){
                new rus[] = "Pistol SD + Cuchillo + Ak-47\nPistol SD + Cuchillo + Sniper\nD. Eagle + Cuchillo + M4\nD. Eagle + Cuchillo + MP5\nEquipo profesional\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_RUSO,DIALOG_STYLE_LIST,">> Equipo Ruso <<",rus,"Equipar","Cancelar");
            }
        }
        else if(Mafia_Capone(playerid)){
            if(PlayerToPoint(10, playerid, 1690.4524,767.0659,3.8734)){
                new cap[] = "Curaciones\nArmamento completo\nEquipo Profesional\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_CAPONE,DIALOG_STYLE_LIST,">> Equipo 14 diamantes negros <<",cap,"Equipar","Cancelar");
            }
        }
        else if(TraficantesTeam(playerid)){
            if(PlayerToPoint(10, playerid, 2552.2837,-1295.4653,1060.9844)){
                new cap[] = "Cuchillo + Ak-47\nD. Eagle + Cuchillo + rifle\nD. Eagle + Cuchillo + MP5\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_TRAFICANTES,DIALOG_STYLE_LIST,">> Equipo Traficantes <<",cap,"Equipar","Cancelar");
            }
        }
        else if(Mafia_Alqaeda(playerid)){
            if(PlayerToPoint(10, playerid, 278.9109,1854.4526,8.7649)){
                new cap[] = "Novato\nSoldado\nHacker\nTerrorista\nMano Derecha\nMandatario\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_ALQAEDA,DIALOG_STYLE_LIST,">> Equipo Al Qaeda <<",cap,"Equipar","Cancelar");
            }
        }
        else if(Mafia_Espanola(playerid)){
            if(PlayerToPoint(10, playerid, 1275.1790,-801.0087,1089.9375)){
                new cap[] = "Pistol SD + Cuchillo + Ak-47 + Coctel Molotov\nPistol SD + Cuchillo + Sniper\nD. Eagle + Cuchillo + M4 + Coctel Molotov\nD. Eagle + Cuchillo + MP5 + Coctel Molotov\nEquipo profesional\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_ESPANOL,DIALOG_STYLE_LIST,">> Equipo Visage <<",cap,"Equipar","Cancelar");
            }
        }
        else if(Mafia_Alemana(playerid)){
            if(PlayerToPoint(10, playerid, 1275.2014,-801.2246,1089.9375)){
                new cap[] = "Pistol SD + Cuchillo + Ak-47\nPistol SD + Cuchillo + Sniper\nD. Eagle + Cuchillo + M4\nD. Eagle + Cuchillo + MP5\nEquipo profesional\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_ALEMAN,DIALOG_STYLE_LIST,">> Equipo Alemán <<",cap,"Equipar","Cancelar");
            }
        }
        else if(Mafia_Yakuza(playerid)){
            if(PlayerToPoint(5, playerid, 2319.1052,-1017.3345,1050.2109)){
                new Yaku[] = "Pistol SD + Cuchillo + Ak-47\nPistol SD + Cuchillo + Sniper\nD. Eagle + Cuchillo + M4\nD. Eagle + Cuchillo + MP5\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_YAKUZA,DIALOG_STYLE_LIST,">> Equipo Yakuza <<",Yaku,"Equipar","Cancelar");
            }
        }
        else if(TriadasTeam(playerid)){
            if(PlayerToPoint(5, playerid, 2332.5754,-1144.1835,1054.3047)){
                new Tria[] = "Pistol SD + Cuchillo + Ak-47\nPistol SD + Cuchillo + Sniper\nD. Eagle + Cuchillo + M4\nD. Eagle + Cuchillo + MP5\nMáscara, Ganzúas, Pick Lock, Soga y Venda\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_TRIADAS,DIALOG_STYLE_LIST,">> Equipo Triadas <<",Tria,"Equipar","Cancelar");
            }
        }
        else if(Umbrella7(playerid)){
            if(PlayerToPoint(5, playerid, 246.4590,125.8930,1003.2188)){
		        new eq[] = "Secretario\nDetective\nGuardaespaldas\nSuper Agente\nAgente 47\nDirector\nDejar Equipo";
		        ShowPlayerDialog(playerid,EQUIPO_DIALOG3,DIALOG_STYLE_LIST,">> Equipo CA <<",eq,"Equipar","Salir");
		    }
	    }
        else Message(playerid, COLOR_GREY, "Necesita estar en la HQ de su facción para usar esta función !");
		return 1;
	}
	zcmd(moneda, playerid, params[])
	{
	    new coin = random(2)+1, string[90], coinname[10];
	    if(coin == 1) 	coinname = "cara";
	    else 			coinname = "cruz";
	    format(string, sizeof(string), "*** %s lanza una moneda al aire y cae %s", PlayerName(playerid), coinname);
	    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    return 1;
	}
	zcmd(ven, playerid, params[])
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
			new string[128];
            if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
	        {
		       VehicleWindows[GetPlayerVehicleID(playerid)] = 1;
		       format(string, sizeof(string), "* %s baja la ventana.", PlayerName(playerid));
		       ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       return 1;
	        }
            else if(VehicleWindows[GetPlayerVehicleID(playerid)] == 1)
	        {
		       VehicleWindows[GetPlayerVehicleID(playerid)] = 0;
		       format(string, sizeof(string), "* %s sube la ventanilla.", PlayerName(playerid));
		       ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       return 1;
	        }
	    }
	    else Message(playerid, COLOR_GREY, "   Usted necesita estar en el vehiculo para utilizar esta funcion !");
        return 1;
	}
    zcmd(limpiar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "ui", params[0], params[1]))
        {
            if(IsPlayerConnected(params[0]))
		  	{
		  	    new string[128];
				switch(params[1])
				{
				    case 0:
				    {
				        strmid(PlayerInfo[params[0]][pAntecedente1], "None", 0, strlen("None"), 64);
           				strmid(PlayerInfo[params[0]][pAntecedente2], "None", 0, strlen("None"), 64);
              			strmid(PlayerInfo[params[0]][pAntecedente3], "None", 0, strlen("None"), 64);
                		PlayerInfo[params[0]][pBusqueda] = 0;
                 		SetPlayerWantedLevel(params[0], 0);
                  		format(string, sizeof(string), "* %s limpió los antecedentes y la búsqueda de %s", PlayerName(playerid), PlayerName(params[0]));
                   		Message(playerid, COLOR_GREEN, string);
                    	Message(params[0], COLOR_GREEN, string);
				    }
				    case 1:
				    {
				        if(strcmp("None", PlayerInfo[params[0]][pAntecedente1], true) == 0) return Message(playerid, COLOR_GRAD2, "Slot#1 Sin antecedentes!");
            			else
               			{
                 			strmid(PlayerInfo[params[0]][pAntecedente1], "None", 0, strlen("None"), 64);
                   			format(string, sizeof(string), "* %s limpió el antecedente 1º de %s", PlayerName(playerid), PlayerName(params[0]));
                     		Message(playerid, COLOR_GREEN, string);
                      		Message(params[0], COLOR_GREEN, string);
                  		}
				    }
				    case 2:
				    {
				        if(strcmp("None", PlayerInfo[params[0]][pAntecedente2], true) == 0) return Message(playerid, COLOR_GRAD2, "Slot#2 Sin antecedentes!");
            			else
               			{
                 			strmid(PlayerInfo[params[0]][pAntecedente2], "None", 0, strlen("None"), 64);
                   			format(string, sizeof(string), "* %s limpió el antecedente 2º de %s", PlayerName(playerid), PlayerName(params[0]));
                     		Message(playerid, COLOR_GREEN, string);
                      		Message(params[0], COLOR_GREEN, string);
                  		}
				    }
				    case 3:
				    {
				        if(strcmp("None", PlayerInfo[params[0]][pAntecedente3], true) == 0) return Message(playerid, COLOR_GRAD2, "Slot#3 Sin antecedentes!");
            			else
               			{
                 			strmid(PlayerInfo[params[0]][pAntecedente3], "None", 0, strlen("None"), 64);
                   			format(string, sizeof(string), "* %s limpió el antecedente 3º de %s", PlayerName(playerid), PlayerName(params[0]));
                     		Message(playerid, COLOR_GREEN, string);
                      		Message(params[0], COLOR_GREEN, string);
                  		}
				    }
				    case 4:
				    {
				        PlayerInfo[params[0]][pBusqueda] = 0;
           				SetPlayerWantedLevel(playerid, 0);
              			format(string, sizeof(string), "* %s canceló el nivel de búsqueda de %s", PlayerName(playerid), PlayerName(params[0]));
                		Message(playerid, COLOR_GREEN, string);
                 		Message(params[0], COLOR_GREEN, string);
				    }
				}
		  	}
		  	else Message(playerid, COLOR_GRAD2, "Error de ID - Jugador OffLine.");
        }
        else
        {
			ClearChatbox(playerid, 5);
            Message(playerid, COLOR_GRAD2, "Utilize: /limpiar <ID> <item> 0 [Todos] 1 [Antecedente] 2 [Antecedente] 3 [Antecedente] 4 [N. Busqueda]");
        }
        return 1;
    }
	zcmd(ant, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 0) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "us[64]", params[0], params[1]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if(StringOther(playerid, params[1]) == 1)
            	{
	                if (IsACop(params[0])) return Message(playerid, COLOR_GRAD2, "No puedes acusar a un policía.");
	                if(strcmp("None", PlayerInfo[params[0]][pAntecedente1], true) == 0 || strcmp("None", PlayerInfo[params[0]][pAntecedente2], true) == 0 || strcmp("None", PlayerInfo[params[0]][pAntecedente3], true) == 0)
	    			{
							if(strcmp("None", PlayerInfo[params[0]][pAntecedente1], true) == 0)  	strmid(PlayerInfo[params[0]][pAntecedente1], params[1], 0, strlen(params[1]), 64);
							else if(strcmp("None", PlayerInfo[params[0]][pAntecedente2], true) == 0) strmid(PlayerInfo[params[0]][pAntecedente2], params[1], 0, strlen(params[1]), 64);
							else if(strcmp("None", PlayerInfo[params[0]][pAntecedente3], true) == 0) strmid(PlayerInfo[params[0]][pAntecedente3], params[1], 0, strlen(params[1]), 64);

							new string[128];
							Message(playerid, COLOR_RED,  "_________| Antecedentes Policiales |_________");
							Message(params[0], COLOR_RED, "_________| Antecedentes Policiales |_________");
			    			format(string, sizeof(string), "- %s", PlayerInfo[params[0]][pAntecedente1]);    	Message(playerid, COLOR_YELLOW, string);    Message(params[0], COLOR_YELLOW, string);
						    format(string, sizeof(string), "- %s", PlayerInfo[params[0]][pAntecedente2]);    	Message(playerid, COLOR_YELLOW, string);    Message(params[0], COLOR_YELLOW, string);
						    format(string, sizeof(string), "- %s", PlayerInfo[params[0]][pAntecedente3]);   	Message(playerid, COLOR_YELLOW, string);    Message(params[0], COLOR_YELLOW, string);
						    Message(playerid, COLOR_RED,  "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
							Message(params[0], COLOR_RED, "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
						    format(string, sizeof(string), "* El oficial %s escribe en el historial de %s", PlayerName(playerid), PlayerName(params[0]));
						    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else Message(playerid, COLOR_GRAD2, "Ha alcanzado el límite de Antecedentes");
				}
				else Message(playerid, COLOR_GRAD2, "* Has utilizado carácteres no permitidos.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /ant <PlayerID> <Antecedente>");
        return 1;
    }
	zcmd(expediente, playerid, params[])
	{
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡Primero conectate!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Uso: /expediente <id>.");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		if(ProxDetectorS(8.0, playerid, params[0]))
		{
		    new string[64];
			Message(params[0], COLOR_GREEN,"______-= Expediente policial =-_______");
            format(string, sizeof(string),"  Nombre: %s", PlayerName(playerid));
            Message(params[0], COLOR_WHITE,string);
			Message(params[0], COLOR_YELLOW2,"  Antecedentes:");
            format(string, sizeof(string), "  - %s", PlayerInfo[playerid][pAntecedente1]);
            SendClientMessage(params[0], WANTED_COLOR, string);
            format(string, sizeof(string), "  - %s", PlayerInfo[playerid][pAntecedente2]);
            SendClientMessage(params[0], WANTED_COLOR, string);
            format(string, sizeof(string), "  - %s", PlayerInfo[playerid][pAntecedente3]);
            SendClientMessage(params[0], WANTED_COLOR, string);
            SendClientMessage(params[0], COLOR_GREEN,"_______________________________________");
            format(string, sizeof(string), "* %s le muestra a %s su expediente.", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else Message(playerid, COLOR_GRAD2, "Jugador está lejos de ti.");
		return 1;
	}
//	zcmd(vendercelular, playerid, params[])    PlayerInfo[playerid][pHmm] = 1000;
   	zcmd(nokear, playerid, params[])
	{
	    if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /nokear <ID>");
        if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, "Usted debe ser mayor al nivel 2.");
		if(KnockedDown[playerid] == 0 || IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0]))
		{
			if(ProxDetectorS(3.0, playerid, params[0]))
			{
				new rands = random(2)+1, string[128];
				format(string, sizeof(string), "* %s agarra una piedra.", PlayerName(playerid));
            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
            	KnockedDown[playerid] = 100;

            	if(rands == 1)
				{
					ApplyAnimation(params[0], "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
					SetTimerEx("ClearKnock", 60000, false, "i", params[0]);
					SetTimerEx("ClearKnock", 60000, false, "i", playerid);
					KnockedDown[params[0]] = 1;
                    format(string, sizeof(string), "* %s intenta noquear a %s con la piedra y lo consige.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(3.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
					format(string, sizeof(string), "* %s queda inconsciente.", PlayerName(params[0]));
            		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					format(string, sizeof(string), "* %s intenta noquear a %s con la piedra y le da muy suave.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(3.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
				}
			}
			else Message(playerid, COLOR_GRAD2, "El jugador está muy lejos de usted.");
		}
		else Message(playerid, COLOR_GRAD2, "Usted no puede utilizar este comando ahora.");
		return 1;
	}
	//SAEM
	zcmd(automatico, playerid, params[])
	{
        if(!Team_NG(playerid)) return Message(playerid, COLOR_GRAD2, "No eres militar.");
        if(PlayerInfo[playerid][pRank] < 5) return Message(playerid, COLOR_GRAD2, " No puedes hacer esto.");
	    if(AutoPeaje != 1)
		{
           AutoPeaje = 1
           BroadCast(-1, "{00AC2B}[SAEM] El peaje principal ha sido puesto en custodia militar y serán revisados al pasar.");
        }
        else
		{
           AutoPeaje = 0
           BroadCast(-1, "{00AC2B}[SAEM] El peaje principal ha sido abierto para su uso automático. {00AC2B}[/apeaje]");
        }
        return 1;
    }
	zcmd(apeaje, playerid, params[])
	{
        new string[128]
        if(!Team_NG(playerid)) return Message(playerid, COLOR_GRAD2, "No eres militar.");
        if(AutoPeaje == 0) return Message(playerid, COLOR_GRAD2, " El peaje está automático, Para custodia use /automatico");
        if(PlayerToPoint(5.0, playerid, 1722.6185,507.6076,28.9528) || PlayerToPoint(5.0, playerid, 1723.2494,517.0363,28.5311))
        {
            SetDynamicObjectRot(pea1, 0.00000000,35.00000000,341.50000000);
            format(string, sizeof(string), "* %s da movimiento a la barra del peaje.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            SetTimer("peaje1", 7000, 0);
		} else if(PlayerToPoint(5.0, playerid, 1746.4300,513.2691,28.2265) || PlayerToPoint(5.0, playerid, 1745.8872,504.1720,28.7986))
		{
            SetDynamicObjectRot(pea2, 359.76928711,336.74743652,339.64782715);
            format(string, sizeof(string), "* %s da movimiento a la barra del peaje.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            SetTimer("peaje2", 7000, 0);
		} else Message(playerid, COLOR_GRAD2, " No estás en el peaje de control.");
		return 1;
	}
	zcmd(peaje, playerid, params[])
	{
		if(CheckMoney(playerid,20))
		{
            if(PlayerToPoint(5.0, playerid, 608.1693,339.6902,18.9297))
            {
               SetDynamicObjectRot(pea3, 0.00000000,2.50000000,34.25003052);
               SetTimer("peaje3", 7000, 0);
               Bought(playerid, 20);
		    }
            else if(PlayerToPoint(8.0, playerid, 72.8000,-1538.5000,4.8000))
	     	{
               SetDynamicObjectRot(pea7, 0.00000000,0.00000000,90.00000000);
               SetTimer("peaje7", 7000, 0);
               Bought(playerid, 20);
            }
            else if(PlayerToPoint(8.0, playerid, 73.5000,-1531.1999,4.8000))
	     	{
               SetDynamicObjectRot(pea8, 0.00000000,0.00000000,270.00000000);
               SetTimer("peaje8", 7000, 0);
               Bought(playerid, 20);
            }
			else if(PlayerToPoint(5.0, playerid, 618.1724,339.9881,19.1228))
		    {
               SetDynamicObjectRot(pea4, 0.00000000,355.75003052,37.99072266);
               SetTimer("peaje4", 7000, 0);
               Bought(playerid, 20);
	     	}
	     	else if(PlayerToPoint(5.0, playerid, -182.0773,329.9183,12.0781))
	     	{
               SetDynamicObjectRot(pea5, 0.00000000,0.00000000,343.00000000);
               SetTimer("peaje5", 7000, 0);
               Bought(playerid, 20);
            }
            else if(PlayerToPoint(5.0, playerid, -176.0248,322.3244,12.0781))
            {
               SetDynamicObjectRot(pea6, 0.00000000,0.00000000,342.99865723);
               SetTimer("peaje6", 7000, 0);
               Bought(playerid, 20);
            }
            else if(PlayerToPoint(8.0, playerid, 1722.6185,507.6076,28.9528))
            {
			   if(AutoPeaje == 0)
			   {
                   SetDynamicObjectRot(pea1, 0.00000000,35.00000000,341.50000000);
                   SetTimer("peaje1", 7000, 0);
                   Bought(playerid, 20)
			   } else Message(playerid, COLOR_GRAD2, " El peaje no está automatico.");
	 	    }
		    else if(PlayerToPoint(8.0, playerid, 1746.4300,513.2691,28.2265))
		    {
			   if(AutoPeaje == 0)
			   {
                   SetDynamicObjectRot(pea2, 359.76928711,336.74743652,339.64782715);
                   SetTimer("peaje2", 7000, 0);
                   Bought(playerid, 20)
               } else Message(playerid, COLOR_GRAD2, " El peaje no está automatico.");
		    } else Message(playerid, COLOR_GRAD2, " No estás en el peaje.");
		}
		return 1;
	}
    zcmd(arrestar, playerid, params[])
    {
        if(!IsACop(playerid) && !Team_NG(playerid) && !Team_FBI(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía/FBI/Militar.");
        if(!sscanf(params, "uiii", params[0], params[1], params[2], params[3]))
        {
            if(PlayerToPoint(4.0, playerid, 267.5095,87.0759,1001.0391))
            {
                if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GREY, "¡Jugador muy lejos!");
                if(params[1] < 0 || params[1] > 60) return Message(playerid, COLOR_GREY, "El máximo de minutos es 60.");
                if(params[2] < 0 || params[2] > 1500) return Message(playerid, COLOR_GREY, "El máximo de precio es 1.500$");
                if(params[3] < 0 || params[3] > 10000) return Message(playerid, COLOR_GREY, "Máximo fianza: 10.000$ (Sin fianza)");

                new wantedlevel = GetPlayerWantedLevel(params[0]), string[128];
          		if(wantedlevel < 1) return SendClientMessage(playerid, COLOR_GREY, "¡Este jugador no tiene nivel de búsqueda!");

				SetPlayerWantedLevel(params[0], 0);
				GameTextForPlayer(params[0], "ENCARCELADO", 5000, 5);
				GivePlayerMoney(params[0], -params[2]);
				ResetPlayerWeapons(params[0]);
				PlayerInfo[params[0]][pJailTime] = params[1] * 60;
				PlayerInfo[params[0]][pJailed] = 3;
				format(string, sizeof(string), "{FFFFFF}Noticias {EE0000}GW {00B546}CNN+{FFFFFF} \"Sospechoso {FF9900}%s {FFFFFF}ha sido arrestado por %d años\"",PlayerName(params[0]), params[1]);
				GlobalMsg(-1, string);
				format(string, sizeof(string), "[ Sospechoso %s encarcelado por %d minutos, multa %d$, fianza %d$ - Oficial: %s ]", PlayerName(params[0]),params[1],params[2],params[3],PlayerName(playerid));
				Message(playerid, COLOR_WHITE, string);
				Message(params[0], COLOR_WHITE, string);
				if(GetPlayerInterior(playerid) == 3 || GetPlayerInterior(params[0]) == 3)
				{
				    PlayerInfo[params[0]][pJailed] = 3;
					new cellran = random(3);
					switch(cellran)
					{
						case 0: SetPosEx(params[0], 197.5159,174.6245,1003.0234,3.1802,3,0);
						case 1: SetPosEx(params[0], 193.3041,175.5405,1003.0234,355.6601,3,0);
						case 2: SetPosEx(params[0], 198.3940,161.4172,1003.0300,176.7217,3,0);
					}
				}
				else Message(playerid, COLOR_GRAD2, "No estás en las celdas.");
				return 1;
            }
            if(PlayerToPoint(3.0, playerid, 601.6668,856.1074,-90.2031) || PlayerToPoint(3.0, playerid, 610.4038,860.4807,-90.2031) || PlayerToPoint(3.0, playerid, 618.2422,859.4252,-90.2031))
            {
                if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GREY, "¡Jugador muy lejos!");
                if(params[1] < 0 || params[1] > 60) return Message(playerid, COLOR_GREY, "El máximo de minutos es 60.");
                if(params[2] < 0 || params[2] > 1500) return Message(playerid, COLOR_GREY, "El máximo de precio es 1.500$");
                if(params[3] < 0 || params[3] > 10000) return Message(playerid, COLOR_GREY, "Máximo fianza: 10.000$ (Sin fianza)");

                new wantedlevel = GetPlayerWantedLevel(params[0]), string[128];
          		if(wantedlevel < 1) return SendClientMessage(playerid, COLOR_GREY, "¡Este jugador no tiene nivel de búsqueda!");

				SetPlayerWantedLevel(params[0], 0);
				GameTextForPlayer(params[0], "ENCARCELADO", 5000, 5);
				GivePlayerMoney(params[0], -params[2]);
				ResetPlayerWeapons(params[0]);
				PlayerInfo[params[0]][pJailTime] = params[1] * 60;
				PlayerInfo[params[0]][pJailed] = 4;
				format(string, sizeof(string), "{FFFFFF}Noticias {EE0000}GW {00B546}CNN+{FFFFFF} \"Sospechoso {FF9900}%s {FFFFFF}ha sido arrestado por %d años\"",PlayerName(params[0]), params[1]);
				GlobalMsg(-1, string);
				format(string, sizeof(string), "[ Sospechoso %s encarcelado por %d minutos, multa %d$, fianza %d$ - Oficial: %s ]", PlayerName(params[0]),params[1],params[2],params[3],PlayerName(playerid));
				Message(playerid, COLOR_WHITE, string);
				Message(params[0], COLOR_WHITE, string);
				SetPosEx(params[0], 602.6583,860.0936,-90.2031,346.0309,0,0);
				return 1;
            }
            if(PlayerToPoint(4.0, playerid, 196.72,158.61,1003.02))
            {
                if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GREY, "¡Jugador muy lejos!");
                if(params[1] < 0 || params[1] > 60) return Message(playerid, COLOR_GREY, "El máximo de minutos es 60.");
                if(params[2] < 0 || params[2] > 1500) return Message(playerid, COLOR_GREY, "El máximo de precio es 1.500$");
                if(params[3] < 0 || params[3] > 10000) return Message(playerid, COLOR_GREY, "Máximo fianza: 10.000$ (Sin fianza)");

                new wantedlevel = GetPlayerWantedLevel(params[0]), string[128];
          		if(wantedlevel < 1) return SendClientMessage(playerid, COLOR_GREY, "¡Este jugador no tiene nivel de búsqueda!");

				SetPlayerWantedLevel(params[0], 0);
				GameTextForPlayer(params[0], "ENCARCELADO", 5000, 5);
				GivePlayerMoney(params[0], -params[2]);
				ResetPlayerWeapons(params[0]);
				PlayerInfo[params[0]][pJailTime] = params[1] * 60;
				PlayerInfo[params[0]][pJailed] = 5;
				format(string, sizeof(string), "{FFFFFF}Noticias {EE0000}GW {00B546}CNN+{FFFFFF} \"Sospechoso {FF9900}%s {FFFFFF}ha sido arrestado por %d años\"",PlayerName(params[0]), params[1]);
				GlobalMsg(-1, string);
				format(string, sizeof(string), "[ Sospechoso %s encarcelado por %d minutos, multa %d$, fianza %d$ - Oficial: %s ]", PlayerName(params[0]),params[1],params[2],params[3],PlayerName(playerid));
				Message(playerid, COLOR_WHITE, string);
				Message(params[0], COLOR_WHITE, string);
                SetPosEx(params[0], 198.20,161.63,1003.03,273.6029,3,0);
				return 1;
            }
            if(PlayerToPoint(4.0, playerid, 196.15,178.64,1003.02))
            {
                if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GREY, "¡Jugador muy lejos!");
                if(params[1] < 0 || params[1] > 60) return Message(playerid, COLOR_GREY, "El máximo de minutos es 60.");
                if(params[2] < 0 || params[2] > 1500) return Message(playerid, COLOR_GREY, "El máximo de precio es 1.500$");
                if(params[3] < 0 || params[3] > 10000) return Message(playerid, COLOR_GREY, "Máximo fianza: 10.000$ (Sin fianza)");

                new wantedlevel = GetPlayerWantedLevel(params[0]), string[128];
          		if(wantedlevel < 1) return SendClientMessage(playerid, COLOR_GREY, "¡Este jugador no tiene nivel de búsqueda!");

				SetPlayerWantedLevel(params[0], 0);
				GameTextForPlayer(params[0], "ENCARCELADO", 5000, 5);
				GivePlayerMoney(params[0], -params[2]);
				ResetPlayerWeapons(params[0]);
				PlayerInfo[params[0]][pJailTime] = params[1] * 60;
				PlayerInfo[params[0]][pJailed] = 6;
				format(string, sizeof(string), "{FFFFFF}Noticias {EE0000}GW {00B546}CNN+{FFFFFF} \"Sospechoso {FF9900}%s {FFFFFF}ha sido arrestado por %d años\"",PlayerName(params[0]), params[1]);
				GlobalMsg(-1, string);
				format(string, sizeof(string), "[ Sospechoso %s encarcelado por %d minutos, multa %d$, fianza %d$ - Oficial: %s ]", PlayerName(params[0]),params[1],params[2],params[3],PlayerName(playerid));
				Message(playerid, COLOR_WHITE, string);
				Message(params[0], COLOR_WHITE, string);
				SetPosEx(params[0], 197.59,175.21,1003.02,273.6029,3,0);
				return 1;
            }
        } else Message(playerid, COLOR_GRAD2, "Utilize: /arrestar <player> <minutos> <precio$> <fianza$>");
        return 1;
    }
    zcmd(su, playerid, params[])
    {
        if(!IsACop(playerid) && !Team_FBI(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 0 && IsACop(playerid) && Team_FBI(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "us[64]", params[0], params[1]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if (IsACop(params[0])) return Message(playerid, COLOR_GRAD2, "No puedes acusar a un policía.");
                if (PlayerInfo[params[0]][pBusqueda] == 6)
				{
					ClearChatbox(playerid, 5);
					Message(playerid, WANTED_COLOR, "Este jugador ha alcanzado el nivel de búsqueda máximo");
	    			return Message(playerid, WANTED_COLOR, "Nivel de búsqueda: 6/6");
				}
				else
				{
    				if(PlayerInfo[params[0]][pBusqueda] < 1)
				    {
        				SendRadioMessage(1, TEAM_RADIO_COLOR, "** Central: se ha encontrado un nuevo sospechoso, para más información miren sus ordenadores.")
				        SendRadioMessage(2, TEAM_RADIO_COLOR, "** Central: se ha encontrado un nuevo sospechoso, para más información miren sus ordenadores.")
				    }
				    new string[64];
				    ClearChatbox(playerid, 5);
    				PlayerInfo[params[0]][pBusqueda] ++;
    				format(string, sizeof(string), "** Acusaste a %s: %s", PlayerName(params[0]), params[1])
				    Message(playerid, WANTED_COLOR, string);
			    	format(string, sizeof(string), "Nivel de búsqueda: %d/6", PlayerInfo[params[0]][pBusqueda])
				    Message(playerid, WANTED_COLOR, string);
				    SetPlayerWantedLevel(params[0], PlayerInfo[params[0]][pBusqueda]);
				}
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: (/su)spect <PlayerID> <crimen>");
        return 1;
    }
    zcmd(esposar, playerid, params[])
    {
        if(!IsACop(playerid) && !Team_NG(playerid) && !Team_FBI(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(!sscanf(params, "u", params[0]))
        {
            if (params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No puedes esposarte ati mismo!");
            if (ProxDetectorS(8.0, playerid, params[0]))
			{
				new string[128];
				if(PlayerCuffed[params[0]] == 0)
				{
					format(string, sizeof(string), "* Oficial %s esposa al sospechoso %s", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(params[0], "~r~ESPOSADO", 2500, 3);
					PlayerCuffed[params[0]] = 1;
					PlayerInfo[params[0]][pPapel] = 1;
					SetPlayerSpecialAction(params[0], 24);
					return 1;
				}
				else
				{
				    format(string, sizeof(string), "* Oficial %s desesposa a %s", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(params[0], "~g~LIBRE", 2500, 3);
					PlayerCuffed[params[0]] = 0;
					PlayerInfo[params[0]][pPapel] = 0;
                    SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
					return 1;
				}
			} else Message(playerid, COLOR_GREY, "El jugador está muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /esposar <ID>");
        return 1;
    }
    zcmd(sospechosos, playerid, params[])
    {
        if(!IsACop(playerid) && !Team_NG(playerid) && !Team_FBI(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 1)
        {
            if(!sscanf(params, "i", params[0]))
            {
                if(params[0] < 1 || params[0] > 6) return Message(playerid, COLOR_GRAD2, "Utilize: /sospechosos < Nivel Búsqueda: 1-6 >");
                new string[64];
                ClearChatbox(playerid, 10);
                Message(playerid, WANTED_COLOR, "> Sospechosos más buscados <");
				for(new i=0; i < MAX_PLAYERS; i++)
				{
					if(params[0] == 1 && PlayerInfo[i][pBusqueda] == 1){ 		 format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 1", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 2 && PlayerInfo[i][pBusqueda] == 2){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 2", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 3 && PlayerInfo[i][pBusqueda] == 3){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 3", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 4 && PlayerInfo[i][pBusqueda] == 4){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 4", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 5 && PlayerInfo[i][pBusqueda] == 5){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 5", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 6 && PlayerInfo[i][pBusqueda] == 6){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 6", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
				}
            } else Message(playerid, COLOR_GRAD2, "Utilize: /sospechosos < Nivel Búsqueda: 1-6 >");
        } else Message(playerid, COLOR_GRAD2, "¡No estas OnDuty!");
        return 1;
    }
    zcmd(bk, playerid, params[]){
        if(RequestingBackup[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Ya tienes un pedido de ayuda.");
        if(IsACop(playerid)){
            new Float:px,Float:py,Float:pz,string[128]; GetPlayerPos(playerid, px, py, pz);
            RequestingBackup[playerid] = 1;
			if(Team_LSPD(playerid)){
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", PlayerName(playerid));
			    SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++){
					if(IsPlayerConnected(i)){
						if(Team_LSPD(i)){
						    if(OnDuty[i]== 1){
								SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
								if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
							}
						}
					}
				}
			}
            else if(Team_NG(playerid)){
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", PlayerName(playerid));
			    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++){
					if(IsPlayerConnected(i)){
						if(Team_NG(i)){
						    if(OnDuty[i]== 1){
								SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
								if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
							}
						}
					}
				}
			}
			else if(Team_FBI(playerid)){
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", PlayerName(playerid));
			    SendRadioMessage(24, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++){
					if(IsPlayerConnected(i)){
						if(Team_FBI(i)){
						    if(OnDuty[i]== 1){
								SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
								if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
							}
						}
					}
				}
			}
			SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
        } else Message(playerid, COLOR_WHITE, "¡No autorizado!");
        return 1;
    }
    zcmd(bkc, playerid, params[]){
        if(Team_LSPD(playerid)) BackupClear(playerid, 0);
        else Message(playerid, COLOR_WHITE, "No autorizado.");
        return 1;
	}
    zcmd(ta, playerid, params[])
    {
        if(!IsACop(playerid) && !Team_NG(playerid) && !Team_FBI(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        new string[128];
        if(Tazer[playerid] == 0){
	        format(string, sizeof(string), "* %s carga su tazer", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerAttachedObject(playerid, 0, 18642, 6, 0.070212, 0.017647, 0.065603, 0.000000, 185.632217, 264.085418, 1.000000, 1.000000, 1.000000 );
			Att_Obj_Slot_0[playerid] = "Tazer";
			Tazer[playerid] = 1;
		}
		else{
		    format(string, sizeof(string), "* %s guarda su tazer", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Tazer[playerid] = 0;
			RemoveStun(playerid);
		}
        return 1;
    }
    zcmd(bar, playerid, params[])
    {
        if(!IsACop(playerid) && !Team_NG(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "i", params[0]))
        {
            new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
        	GetPlayerPos(playerid, plocx, plocy, plocz);
	        GetPlayerFacingAngle(playerid,ploca);
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            switch(params[0])
            {
                case 1: CreateRoadblock(1459,plocx,plocy,plocz,ploca);
                case 2: CreateRoadblock(978,plocx,plocy,plocz+0.6,ploca);
                case 3: CreateRoadblock(981,plocx,plocy,plocz+0.9,ploca+180);
                case 4: CreateRoadblock(1238,plocx,plocy,plocz+0.2,ploca);
                case 5: CreateRoadblock(1425,plocx,plocy,plocz+0.3,ploca);
                case 6: CreateRoadblock(3265,plocx,plocy,plocz-0.5,ploca);
                case 7: CreateRoadblock(3091,plocx,plocy,plocz+0.5,ploca+180);
                default: Message(playerid, COLOR_GRAD2, "Utilize: (/bar)rera <ID:1-7>");
            }
            GameTextForPlayer(playerid,"~r~barrera ~w~puesta!",3000,1);
        }
        else
		{
            Message(playerid, COLOR_GRAD2, "Utilize: (/bar)rera <ID>");
            Message(playerid, COLOR_GRAD2, "IDs: 1. Pequeña | 2. Mediana | 3. Grande");
            Message(playerid, COLOR_GRAD2, "IDs: 4. Cono | 5. Desvío | 6. Prohibido | 7.Cierre");
            Message(playerid, COLOR_GRAD2, "Utiliza: /qb para quitar la barrera más cercana");
		}
        return 1;
    }
    zcmd(qb, playerid, params[])
    {
        if(Team_NG(playerid) || IsACop(playerid) || PlayerInfo[playerid][pJDS] > 1)
     	{
        	DeleteClosestRoadblock(playerid);
	        GameTextForPlayer(playerid,"~r~barrera ~w~eliminada!",3000,1);
		}
        return 1;
    }
    zcmd(qbs, playerid, params[])
	{
	    if(Team_NG(playerid) || IsACop(playerid)  || PlayerInfo[playerid][pJDS] >= 1)
     	{
			if(PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pJDS] >= 2)
			{
        		DeleteAllRoadblocks(playerid);
	        	return GameTextForPlayer(playerid,"~w~barreras ~r~eliminadas",3000,1);
			}
		}
	    return 1;
	}
    zcmd(multar, playerid, params[])
    {
        if(!IsACop(playerid) && !Team_NG(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 0 && !Team_NG(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "uis[64]", params[0], params[1], params[2]))
        {
            if(params[1] < 0 || params[1] > 6000) return Message(playerid, COLOR_GREY, "El máximo de multa son 8000$");
            if(IsPlayerConnected(params[0]))
			{
			    if(Facturing[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Este jugador ya tiene una petición pendiente");
			    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GRAD2, "Muy lejos de el jugador.");
			    new string[128];
			    if(GetPlayerMoney(params[0]) < params[1])
				{
    				format(string, sizeof(string), "* El infractor no tiene %d$ para pagar la multa.", params[1]);
					return Message(playerid, COLOR_GRAD2, string);
				}
				else
				{
				    ClearChatbox(playerid, 10);
				    Message(params[0], -1, "  {1A5FFF}Estado de San Andreas");
				    format(string, sizeof(string), "  {89CBC1}Demandante: {FFFFFF}%s", PlayerName(playerid));
					Message(params[0], -1, string);
					format(string, sizeof(string), "  {89CBC1}Infracción: {FFFFFF}%s", params[2]);
					Message(params[0], -1, string);
					format(string, sizeof(string), "  {FF1700}Multa: {FFFFFF}%d$", params[1]);
					Message(params[0], -1, string);
					Message(playerid, COLOR_WHITE, "* Espere la respuesta del sujeto");
					Message(params[0], COLOR_WHITE, "Lo han multado. Utilize [/aceptar multa ó /cancelar multa] para pagar la multa.");
					TicketOffer[params[0]] = playerid;
					TicketMoney[params[0]] = params[1];
					Facturing[params[0]] = 1;
				}
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /multar <ID> <precio> <razón>");
        return 1;
    }
	zcmd(saludar, playerid, params[])
  	{
  	    if(!sscanf(params, "u", params[0]))
  	    {
			if(IsPlayerConnected(params[0]))
			{
			    if(playerid != params[0])
			    {
				    if(ProxDetectorS(2.0, playerid, params[0]))
				    {
				        new string[80];
						Saludo_ID[params[0]] = playerid;
						format(string, sizeof string, "* %s ha enviado una peticion de saludo, puedes usar: /aceptar saludo o /cancelar saludo.", PlayerName(playerid));
						Message(params[0], COLOR_WHITE, string);
					} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				} else Message(playerid, COLOR_GRAD2, "No puedes saludarte a ti mismo.");
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /saludar <PlayerID>");
		return 1;
  	}
    zcmd(m, playerid, params[])
    {
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /m <texto>");
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!")
		if(Team_SAMUR(playerid) || IsACop(playerid) || Team_NG(playerid) || Team_LVMD(playerid))
        {
			new string[128];
			format(string, sizeof(string), "(Megáfono) %s: %s",PlayerName(playerid), params[0]);
			ProxDetector(60.0, playerid, string,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE);
        } else Message(playerid, COLOR_GRAD2, "No puedes utilizar este comando.");
        return 1;
    }
    zcmd(aceptar, playerid, params[])
	{
        if(!sscanf(params,"s[64]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"telefono",true) == 0)
            {
                if(NumBuy[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un número!");
                if(NumPrice[playerid] > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "¡No tienes suficiente dinero!");
                format(string, sizeof(string), "* %s compra un número de teléfono", PlayerName(playerid));
                ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                PlayerInfo[playerid][pPnumber] = NumBuy[playerid];
                Earn(NumSeller[playerid], NumPrice[playerid]);
                Bought(playerid, NumPrice[playerid]);
                NumBuy[playerid] = 0;
                NumPrice[playerid] = 0;
                NumSeller[playerid] = 0;
                Facturing[playerid] = 0;
            }
            else if(strcmp(params[0],"saludo",true) == 0)
			{
			    if(Saludo_ID[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un saludo!");
				format(string, sizeof string, "* %s acepta el saludo de %s.", PlayerName(playerid), PlayerName(Saludo_ID[playerid]));
			    ProxDetector(20.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			    ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
			    ApplyAnimation(Saludo_ID[playerid],"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
			    Saludo_ID[playerid] = 999;
			}
			else if(strcmp(params[0],"multa",true) == 0)
			{
			    if(TicketOffer[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie te multado!");
			    format(string, sizeof(string), "* %s paga una multa", PlayerName(playerid));
   				ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
   				format(string, sizeof(string), " {FFC990}%s {FFFFFF}pagó una multa de {3E9EEA}%d$.", PlayerName(playerid), TicketMoney[playerid]);
   				Message(playerid, -1, string);
   				Message(TicketOffer[playerid], -1, string);
   				Bought(playerid, TicketMoney[playerid]);
   				Earn(TicketOffer[playerid], TicketMoney[playerid]);
   				TicketOffer[playerid] = 999;
				TicketMoney[playerid] = 0;
				Facturing[playerid] = 0;
			}
		}
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /aceptar <item>");
            Message(playerid, COLOR_GRAD2, "Items: telefono, multa ");
        }
        return 1;
    }
    zcmd(ccomida, playerid, params[])
	{
            if(Comprarrapida(playerid))
			{
            ShowPlayerDialog(playerid, CCOMIDA,DIALOG_STYLE_LIST,"Comida Rapida 10$ c/u","Hotdog\nHamburguesa", "Aceptar", "Cancelar");
			}else Message(playerid, COLOR_GRAD2, "¡No estas en ningun carrito de comida rapida!");
        return 1;
    }
    zcmd(cancelar, playerid, params[])
    {
        if(!sscanf(params,"s[64]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"telefono",true) == 0)
            {
			    if(NumBuy[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un número!");
                format(string, sizeof(string), "* %s cancela la compra del número de teléfono", PlayerName(playerid));
                ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                NumBuy[playerid] = 0;
                NumPrice[playerid] = 0;
                NumSeller[playerid] = 0;
                Facturing[playerid] = 0;
			}
			else if(strcmp(params[0],"saludo",true) == 0)
			{
			    if(Saludo_ID[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie ha ofrecido saludarte!");
			    MessageEx(Saludo_ID[playerid], playerid, COLOR_GRAD2, "* El saludo ha sido cancelado.");
			    Saludo_ID[playerid] = 999;
			}
			else if(strcmp(params[0],"taxi",true) == 0)
		    {
                if(TaxiCalled[playerid] == 999) return Message(playerid, COLOR_GRAD2, "No has pedido un taxi.");
                TaxiCalled[playerid] = 999;
			    Message(playerid, -1, "{FFFFFF}* Has cancelado el servicio de {FFEC1C}taxi.");
			    format(string, sizeof(string), "Central: %s canceló el taxi.", PlayerName(playerid));
                SendRadioMessage(6,TEAM_RADIO_COLOR, string);
		    }
		    else if(strcmp(params[0],"multa",true) == 0)
		    {
			    if(TicketOffer[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie te multado!");
                format(string, sizeof(string), " {FFC990}%s {FFFFFF}se niega a pagar una multa", PlayerName(playerid));
                ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                format(string, sizeof(string), "* {FFC990}%s {FFFFFF}canceló el pago de una multa de {3E9EEA}%d$.", PlayerName(playerid), TicketMoney[playerid]);
                Message(playerid, -1, string);
                Message(TicketOffer[playerid], -1, string);
                TicketOffer[playerid] = 999;
                TicketMoney[playerid] = 0;
			    Facturing[playerid] = 0;
			}
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /cancelar <item>");
            Message(playerid, COLOR_GRAD2, "Items: telefono, multa");
        }
        return 1;
    }
    zcmd(dni, playerid, params[])
    {
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /dni <id>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        if(ProxDetectorS(8.0, playerid, params[0]))
        {
	        new string[90];
	        ShowDNI(playerid, params[0]);
	        format(string, sizeof(string), "* %s le muestra su DNI a %s.", PlayerName(playerid), PlayerName(params[0]));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
		return 1;
    }
    zcmd(encontrar, playerid, params[])
    {
        if(!Umbrella7(playerid) && !Hitman(playerid)) return Message(playerid, COLOR_GRAD2, "¡No perteneces a esta organización!");
        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood de checkpoints, puedes usar el comando cada 1 minuto, para más info /infocheck");
		if(UsedFind[playerid] > 1) return Message(playerid, TEAM_RADIO_COLOR, "** Información: El Satélite está ocupado, pruebe de aquí unos segundos");
		if(!sscanf(params, "u", params[0]))
		{
		    if(IsPlayerConnected(params[0]))
			{
                new string[128];
			    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
			    Message(playerid, TEAM_RADIO_COLOR, "<< ... Estableciendo conexión ... >>");
			    format(string, sizeof(string), "Conectado con Satélite #%d Cobertura(%d)", sat,luck);
			    Message(playerid, COLOR_WHITE,string);
			    format(string, sizeof(string), "Persona a buscar: %s", PlayerName(params[0]));
			    Message(playerid, COLOR_WHITE,string);
				if(luck > 10 && PlayerInfo[params[0]][pSex] == 1) 		Message(playerid, COLOR_WHITE,"Sexo: Masculino");
				if(luck > 10 && PlayerInfo[params[0]][pSex] == 2) 		Message(playerid, COLOR_WHITE,"Sexo: Femenino");
				if(luck > 13 && IsPlayerInAnyVehicle(params[0])) 		Message(playerid, COLOR_WHITE,"Estado: En Automóvil");
				if(luck > 17 && PlayerInfo[params[0]][pPnumber] != 0)	format(string, sizeof(string), "Teléfono: %d", PlayerInfo[params[0]][pPnumber]); Message(playerid, COLOR_WHITE,string);
    			Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
       			UsedFind[playerid] = reuse_time;
				WhoFind[playerid] = params[0];
				Proponerma[playerid] = 1;
				format(string, sizeof(string), "La información se marcara en el mapa en: %d segundos.", sat+luck);
    			Message(playerid, COLOR_YELLOW,string);
    			format(string, sizeof(string), "El satélite volverá a estar disponible en: %d segundos.", UsedFind[playerid]);
    			Message(playerid, COLOR_YELLOW,string);
    			SetTimerEx("Detective_FindPerson", sat+luck*1000, false, "i", playerid);
    			SetTimerEx("proponerflood",60000,0,"i",playerid);
			} else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /encontrar <jugador>");
        return 1;
    }
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////

    zcmd(guiatelefonica, playerid, params[]){
        if(IsPlayerConnected(playerid))
	    if(PlayerInfo[playerid][pJDS] < 2 && PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GREY, " No autorizado.");
		if(!sscanf(params, "u", params[0]))
		{
		    if(IsPlayerConnected(params[0]))
			{
   				new string[128];
			    Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
			    format(string, sizeof(string), "Persona a buscar: %s", PlayerName(params[0]));
			    Message(playerid, COLOR_WHITE,string);
			    if(PlayerInfo[params[0]][pPnumber] != 0)	format(string, sizeof(string), "Teléfono: %d", PlayerInfo[params[0]][pPnumber]); Message(playerid, COLOR_WHITE,string);
			    Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
       			}
   			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /GuiaTelefonica <jugador>");
        return 1;
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////

    zcmd(rastreartelefono, playerid, params[])
    {
        if(!Umbrella7(playerid) && !Hitman(playerid) && !TriadasTeam(playerid)) return Message(playerid, COLOR_GRAD2, "¡No perteneces a esta organización!");
		if(UsedFind[playerid] > 1) return Message(playerid, TEAM_RADIO_COLOR, "** Información: El Satélite está ocupado, pruebe de aquí unos segundos");
		if(!sscanf(params, "u", params[0]))
		{
		    if(IsPlayerConnected(params[0]))
			{
   				new string[128];
			    Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
			    format(string, sizeof(string), "Persona a buscar: %s", PlayerName(params[0]));
			    Message(playerid, COLOR_WHITE,string);
			    if(PlayerInfo[params[0]][pPnumber] != 0)	format(string, sizeof(string), "Teléfono: %d", PlayerInfo[params[0]][pPnumber]); Message(playerid, COLOR_WHITE,string);
			    Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
       			}
   			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /RastrearTelefono <jugador>");
        return 1;
    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    zcmd(encontrarveh, playerid, params[])
    {
        if(!Umbrella7(playerid)) return Message(playerid, COLOR_GRAD2, "No perteneces a esta organización!");
        if(UsedFind[playerid] > 1) return Message(playerid, TEAM_RADIO_COLOR, "** Información: El Satélite está ocupado, pruebe de aquí unos segundos");
		if(!sscanf(params, "i", params[0]))
		{
            new string[128];
		    if(params[0] < 0 || params[0] > VEH) return Message(playerid, COLOR_GRAD2, "Error ID.");
		    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
		    Message(playerid, TEAM_RADIO_COLOR, "<< ... Estableciendo conexión ... >>");
		    format(string, sizeof(string), "Conectado con Satélite #%d Cobertura(%d)", sat,luck);
		    Message(playerid, COLOR_WHITE,string);
		    format(string, sizeof(string), "ID Vehículo: %d",params[0]);
		    Message(playerid, COLOR_WHITE,string);
			if(luck > 13)
			{
   				format(string, sizeof(string), "Modelo Vehículo: %s", GetVehicleFriendlyName(params[0]));
		    	Message(playerid, COLOR_WHITE,string);
			}
   			Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
			UsedFind[playerid] = reuse_time;
			WhoFind[playerid] = params[0];
			format(string, sizeof(string), "La información se marcara en el mapa en: %d segundos.", sat+luck);
	   		Message(playerid, COLOR_YELLOW,string);
	   		format(string, sizeof(string), "El satélite volverá a estar disponible en: %d segundos.", UsedFind[playerid]);
	   		Message(playerid, COLOR_YELLOW,string);
	   		SetTimerEx("Detective_FindCar", sat+luck*1000, false, "i", playerid);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /encontrar <vehículo>");
        return 1;
    }
    zcmd(papeles, playerid, params[])
    {
        if(PlayerInfo[playerid][pPcarkey] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes vehículo.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V_Documents(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /papeles <jugador>");
        return 1;
    }
    zcmd(papeles2, playerid, params[])
    {
        if(PlayerInfo[playerid][pPcarkey2] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes vehículo.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V_Documents2(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /papeles2 <jugador>");
        return 1;
    }
    zcmd(papeles3, playerid, params[])
    {
        if(PlayerInfo[playerid][pCarPremium] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes vehículo premium.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V2_Documents(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /papeles3 <jugador>");
        return 1;
    }
    zcmd(papeles4, playerid, params[])
    {
        if(PlayerInfo[playerid][pCarPremium2] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes vehículo premium.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V3_Documents(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /papeles4 <jugador>");
        return 1;
    }
	// md:admin ============================================================================================================================
    zcmd(conse, playerid, params[])
    {
        if (PlayerInfo[playerid][pJDS] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if (GetPlayerState(playerid) == 2)
        {
			return SetVehiclePos(GetPlayerVehicleID(playerid), 552.4600,-1275.2721,17.2482);
		}
		else
		{
			SetPosEx(playerid, 552.4600,-1275.2721,17.2482, 0, 0 ,0);
			return 1;
		}
    }
	zcmd(aengineon, playerid, params[])
	{
		if(PlayerInfo[playerid][pJDS] > 2)
		{
		    new engine,lights,alarm,doors,bonnet,boot,objective;
		    GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		    engineOn[GetPlayerVehicleID(playerid)] = true;
			return SetVehicleParamsEx(GetPlayerVehicleID(playerid),1,lights,alarm,doors,bonnet,boot,objective);
		}
		return 1;
	}
	zcmd(carstat, playerid, params[])
	{
	    new string[64], idcar = GetPlayerVehicleID(playerid);
		format(string, sizeof(string), "Modelo: %s - Dueño: %s(Owned:%d) - ID: %d", CarInfo[idcar][cName],CarInfo[idcar][cOwner],CarInfo[idcar][cOwned],idcar);
		return Message(playerid, COLOR_GRAD2, string);
	}
    zcmd(apark, playerid, params[])
	{
	    new Float:x,Float:y,Float:z,Float:a;

	    if(PlayerInfo[playerid][pJDS] >= 1)
		{
		    new idcar = GetPlayerVehicleID(playerid);
		    GetVehiclePos(idcar, x, y, z);  GetVehicleZAngle(idcar, a);
			CarInfo[idcar][cLocationx] = x;
				CarInfo[idcar][cLocationy] = y;
					CarInfo[idcar][cLocationz] = z;
						CarInfo[idcar][cAngle] = a;
			Message(playerid, COLOR_GRAD2, " Nuevas coordenadas guardadas. ¡Ahora el vehículo aparecerá aqui!");
		} else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    return 1;
 	}
    zcmd(pagar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(PlayerInfo[playerid][pConnectTime] < 2) return Message(playerid, COLOR_GREY, "No puedes usar el comando hasta pasado 3 horas");
        if(!sscanf(params, "ui", params[0], params[1]))
        {
            if(params[1] > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "No posees esa cantidad.");
            if(params[1] < 1 || params[1] > 5000) return Message(playerid, COLOR_GRAD2, "Máx: 5000$");
            if(IsPlayerConnected(params[0]))
            {
                if(ProxDetectorS(5.0, playerid, params[0]))
                {
                    new string[128];
					Bought(playerid, params[1]);
					Earn(params[0], params[1]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* %s saca su billetera y paga %d$ a %s", PlayerName(playerid), params[1], PlayerName(params[0]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /pagar <jugador> <cantidad>");
        return 1;
    }
	zcmd(llenar, playerid, params[])
    {
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehiculo");
        if(GetPlayerMoney(playerid) < 1) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
        if(Refueling[playerid] > -1) return Message(playerid, COLOR_GRAD2, "Ya está llenando el vehículo!");
        if(IsAtGasStation(playerid))
		{
  			if(Gas[GetPlayerVehicleID(playerid)] < 230)
	    	{
      			return ShowPlayerDialog(playerid,GASOLINA_DIALOG,DIALOG_STYLE_LIST,"Gasolinera - Tipo de gasolina","Sin Plomo 95\nSin Plomo 98\nGasoil\nBiodiesel","Comprar","Atras");
			}
			else GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~Vehiculo LLenado",2000,3);
		}
		else Message(playerid,COLOR_GREY,"¡No estás en una estación de gasolina!");
        return 1;
    }
    zcmd(pcu, playerid, params[]){
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehiculo");
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
			SetTimerEx("MM_Exam", 10000, false, "i", playerid);
			Message(playerid, -1, "* {4C9CB6}Prendiendo PCU del Vehiculo.");
		} else Message(playerid, COLOR_GREY, "No eres el conductor.");
		return 1;
	}
    zcmd(v, playerid, params[])
    {
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[128], idcar = GetPlayerVehicleID(playerid), keycar = PlayerInfo[playerid][pPcarkey], keycar2 = PlayerInfo[playerid][pPcarkey2];
            new engine,lights,alarm,doors,bonnet,boot,objective, Float:x, Float:y, Float:z, Float:a, sendername[MAX_PLAYER_NAME];
            GetVehicleParamsEx(idcar, engine,lights,alarm,doors,bonnet,boot,objective);
            if(strcmp(params[0],"motor",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	            if(gEngine[playerid] == 1) { return 1; }
				if(NoBattery(idcar)) return Message(playerid, COLOR_GRAD2, "Vehículo sin batería!");
				if(engineOn[idcar] == 0)
				{
				    if(IsABike(idcar) || IsATrain(idcar) || IsAPizzabike(idcar) || IsASweeper(idcar) || UnusedCar(idcar) || IsACamion(idcar)) { return 1; }
					if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) { return 1; }
					if(Hire_Vehicle(idcar) && HireKey[playerid] != idcar) { return 1; }
					if(IsAnOwnableCar(idcar)) { if(PlayerInfo[playerid][pPcarkey] == idcar || PlayerInfo[playerid][pCarPremium] == idcar || PlayerInfo[playerid][pCarPremium2] == idcar || PlayerInfo[playerid][pPcarkey2] == idcar) { } else { return 1; } }

					format(string, sizeof(string), "* %s gira la llave del %s.", PlayerName(playerid),GetVehicleFriendlyName(idcar));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetTimerEx("StartingTheVehicle",2500,0,"i",playerid);
					Message(playerid, COLOR_GREY, "Encendiendo motor...");
					gEngine[playerid] = 1;
					return 1;
				}
				else if(engineOn[idcar] == 1)
				{
				    if(IsABike(idcar) || IsATrain(idcar) || IsAPizzabike(idcar) || IsASweeper(idcar) || UnusedCar(idcar) || IsACamion(idcar)) { return 1; }
					if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) { return 1; }
					if(Hire_Vehicle(idcar) && HireKey[playerid] != idcar) { return 1; }
					if(IsAnOwnableCar(idcar)) { if(PlayerInfo[playerid][pPcarkey] == idcar || PlayerInfo[playerid][pCarPremium] == idcar || PlayerInfo[playerid][pCarPremium2] == idcar || PlayerInfo[playerid][pPcarkey2] == idcar) { } else { return 1; } }

					format(string, sizeof(string), "* %s apaga el motor del %s.", PlayerName(playerid), GetVehicleFriendlyName(idcar));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetVehicleParamsEx(idcar,0,lights,alarm,doors,bonnet,boot,objective);
					Message(playerid, COLOR_GREY, "Apagando motor...");
					engineOn[idcar] = false;
					gEngine[playerid] = 0;
					return 1;
				}
	        }
	        ////sistema de luces intermintente
				if(strcmp(params[0],"intermitentes",true) == 0)
				{
        		GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
        		SendClientMessage(playerid, -1, "Recuerda que cada vez que uses ese comando las luces tienen que estar encendidas para funcionar");
        		if(lights == VEHICLE_PARAMS_OFF)
        		{
        		SendClientMessage(playerid, -1, "Las luces deben estar encendidas!");
        		return 1;
        		}
        		if(PLuces[playerid] == 0)
				{
        		LucesIntermitentes(playerid);
        		PLuces[playerid] = 1;
				}
				else if(PLuces[playerid] == 1)
				{
        		ApagarLucesIntermitentes(playerid);
       	 		PLuces[playerid] = 0;
				}
       		 return 1;
			}
	        else if(strcmp(params[0],"luces",true) == 0)
			{
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	            if(LightsOn[idcar] == 0)
	            {
	                SetVehicleParamsEx(idcar,engine,1,alarm,doors,bonnet,boot,objective);
	                LightsOn[idcar] = 1;
	                format(string, sizeof(string), "* %s apreta el boton y enciende las luces del %s", PlayerName(playerid),GetVehicleFriendlyName(idcar));
                    ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else if(LightsOn[idcar] == 1)
	            {
                    SetVehicleParamsEx(idcar,engine,0,alarm,doors,bonnet,boot,objective);
                    LightsOn[idcar] = 0;
                    format(string, sizeof(string), "* %s apreta el boton y Apaga las luces del %s", PlayerName(playerid),GetVehicleFriendlyName(idcar));
                    ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            return 1;
	        }
	        else if(strcmp(params[0],"capo",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	            if(IsABike(idcar) || IsATrain(idcar) || IsAPizzabike(idcar) || IsASweeper(idcar) || IsAPlane(idcar)) { return 1; }
	            if(BonnetOpen[idcar] == 0)
	            {
	                SetVehicleParamsEx(idcar,engine,lights,alarm,doors,1,boot,objective);
	                BonnetOpen[idcar] = 1;
	                format(string, sizeof(string), "* %s apreta el boton y abre el Capo del %s", PlayerName(playerid),GetVehicleFriendlyName(idcar));
                    ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else if(BonnetOpen[idcar] == 1)
	            {
                    SetVehicleParamsEx(idcar,engine,lights,alarm,doors,0,boot,objective);
                    BonnetOpen[idcar] = 0;
                    format(string, sizeof(string), "* %s apreta el boton y cierra el Capo del %s", PlayerName(playerid),GetVehicleFriendlyName(idcar));
                    ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
                return 1;
	        }
	        else if(strcmp(params[0],"maletero",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	            if(IsABike(idcar) || IsATrain(idcar) || IsAPizzabike(idcar) || IsASweeper(idcar) || IsAPlane(idcar)) { return 1; }
	            if(BootOpen[idcar] == 0)
	            {
	                SetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,1,objective);
	                BootOpen[idcar] = 1;
	                format(string, sizeof(string), "* %s apreta el boton y abre el Maletero del %s", sendername,GetVehicleFriendlyName(idcar));
                    ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else if(BootOpen[idcar] == 1)
	            {
                    SetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,0,objective);
                    BootOpen[idcar] = 0;
                    format(string, sizeof(string), "* %s apreta el boton y cierra el Maletero del %s", sendername,GetVehicleFriendlyName(idcar));
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            return 1;
	        }
	        else if(strcmp(params[0],"estacionar",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
				if(IsAnOwnableCar(idcar))
				{
				    if(PlayerInfo[playerid][pPcarkey] == 9999) return Message(playerid, COLOR_GREY, "Usted no tiene un coche.");
					if(idcar == PlayerInfo[playerid][pPcarkey])
					{
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						CarInfo[idcar][cLocationx] = x;
						CarInfo[idcar][cLocationy] = y;
						CarInfo[idcar][cLocationz] = z;
						CarInfo[idcar][cAngle] = a;
						Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora el vehículo aparecerá aqui!");
                        OnPropUpdate(2);
						return 1;
 					}
 					else return Message(playerid, COLOR_GREY, "No estás en tu vehículo!");
				}
	        }
	        else if(strcmp(params[0],"estacionar2",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
				if(IsAnOwnableCar(idcar))
				{
				    if(PlayerInfo[playerid][pPcarkey2] == 9999) return Message(playerid, COLOR_GREY, "Usted no tiene un coche.");
					if(idcar == PlayerInfo[playerid][pPcarkey2])
					{
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						CarInfo[idcar][cLocationx] = x;
						CarInfo[idcar][cLocationy] = y;
						CarInfo[idcar][cLocationz] = z;
						CarInfo[idcar][cAngle] = a;
						Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora el vehículo aparecerá aqui!");
                        OnPropUpdate(2);
						return 1;
 					}
 					else return Message(playerid, COLOR_GREY, "No estás en tu vehículo!");
				}
	        }
	        else if(strcmp(params[0],"estacionar3",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	         	if(IsAnOwnableCar(idcar))
	         	{
	         	    if(PlayerInfo[playerid][pCarPremium] == 9999) return Message(playerid, COLOR_GREY, "Usted no tiene un coche premium.");
					if(idcar == PlayerInfo[playerid][pCarPremium])
	         	    {
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						CarInfo[idcar][cLocationx] = x;
						CarInfo[idcar][cLocationy] = y;
						CarInfo[idcar][cLocationz] = z;
						CarInfo[idcar][cAngle] = a;
						Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora su vehículo premium aparecerá aqui!");
                        OnPropUpdate(2);
						return 1;
 					}
 					else return Message(playerid, COLOR_GREY, "No estás en tu vehículo!");
				}
	        }
         else if(strcmp(params[0],"estacionar4",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	         	if(IsAnOwnableCar(idcar))
	         	{
	         	    if(PlayerInfo[playerid][pCarPremium2] == 9999) return Message(playerid, COLOR_GREY, "Usted no tiene el segundo coche premium.");
					if(idcar == PlayerInfo[playerid][pCarPremium2])
	         	    {
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						CarInfo[idcar][cLocationx] = x;
						CarInfo[idcar][cLocationy] = y;
						CarInfo[idcar][cLocationz] = z;
						CarInfo[idcar][cAngle] = a;
						Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora su vehículo premium aparecerá aqui!");
                        OnPropUpdate(2);
						return 1;
 					}
 					else return Message(playerid, COLOR_GREY, "No estás en tu vehículo!");
				}
	        }
	        else if(strcmp(params[0],"seguro",true) == 0)
	        {
                if(PlayerInfo[playerid][pPcarkey] != 9999)
                {
                    GetVehiclePos(keycar, x, y, z);
                    if(PlayerToPoint(12.0,playerid, x, y, z))
                    {
	                    if(CarInfo[keycar][cLock] == 1)
	                    {
							SetVehicleParamsEx(keycar,engine,lights,alarm,0,bonnet,boot,objective);
							Message(playerid, COLOR_GRAD2, "Vehiculo Abierto");
							CarInfo[keycar][cLock] = 0;
							ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
							format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), CarInfo[keycar][cName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
						}
						else if(CarInfo[keycar][cLock] == 0)
						{
						    SetVehicleParamsEx(keycar,engine,lights,alarm,1,bonnet,boot,objective);
							Message(playerid, COLOR_GRAD2, "Vehiculo Cerrado");
							CarInfo[keycar][cLock] = 1;
							ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), CarInfo[keycar][cName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
						}
					} else return Message(playerid, COLOR_GREY, "No hay señal!");
                }
                else return Message(playerid, COLOR_GREY, "Usted no tiene un vehículo.");
	        }
	        else if(strcmp(params[0],"seguro2",true) == 0)
	        {
	            if(PlayerInfo[playerid][pPcarkey2] != 9999)
	            {
					GetVehiclePos(keycar2, x, y, z);
	                if(PlayerToPoint(12.0,playerid, x, y, z))
	                {
	                    if(CarInfo[keycar2][cLock] == 1)
	                    {
	                    	SetVehicleParamsEx(keycar2,engine,lights,alarm,0,bonnet,boot,objective);
	                    	Message(playerid, COLOR_GRAD2, "Vehiculo Abierto");
	                    	CarInfo[keycar2][cLock] = 0;
	                    	ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
	                    	format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid),CarInfo[keycar2][cName]);
	                    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                    	return 1;
						}
						else if(CarInfo[keycar2][cLock] == 0)
						{
						    SetVehicleParamsEx(keycar2,engine,lights,alarm,1,bonnet,boot,objective);
							Message(playerid, COLOR_GRAD2, "Vehiculo Cerrado");
							CarInfo[keycar2][cLock] = 1;
							ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), CarInfo[keycar2][cName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
						}
					} else return Message(playerid, COLOR_GREY, "No hay señal!");
                }
                else return Message(playerid, COLOR_GREY, "Usted no tiene un vehículo.");
	        }
	        else if(strcmp(params[0],"seguro3",true) == 0)
	        {
	            new keycar3 = PlayerInfo[playerid][pCarPremium];

             if(PlayerInfo[playerid][pCarPremium] != 9999)
	            {
					GetVehiclePos(keycar3, x, y, z);
	                if(PlayerToPoint(12.0,playerid, x, y, z))
	                {
	                    if(CarInfo[keycar3][cLock] == 1)
	                    {
	                    	SetVehicleParamsEx(keycar3,engine,lights,alarm,0,bonnet,boot,objective);
	                    	Message(playerid, COLOR_GRAD2, "Vehiculo Abierto");
	                    	CarInfo[keycar3][cLock] = 0;
	                    	ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
	                    	format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid),CarInfo[keycar3][cName]);
	                    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                    	return 1;
						}
						else if(CarInfo[keycar3][cLock] == 0)
						{
						    SetVehicleParamsEx(keycar3,engine,lights,alarm,1,bonnet,boot,objective);
							Message(playerid, COLOR_GRAD2, "Vehiculo Cerrado");
							CarInfo[keycar3][cLock] = 1;
							ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid),CarInfo[keycar3][cName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
						}
					} else return Message(playerid, COLOR_GREY, "No hay señal!");
                }
                else return Message(playerid, COLOR_GREY, "Usted no tiene un vehículo.");
	        }
         else if(strcmp(params[0],"seguro4",true) == 0)
	        {
	            new keycar4 = PlayerInfo[playerid][pCarPremium2];

             if(PlayerInfo[playerid][pCarPremium2] != 9999)
	            {
					GetVehiclePos(keycar4, x, y, z);
	                if(PlayerToPoint(12.0,playerid, x, y, z))
	                {
	                    if(CarInfo[keycar4][cLock] == 1)
	                    {
	                    	SetVehicleParamsEx(keycar4,engine,lights,alarm,0,bonnet,boot,objective);
	                    	Message(playerid, COLOR_GRAD2, "Vehiculo Abierto");
	                    	CarInfo[keycar4][cLock] = 0;
	                    	ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
	                    	format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid),CarInfo[keycar4][cName]);
	                    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                    	return 1;
						}
						else if(CarInfo[keycar4][cLock] == 0)
						{
						    SetVehicleParamsEx(keycar4,engine,lights,alarm,1,bonnet,boot,objective);
							Message(playerid, COLOR_GRAD2, "Vehiculo Cerrado");
							CarInfo[keycar4][cLock] = 1;
							ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid),CarInfo[keycar4][cName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
						}
					} else return Message(playerid, COLOR_GREY, "No hay señal!");
                }
                else return Message(playerid, COLOR_GREY, "Usted no tiene un vehículo.");
	        }
	        else if(strcmp(params[0],"vender",true) == 0)
	        {
	            if(IsAtDealership(playerid))
	            {
	                if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey])
	                {
	                    if(PlayerInfo[playerid][pPcarkey] == 9999) return Message(playerid, COLOR_GRAD2,"No tienes vehículo!");
	                    new ownvehkey;
	                    if(idcar == PlayerInfo[playerid][pPcarkey]) ownvehkey = PlayerInfo[playerid][pPcarkey];
	                    else return Message(playerid, COLOR_GRAD2,"No estás en tu vehículo!");
	                    if(strcmp(sendername, CarInfo[ownvehkey][cOwner], true) == 0)
	                    {
	                        GetPlayerName(playerid, sendername, sizeof(sendername));
	                        new carsellprice = CarInfo[ownvehkey][cValue] / 4 * 3;
	                        CarInfo[ownvehkey][cOwned] = 0;
	                        strmid(CarInfo[ownvehkey][cOwner], "Concesionario", 0, strlen("Concesionario"), 999);
                 			strmid(CarInfo[ownvehkey][cName], GetVehicleFriendlyName(ownvehkey), 0, strlen(GetVehicleFriendlyName(ownvehkey)), 999);
                            strmid(CarInfo[ownvehkey][cPlate], "For Sale", 0, strlen("For Sale"), 9999);
                            SetVehicleNumberPlate(ownvehkey,CarInfo[ownvehkey][cPlate]);
							Earn(playerid,carsellprice);
	                        format(string, sizeof(string), "* Has vendido tu vehículo por %d$", carsellprice);
	                        Message(playerid, COLOR_GREEN, string);
	                        GetVehiclePos(ownvehkey, x, y, z);
	                        GetVehicleZAngle(ownvehkey, a);
	                        CarInfo[ownvehkey][cLocationx] = x;
	                        CarInfo[ownvehkey][cLocationy] = y;
	                        CarInfo[ownvehkey][cLocationz] = z;
	                        CarInfo[ownvehkey][cAngle] = a;
                            CarInfo[ownvehkey][cBattery] = 0;
                            CarInfo[ownvehkey][cGas] = 0;
                            CarInfo[ownvehkey][cAlarm] = 0;
                            CarInfo[ownvehkey][cLock] = 0;
                            CarInfo[ownvehkey][cSpoiler] = 0;
                            CarInfo[ownvehkey][cHood] = 0;
                            CarInfo[ownvehkey][cRoof] = 0;
                            CarInfo[ownvehkey][cSideskirt] = 0;
                            CarInfo[ownvehkey][cNitro] = 0;
                            CarInfo[ownvehkey][cLamps] = 0;
                            CarInfo[ownvehkey][cExhaust] = 0;
                            CarInfo[ownvehkey][cWheel] = 0;
                            CarInfo[ownvehkey][cHydraulics] = 0;
                            CarInfo[ownvehkey][cPaintjob] = 0;
                            CarInfo[ownvehkey][cNeon] = 0;
                            CarInfo[ownvehkey][cFrontBumper] = 0;
                            CarInfo[ownvehkey][cVents] = 0;
                            CarInfo[ownvehkey][cEmbargo] = 0;
                            CarInfo[ownvehkey][cMulta] = 0;
                            Till(6,-CarInfo[ownvehkey][cValue] / 4 * 3);
                            Till(7,-CarInfo[ownvehkey][cValue] / 4 * 3);
                            Till(8,-CarInfo[ownvehkey][cValue] / 4 * 3);
	                        PlayerInfo[playerid][pPcarkey] = 9999;
	                        RemovePlayerFromVehicle(playerid);
	                        RespawnVehicle(idcar);
	                        TogglePlayerControllable(playerid, 1);
	                        OnPropUpdate(2);
	                        OnPlayerUpdateTime(playerid);
	                        return 1;
	                    } else return Message(playerid, COLOR_GRAD2,"Este vehículo no está a tu nombre!");
	                } else return Message(playerid, COLOR_GREY, "  Usted tiene que sentarse en su propio coche para venderlo! ");
	            } else return Message(playerid, COLOR_GREY, "¡No estás en un concesionario!");
			}
 /////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 else if(strcmp(params[0],"vender3",true) == 0)
        {
            if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_RED2, "Necesitas ser premium");
            if(IsAtDealership(playerid))
	            {
	                if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium])
	                {
	                    if(PlayerInfo[playerid][pCarPremium] == 9999) return Message(playerid, COLOR_GRAD2,"No tienes vehículo!");
	                    new ownvehkey3;
	                    if(idcar == PlayerInfo[playerid][pCarPremium]) ownvehkey3 = PlayerInfo[playerid][pCarPremium];
	                    else return Message(playerid, COLOR_GRAD2,"No estás en tu vehículo!");
	                    if(strcmp(sendername, CarInfo[ownvehkey3][cOwner], true) == 0)
						{
						    GetPlayerName(playerid, sendername, sizeof(sendername));
	                        new carsellprice = CarInfo[ownvehkey3][cValue] / 4 * 3;
	                        CarInfo[ownvehkey3][cOwned] = 0;
	                        strmid(CarInfo[ownvehkey3][cOwner], "Concesionario", 0, strlen("Concesionario"), 999);
                 			strmid(CarInfo[ownvehkey3][cName], GetVehicleFriendlyName(ownvehkey3), 0, strlen(GetVehicleFriendlyName(ownvehkey3)), 999);
                            strmid(CarInfo[ownvehkey3][cPlate], "For Sale", 0, strlen("For Sale"), 9999);
                            SetVehicleNumberPlate(ownvehkey3,CarInfo[ownvehkey3][cPlate]);
							Earn(playerid,carsellprice);
	                        format(string, sizeof(string), "* Has vendido tu vehículo por %d$", carsellprice);
	                        Message(playerid, COLOR_GREEN, string);
	                        GetVehiclePos(ownvehkey3, x, y, z);
	                        GetVehicleZAngle(ownvehkey3, a);
	                        CarInfo[ownvehkey3][cLocationx] = x;
	                        CarInfo[ownvehkey3][cLocationy] = y;
	                        CarInfo[ownvehkey3][cLocationz] = z;
	                        CarInfo[ownvehkey3][cAngle] = a;
                            CarInfo[ownvehkey3][cBattery] = 0;
                            CarInfo[ownvehkey3][cGas] = 0;
                            CarInfo[ownvehkey3][cAlarm] = 0;
                            CarInfo[ownvehkey3][cLock] = 0;
                            CarInfo[ownvehkey3][cSpoiler] = 0;
                            CarInfo[ownvehkey3][cHood] = 0;
                            CarInfo[ownvehkey3][cRoof] = 0;
                            CarInfo[ownvehkey3][cSideskirt] = 0;
                            CarInfo[ownvehkey3][cNitro] = 0;
                            CarInfo[ownvehkey3][cLamps] = 0;
                            CarInfo[ownvehkey3][cExhaust] = 0;
                            CarInfo[ownvehkey3][cWheel] = 0;
                            CarInfo[ownvehkey3][cHydraulics] = 0;
                            CarInfo[ownvehkey3][cPaintjob] = 0;
                            CarInfo[ownvehkey3][cNeon] = 0;
                            CarInfo[ownvehkey3][cFrontBumper] = 0;
                            CarInfo[ownvehkey3][cVents] = 0;
                            CarInfo[ownvehkey3][cEmbargo] = 0;
                            CarInfo[ownvehkey3][cMulta] = 0;
	                        PlayerInfo[playerid][pCarPremium] = 9999;
	                        RemovePlayerFromVehicle(playerid);
	                        Till(6,-CarInfo[ownvehkey3][cValue] / 4 * 3);
                            Till(7,-CarInfo[ownvehkey3][cValue] / 4 * 3);
                            Till(8,-CarInfo[ownvehkey3][cValue] / 4 * 3);
	                        RespawnVehicle(idcar);
	                        TogglePlayerControllable(playerid, 1);
	                        OnPropUpdate(2);
	                        OnPlayerUpdateTime(playerid);
	                        return 1;
	                    } else return Message(playerid, COLOR_GRAD2,"Este vehículo no está a tu nombre!");
					} else return Message(playerid, COLOR_GREY, "  Usted tiene que sentarse en su propio coche para venderlo! ");
				} else return Message(playerid, COLOR_GREY, "¡No estás en un concesionario!");
			}

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
else if(strcmp(params[0],"vender4",true) == 0)
        {
            if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_RED2, "Necesitas ser premium");
            if(IsAtDealership(playerid))
	            {
	                if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium2])
	                {
	                    if(PlayerInfo[playerid][pCarPremium2] == 9999) return Message(playerid, COLOR_GRAD2,"No tienes vehículo!");
	                    new ownvehkey4;
	                    if(idcar == PlayerInfo[playerid][pCarPremium2]) ownvehkey4 = PlayerInfo[playerid][pCarPremium2];
	                    else return Message(playerid, COLOR_GRAD2,"No estás en tu vehículo!");
	                    if(strcmp(sendername, CarInfo[ownvehkey4][cOwner], true) == 0)
						{
						    GetPlayerName(playerid, sendername, sizeof(sendername));
	                        new carsellprice = CarInfo[ownvehkey4][cValue] / 4 * 3;
	                        CarInfo[ownvehkey4][cOwned] = 0;
	                        strmid(CarInfo[ownvehkey4][cOwner], "Concesionario", 0, strlen("Concesionario"), 999);
                 			strmid(CarInfo[ownvehkey4][cName], GetVehicleFriendlyName(ownvehkey4), 0, strlen(GetVehicleFriendlyName(ownvehkey4)), 999);
                            strmid(CarInfo[ownvehkey4][cPlate], "For Sale", 0, strlen("For Sale"), 9999);
                            SetVehicleNumberPlate(ownvehkey4,CarInfo[ownvehkey4][cPlate]);
							Earn(playerid,carsellprice);
	                        format(string, sizeof(string), "* Has vendido tu vehículo por %d$", carsellprice);
	                        Message(playerid, COLOR_GREEN, string);
	                        GetVehiclePos(ownvehkey4, x, y, z);
	                        GetVehicleZAngle(ownvehkey4, a);
	                        CarInfo[ownvehkey4][cLocationx] = x;
	                        CarInfo[ownvehkey4][cLocationy] = y;
	                        CarInfo[ownvehkey4][cLocationz] = z;
	                        CarInfo[ownvehkey4][cAngle] = a;
                            CarInfo[ownvehkey4][cBattery] = 0;
                            CarInfo[ownvehkey4][cGas] = 0;
                            CarInfo[ownvehkey4][cAlarm] = 0;
                            CarInfo[ownvehkey4][cLock] = 0;
                            CarInfo[ownvehkey4][cSpoiler] = 0;
                            CarInfo[ownvehkey4][cHood] = 0;
                            CarInfo[ownvehkey4][cRoof] = 0;
                            CarInfo[ownvehkey4][cSideskirt] = 0;
                            CarInfo[ownvehkey4][cNitro] = 0;
                            CarInfo[ownvehkey4][cLamps] = 0;
                            CarInfo[ownvehkey4][cExhaust] = 0;
                            CarInfo[ownvehkey4][cWheel] = 0;
                            CarInfo[ownvehkey4][cHydraulics] = 0;
                            CarInfo[ownvehkey4][cPaintjob] = 0;
                            CarInfo[ownvehkey4][cNeon] = 0;
                            CarInfo[ownvehkey4][cFrontBumper] = 0;
                            CarInfo[ownvehkey4][cVents] = 0;
                            CarInfo[ownvehkey4][cEmbargo] = 0;
                            CarInfo[ownvehkey4][cMulta] = 0;
	                        PlayerInfo[playerid][pCarPremium2] = 9999;
	                        RemovePlayerFromVehicle(playerid);
	                        Till(6,-CarInfo[ownvehkey4][cValue] / 4 * 3);
                            Till(7,-CarInfo[ownvehkey4][cValue] / 4 * 3);
                            Till(8,-CarInfo[ownvehkey4][cValue] / 4 * 3);
	                        RespawnVehicle(idcar);
	                        TogglePlayerControllable(playerid, 1);
	                        OnPropUpdate(2);
	                        OnPlayerUpdateTime(playerid);
	                        return 1;
	                    } else return Message(playerid, COLOR_GRAD2,"Este vehículo no está a tu nombre!");
					} else return Message(playerid, COLOR_GREY, "  Usted tiene que sentarse en su propio coche para venderlo! ");
				} else return Message(playerid, COLOR_GREY, "¡No estás en un concesionario!");
			}

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			else if(strcmp(params[0],"vender2",true) == 0)
	        {
	            if(IsAtDealership(playerid))
	            {
	                if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2])
	                {
	                    if(PlayerInfo[playerid][pPcarkey2] == 9999) return Message(playerid, COLOR_GRAD2,"No tienes vehículo!");
	                    new ownvehkey2;
	                    if(idcar == PlayerInfo[playerid][pPcarkey2]) ownvehkey2 = PlayerInfo[playerid][pPcarkey2];
	                    else return Message(playerid, COLOR_GRAD2,"No estás en tu vehículo!");
	                    if(strcmp(sendername, CarInfo[ownvehkey2][cOwner], true) == 0)
	                    {
	                        GetPlayerName(playerid, sendername, sizeof(sendername));
	                        new carsellprice = CarInfo[ownvehkey2][cValue] / 4 * 3;
	                        CarInfo[ownvehkey2][cOwned] = 0;
	                        strmid(CarInfo[ownvehkey2][cOwner], "Concesionario", 0, strlen("Concesionario"), 999);
                 			strmid(CarInfo[ownvehkey2][cName], GetVehicleFriendlyName(ownvehkey2), 0, strlen(GetVehicleFriendlyName(ownvehkey2)), 999);
                            strmid(CarInfo[ownvehkey2][cPlate], "For Sale", 0, strlen("For Sale"), 9999);
                            SetVehicleNumberPlate(ownvehkey2,CarInfo[ownvehkey2][cPlate]);
							Earn(playerid,carsellprice);
	                        format(string, sizeof(string), "* Has vendido tu vehículo por %d$", carsellprice);
	                        Message(playerid, COLOR_GREEN, string);
	                        GetVehiclePos(ownvehkey2, x, y, z);
	                        GetVehicleZAngle(ownvehkey2, a);
	                        CarInfo[ownvehkey2][cLocationx] = x;
	                        CarInfo[ownvehkey2][cLocationy] = y;
	                        CarInfo[ownvehkey2][cLocationz] = z;
	                        CarInfo[ownvehkey2][cAngle] = a;
                            CarInfo[ownvehkey2][cBattery] = 0;
                            CarInfo[ownvehkey2][cGas] = 0;
                            CarInfo[ownvehkey2][cAlarm] = 0;
                            CarInfo[ownvehkey2][cLock] = 0;
                            CarInfo[ownvehkey2][cSpoiler] = 0;
                            CarInfo[ownvehkey2][cHood] = 0;
                            CarInfo[ownvehkey2][cRoof] = 0;
                            CarInfo[ownvehkey2][cSideskirt] = 0;
                            CarInfo[ownvehkey2][cNitro] = 0;
                            CarInfo[ownvehkey2][cLamps] = 0;
                            CarInfo[ownvehkey2][cExhaust] = 0;
                            CarInfo[ownvehkey2][cWheel] = 0;
                            CarInfo[ownvehkey2][cHydraulics] = 0;
                            CarInfo[ownvehkey2][cPaintjob] = 0;
                            CarInfo[ownvehkey2][cNeon] = 0;
                            CarInfo[ownvehkey2][cFrontBumper] = 0;
                            CarInfo[ownvehkey2][cVents] = 0;
                            CarInfo[ownvehkey2][cEmbargo] = 0;
                            CarInfo[ownvehkey2][cMulta] = 0;
	                        PlayerInfo[playerid][pPcarkey2] = 9999;
	                        RemovePlayerFromVehicle(playerid);
	                        Till(6,-CarInfo[ownvehkey2][cValue] / 4 * 3);
                            Till(7,-CarInfo[ownvehkey2][cValue] / 4 * 3);
                            Till(8,-CarInfo[ownvehkey2][cValue] / 4 * 3);
	                        RespawnVehicle(idcar);
	                        TogglePlayerControllable(playerid, 1);
	                        OnPropUpdate(2);
	                        OnPlayerUpdateTime(playerid);
	                        return 1;
	                    } else return Message(playerid, COLOR_GRAD2,"Este vehículo no está a tu nombre!");
	                } else return Message(playerid, COLOR_GREY, "  Usted tiene que sentarse en su propio coche para venderlo! ");
	            } else return Message(playerid, COLOR_GREY, "¡No estás en un concesionario!");
			}
        }
        else
        {
		Message(playerid, COLOR_GRAD2, "Item's Erroneo: Para Saber los Item's Usa: /ayuda vehiculo");
        }
        return 1;
    }
 	zcmd(venderveh, playerid, params[])
	{
	    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey])
	    {
            new ownvehkey, idcar = GetPlayerVehicleID(playerid), sendername[MAX_PLAYER_NAME], price;
	        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { ownvehkey = PlayerInfo[playerid][pPcarkey]; }
			if(strcmp(sendername, CarInfo[ownvehkey][cOwner], true) == 0)
	        {
				if(!sscanf(params, "dd", params[0], price))
				{
				    if(IsPlayerConnected(params[0]))
				    {
				        if(PlayerInfo[params[0]][pLevel] > 2)
				        {
				            if(ProxDetectorS(8.0, playerid, params[0]))
				            {
					            if(GetPlayerMoney(params[0]) >= price)
					            {
									if(PlayerInfo[params[0]][pPcarkey] == 9999)
									{
                                        if(price < 1) return Message(playerid, COLOR_GREY, "Debes venderlo al menos a 1$.");
										OwnableCarOffer[params[0]] = playerid;
										OwnableCarID[params[0]] = idcar;
										OwnableCarPrice[params[0]] = price;
    									Petition_ID[params[0]] = 5;
						        	    Facturing[params[0]] = 1;
										new string[128];
										format(string, sizeof(string), "Ofreciste a %s tu vehículo por %d$", PlayerName(params[0]), price);
						        		SendClientMessage(playerid, COLOR_WHITE, string);
						        		format(string, sizeof(string), "\t\t-- Compra de Vehículo --\t\t\n\t* %s te ofrece su %s a %d$, ¿acepta?", PlayerName(playerid), GetVehicleFriendlyName(ownvehkey), price);
						        		SendRequest(params[0],  string);
						        		OnPropUpdate(2)
						        		return 1;
									} else Message(playerid, COLOR_GRAD2, "El jugador ya tiene 2 vehículo.");
								} else Message(playerid, COLOR_GRAD2, "El jugador no tiene fondos suficientes.");
							} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				        } else Message(playerid, COLOR_GRAD2, "El jugador necesita ser nivel 3 mínimo.");
				    } else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
				} else Message(playerid, COLOR_GRAD2, "Utilize: /venderveh <jugador> [Dinero]");
	        } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    return 1;
 	}
	zcmd(venderveh2, playerid, params[])
	{
	    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2])
	    {
            new ownvehkey2, idcar = GetPlayerVehicleID(playerid), sendername[MAX_PLAYER_NAME], price;
	        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { ownvehkey2 = PlayerInfo[playerid][pPcarkey2]; }
			if(strcmp(sendername, CarInfo[ownvehkey2][cOwner], true) == 0)
	        {
				if(!sscanf(params, "dd", params[0], price))
				{
				    if(IsPlayerConnected(params[0]))
				    {
				        if(PlayerInfo[params[0]][pLevel] > 2)
				        {
				            if(ProxDetectorS(8.0, playerid, params[0]))
				            {
					            if(GetPlayerMoney(params[0]) >= price)
					            {
									if(PlayerInfo[params[0]][pPcarkey2] == 9999)
									{
                                        if(price < 1) return Message(playerid, COLOR_GREY, "Debes venderlo al menos a 1$.");
										OwnableCarOffer[params[0]] = playerid;
										OwnableCarID[params[0]] = idcar;
										OwnableCarPrice[params[0]] = price;
    									Petition_ID[params[0]] = 6;
						        	    Facturing[params[0]] = 1;
										new string[128];
										format(string, sizeof(string), "Ofreciste a %s tu vehículo por %d$", PlayerName(params[0]), price);
						        		SendClientMessage(playerid, COLOR_WHITE, string);
						        		format(string, sizeof(string), "\t\t-- Compra de Vehículo --\t\t\n\t* %s te ofrece su %s a %d$, ¿acepta?", PlayerName(playerid), GetVehicleFriendlyName(ownvehkey2), price);
						        		SendRequest(params[0],  string);
						        		OnPropUpdate(2)
									} else Message(playerid, COLOR_GRAD2, "El jugador ya tiene 1 vehículo.");
								} else Message(playerid, COLOR_GRAD2, "El jugador no tiene fondos suficientes.");
							} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				        } else Message(playerid, COLOR_GRAD2, "El jugador necesita ser nivel 3 mínimo.");
				    } else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
				} else Message(playerid, COLOR_GRAD2, "Utilize: /venderveh2 <jugador> [precio]");
	        } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    return 1;
 	}
	zcmd(vehid, playerid, params[]){
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GREY, "No has logueado!");
        if(IsPlayerInAnyVehicle(playerid)){
			new string[12]
	        format(string, sizeof(string), "* Vehiculo ID: %d.", GetPlayerVehicleID(playerid));
	        SendClientMessage(playerid, COLOR_GREY, string);
	    } else Message(playerid, COLOR_GREY, "No estás en un vehiculo");
	    return 1;
	}
    zcmd(desrentarveh, playerid, params[])
    {
        if(HireKey[playerid] == 9999) return Message(playerid, COLOR_GRAD2, "No has rentado ningún vehículo!");
		else
		{
  			SetVehicleToRespawn(HireKey[playerid]);
    		GivePlayerMoney(playerid, 10);
		    SetVehicleParamsEx(HireKey[playerid],0,0,0,0,0,0,0);
  			Message(playerid, COLOR_GRAD2, "Gracias, así ayudas a mantener en orden la ciudad.");
			engineOn[HireKey[playerid]] = false;
  			HireKey[playerid] = 9999;
		}
        return 1;
    }
    zcmd(subirnivel, playerid, params[]){
	    if(PlayerInfo[playerid][pLevel] >= 0){
			new nxtlevel = PlayerInfo[playerid][pLevel]+1, expamount = nxtlevel*levelexp, infostring[128];
			if(PlayerInfo[playerid][pExp] < expamount){
				format(infostring, 128, "Necesitas %d/%d puntos de respeto para subir de nivel.",PlayerInfo[playerid][pExp],expamount);
				Message(playerid, COLOR_GRAD1, infostring);
			}
			else{
				format(infostring, sizeof(infostring), "Nivel %d!", nxtlevel);
				Message(playerid, COLOR_GRAD1, infostring);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerInfo[playerid][pLevel]++;
				PlayerInfo[playerid][pExp] = 0;
				OnPlayerUpdateTime(playerid);
			}
		}
	    return 1;
 	}
    zcmd(revisar, playerid, params[]){
		if(!sscanf(params, "u", params[0])){
            if(IsPlayerConnected(params[0]) && ProxDetectorS(8.0,playerid,params[0])){
				new wh_q,sweapon,sammo,drugs,string[128];
    			for (new i=0; i<9; i++){
       				GetPlayerWeaponData(params[0], i, sweapon, sammo);
			        if(sweapon != 0 && sammo != 0)  wh_q ++;
			    }
       			if(wh_q > 0) Message(playerid, COLOR_GRAD2, "El sujeto va armado.");
		        else 		Message(playerid, COLOR_GRAD2, "El sujeto no porta armas.");

		        if(PlayerInfo[params[0]][pSpeed] > 0)    drugs++;
		        if(PlayerInfo[params[0]][pEctasy] > 0)   drugs++;
		        if(PlayerInfo[params[0]][pRitalin] > 0)  drugs++;
		        if(PlayerInfo[params[0]][pHeroina] > 0)  drugs++;
		        if(PlayerInfo[params[0]][pMarihuana] > 0)  drugs++;

		        if(drugs > 0) Message(playerid, COLOR_GRAD2, "El sujeto contiene drogas.");
		        else 		Message(playerid, COLOR_GRAD2, "El sujeto no porta drogas.");

		        if(PlayerInfo[params[0]][pMats] > 0) Message(playerid, COLOR_GRAD2, "El sujeto porta material armamentístico.");
		        else 		Message(playerid, COLOR_GRAD2, "El sujeto no porta material armamentístico.");

				format(string, sizeof(string), "* %s revisa a %s en busca de objetos.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado o muy lejos.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /revisar <jugador>");
        return 1;
    }
   	zcmd(cinturon, playerid, params[]){
        if(IsPlayerInAnyVehicle(playerid)){
   			if(!BikeModel(playerid)){
			    new string[90];
   				if(UsingBelt[playerid] == 0){
       				format(string, sizeof(string), "* %s se abrocha el cinturón", PlayerName(playerid));
			        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			        UsingBelt[playerid] = 1;
				}
				else{
    				format(string, sizeof(string), "* %s se desabrocha el cinturón", PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        	UsingBelt[playerid] = 0;
				}
			}
		} else Message(playerid, COLOR_GRAD2, "No estás en un vehículo.");
        return 1;
    }
    zcmd(vercinturon, playerid, params[]){
        if(!IsACop(playerid)) 	return Message(playerid, COLOR_GREY, "No eres policía!");
        if(!sscanf(params, "u", params[0])){
            if(!IsPlayerConnected(params[0])) 				return Message(playerid, COLOR_GREY, "Jugador desconectado.");
            if(!IsPlayerInAnyVehicle(params[0]))            return Message(playerid, COLOR_GREY, "El jugador no está en un vehículo.");
            if(!ProxDetectorS(5.0, playerid, params[0]))    return Message(playerid, COLOR_GREY, "Jugador muy lejos.");
            new string[90];
            if(UsingBelt[params[0]] == 1){
   				format(string, sizeof(string), "* %s tiene el cinturón abrochado.",PlayerName(params[0]));
				Message(playerid, COLOR_GREEN, string);
			}
			else{
   				format(string, sizeof(string), "* %s no tiene el cinturón abrochado.",PlayerName(params[0]));
			    Message(playerid, COLOR_RED, string);
			}
	 		format(string, sizeof(string), "* %s revisa el cinturón de %s", PlayerName(playerid), PlayerName(params[0]));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /vercinturon <jugador>");
        return 1;
    }
    zcmd(hits, playerid, params[])
    {
        if(Hitman(playerid)) SearchHit(playerid);
		else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
    zcmd(quitar, playerid, params[])
    {
        if(!IsACop(playerid) && !Team_NG(playerid)) return Message(playerid, COLOR_GRAD2, "¡No puedes hacer esto!");
        new item[32], string[128];
        if(!sscanf(params, "s[32]u", item, params[1]))
        {
            if(!IsPlayerConnected(params[1]))               return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(strcmp(item,"lconduccion",true) == 0)
			{
			    PlayerInfo[params[1]][pCarLic] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de conducción a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"lvuelo",true) == 0)
			{
			    PlayerInfo[params[1]][pFlyLic] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de vuelo a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"larma",true) == 0)
			{
			    PlayerInfo[params[1]][pGunLic] = 0;
		        format(string, sizeof(string), "* Oficial %s quita la licencia de armas a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"drogas",true) == 0)
			{
                PlayerInfo[params[1]][pHeroina] = 0;
                PlayerInfo[params[1]][pMarihuana] = 0;
                PlayerInfo[params[1]][pRitalin] = 0;
                PlayerInfo[params[1]][pEctasy] = 0;
                PlayerInfo[params[1]][pSpeed] = 0;
			    format(string, sizeof(string), "* Oficial %s quita las drogas a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"materiales",true) == 0)
			{
                PlayerInfo[params[1]][pMats] = 0;
			    format(string, sizeof(string), "* Oficial %s quita los materiales a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"telefono",true) == 0)
			{
                PlayerInfo[params[1]][pPnumber] = 0;
			    format(string, sizeof(string), "* Oficial %s quita el teléfono %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"pasaporte",true) == 0)
			{
                PlayerInfo[params[1]][pPasaporte] = 0;
			    format(string, sizeof(string), "* Oficial %s quita el pasaporte a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"armas",true) == 0)
			{
			    ResetPlayerWeapons(params[1]);
       			format(string, sizeof(string), "* Oficial %s le quita las armas a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else Message(playerid, COLOR_GRAD2, "Item incorrecto.");
		}
		else
		{
		    Message(playerid, COLOR_GRAD2, "Utilize: /quitar <item> <jugador>");
		    Message(playerid, COLOR_GRAD2, "Items: lconduccion, lvuelo, larma, drogas, materiales, telefono, armas, pasaporte");
		}
        return 1;
	}
    zcmd(drag, playerid, params[])
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
        if(GetPlayerVehicleID(playerid) >= 174 && GetPlayerVehicleID(playerid) <= 181) return Message( playerid, COLOR_GRAD2, "No puedes usar /drag en bicis.." );
        if(PlayerInfo[params[0]][pJailed] > 1) return Message(playerid, COLOR_GRAD2, "No puedes subir al coche a un jugador en jail OOC");
		if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
    		{
    		    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GREY, "¡Demasiado lejos!");
    		    new Float:x, Float:y, Float:z, string[128];
          		GetPlayerPos(params[0],x,y,z);
          		PutPlayerInVehicle(params[0],GetPlayerVehicleID(playerid),1);
          		format(string, sizeof(string), "%s sube forzosamente a %s a su Auto", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
    		}
    		else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /drag <player>");
        return 1;
    }
 	zcmd(rendirse, playerid, params[])
 	{
 	    if(PlayerDrunk[playerid] > 9) return Message(playerid, COLOR_GRAD2, "  No puedes usar este comando ahora.");
 	    if(Freezed[playerid] > 0) return Message(playerid, COLOR_GRAD2, "  Estás congelado por un administrador!");
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && ForbidHandsUp[playerid] == 0)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
  	  		return 1;
		} else return Message(playerid, COLOR_GRAD2, "  No puedes usar este comando ahora.");
	}
    zcmd(getip, playerid, params[])
    {
		if(PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_GREY, "Debes ser administrador!");
        if(!sscanf(params, "u", params[0]))
        {
            new ip[20], string[64];
            GetPlayerIp(params[0],ip,sizeof(ip));
            format(string, sizeof(string), "* La IP de %s es %s", PlayerName(params[0]), ip);
            Message(playerid, COLOR_GRAD2, string);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /getip <jugador>");
        return 1;
    }
   	zcmd(unban, playerid, params[])
	{
	    if(!sscanf(params, "i", params[0]))
	    	{
	        if(params[0] != INVALID_PLAYER_ID)
	        	{
	            if(PlayerInfo[playerid][pJDS] >= 5)
	            	{
	            	new string[50];
	            	PlayerInfo[params[0]][pLocked] = 0;
	            	PlayerInfo[params[0]][pLocked] = 0;
	            	PlayerInfo[params[0]][pLocked] = 0;
	             format(string, sizeof(string), "%s desbaneó a %s", PlayerName(playerid),  PlayerName(params[0]));
				  ABroadCast(COLOR_ORANGE,string,1);
                }
				else SendClientMessage(playerid, COLOR_GRAD2, "¡No eres administrador!");
            }
			else SendClientMessage(playerid,  COLOR_GRAD2, "ID Inválida");
            }
        else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /unban");
	    return 1;
		}
    zcmd(unbanip, playerid, params[])
    {
    	if(PlayerInfo[playerid][pJDS] < 3) return Message(playerid, COLOR_GREY, "Debes ser administrador!");
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[90];
            format(string,sizeof(string),"unbanip %s",params[0]);
            SendRconCommand(string);
			SendRconCommand("reloadbans");
			format(string, sizeof(string), "IP %s desbaneada por %s", params[0], PlayerName(playerid));
			A_Info(string);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /unbanip <ip>");
        return 1;
    }
    zcmd(fly, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] >= 1){
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py+15, pz+5);
				}
				if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-30, py, pz+5);
				}
				if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py-15, pz+5);
				}
				if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py-30, pz+5);
				}
				if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py-15, pz+5);
				}
				if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+30, py, pz+5);
				}
				if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
		} else Message(playerid, COLOR_GRAD1, "No autorizado.");
        return 1;
    }

    forward JoyasP(playerid);
public JoyasP(playerid)
{
    if(activado == 1)
    {
    new sendername[MAX_PLAYER_NAME];
    new string[128];
    new rand = random (2);
    switch (rand)
    {
	    case 0:
	    {
	    new Joyas2 = RandomEx(5, 20);
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "* %s intenta robar joyas y lo logra", sendername);
        ProxDetector(30.0,playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
	    format(string, sizeof(string), "Has robado %d joyas", Joyas2);
	    SendClientMessage(playerid, COLOR_RED, string);
	    DarJoyas(playerid, Joyas2);
        KillTimer(JoyasEx);
	    TogglePlayerControllable(playerid, 1);
	    activado = 0;
	    }
		case 1:
		{
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "* %s intenta robar joyas, pero falla", sendername);
        ProxDetector(30.0,playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
        SendClientMessage(playerid,COLOR_RED,"No has logrado robar nada, lo siento");
        KillTimer(JoyasEx);
	    TogglePlayerControllable(playerid, 1);
	    activado = 0;
	}
	}
	}
	}


forward VJoyasP(playerid);
public VJoyasP(playerid)
{
     if(activado == 1)
     {
       new string[128];
       new VJoyas = RandomEx(5000, 50000);
       new sendername[MAX_PLAYER_NAME];
       GetPlayerName(playerid, sendername, sizeof(sendername));
       format(string,sizeof(string), "* %s coje la mercancia del maletero y la deja en el suelo", sendername);
       ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
       format(string,sizeof(string), "Has vendido {7F0000}%i {0094FF}Joyas, {FFFFFF}y se te ha dado {267F00}$%d", ObservarJoyas(playerid), VJoyas);
       SendClientMessage(playerid,COLOR_WHITE,string);
       GivePlayerMoney(playerid, VJoyas);
       KillTimer(VJoyasEx);
       ResetearJoyas(playerid);
       activado = 0;
       }
   }
forward Tiempo(playerid);
public Tiempo(playerid)
{
     if(activado == 1)
     {
       new string[128];
	   new Dinero = RandomEx(5000, 500000);
	   format(string, sizeof(string), "Has robado $%d", Dinero);
	   SendClientMessage(playerid, COLOR_RED, string);
	   GivePlayerMoney(playerid,  Dinero);
	   KillTimer(TiempoEx);
	   SetPlayerWorldBounds(playerid, 20000.0000, -20000.0000, 20000.0000, -20000.0000);
	   SendClientMessage(playerid, COLOR_GREEN, "Ya han trancurrido 10 segundos, Escapa antes de que venga la policia");
       activado = 0;
      }
}
function Reg_ShowDNI(playerid) { ShowDNI(playerid,playerid); }

function ShowDNI(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
	    new string[64], sex[4], otext[14], word[3];
	    new sendername[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    if(PlayerInfo[playerid][pSex] == 1) { sex = "M"; }
   		if(PlayerInfo[playerid][pSex] == 2) { sex = "F"; }
   		if(PlayerInfo[targetid][pOrigin] == 2) { otext = "Europa"; }
		else if(PlayerInfo[targetid][pOrigin] == 1) { otext = "América"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "Asia"; }
		else if(PlayerInfo[targetid][pOrigin] == 4) { otext = "África"; }
		else if(PlayerInfo[targetid][pOrigin] == 5) { otext = "Oceanía"; }

	    Message(targetid, 0xFFD600FF, "|___________ Documento Nacional de Identidad ___________|");
   		format(string, sizeof(string), "   Nombre: %s", sendername);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Sexo: %s", sex);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Edad: %d     Fecha Nacimiento: %d", PlayerInfo[playerid][pAge], 2011-PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nacionalidad: %s", otext);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nº DNI: %d%s", PlayerInfo[playerid][pDNI],word);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   IDSA%s%d%s<<%s>%d-%d", word,PlayerInfo[playerid][pDNI],sex,sendername,2011-PlayerInfo[playerid][pAge],PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_GRAD2, string);
   		Message(targetid, 0xFFD600FF, "|________________ Ministerio del Interior _________________|");
	}
}
function RegMsn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Información OOC","Registra tu e-mail","Registrar","Cancelar");
		return 1;
	}
	return 1;
}
stock RandomEx(min, max)
{
    new randval = random(max - min) + min;
    return randval;
}
stock ObservarJoyas(playerid)
{
	return Joyas[playerid];
}

stock DarJoyas(playerid,MasJoyas)
{
	Joyas[playerid] = Joyas[playerid] + MasJoyas;
	return Joyas[playerid];
}

stock ResetearJoyas(playerid)
{
	Joyas[playerid] = 0;
	return Joyas[playerid];
}

	zcmd(mp3, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	SetPlayerAttachedObject(playerid, 1, 18874, 7);
			return ShowPlayerDialog(playerid, DIALOGO_RADIO, DIALOG_STYLE_LIST,"Menu del MP3", "{1CE737}Lista de Emisoras\n{B39CC8}Memoria MP3\n{B39CC8}Apagar MP3","Aceptar","Cancelar");
		}
		return 1;
	}
	zcmd(camara, playerid, params[])
	{
	    if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 24 || PlayerInfo[playerid][pLeader] == 24)
	    {
	    if(PlayerToPoint(5, playerid, 1580.0735,-1635.2903,13.5608))
	    {
			return ShowPlayerDialog(playerid, DIALOGO_Camara, DIALOG_STYLE_LIST,"Camara Lspd", "{1CE737}Carretera Cerca del ayuntamiento\n{1CE737}Carretera alfrente de LSPD\n{1CE737}Plaza De Los Santos\n{1CE737}Hospital\n{1CE737}CNN - Atras\n{1CE737}CNN - Adelante\n{1CE737}Banco\n{1CE737}24-7 Unity \
			\nAlhambra\n{1CE737}24-7 Vinewood\n{1CE737}Grooti\n{1CE737}CNN - Adelante","Mirar","Cancelar");
			}else Message(playerid,COLOR_GREEN,"No estas en el cuarto de camaras");
		}else Message(playerid,COLOR_GREEN,"No autorizado");
		return 1;
	}
	zcmd(cuenta, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
			}
		}
		return 1;
	}
	zcmd(changepass, playerid, params[])
	{
	    	new string[MAX_PLAYERS];
 			if(gPlayerLogged[playerid] == 0) return Message(playerid, COLOR_GRAD2, "No estás logeado!");
            if (sscanf(params, "s[128]", params[0])) return Message(playerid,COLOR_GRAD2, "Utiliza: /changepass <contraseña>");
        	strmid(PlayerInfo[playerid][pKey], params[0], 0, strlen(params[0]), 24);
            OnPlayerUpdateTime(playerid);
            format(string, sizeof(string), "%s (ID: %d) a cambiado su contraseña.", PlayerName(playerid), playerid);
			A_Info(string);
            Log("logs/cambiopass.log", string);
            SendClientMessage(playerid, COLOR_YELLOW, "   La contraseña ha sido cambiada Exitosamente");
       		return 1;
	}

	zcmd(gob, playerid, params[])
	{
		new string[128];
	    if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "/gob <texto>");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(PlayerInfo[playerid][pYoutuber] == 1) return Message(playerid, COLOR_GRAD2, "No puedes usar /gob");
		if(PlayerInfo[playerid][pLeader] == 1 || Gobierno(playerid) || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pLeader] == 5)
	    {
		    if(PlayerInfo[playerid][pLeader] == 1)
	        {
			    format(string, sizeof(string), "[LSPD] Comisario %s: %s", PlayerName(playerid), params[0]);
				SendClientMessageToAll(0x00ACFFFF, string);
				Log("logs/gobierno.log", string);
	        }
	        else if(PlayerInfo[playerid][pLeader] == 2)
	        {
			    format(string, sizeof(string), "[LVPD] Comisario %s: %s", PlayerName(playerid), params[0]);
			    SendClientMessageToAll(0x00ACFFFF, string);
				Log("logs/gobierno.log", string);
	        }
	        else if(PlayerInfo[playerid][pLeader] == 3)
	        {
			    format(string, sizeof(string), "[SAEM] Coronel %s: %s", PlayerName(playerid), params[0]);
			    SendClientMessageToAll(0x00ACFFFF, string);
				Log("logs/gobierno.log", string);
	        }
	        else if(PlayerInfo[playerid][pLeader] == 24)
	        {
			    format(string, sizeof(string), "[FBI] Director %s: %s", PlayerName(playerid), params[0]);
			    SendClientMessageToAll(0x00ACFFFF, string);
				Log("logs/gobierno.log", string);
	        }
	        else if(PlayerInfo[playerid][pLeader] == 4)
	        {
			    format(string, sizeof(string), "[LSMC] Director %s: %s", PlayerName(playerid), params[0]);
			    SendClientMessageToAll(0x00ACFFFF, string);
				Log("logs/gobierno.log", string);
	        }
	        else if(PlayerInfo[playerid][pLeader] == 5)
	        {
			    format(string, sizeof(string), "[LVMC] Director %s: %s", PlayerName(playerid), params[0]);
			    SendClientMessageToAll(0x00ACFFFF, string);
				Log("logs/gobierno.log", string);
	        }
	        else if(PlayerInfo[playerid][pLeader] == 8)
	        {
			    format(string, sizeof(string), "[C.Inteligencia] Director %s: %s", PlayerName(playerid), params[0]);
			    SendClientMessageToAll(0x00ACFFFF, string);
				Log("logs/gobierno.log", string);
	        }
	        else if(PlayerInfo[playerid][pLeader]==16)
	        {
			    format(string, sizeof(string), "[GOBIERNO] Alcalde %s: %s", PlayerName(playerid), params[0]);
			    SendClientMessageToAll(0x00ACFFFF, string);
				Log("logs/gobierno.log", string);
			}
		}
		else Message(playerid, COLOR_GRAD2, "No autorizado!");
		return 1;
	}
	zcmd(hacktrans, playerid, params[])
	{
		new string[128];
	    if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "/hacktrans <texto>");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
		if(PlayerInfo[playerid][pLeader] == 27)
	    {
			    format(string, sizeof(string), "[Transmisión-Hack]Terroristas Alqaeda Dicen: %s", params[0]);
				SendClientMessageToAll(0x00ACFFFF, string);
				Log("logs/alqaedahack.log", string);
	        } else Message(playerid, COLOR_GRAD2, "No permitido");
	        return 1;
	        }
 	zcmd(impuesto, playerid, params[])
	{
	    new string[90];
		if(PlayerInfo[playerid][pLeader]==16)
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if(params[0] < 0 || params[0] > 200) return Message(playerid, COLOR_GRAD2, "Valor entre 1$ - 200$");

	            TaxValue = params[0];
				SaveStuff();
				format(string, sizeof(string), "* [GOBIERNO] El impuesto por ciudano se ha establecido en: %d$", TaxValue);
				GlobalMsg(0x00ACFFFF, string);

	        }
	        else Message(playerid, COLOR_GRAD2, "Utilize: /impuesto <cantidad>");
            format(string, 90, "* El impuesto por ciudano se encuentra en %d$.", TaxValue);
            Message(playerid, COLOR_GRAD2, string);
	    }
	    else Message(playerid, COLOR_GRAD2, "No autorizado.");
	    return 1;
 	}
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////

    zcmd(impuestorentaveh, playerid, params[])
	{
        new string[90];
		if(PlayerInfo[playerid][pLeader]==16)
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if(params[0] < 100 || params[0] > 2000) return Message(playerid, COLOR_GRAD2, "Valor entre 100$ - 2.000$");

	            TaxRenta = params[0];
				SaveStuff();
				format(string, sizeof(string), "* [GOBIERNO] El Precio por Renta de Vehiculos se ha puesto en: %d$", TaxRenta);
				GlobalMsg(0x00ACFFFF, string);

	        }
	        else Message(playerid, COLOR_GRAD2, "Utilize: /ImpuestoRentaVeh <cantidad>");
	        format(string, 90, "* El Precio por Renta de Vehiculos se encuentra en %d$.", TaxRenta);
            Message(playerid, COLOR_GRAD2, string);
	    }
	    else Message(playerid, COLOR_GRAD2, "No autorizado.");
	    return 1;
 	}
	//////////////////////////////////////////////////////////////////////////////////////////////////////////

    zcmd(impuestopasaporte, playerid, params[])
	{
	    new string[90];
	    if(PlayerInfo[playerid][pLeader]==16)
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if(params[0] < 1000 || params[0] > 20000) return Message(playerid, COLOR_GRAD2, "Valor entre 1.000$ - 20.000$");

	            TaxPasaporte = params[0];
				SaveStuff();
				format(string, sizeof(string), "* [GOBIERNO] El Precio por Compra de Pasaporte se ha puesto en: %d$", TaxPasaporte);
				GlobalMsg(0x00ACFFFF, string);

	        }
	        else Message(playerid, COLOR_GRAD2, "Utilize: /ImpuestoPasaporte <cantidad>");
	        format(string, 90, "* El Precio por Compra de Pasaporte se encuentra en %d$.", TaxPasaporte);
            Message(playerid, COLOR_GRAD2, string);
	    }
	    else Message(playerid, COLOR_GRAD2, "No autorizado.");
	    return 1;
 	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////
  zcmd(taxaseguro, playerid, params[])
	{
        new string[90];
		if(Team_SAMUR(playerid))
		{
		if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "No eres líder de facción.");
		{
         if(!sscanf(params, "i", params[0]))
	        {
             if(params[0] < 0 || params[0] > 2000) return Message(playerid, COLOR_GRAD2, "Valor entre 1$ - 2.000$");

	            Samd_Impuesto = params[0];
				SaveStuff();
				format(string, sizeof(string), "* [SAMD] El Seguro Médico Mensual por ciudano se ha establecido en: %d$", Samd_Impuesto);
				GlobalMsg(0x00ACFFFF, string);

	        }
	        else Message(playerid, COLOR_GRAD2, "Utilize: /taxaseguro <cantidad>");
       	 	format(string, 90, "* La taxa se encuentra en %d Por PayDay.", Samd_Impuesto);
            Message(playerid, COLOR_GRAD2, string);
		}
	    }
	    else Message(playerid, COLOR_GRAD2, "No autorizado.");
	    return 1;
 	}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

zcmd(taxacompraseguro, playerid, params[])
	{
        new string[90];
		if(Team_SAMUR(playerid))
		{
		if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "No eres líder de facción.");
		{
         if(!sscanf(params, "i", params[0]))
	        {
             if(params[0] < 0 || params[0] > 150) return Message(playerid, COLOR_GRAD2, "Valor entre 1$ - 150$");

	            Samd_CompraSeguro = params[0];
				SaveStuff();
				format(string, sizeof(string), "* [SAMD] La venta de seguros medicos en el hospital se ha impuesto a: %d$", Samd_CompraSeguro);
				GlobalMsg(0x00ACFFFF, string);

	        }
	        else Message(playerid, COLOR_GRAD2, "Utilize: /TaxaCompraSeguro <cantidad>");
       	 	format(string, 90, "* La taxa de Compra de seguro Medico se encuentra en %d$.", Samd_CompraSeguro);
            Message(playerid, COLOR_GRAD2, string);
		}
	    }
	    else Message(playerid, COLOR_GRAD2, "No autorizado.");
	    return 1;
 	}
 	/////sistema de AFK
 		zcmd(afk, playerid, params[])
    {
		if(PlayerInfo[playerid][pJailTime] > 0) return Message(playerid, COLOR_GRAD2, "¡No puedes usar esto en la cárcel!");
        switch(AFK[playerid])
        {
            case 0:
			{
				new randomize;
				new AFKStringer[MAX_PLAYERS];
				GetPlayerPos(playerid, AFKLoc[playerid][0],AFKLoc[playerid][1],AFKLoc[playerid][2]);
				randomize = random(sizeof(AFKZone));
				SetPlayerPos(playerid, AFKZone[randomize][0], AFKZone[randomize][1], AFKZone[randomize][2]);
				TogglePlayerControllable(playerid, 0);
				Message(playerid, COLOR_RED2, "Te encuentras en estado AFK, utiliza /afk para volver a rolear.");
				format(AFKStringer, sizeof(AFKStringer), "GameWorld AFK : El usuario %s esta en modo AFK",PlayerName(playerid));
				ABroadCast(-1, AFKStringer, 1);
				Log("logs/usersafk.log", AFKStringer);
                AFKTime[playerid] = gettime() + 600;
				AFK[playerid] = 3;
				return 1;
			}
			case 1:
			{
				SetPlayerPos(playerid, AFKLoc[playerid][0],AFKLoc[playerid][1],AFKLoc[playerid][2]);
			 	TogglePlayerControllable(playerid, 1);
				Message(playerid, COLOR_RED2, "¡Has salido del estado AFK!");
				AFKTime[playerid] = 0;
				AFK[playerid] = 0;
				return 1;
			}
			default:
			{
			    new string[64];
			    format(string, sizeof(string),"Tienes que esperar %d minutos para salir de tu estado AFK.",AFK[playerid]-1);
				Message(playerid, COLOR_GRAD2, string);
				return 1;
			}
		}
		return 1;
    }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
zcmd(hospitalizacion, playerid, params[])
	{
	    new string[90];
	    if(Team_SAMUR(playerid))
		{
		if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "No eres líder de facción.");
		{
         if(!sscanf(params, "i", params[0]))
	        {
             if(params[0] < 0 || params[0] > 150) return Message(playerid, COLOR_GRAD2, "Valor entre 1$ - 150$");

	            Samd_Asistencia = params[0];
				SaveStuff();
				format(string, sizeof(string), "* [SAMD] La Asisténcia Médica por ciudano por Hospitalización está en: %d$", Samd_Asistencia);
				GlobalMsg(0x00ACFFFF, string);

	        }
	        else Message(playerid, COLOR_GRAD2, "Utilize: /hospitalizacion <cantidad>");
	        format(string, 90, "* El ingreso sin seguro médico se encuentra en %d.", Samd_Asistencia);
            Message(playerid, COLOR_GRAD2, string);
		}
	    }
	    else Message(playerid, COLOR_GRAD2, "No autorizado.");
	    return 1;
 	}
 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(impuestoadmin, playerid, params[])
	{
    if(PlayerInfo[playerid][pJDS] > 1023)
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if(params[0] < 0 || params[0] > 200) return Message(playerid, COLOR_GRAD2, "Valor entre 1$ - 200$");

	            new string[90];
	            TaxValue = params[0];
				SaveStuff();
				format(string, sizeof(string), "-", TaxValue);
				GlobalMsg(0x00ACFFFF, string);

	        }
	        else Message(playerid, COLOR_GRAD2, "Utilize: /impuestoadmin <cantidad>");
	    }
	    else Message(playerid, COLOR_GRAD2, "No autorizado.");
	    return 1;
 	}
 	zcmd(condon, playerid, params[])
	{
	    if(PlayerInfo[playerid][pSex] == 2) return Message(playerid, COLOR_GRAD2, "Solo los hombres pueden usar este comando.");
	    if(Condom[playerid] != 0)
		{
			new string[128];
			format(string, sizeof(string), "* %s toma un condon y se lo coloca en el pene.", PlayerName(playerid));
        	ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    	    Message(playerid, COLOR_GRAD2, "Ahora ya estas protegido para tener relaciones sexuales con seguridad.");
        	Condom[playerid] --;
        	return 1;
		} else return Message(playerid, COLOR_GRAD2, "No tienes un condon.");
  	}
  	zcmd(lavarropa, playerid, params[])
  	{
  	    new string[128];
  	    if(PlayerToPoint(10.0,playerid,3937.3613,-820.6308,1874.0156) || PlayerToPoint(10.0,playerid,3937.7209,-834.2257,1874.0156))
  	    {
			if(CheckMoney(playerid, 500))
			{
				format(string, sizeof(string), "* %s se saca su ropa y la mete a la lavadora.", PlayerName(playerid));
                ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    Message(playerid, COLOR_WHITE, "{DC092F}Lavanderia: {FFFFFF}Su ropa ha empezado a lavarse, espere un poco...");
			    SetTimerEx("Lavadora", 60000, false, "i", playerid);
			    if(PlayerInfo[playerid][pSex] == 1) Skin(playerid, 252);
				if(PlayerInfo[playerid][pSex] == 2) Skin(playerid, 138);
			}
  	    } else Message(playerid, COLOR_GRAD2, "No estas en la lavanderia.");
  	    return 1;
  	}
 	zcmd(fondoestado, playerid, params[])
	{
	    new string[125];
	    if(PlayerInfo[playerid][pLeader]==16)
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if (params[0] > Tax || params[0] < 1) return Message(playerid, COLOR_GRAD2, "Cantidad erróena.");

				PlayerInfo[playerid][pAccount] += params[0];    Tax -= params[0];

				format(string, sizeof(string), "Extraiste %d$ de los fondos del estado (%d$)", params[0],Tax);
					Message(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "Los fondos extraídos pasaron a tu cuenta bancaria (%d$)", PlayerInfo[playerid][pAccount]);
					Message(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s extrajo $%d de los fondos del estado", PlayerName(playerid),  params[0]);
				ABroadCast(COLOR_ORANGE,string,1);
                Log("logs/fondos.log", string);
				SaveStuff();
	        }
	        else
	        {
	            Message(playerid, COLOR_GRAD2, "Utilize: /fondoestado <cantidad>");
	            format(string, 90, "* Hay %d de fondos.", Tax);
	            Message(playerid, COLOR_GRAD2, string);
	        }
		}
		else Message(playerid, COLOR_GRAD2, "No autorizado.");
		return 1;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(fondohospital, playerid, params[])
	{
	    new string[90];
	    if(Team_SAMUR(playerid))
		{
		if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "No eres líder de facción.");

	        if(!sscanf(params, "i", params[0]))
	        {
	            if (params[0] > Samd_Fondos || params[0] < 1) return Message(playerid, COLOR_GRAD2, "Cantidad erróena.");

				PlayerInfo[playerid][pAccount] += params[0];    Samd_Fondos -= params[0];

				format(string, sizeof(string), "Extraiste %d$ de los fondos del Hospital (%d$)", params[0],Samd_Fondos);
					Message(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "Los fondos extraídos pasaron a tu cuenta bancaria (%d$)", PlayerInfo[playerid][pAccount]);
					Message(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s extrajo $%d de los fondos del estado", PlayerName(playerid),  params[0]);
				ABroadCast(COLOR_ORANGE,string,1);
                Log("logs/fondos.log", string);
				SaveStuff();
	        }
	        else
	        {
	            Message(playerid, COLOR_GRAD2, "Utilize: /fondohospital <cantidad>");
	            format(string, 90, "* Hay %d de fondos.", Samd_Fondos);
			    Message(playerid, COLOR_GRAD2, string);
	        }
	      }

		else Message(playerid, COLOR_GRAD2, "No autorizado.");
		return 1;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////
	zcmd(altavoz, playerid, params[])
	{
        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GREY, "Usted no tiene un telefono.");
        if(Mobile[playerid] == 255) return Message(playerid, COLOR_GREY, "Usted no esta en una llamada telefonica.");
        if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pSpeaker] == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "* Beep * El altavoz esta conectado.");
				PlayerInfo[playerid][pSpeaker] = 1;
				return 1;
			}
			if(PlayerInfo[playerid][pSpeaker] == 1)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "* Beep * El altavoz se a desconectado.");
				PlayerInfo[playerid][pSpeaker] = 0;
				return 1;
			}
		}
		return 1;
	}
    zcmd(miranda, playerid, params[])
    {
        if(IsACop(playerid))
        {
            new string[128];
	        format(string, sizeof(string),"* %s lee los 'Derechos Miranda'",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        format(string, sizeof(string),"%s dice: Tienes derecho a guardar silencio, todo lo que diga puede usarse en su contra.",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a un abogado, si no puede pagar uno, se le asignará uno a costas del Estado.",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a una llamada por teléfono.",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: ¿De acuerdo señor?",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        }
        return 1;
    }
    zcmd(timbre, playerid, params[])
    {
        for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
			    new string[76];
   				format(string, sizeof(string), "* %s toca el timbre.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ProxDetector(30.0, playerid, "Diiing Doooong ... Diiing Doooong", COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				for(new p = 0; p < MAX_PLAYERS; p++)
				{
				    if(PlayerToPoint(30, p, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				    {
    					ProxDetector(30.0, p, "Diiing Doooong ... Diiing Doooong", COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
    				}
				}
			}
		}
		return 1;
    }
   zcmd(robar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(Pandilleros(playerid) || PlayerInfo[playerid][pJob] == 5)
		{
		    if(PlayerInfo[playerid][pRob] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya robaste, espera al próximo PayDay!");
		    if(!sscanf(params, "s[32]", params[0]))
		    {
		        new string[128];
		        if(strcmp(params[0],"persona",true) == 0)
		        {
		            new victim = GetClosestPlayer(playerid);
		            if(ProxDetectorS(2.0,playerid, victim))
		            {
                        if(GetPlayerWeapon(victim) == 41)
		    			{
	        				format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", PlayerName(playerid), PlayerName(victim));
							ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
       						format(string, sizeof(string), "* %s le rocía la cara con un spray anti-ladrones a %s.", PlayerName(victim), PlayerName(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							PlayerInfo[playerid][pRob] = 1;
							Message(params[0], COLOR_YELLOW2, "-> ¡Evitaste que te robaran!");
					    }
					    new rob = random(2)+1;
					    if(rob == 1)
					    {
	        				PlayerInfo[params[0]][pPnumber] = 0;
					        format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y lo logra", PlayerName(playerid) ,PlayerName(params[0]));
							ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
       						format(string, sizeof(string), "* %s se acerca hacia %s y le roba su teléfono.", PlayerName(playerid) ,PlayerName(params[0]));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Message(params[0], COLOR_YELLOW2, "-> ¡Te han robado el teléfono!");
							Message(playerid, COLOR_YELLOW2, "-> ¡Has robado un teléfono! Véndelo en el NPC");
							PlayerInfo[playerid][pRob] = 1;
							TelfRob[playerid] += 1;
						}
						else
						{
      						format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", PlayerName(playerid), PlayerName(params[0]));
							ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
       						format(string, sizeof(string), "* %s se da cuenta y le da un golpe de puño a %s.", PlayerName(params[0]), PlayerName(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Message(params[0], COLOR_GREEN, "-> Has evitado que te roben!");
							Message(playerid, COLOR_YELLOW, "Te han pillado! Menudo ostión te has llevado! Corre!");
							PlayerInfo[playerid][pRob] = 1;
						}
		            }
		        }
		        else if(strcmp(params[0],"24-7",true) == 0)
		        {
		            if(!IsAt247(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en el 24/7!");
		            else
		            {
		            	new robmoney = random(80);
			            Earn(playerid, robmoney);
						ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 4000); // Rob
						PlayerInfo[playerid][pRob] = 1;
						format(string, sizeof(string), "* %s amenaza con un arma al vendedor", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            }
}

		        else if(strcmp(params[0],"propiedad",true) == 0)
		        {
		            if(PickLock[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes con que forzar la cerradura!");
		            for(new i = 0; i < sizeof(HouseInfo); i++)
					{
						if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
						{
						    new Float:cx,Float:cy,Float:cz;
							GetPlayerPos(playerid, cx, cy, cz);
						    new luck = random(8)
							if(luck == 3 || luck == 7)
							{
							    format(string, sizeof(string), "* %s fuerza la cerradura de la casa, entra y roba todo lo que puede.", PlayerName(playerid));
					      		ProxDetector(8.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					      		new cash = random(100);
								PlayerInfo[playerid][pRob] = 1;
								SendRadioMessage(1, TEAM_BLUE_COLOR, "** Central: Atención se ha producido un robatorio en una casa, acudan lo antes posible!");
								SendRadioMessage(2, TEAM_BLUE_COLOR, "** Central: Atención se ha producido un robatorio en una casa, acudan lo antes posible!");
								for(new x = 0; x < MAX_PLAYERS; x++)
								{
									if(IsPlayerConnected(x))
									{
					    				if(IsACop(playerid))
									    {
													SetPlayerCheckpoint(x, cx, cy, cz, 3.0);
										}
									}
								}
						        Earn(playerid, cash);
				  				ProxDetector(30.0, playerid, "* Piiiiiiiiiiiiiiii Piiiiiiiiiiiiiiiii (( Alarma Sonando ))", COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				 	            return 1;
							}
							else
							{
							    format(string, sizeof(string), "* %s rompe su alambre al intentar forzar la cerradura.", PlayerName(playerid));
					      		ProxDetector(8.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					      		SendClientMessage(playerid, COLOR_YELLOW2, "Fallaste al abrir la casa ...");
					      		PlayerInfo[playerid][pRob] = 1;
					      		return 1;
							}
						}
						else Message(playerid, COLOR_GRAD2, "  No estás cerca de una casa!");
					}
		        }
		    }
		    else Message(playerid, COLOR_GRAD2, "  Uso: /robar [24-7] ó [Persona]");
		}
		return 1;

}
    zcmd(ayuda, playerid, params[])
    {

        if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
        if(!sscanf(params, "s[32]", params[0]))
        {
            if		(strcmp(params[0],	"faccion",	true) == 0)   				Ayuda(playerid, 0);
            else if	(strcmp(params[0],	"chat",		true) == 0)   				Ayuda(playerid, 1);
            else if	(strcmp(params[0],	"general",		true) == 0)   			Ayuda(playerid, 2);
            else if	(strcmp(params[0],	"lider",		true) == 0)   			Ayuda(playerid, 3);
            else if	(strcmp(params[0],	"trabajo",		true) == 0)   			Ayuda(playerid, 4);
            else if	(strcmp(params[0],	"telefono",		true) == 0)   			Ayuda(playerid, 5);
            else if	(strcmp(params[0],	"casa",		true) == 0)   				Ayuda(playerid, 6);
            else if	(strcmp(params[0],	"vehiculo",		true) == 0)   			Ayuda(playerid, 7);
            else if	(strcmp(params[0],	"banco",		true) == 0)   			Ayuda(playerid, 8);
            else if	(strcmp(params[0],	"premium",		true) == 0)   			Ayuda(playerid, 9);
            else if	(strcmp(params[0],	"negocio",		true) == 0)   			Ayuda(playerid, 10);
            else if	(strcmp(params[0],	"casa2",		true) == 0)   				Ayuda(playerid, 11);
        }
        else
		{
            Message(playerid, COLOR_GRAD2, "Utilize: /ayuda <nombre>");
   			Message(playerid, COLOR_GRAD2, "Cuenta, General, Chat, Casa, Lider, Faccion, Trabajo, Banco, Teléfono, Premium, Vehiculo");
		}
        return 1;
    }
	zcmd(hacerlider, playerid, params[])
	{
       if(PlayerInfo[playerid][pJDS] > 9 || PlayerInfo[playerid][pFacciones] == 1 || PlayerInfo[playerid][pYoutuber] == 1)
       {
		    if(!sscanf(params, "ui", params[0], params[1]))
		    {
             if(PlayerInfo[playerid][pYoutuber] == 1)
	           {
		    if (params[0] != playerid) return Message(playerid, COLOR_GRAD2, "¡No puedes darle líder a otra persona!");
		       }
                new ftext[30];
		        if(params[1] < 0 || params[1] > MAX_FACTION) 		return Message(playerid, COLOR_GREY, "ID facción incorrecto.");
                if(!IsPlayerConnected(params[0]))                   return Message(playerid, COLOR_GREY, "Jugador desconectado.");
		        switch(params[1])
		        {
		            case 0: 	{PlayerInfo[params[0]][pChar] = 299; PlayerInfo[params[0]][pRank] = 0; ftext = "Ninguna"; }
		            case 1: 	{PlayerInfo[params[0]][pChar] = 283; PlayerInfo[params[0]][pRank] = 8; ftext = "Policía Local LS"; }
		            case 2: 	{PlayerInfo[params[0]][pChar] = 288; PlayerInfo[params[0]][pRank] = 8; ftext = "Policía Local LV"; }
		            case 3: 	{PlayerInfo[params[0]][pChar] = 287; PlayerInfo[params[0]][pRank] = 8; ftext = "SAEM"; }
		            case 4: 	{PlayerInfo[params[0]][pChar] = 228; PlayerInfo[params[0]][pRank] = 6; ftext = "Medical Center LS"; }
		            case 5:     {PlayerInfo[params[0]][pChar] = 228; PlayerInfo[params[0]][pRank] = 6; ftext = "Medical Center LV"; }
		            case 6:     {PlayerInfo[params[0]][pRank] = 4; ftext = "Taxistas LS"; }
		            case 7:     {PlayerInfo[params[0]][pChar] = 268; PlayerInfo[params[0]][pRank] = 6; ftext = "Mecanicos LS"; }
                    case 8:     {PlayerInfo[params[0]][pRank] = 6; ftext = "Centro Int"; }
                    case 9:     {PlayerInfo[params[0]][pChar] = 270; PlayerInfo[params[0]][pRank] = 6; ftext = "Groove"; }
                    case 10:    {PlayerInfo[params[0]][pChar] = 292; PlayerInfo[params[0]][pRank] = 6; ftext = "La Hermanadad"; }
                    case 11:    {PlayerInfo[params[0]][pChar] = 110; PlayerInfo[params[0]][pRank] = 6; ftext = "Latin Kings"; }
                    case 12:    {PlayerInfo[params[0]][pChar] = 113; PlayerInfo[params[0]][pRank] = 7; ftext = "LCN"; }
                    case 13:    {PlayerInfo[params[0]][pChar] = 123; PlayerInfo[params[0]][pRank] = 6; ftext = "Yakuza"; }
                    case 14:    {PlayerInfo[params[0]][pChar] = 290; PlayerInfo[params[0]][pRank] = 7; ftext = "Familia Korsakova"; }
                    case 15:    {PlayerInfo[params[0]][pRank] = 5; ftext = "Licencieros"; }
                    case 16:    {PlayerInfo[params[0]][pChar] = 295; PlayerInfo[params[0]][pRank] = 9; ftext = "Gobierno"; }
                    case 17:    {PlayerInfo[params[0]][pRank] = 6; ftext = "Radio-Television"; }
                    case 19:    {PlayerInfo[params[0]][pRank] = 6; ftext = "Traficantes"; }
                    case 20:    {PlayerInfo[params[0]][pRank] = 6; ftext = "Triadas"; }
                    case 22:    {PlayerInfo[params[0]][pChar] = 113; PlayerInfo[params[0]][pRank] = 6; ftext = "Los 14 diamantes negros"; }
                    case 23:    {PlayerInfo[params[0]][pChar] = 176; PlayerInfo[params[0]][pRank] = 6; ftext = "Hitman"; }
                    case 24:    {PlayerInfo[params[0]][pChar] = 286; PlayerInfo[params[0]][pRank] = 6; ftext = "FBI"; }
                    case 25:    {PlayerInfo[params[0]][pChar] = 103; PlayerInfo[params[0]][pRank] = 6; ftext = "Blood's"; }
                    case 26:    {PlayerInfo[params[0]][pChar] = 173; PlayerInfo[params[0]][pRank] = 6; ftext = "Cripz"; }
                    case 27:    {PlayerInfo[params[0]][pChar] = 127; PlayerInfo[params[0]][pRank] = 6; ftext = "Al Qaeda"; }
					case 28:    {PlayerInfo[params[0]][pChar] = 127; PlayerInfo[params[0]][pRank] = 6; ftext = "The Visage"; }
					case 29:    {PlayerInfo[params[0]][pChar] = 189; PlayerInfo[params[0]][pRank] = 7; ftext = "Alemana"; }
		        }
		        new string[128];
		        PlayerInfo[params[0]][pLeader] = params[1];
		        SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
		        format(string, sizeof(string), "Administrador %s asignó el líder de la facción %s a %s.", PlayerName(playerid), ftext, PlayerName(params[0]));
		        MessageEx(playerid, params[0], 0x6ADFFFFF, string);
		    }
		    else Message(playerid, COLOR_GRAD2, "Utilize: /hacerlider <jugador> <facción>");
		    }
		    else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
    zcmd(dejarfaccion, playerid, params[])
    {
PlayerInfo[playerid][pRank] = 0;PlayerInfo[playerid][pLeader] = 0;SetPlayerSkin(playerid, 299);Message(playerid, COLOR_GREY, "Te saliste de la faccion por cuenta propia");
return 1;
}
   	zcmd(hacermiembro, playerid, params[])
	{
        if(PlayerInfo[playerid][pJDS] > 6)
		{
		    if(!sscanf(params, "ui", params[0], params[1]))
		    {
                new ftext[30];
		        if(params[1] < 0 || params[1] > MAX_FACTION) 		return Message(playerid, COLOR_GREY, "ID facción incorrecto.");
                if(!IsPlayerConnected(params[0]))                   return Message(playerid, COLOR_GREY, "Jugado desconectado.");
		        switch(params[1])
		        {
		            case 0: 	{PlayerInfo[params[0]][pChar] = 299; PlayerInfo[params[0]][pRank] = 0; ftext = "Ninguna"; }
		            case 1: 	{PlayerInfo[params[0]][pChar] = 283; PlayerInfo[params[0]][pRank] = 1; ftext = "Policía Local LS"; }
		            case 2: 	{PlayerInfo[params[0]][pChar] = 288; PlayerInfo[params[0]][pRank] = 1; ftext = "Policía Local LV"; }
		            case 3: 	{PlayerInfo[params[0]][pChar] = 287; PlayerInfo[params[0]][pRank] = 1; ftext = "SAEM"; }
		            case 4: 	{PlayerInfo[params[0]][pChar] = 228; PlayerInfo[params[0]][pRank] = 1; ftext = "Medical Center LS"; }
		            case 5:     {PlayerInfo[params[0]][pChar] = 228; PlayerInfo[params[0]][pRank] = 1; ftext = "Medical Center LV"; }
		            case 6:     {PlayerInfo[params[0]][pRank] = 1; ftext = "Taxistas LS"; }
		            case 7:     {PlayerInfo[params[0]][pChar] = 268; PlayerInfo[params[0]][pRank] = 1; ftext = "Mecanicos LS"; }
                    case 8:     {PlayerInfo[params[0]][pRank] = 1; ftext = "Centro Int"; }
                    case 9:     {PlayerInfo[params[0]][pChar] = 270; PlayerInfo[params[0]][pRank] = 1; ftext = "Groove"; }
                    case 10:    {PlayerInfo[params[0]][pChar] = 292; PlayerInfo[params[0]][pRank] = 1; ftext = "La Hermanadad"; }
                    case 11:    {PlayerInfo[params[0]][pChar] = 110; PlayerInfo[params[0]][pRank] = 1; ftext = "Latin Kings"; }
                    case 12:    {PlayerInfo[params[0]][pChar] = 113; PlayerInfo[params[0]][pRank] = 1; ftext = "LCN"; }
                    case 13:    {PlayerInfo[params[0]][pChar] = 123; PlayerInfo[params[0]][pRank] = 1; ftext = "Yakuza"; }
                    case 14:    {PlayerInfo[params[0]][pChar] = 290; PlayerInfo[params[0]][pRank] = 1; ftext = "Familia Korsakova"; }
                    case 15:    {PlayerInfo[params[0]][pRank] = 1; ftext = "Licencieros"; }
                    case 16:    {PlayerInfo[params[0]][pChar] = 295; PlayerInfo[params[0]][pRank] = 1; ftext = "Gobierno"; }
                    case 17:    {PlayerInfo[params[0]][pRank] = 1; ftext = "Radio-Television"; }
                    case 19:    {PlayerInfo[params[0]][pRank] = 1; ftext = "Traficantes"; }
                    case 20:    {PlayerInfo[params[0]][pRank] = 1; ftext = "Triadas"; }
                    case 22:    {PlayerInfo[params[0]][pChar] = 113; PlayerInfo[params[0]][pRank] = 1; ftext = "Los 14 diamantes negros"; }
                    case 23:    {PlayerInfo[params[0]][pChar] = 176; PlayerInfo[params[0]][pRank] = 1; ftext = "Hitman"; }
                    case 24:    {PlayerInfo[params[0]][pChar] = 286; PlayerInfo[params[0]][pRank] = 1; ftext = "FBI"; }
                    case 25:    {PlayerInfo[params[0]][pChar] = 103; PlayerInfo[params[0]][pRank] = 1; ftext = "Blood's"; }
                    case 26:    {PlayerInfo[params[0]][pChar] = 173; PlayerInfo[params[0]][pRank] = 1; ftext = "Cripz"; }
                    case 27:    {PlayerInfo[params[0]][pChar] = 127; PlayerInfo[params[0]][pRank] = 1; ftext = "Al Qaeda"; }
                    case 28:    {PlayerInfo[params[0]][pChar] = 127; PlayerInfo[params[0]][pRank] = 1; ftext = "The Visage"; }
                    case 29:    {PlayerInfo[params[0]][pChar] = 189; PlayerInfo[params[0]][pRank] = 1; ftext = "Alemana"; }
		        }
		        new string[128];
		        PlayerInfo[params[0]][pLeader] = params[1];
		        SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
		        format(string, sizeof(string), "Administrador %s asignó el miembro de la facción %s a %s.", PlayerName(playerid), ftext, PlayerName(params[0]));
		        MessageEx(playerid, params[0], 0x6ADFFFFF, string);
		    }
		    else Message(playerid, COLOR_GRAD2, "Utilize: /hacermiembro <jugador> <facción>");
		}
		else Message(playerid, COLOR_GRAD2, "No autorizado.");
        return 1;
    }
 zcmd(ad, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood de checkpoints, puedes usar el comando cada 1 minuto, para más info /infocheck");
   	    if(PlayerToPoint(5,playerid, 789.7139,-1327.7139,13.5469))
	     {
		if(!sscanf(params, "s[128]", params[0]))
	    {
            #define AD_PRICE 15
	        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GREY, "Necesitas tener un télefono de contacto, compra uno y vuelve");
	        new string[180];
	        if(adds > 0)
	        {
	        	format(string, sizeof(string), "* Tienes que esperar a que te atiendan,  %d segundos.",  adds);
	        	Message(playerid, COLOR_GRAD2, string);
	        	return 1;
	        }
	        if(CheckMoney(playerid, AD_PRICE))
	        {
				format(string, sizeof(string), "[Anuncio] %s Contacto : %s (%d)",  params[0],PlayerName(playerid), PlayerInfo[playerid][pPnumber]);
				OOCNews(-1,string);
	            Bought(playerid, AD_PRICE);
	            Log("logs/anuncio.log", string);
	            Till(13, AD_PRICE);
				format(string, sizeof(string), "> Anunciante: %s (ID: %d) <", PlayerName(playerid), playerid);
	            ABroadCast(COLOR_WHITE,string,1);
	            Log("logs/anuncio.log", string);
	            adds = 60;
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /ad <anuncio>");
		}
        return 1;
	}
	zcmd(adano, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(!Mafioso(playerid) && !Mafia_Alqaeda(playerid))  return Message(playerid, COLOR_GREY, "No permitido.");
        if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "Aún no tienes contacto con Anonymous");
		if(!sscanf(params, "s[128]", params[0]))
	    {
            #define AD_ANONIMO 500
	        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	        new string[180];
	        if(adds > 0)
	        {
	        	format(string, sizeof(string), "* Tienes que esperar a que te atiendan,  %d segundos.",  adds);
	        	Message(playerid, COLOR_GRAD2, string);
	        	return 1;
	        }
	        if(CheckMoney(playerid, AD_ANONIMO))
	        {
	            format(string, sizeof(string), "%s Manda un mensaje de texto discretamente.", PlayerName(playerid));
  				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "[Anuncio Hackeado] %s (Contacto: Anonimo)",  params[0], PlayerInfo[playerid][pPnumber]);
				OOCNews(0xFF0000FF,string);
				format(string, sizeof(string), "%s Recibe un mensaje y lo lee.", PlayerName(playerid));
  				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Message(playerid, COLOR_GRAD2, "Te sacamos 500, ¿Acaso sabes lo dificil que es hackear un anuncio? ATT: Anonymous");
	            Bought(playerid, AD_ANONIMO);
	            Log("logs/anunciohackeado.log", string);
				format(string, sizeof(string), "> Anunciante: %s (ID: %d) <", PlayerName(playerid), playerid);
	            ABroadCast(COLOR_WHITE,string,1);
	            Log("logs/anunciohackeado.log", string);
	            adds = 60;
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /adano <anuncio anonimo>");
        return 1;
	}
	zcmd(rr, playerid, params[])
	{
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "No eres administrador!");
	    if(!sscanf(params, "u", params[0]))
	    {
	        if(IsPlayerConnected(params[0]))
	        {
	        	if(PlayerNeedsHelp[params[0]] == 1)
	        	{
                    new string[128];
                    if(PlayerInfo[params[0]][pDonateT] == 0) {
                    format(string, sizeof(string), "{FFFFFF}GWRP: {3F96CB}%s {FFFFFF}ha rechazado el reporte de [ID:%d] {FF0000}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
                    ABroadCast(-1, string, 1);
					Log("logs/reportesrechazado.log", string);
                    format(string, sizeof(string), "{80FF00}*GWRP*: {FFFFFF}Administrador {FF0000}%s [ID:%d] {FFFFFF}ha rechazado su reporte.", PlayerName(playerid), playerid);
                    Message(params[0], -1, string);
                    }
                    if(PlayerInfo[params[0]][pDonateT] >= 1) {
                    format(string, sizeof(string), "{FFFFFF}GWRP: {3F96CB}%s {FFFFFF}ha rechazado el reporte premium de [ID:%d] {FF0000}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
                    ABroadCast(-1, string, 1);
					Log("logs/reportesrechazadopre.log", string);
                    format(string, sizeof(string), "{80FF00}*GWRP*: {FFFFFF}Administrador {FF0000}%s [ID:%d] {FFFFFF}ha rechazado su reporte.", PlayerName(playerid), playerid);
                    Message(params[0], -1, string);
                    }
                    PlayerNeedsHelp[params[0]] = 0;
                }
                else Message(playerid, COLOR_GREY, "El jugador no ha enviado ningún reporte.");
		    }
		    else Message(playerid, COLOR_GREY, "Jugador no está conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /rr <jugador>");
        return 1;
    }
    zcmd(ar,playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "No eres administrador!");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
    		{
      			if(PlayerNeedsHelp[params[0]] == 1)
	        	{
	        	    new string[128];
					if(PlayerInfo[params[0]][pDonateT] == 0) {
					format(string, sizeof(string), "{FFFFFF}GWRP: {80FF00}%s {FFFFFF}ha aceptado el reporte de [ID:%d] {FF0000}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
					ABroadCast(-1, string, 1);
					PlayerInfo[playerid][pReportesAtendidos]++;
					Log("logs/reportesaceptado.log", string);
					format(string, sizeof(string), "{80FF00}*GWRP*: {FFFFFF}Administrador {FF0000}%s [ID:%d] {FFFFFF}ha aceptado tu reporte porfavor espere.", PlayerName(playerid), playerid);
					Message(params[0], -1, string);
					}
					if(PlayerInfo[params[0]][pDonateT] >= 1) {
					format(string, sizeof(string), "{FFFFFF}GWRP: {80FF00}%s {FFFFFF}ha aceptado el reporte del premium [ID:%d] {FF0000}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
					ABroadCast(-1, string, 1);
					PlayerInfo[playerid][pReportesAtendidos]++;
					Log("logs/reportesaceptadopre.log", string);
					format(string, sizeof(string), "{80FF00}*GWRP*: {FFFFFF}Administrador {FF0000}%s [ID:%d] {FFFFFF}ha aceptado tu reporte porfavor espere.", PlayerName(playerid), playerid);
					Message(params[0], -1, string);
					}
					PlayerNeedsHelp[params[0]] = 0;
     			}
        		else Message(playerid, COLOR_GREY, "El jugador no ha enviado ningún reporte.");
		    }
		    else Message(playerid, COLOR_GREY, "Jugador no está conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /ar <jugador>");
        return 1;
    }
    zcmd(aduda, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "No eres administrador!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /aduda <id>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GREY, "Jugador no está conectado.");
		if(PlayerDuda[params[0]] == 1){
		    new string[128];
		    if(PlayerInfo[params[0]][pDonateT] == 0) {
 	        format(string, sizeof(string), "{FFFFFF}GWRP: {B3D972}%s {FFFFFF}aceptó la duda de [ID:%d] {B39CC8}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
		    ABroadCast(-1, string, 1);
		    PlayerInfo[playerid][pDudasAtendidas]++;
			Log("logs/dudasaceptadas.log", string);
		    format(string, sizeof(string), "{FFFFFF}* {B39CC8}%s {FFFFFF}le va a responder, para hablar con el administrador use /w {B3D972}%d.", PlayerName(playerid), playerid);
		    }
		    if(PlayerInfo[params[0]][pDonateT] >= 1) {
		    format(string, sizeof(string), "{FFFFFF}GWRP: {B3D972}%s {FFFFFF}aceptó la duda premium de [ID:%d] {B39CC8}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
		    ABroadCast(-1, string, 1);
		    PlayerInfo[playerid][pDudasAtendidas]++;
			Log("logs/dudasaceptadaspre.log", string);
		    format(string, sizeof(string), "{FFFFFF}* {B39CC8}%s {FFFFFF}le va a responder, para hablar con el administrador use /w {B3D972}%d.", PlayerName(playerid), playerid);
		    }
		    Message(params[0], -1, string);
		    PlayerDuda[params[0]] = 0;
		}else Message(playerid, COLOR_GREY, "El jugador no ha enviado una duda.");
        return 1;
    }
    zcmd(rduda, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "No eres administrador!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /aduda <id>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GREY, "Jugador no está conectado.");
		if(PlayerDuda[params[0]] == 1){
		    new string[128];
             if(PlayerInfo[params[0]][pDonateT] == 0) {
 	        format(string, sizeof(string), "{FFFFFF}GWRP: {B3D972}%s {FFFFFF}rechazó la duda de [ID:%d] {B39CC8}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
		    ABroadCast(-1, string, 1);
		    format(string, sizeof(string), "{FFFFFF}* {B39CC8}%s {FFFFFF}Rechazó su duda, por favor utilice bien el canal o será sancionado.", PlayerName(playerid));
		    Message(params[0], -1, string);
		    }
		    if(PlayerInfo[params[0]][pDonateT] >= 1) {
		    format(string, sizeof(string), "{FFFFFF}GWRP: {B3D972}%s {FFFFFF}rechazó la duda premium de [ID:%d] {B39CC8}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
		    ABroadCast(-1, string, 1);
		    format(string, sizeof(string), "{FFFFFF}* {B39CC8}%s {FFFFFF}Rechazó su duda, por favor utilice bien el canal o será sancionado.", PlayerName(playerid));
		    Message(params[0], -1, string);
		    }
		    PlayerDuda[params[0]] = 0;
		}else Message(playerid, COLOR_GREY, "El jugador no ha enviado una duda.");
        return 1;
    }
    zcmd(tomarpizza, playerid, params[])
    {
        if(PlayerToPoint(5.0,playerid,379.1396,-114.2661,1001.4922))
        {
            if (PlayerInfo[playerid][pJob] != 6)
		    {
            Message(playerid, COLOR_GRAD2, "Usted no es un repartidor de Pizza");
		    return 1;
    	    }
    	    if (sPizza[playerid] != 1)
    	    {
    	    Message(playerid, COLOR_WHITE, "Usted ha cogido una pizza, espere a un pedido.");
    	    sPizza[playerid] = 1;
    	    }
    	}
    	return 1;
	}
	zcmd(cpizza, playerid, params[])
	{
		if (bPizza[playerid] != 1) return Message(playerid, COLOR_GRAD2, "   Usted no tiene una pizza, antes llame al 111.");
		{
		new string[64];
  		SetHP(playerid, 100);
  		format(string, sizeof(string), "* %s coge su pizza y se la come.", PlayerName(playerid));
  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		bPizza[playerid] = 0;
		return 1;
		}
	}
	zcmd(precioentrada, playerid, params[])
	{
	if(!PlayerToPoint(8.0,playerid,1790.3563,-1591.3485,13.4936)) return Message(playerid, COLOR_GRAD2, "Usted no está en la boleteria");
    new string[45];
	if(PlayerInfo[playerid][pPbiskey] == 1) {
	if(!sscanf(params, "i", params[0])){
	            	    HouseInfo[playerid][hprecioentrada] = params[0];
        	        if(params[0] >= 0 && params[0] <= 20000){
        	        format(string, sizeof(string), "Ajustaste el precio a  %d", params[0]);
			        SendClientMessage(playerid, COLOR_WHITE, string);
                        } else Message(playerid, COLOR_GRAD2, "El precio debe estar entre 0 y 20000");
				    } else Message(playerid, COLOR_GRAD2, "/editprecio [precio]");
        	    } else Message(playerid, COLOR_GRAD2, "No eres dueño del negocio");
			    return 1;
		    }
	zcmd(comprarentrada, playerid, params[])
	{
        if(PlayerInfo[playerid][pDonateT] >= 1) return Message(playerid,COLOR_GRAD2, "Usted es premium no necesita comprar entrada.");
        if(ComproBoleto[playerid] == 1) return Message(playerid,COLOR_GRAD2, "Usted ya tiene una entrada.");
		if(!PlayerToPoint(8.0,playerid,1790.3563,-1591.3485,13.4936)) return Message(playerid, COLOR_GRAD2, "Usted no está en la boleteria");
		new precioentrada;
        if(CheckMoney(playerid,HouseInfo[playerid][hprecioentrada]))
		{
		Bought(playerid, HouseInfo[playerid][hprecioentrada]);
		ComproBoleto[playerid] = 1;
		Message(playerid, -1, "Compraste la entrada al club {E4C65A}VIP, {FFFFFF}Ahora puedes entrar al club.");
		Till(1,HouseInfo[playerid][hprecioentrada]);
		Till(1, precioentrada);
		}
		return 1;
	}
    zcmd(vpizza, playerid, params[])
    {
        if (PlayerInfo[playerid][pJob] != 6) return Message(playerid,COLOR_GRAD2, "Usted no es Pizzero.");
        if (sscanf(params, "u", params[0])) return Message(playerid,COLOR_GRAD2, "Utiliza: /vpizza <PlayerID>");
        if (sPizza[playerid] == 1)
        {
            if (ProxDetectorS(8.0, playerid, params[0]))
            {
				new string[256]
       			format(string, sizeof(string), "* Ha entregado una pizza a %s", PlayerName(params[0]));
       			Message(playerid, COLOR_WHITE, string);
       			format(string, sizeof(string), "{A4D9EB}* Repartidor de Pizza %s le ha dado una pizza. {FF4564}/cpizza", PlayerName(playerid));
       			Message(params[0], -1, string);
       			format(string, sizeof(string), "* %s toma la pizza y se lo da a %s", PlayerName(playerid), PlayerName(params[0]));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
       			bPizza[params[0]] = 1;
       			sPizza[playerid] = 0;
            } else Message(playerid, COLOR_GRAD2, "* Primero recoge la pizza de la cocina.");
		}
		return 1;
	}
	zcmd(vhelado, playerid, params[])
	{
        new idcar = GetPlayerVehicleID(playerid);
        if(PlayerInfo[playerid][pJob] != 7) return Message(playerid,COLOR_GRAD2, "Usted no es Heladero.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsAHelado(idcar)) return Message(playerid, COLOR_GRAD2, "* No estás en el carro de heladero.");
            if(ProxDetectorS(8.0, playerid, params[0]))
            {
                new string[256]
       			format(string, sizeof(string), "* Has vendido un helado a %s", PlayerName(params[0]));
       			Message(playerid, COLOR_WHITE, string);
       			format(string, sizeof(string), "{A4D9EB}* Heladero %s le ha dado un helado. {FF4564}/chelado", PlayerName(playerid));
       			Message(params[0], -1, string);
       			Helado[params[0]] = 1;
       		}
       		else Message(playerid,COLOR_GRAD2, " No estás cerca del jugador");
       	}
       	else Message(playerid,COLOR_GRAD2, " Usar: /vhelado <id>");
       	return 1;
    }
	zcmd(chelado, playerid, params[])
	{
		if (Helado[playerid] != 1) return Message(playerid, COLOR_GRAD2, "   Usted no tiene un helado, busque a un heladero.");
		{
		new string[128];
  		SetPlayerArmour(playerid, 80);
  		format(string, sizeof(string), "* %s come su helado.", PlayerName(playerid));
  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        SetHP(playerid, 100);
        SetPlayerArmour(playerid, 100);
		Helado[playerid] = 0;
		return 1;
		}
	}
//	zcmd(venderveh12, playerid, params[])    PlayerInfo[playerid][pHmm] = 1000;
	zcmd(aceptarpizza, playerid, params[])
	{
        if (PlayerInfo[playerid][pJob] != 6) return Message(playerid,COLOR_GRAD2, "Usted no es Pizzero.");
        if (PizzaCallTime[playerid] > 0) return Message(playerid,COLOR_GRAD2, "Usted ya acepto un pedido de pizza, espere 90 seg para aceptar otro!");
        if (PizzaCall < 999)
        {
            new string[128]
            format(string, sizeof(string), "{FFFFFF}Central: {EE844C}%s {FFFFFF}acepto el pedido de {EE844C}%s{FFFFFF}, esperen otros pedidos.",PlayerName(playerid), PlayerName(PizzaCall));
            SendJobMessage(6, -1, string);
            Message(playerid, COLOR_WHITE, "* Tiene 90 segundos para llegar al destino!");
            format(string, sizeof(string), "{FFFFFF} Pizzero {EE844C}%s {FFFFFF}ha aceptado su pedido, espere en su posición actual.",PlayerName(playerid));
            Message(PizzaCall, -1, string);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(PizzaCall, X, Y, Z);
            SetPlayerCheckpoint(playerid, X, Y, Z, 5);
            GText(playerid, "~w~CheckPoint~n~~r~Marcado", 5000, 1);
            PizzaCallTime[playerid] = 1;
            PizzaCall = 999;
		}
        else
			Message(playerid, COLOR_GRAD2, "* Nadie a echo un pedido de pizza.");
			return 1;
	}
 zcmd(colgar, playerid, params[])
    {
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
        new caller = Mobile[playerid];
        SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
        if(IsPlayerConnected(caller))
		{
  			if(caller != INVALID_PLAYER_ID)
			{
					if(caller != 255)
					{
						if(caller < 255)
						{
							Message(caller,  COLOR_GRAD2, "Llamada finalizada.");
							Message(playerid,  COLOR_GRAD2, "Llamada finalizada.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							Mobile[caller] = 255;
						}
						CellTime[playerid] = 0;
						Mobile[playerid] = 255;
						PlayerInfo[playerid][pSpeaker] = 0;
						UnidentifedCall[playerid] = 0;
					}
			}
		}
		Mobile[playerid] = 255;
        return 1;
    }
    zcmd(contestar, playerid, params[])
    {
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Usted ya esta en una llamada...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
					    new string[64];
						Mobile[playerid] = i;
						format(string, sizeof(string), "* %s contesta su teléfono.", PlayerName(playerid));
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}

				}
			}
		}
        return 1;
    }
    //zcmd - Bank
    zcmd(balance, playerid, params[])
	{
	    if(!IsPlayerConnected(playerid))            return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
        if(IsAtATM(playerid) || IsAtBank(playerid))
	    {
            new string[64];
			format(string, sizeof(string), "- Tienes %d$ en tu cuenta bancaria.",PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		} else Message(playerid, COLOR_GREY, "No estás en un cajero!");
		return 1;
	}

    zcmd(evaluar, playerid, params[])
    {
        if(!IsAnInstructor(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres instructor!");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0]))            return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(8.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(IsPractising[params[0]] == 0)
            {
                new string[128];
				format(string, sizeof(string), "El examen práctico ha comenzado. Evaluador: %s - Alumno: %s", PlayerName(playerid), PlayerName(params[0]));
				Message(playerid,0xEEBE1AFF,string);
				Message(params[0],0xEEBE1AFF,string);
				IsPractising[params[0]] = 1;
			}
			else
   			{
				Message(playerid,0xEEBE1AFF,"Examen finalizado.");
				Message(params[0],0xEEBE1AFF,"Examen finalizado.");
				IsPractising[params[0]] = 0;
			}
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /evaluar <jugador>");
        return 1;
    }
    zcmd(licencias, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
			{
   				if(ProxDetectorS(5.0, playerid, params[0]))
			    {
					new string[64];
					ClearChatbox(params[0], 10);
					format(string, sizeof(string), "|__ Licencias de %s __|", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					if(PlayerInfo[playerid][pCarLic] > 0)   Message(params[0], COLOR_GRAD2, " Licencia de conducción");
					if(PlayerInfo[playerid][pFlyLic] > 0)   Message(params[0], COLOR_GRAD2, " Licencia de vuelo");
					if(PlayerInfo[playerid][pBoatLic] > 0)  Message(params[0], COLOR_GRAD2, " Licencia de navegación");
					if(PlayerInfo[playerid][pGunLic] > 0)   Message(params[0], COLOR_GRAD2, " Licencia de armas");
					format(string, sizeof(string), "* %s muestra sus licencias a %s.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    }
			    else Message(playerid, COLOR_GRAD2, "Muy lejos del jugador.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /licencias <jugador>");
        return 1;
    }
    zcmd(licencia, playerid, params[])
    {
        new string[128], item[64];
        if(!sscanf(params, "us[64]i", params[0], item))
        {
            if(IsAnInstructor(playerid))
	        {
				if(IsPlayerConnected(params[0]))
				{
				    if(ProxDetectorS(5.0, playerid, params[0]))
				    {
				        if(strcmp(item,"conduccion",true) == 0)
				        {
				            format(string, sizeof(string), "* Diste la licencia de %s a %s", PlayerName(params[0]), item);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Licenciero %s te dió la licencia de %s.", PlayerName(playerid), item);
					        SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
					        PlayerInfo[params[0]][pCarLic] = 1;
					        return 1;
				        }
					    if(strcmp(item,"aviacion",true) == 0)
					    {
				            format(string, sizeof(string), "* Diste la licencia de %s a %s", PlayerName(params[0]), item);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Licenciero %s te dió la licencia de %s.", PlayerName(playerid), item);
					        SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
					        PlayerInfo[params[0]][pFlyLic] = 1;
					        return 1;
					    }
					    if(strcmp(item,"navegacion",true) == 0)
					    {
				            format(string, sizeof(string), "* Diste la licencia de %s a %s", PlayerName(params[0]), item);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Licenciero %s te dió la licencia de %s.", PlayerName(playerid), item);
					        SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
					        PlayerInfo[params[0]][pBoatLic] = 1;
					        return 1;
					    }
				        else Message(playerid, COLOR_GRAD2, "Nombre incorrecto.");
				    }
				    else Message(playerid, COLOR_GRAD2, "Muy lejos del comprador.");
				}
				else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
	        }
	        else Message(playerid, COLOR_GRAD2, "No eres licenciero.");
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /licencia <jugador> <licencia>");
    		Message(playerid, COLOR_GRAD2, "Licencias: conduccion, aviacion, navegacion");
        }
        return 1;
    }
    zcmd(noticias, playerid, params[])
    {
        if(Journalist(playerid))
		{
		    if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No tienes rango suficiente!");
		    new car = GetVehicleModel(GetPlayerVehicleID(playerid));
		    if(PlayerInfo[playerid][pRank] == 3)
		    {
      			if(car == 488 || car == 582)
	    		{
       				if(TalkingLive[playerid] == 0)
		    		{
        				TalkingLive[playerid] = 1;
				        Message(playerid, COLOR_WHITE, "Has entrado en antena, estás hablando para todo San Andreas");
				        Message(playerid, COLOR_WHITE, "Recuerda que solo puedes hablar en un vehículo CNN con ese rango.");
					}
					else
	    			{
        				TalkingLive[playerid] = 0;
				        Message(playerid, COLOR_WHITE, "Estás fuera de antena.");
					}
    			}
		    	else Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo CNN!");
	    	}
		    else
		    {
		    	if(TalkingLive[playerid] == 0)
			    {
       				TalkingLive[playerid] = 1;
			        Message(playerid, COLOR_WHITE, "Has entrado en antena, estás hablando para todo San Andreas");
				}
				else
    			{
       				TalkingLive[playerid] = 0;
			        Message(playerid, COLOR_WHITE, "Estás fuera de antena.");
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "No eres reportero.");
        return 1;
    }





    zcmd(entrevista, playerid, params[])
    {
        if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No tienes rango suficiente!");
        if(!Journalist(playerid)) 			return Message(playerid, COLOR_GRAD2, "No eres reportero.");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
            {
                new string[128];
                if(TalkingLive[params[0]] == 0)
                {
                    if(ProxDetectorS(5.0, playerid, params[0]))
					{
					    if(Facturing[params[0]] == 1) return Message(playerid, COLOR_GRAD2, "Este jugador está ocupado, espere.");
					    if(params[0] == playerid) { SendClientMessage(playerid, COLOR_GREY, "No puedes entrevistarte ati mismo!"); return 1; }
						format(string, sizeof(string), "* Ofreciste a %s una entrevista", PlayerName(params[0]));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s te ofrece ser entrevistado.", PlayerName(playerid));
						SendRequest(params[0], string);
						Petition_ID[params[0]] = 3;
						LiveOffer[params[0]] = playerid;
						Facturing[params[0]] = 1;
						Interview = 1;
						Interviewer = PlayerName(playerid);
					}
					else return Message(playerid, COLOR_GREY, "El jugador está muy lejos!");
                }
                else
                {
                    TalkingLive[params[0]] = 0;
                    format(string, sizeof(string), "* %s anuló la entrevista a %s", PlayerName(playerid), PlayerName(params[0]));
					Message(params[0], COLOR_WHITE, string);
                }
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /entrevista <jugador>");
        return 1;
    }
    zcmd(centrevista, playerid, params[])
    {
        if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No tienes rango suficiente!");
        if(Journalist(playerid))
		{
		    new string[80];
			Message(playerid, COLOR_WHITE, "Cancelaste la entrevista.");
  			for(new i = 0; i != MAX_PLAYERS; i++ )
	    	{
				if(TalkingLive[i] > 0)
				{
				    format(string, sizeof(string), "** Entrevistado %s salió de la entrevista.", PlayerName(i));
			    	Message(i, COLOR_WHITE, string);
				    TalkingLive[i] = 0;
				}
	    	}
		}
		else	Message(playerid, COLOR_GRAD2, "No eres reportero.");
        return 1;
    }
	zcmd(desbug, playerid, params[])
	{
        if(IsPlayerConnected(playerid))
        {
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid, 0);
		    Message(playerid, -1, " {98CDFF}Su problema fue solucionado {FFFFFF}correctamente. {FFA4CB}[Desbug]");
		}
		else Message(playerid, COLOR_GRAD2, " Usted no esta logeado.");
        return 1;
	}
	zcmd(aceptarseguro, playerid, params[])
	{
	    if(PlayerInfo[playerid][pSeguro] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya tienes seguro del hospital!");
        if(CheckMoney(playerid,Samd_CompraSeguro))
		{
			if(PlayerToPoint(2.0,playerid,1600.7926,1748.7646,-60.5596))
			{
                PlayerInfo[playerid][pSeguro] = 1;
                Bought(playerid, Samd_CompraSeguro);
                Message(playerid, -1, "{FF393E}Hospital: {FFFFFF}Adquiriste el seguro médico de Los Santos.");
                Message(playerid, -1, "{FF393E}Hospital: {FFFFFF}Ahora cuando tengas un accidente te atenderemos en este hospital.");
                Samd_Fondos += Samd_CompraSeguro;
			}
		else Message(playerid, -1, "No dispones de suficiente dinero para adquirir el seguro médico.");
		}
        return 1;
   }
/////////////////////////////////////////////////////////////////////////////////////

    zcmd(cseguro, playerid, params[])
		{
	    new string[105];
        format(string, sizeof(string), "* </AceptarSeguro> La taxa de Compra de seguro Medico se encuentra en %d$. ¿Desea contratarlo?", Samd_CompraSeguro);
	    Message(playerid, AMARILLO_ADMIN, string);
		return 1;
	}


//////////////////////////////////////////////////////////////////////////////////////

zcmd(dseguro, playerid, params[])
	{
	    if(PlayerInfo[playerid][pSeguro] == 0 ) return Message(playerid, COLOR_GRAD2, "¡No tienes seguro del hospital!");

		{
		        PlayerInfo[playerid][pSeguro] = 0;
                Message(playerid, -1, "{FF393E}Hospital: {FFFFFF}Renunciaste a tu seguro médico.");


			}

        return 1;
   }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////
    zcmd(placa, playerid, params[])
    {
        new string[90];
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
			{
			    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GRAD2, "Muy lejos de el jugador.");
			    if(Team_LSPD(playerid))
				{
				    ClearChatbox(playerid, 5);
    				Message(params[0], COLOR_LIGHTBLUE, "-- Los Santos Police Departament --");
				    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "Nombre: %s - Rango: Comandante", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "Nombre: %s - Rango: Inspector", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Nombre: %s - Rango: Capitán", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Nombre: %s - Rango: Teniente", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Nombre: %s - Rango: Sargento", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Nombre: %s - Rango: Investigador", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Nombre: %s - Rango: Oficial", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Nombre: %s - Rango: Cadete", PlayerName(playerid)); }
				    Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(Team_LVPD(playerid))
				{
				    ClearChatbox(playerid, 5);
    				Message(params[0], COLOR_LIGHTBLUE, "-- Las Venturas Police Departament --");
				    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "Nombre: %s - Rango: Comandante", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "Nombre: %s - Rango: Inspector", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Nombre: %s - Rango: Capitán", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Nombre: %s - Rango: Teniente", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Nombre: %s - Rango: Sargento", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Nombre: %s - Rango: Investigador", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Nombre: %s - Rango: Oficial", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Nombre: %s - Rango: Cadete", PlayerName(playerid)); }
				    Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(Team_NG(playerid))
				{
				    ClearChatbox(playerid, 5);
    				Message(params[0], COLOR_GREEN, "-- San Andreas Ejercito Militar --");
					if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "Nombre: %s - Rango: Coronel", PlayerName(playerid)); }
				    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "Nombre: %s - Rango: Mayor", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Nombre: %s - Rango: Capitan", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Nombre: %s - Rango: Teniente", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Nombre: %s - Rango: Sargento", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Nombre: %s - Rango: Trooper", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Nombre: %s - Rango: Soldado", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Nombre: %s - Rango: Cabo", PlayerName(playerid)); }
				    Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
				else if(Team_FBI(playerid))
				{
				    ClearChatbox(playerid, 5);
				    Message(params[0], COLOR_LIGHTBLUE, "-- Federal Bureau of Investigation --");
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Nombre: %s - Rango: Director", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Nombre: %s - Rango: Sub-Director", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Nombre: %s - Rango: Criminalista", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Nombre: %s - Rango: Especial", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Nombre: %s - Rango: S. Agente", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Nombre: %s - Rango: Agente", PlayerName(playerid)); }
					Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(Umbrella7(playerid))
				{
				    ClearChatbox(playerid, 5);
				    Message(params[0], COLOR_LIGHTBLUE, "-- Agencia Central de Inteligencia --");
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Nombre: %s - Rango: Director", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Nombre: %s - Rango: Agente 47", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Nombre: %s - Rango: Super Agente", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Nombre: %s - Rango: Guardaespaldas", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Nombre: %s - Rango: Detective", PlayerName(playerid)); }
					if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Nombre: %s - Rango: Secretario", PlayerName(playerid)); }
					Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(Bodyguard_ContractedTime[playerid] > 0 && Umbrella7(playerid))
				{
				    ClearChatbox(playerid, 5);
				    Message(params[0], COLOR_YELLOW, "-- Departamento de Seguridad CA --");
                    format(string, sizeof(string), "  Nombre: %s - Detective", PlayerName(playerid));
                    Message(params[0], COLOR_WHITE, string);
                }
				else  Message(playerid, COLOR_GRAD2, "¡No tienes una placa!");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /placa <id>");
        return 1;
    }
    zcmd(seguro, playerid, params[])
    {
 		new string[90];
 		if(PlayerInfo[playerid][pSeguro] == 0) return Message(playerid, COLOR_GRAD2, "No tienes un seguro medico.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!ProxDetectorS(8.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(PlayerInfo[playerid][pSeguro] == 1)
            {
	            Message(params[0], COLOR_GREEN, "__ Tarjeta de Seguro __");
   		        format(string, sizeof(string), "   {FF231E}Nombre: {FFFFFF}%s", PlayerName(playerid));
   		        Message(params[0], -1, string);
   	         	format(string, sizeof(string), "   {FF231E}Clinica: {FFFFFF}Los Santos Medical Center");
   		        Message(params[0], -1, string);
	            format(string, sizeof(string), "* %s le muestra su tarjeta de seguro a %s.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
        } else Message(playerid, COLOR_GRAD2, "Utilize: /seguro <id>");
        return 1;
    }
	zcmd(pasaporte, playerid, params[])
    {
		new string[90];
        if(!sscanf(params, "u", params[0]))
        {
            if(!ProxDetectorS(8.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(PlayerInfo[playerid][pPasaporte] == 1)
            {
	            Message(params[0], -1, "{3C9DDD}__ Pasaporte __");
   		        format(string, sizeof(string), "   {FFFFFF}Nombre: %s", PlayerName(playerid));
   		        Message(params[0], -1, string);
   	         	format(string, sizeof(string), "   {FFFFFF}Estado: {3FFE9B}En Orden");
   		        Message(params[0], -1, string);
	            format(string, sizeof(string), "* %s le muestra su pasaporte a %s.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(PlayerInfo[playerid][pPasaporte] == 0)
            {
	            Message(params[0], -1, "{3C9DDD}__ Pasaporte __");
   		        format(string, sizeof(string), "   {FFFFFF}Nombre: %s", PlayerName(playerid));
   		        Message(params[0], -1, string);
   	         	format(string, sizeof(string), "   {FFFFFF}Estado: {F95322}Vencido");
   		        Message(params[0], -1, string);
	            format(string, sizeof(string), "* %s le muestra su pasaporte a %s.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
        } else Message(playerid, COLOR_GRAD2, "Utilize: /pasaporte <id>");
        return 1;
    }
    zcmd(re, playerid, params[])
    {
        if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
        if(JustReported[playerid] == 1 && PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "{D3D751}2 Minutos {FFFFFF}para enviar otro reporte!");
        if(JustReported[playerid] == 1 && PlayerInfo[playerid][pDonateT] >= 1) return Message(playerid, COLOR_GRAD2, "Premium: Al ser premium sólo debes esperar 1 minuto para enviar otro reporte!");
		if(sscanf(params, "us[64]", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "* Use: /re <playerid> <Razón>");
		if(IsPlayerConnected(params[0]))
        {
            new string[128];
            if(PlayerInfo[playerid][pDonateT] == 0) {
			format(string, sizeof(string), "{FA4E60}Reporte: [ID:%d]%s, Reporta a: [ID:%d]%s", playerid, PlayerName(playerid), params[0], PlayerName(params[0]));
			ABroadCast(-1, string, 1);
			format(string, sizeof(string), "{FA4E60}Razon: %s", params[1]);
			ABroadCast(-1, string, 1);
			SetTimerEx("ReportReset", 120000, false, "i", playerid);
			}
			if(PlayerInfo[playerid][pDonateT] >= 1) {
			format(string, sizeof(string), "[PREMIUM]Reporte: [ID:%d]%s, Reporta a: [ID:%d]%s", playerid, PlayerName(playerid), params[0], PlayerName(params[0]));
			ABroadCast(ORANGE_ADMIN, string, 1);
			format(string, sizeof(string), "Razon: %s", params[1]);
			ABroadCast(ORANGE_ADMIN, string, 1);
			SetTimerEx("ReportReset", 60000, false, "i", playerid);
			}
			SendClientMessage(playerid, 0x009D4FFF, "Tu reporte fue enviado con exito a los Administradores y sera procesado!");
			JustReported[playerid] = 1;
			PlayerNeedsHelp[playerid] = 1;
        } else Message(playerid, COLOR_GRAD2, " Ese jugador está desconectado.");
        return 1;
    }
	zcmd(duda, playerid, params[])
    {
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /duda <pregunta>");
        if((nod)) return Message(playerid, COLOR_GRAD2, "* Canal de duda desactivado");
        if(duda[playerid] == 1 && PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "* Debés esperar 1 minuto para enviar otra pregunta ya que no eres premium");
            new string[128];
            duda[playerid] = 1;
            PlayerDuda[playerid] = 1;
            if(PlayerInfo[playerid][pDonateT] == 0) {
			format(string, sizeof(string), "Pregunta de %s : %s (ID:%d) {FFF613}[/aduda]", PlayerName(playerid), params[0], playerid);
			ABroadCast(COLOR_ASKQ,string,1);
			SetTimerEx("EnableQuest", 60000, false, "i", playerid);
			ShowPlayerDialog(playerid, DP, DIALOG_STYLE_MSGBOX, "{FFFFFF}Pregunta Enviada Exitosamente", "\n\t    {FFFF00}Pregunta enviada Exitosamente. Espere 1 minuto para volver a mandar otra duda. \n\n", "Ok", "");
			}
			if(PlayerInfo[playerid][pDonateT] >= 1) {
			format(string, sizeof(string), "[PREMIUM]Pregunta de %s : %s (ID:%d) {FFF613}[/aduda]", PlayerName(playerid), params[0], playerid);
			ABroadCast(ORANGE_ADMIN,string,1);
			ShowPlayerDialog(playerid, DP, DIALOG_STYLE_MSGBOX, "{FFFFFF}Pregunta Enviada Exitosamente", "\n\t    {FFFF00}Pregunta enviada Exitosamente. Puedes enviar otra duda sin tener que esperar ya que eres premium. \n\n", "Ok", "");
			}
        return 1;
    }
    zcmd(solicitaradmin, playerid, params[])
    {
        if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
        if((!nod) && duda[playerid] == 0)
        {
            duda[playerid] -= 1;
            SetTimerEx("EnableQuest", 60000, false, "i", playerid);
			new so[] = "{77F84B}>>{FFFFFF}Ayudante\n{DF2019}>>{FFFFFF}Moderador\n{7BAEFC}>>{FFFFFF}Administrador\n{D19B8D}>>{FFFFFF}Técnico"
			ShowPlayerDialog(playerid, DIALOG_SO, DIALOG_STYLE_LIST," {BAEC4B}> {FFFFFF}Panel de ayuda.", so, "Solicitar", "Cerrar");
		} else Message(playerid, COLOR_GRAD2, "* Espere 1 minuto para volver a usar este comando.");
        return 1;
    }
    zcmd(as, playerid, params[])
	{
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "No eres administrador!");
        if(!sscanf(params, "u", params[0]))
		{
		    if(IsPlayerConnected(params[0]))
		    {
		    	if(PlayerSol[params[0]] == 1)
		    	{
		    	    new string[128];
		    	    format(string, sizeof(string), "{FFFFFF}GWRP: {B3D972}%s {FFFFFF}aceptó solicitud de [ID:%d] {B39CC8}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
		    	    ABroadCast(-1, string, 1);
		    	    PlayerInfo[playerid][pSolicitudes]++
					Log("logs/solicitudesaceptadas.log", string);
		    	    format(string, sizeof(string), "{FFFFFF}* Administrador {B39CC8}%s {FFFFFF}en un momento lo atenderá {B3D972}%d, {FFFFFF}espere un momento.", PlayerName(playerid), playerid);
		    	    Message(params[0], -1, string);
		    	    PlayerSol[params[0]] = 0;
		    	} else Message(playerid, COLOR_GREY, "El jugador no ha echo una solicitud.");
		    } else Message(playerid, COLOR_GREY, "Jugador no está conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /as <id>");
        return 1;
    }
	////////////////////////////

    zcmd(sp, playerid, params[])
	{
		if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "No eres administrador!");
		if (sscanf(params, "u", params[0])) return Message(playerid,COLOR_GRAD2, "Utiliza: /specplayer <PlayerID>");
		if(!IsPlayerConnected(params[0])) Message(playerid,COLOR_GRAD2,"Jugador no conectado");

		else
		{
			if (!IsPlayerInAnyVehicle(params[0]))

			{
                new string[120];
				format(string, sizeof(string), "%s esta spectando a %s", PlayerName(playerid), PlayerName(params[0]));
				SendAdminMessaged(COLOR_LIGHTBLUE, string);
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectatePlayer(playerid, params[0]);
				SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
				return 1;
			}
			else
			{
                new string[120];
				format(string, sizeof(string), "%s esta spectando a %s", PlayerName(playerid), PlayerName(params[0]));
				SendAdminMessaged(COLOR_LIGHTBLUE, string);
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectateVehicle(playerid, GetPlayerVehicleID(params[0]));
				SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
				return 1;
			}
	 	}
		return 1;
	}
zcmd(spe, playerid, params[])
	{
		if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "No eres administrador!");
		if (sscanf(params, "d", params[0])) return Message(playerid,COLOR_GRAD2, "Utiliza: /specplayer <PlayerID>");
		if(!IsPlayerConnected(params[0])) Message(playerid,COLOR_GRAD2,"Jugador no conectado");

		else
		{
			if (!IsPlayerInAnyVehicle(params[0]))

			{
                new string[120];
				format(string, sizeof(string), "%s esta spectando a %s", PlayerName(playerid), PlayerName(params[0]));
				SendAdminMessaged(COLOR_LIGHTBLUE, string);
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectatePlayer(playerid, params[0]);
				SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
				return 1;
			}
			else
			{
                new string[120];
				format(string, sizeof(string), "%s esta spectando a %s", PlayerName(playerid), PlayerName(params[0]));
				SendAdminMessaged(COLOR_LIGHTBLUE, string);
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectateVehicle(playerid, GetPlayerVehicleID(params[0]));
				SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
				return 1;
			}
	 	}
		return 1;
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(specoff, playerid, params[])
	{
	if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "No eres admin");
	SetTimerEx("skinspectar",500,0,"i",playerid);
 		return TogglePlayerSpectating(playerid, 0);
	}
	zcmd(darloldineroxd, playerid, params[])
	{
		if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        if(PlayerInfo[playerid][pJDS] > 8 || PlayerInfo[playerid][pDarpremium] == 1)
		        {
		            new string[80];
		            GivePlayerMoney(params[0], params[1]);
					format(string, 80, "Administrador %s ha dado %d$ a %s", PlayerName(playerid),params[1],PlayerName(params[0]));
					Log("logs/dardinero.log", string);
				 	return A_Info(string);
		        } else SendClientMessage(playerid, COLOR_GRAD2, "¡No eres administrador!");
		    } else SendClientMessage(playerid,  COLOR_GRAD2, "ID Inválida");
		} else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /dardinero [PlayerID] [$]");
		return 1;
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(resetdinero, playerid, params[])
	{
	    if(!sscanf(params, "i", params[0]))
	    	{
	        if(params[0] != INVALID_PLAYER_ID)
	        	{
	            if(PlayerInfo[playerid][pJDS] >= 8)
	            	{
	            	ResetPlayerMoney(params[0]);
	            	PlayerInfo[params[0]][pAccount] = 0;
				    SendClientMessage(playerid, COLOR_GRAD2, "Reseteo de cuenta bancaria Completado");
				    }
                else SendClientMessage(playerid, COLOR_GRAD2, "¡No eres administrador!");
                }
            else SendClientMessage(playerid,  COLOR_GRAD2, "ID Inválida");
            }
        else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /resetdinero [PlayerID] [$]");
	    return 1;
		}

	///////////////////////////////////////////////////////////////////////////////////////////////////

    zcmd(darvida, playerid, params[])
    {
        if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        if(PlayerInfo[playerid][pJDS] >= 7)
		        {
					new string[80];
		            SetHP(params[0],params[1]);
					format(string, 80, "Administrador %s ha establecido a %s %dHP", PlayerName(playerid),PlayerName(params[0]),params[1]);
					Log("logs/darvida.log", string);
				 	return A_Info(string);
		        } else SendClientMessage(playerid, COLOR_GRAD2, "¡No autorizado!");
		    } else SendClientMessage(playerid,  COLOR_GRAD2, "ID Inválida");
		} else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /darvida [PlayerID] [HP]");
        return 1;
    }
    zcmd(darchaleco, playerid, params[])
    {
        if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        if(PlayerInfo[playerid][pJDS] >= 7)
		        {
		        if(Inmune3(playerid)){
          			SendClientMessage(playerid, COLOR_GRAD2, "Se te prohibió el comando por abusador");
		            return 1;
		        }
		            new string[80];
		            SetPlayerArmour(params[0],params[1]);
					format(string, 80, "Administrador %s ha establecido a %s %d chaleco", PlayerName(playerid),PlayerName(params[0]),params[1]);
					Log("logs/darchaleco.log", string);
				 	return A_Info(string);
		        } else SendClientMessage(playerid, COLOR_GRAD2, "¡No eres administrador!");
		    } else SendClientMessage(playerid,  COLOR_GRAD2, "ID Inválida");
		} else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /darchaleco [PlayerID] [armor]");
        return 1;
    }
	zcmd(forzarpayday, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        else
        {
            PayDay();
		}
        return 1;
    }
    zcmd(loteria, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 6) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        else
        {
			new string[128];
            format(string, sizeof(string), "{2F99B5}Noticias de la Loteria: {FFFFFF}Hemos empesado la elección de la loteria.");
	        OOCOff(COLOR_WHITE, string);
	        new rand = random(250);
	        if(rand < 257) { rand += 3; }
	        Lotto(rand);
		}
        return 1;
    }
    zcmd(setpayday, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0]))
        {
            new string[32];
            PayDayLeft = params[0];
            format(string, sizeof(string), "PayDay left: %d minutes", PayDayLeft);
            Message(playerid, COLOR_GRAD2, string);
            if(params[0] == 0)
			{
		 		PayDay();
			}
        }   else Message(playerid, COLOR_GRAD2, "Utiliza: /setpayday <MinutesLeft>");
        return 1;
    }
    zcmd(payday, playerid, params[])
    {
        new string[64];
        format(string, sizeof(string), "* Faltan %d minutos para obtener el PayDay",PayDayLeft);
        return Message(playerid, COLOR_GRAD2, string);
    }
    zcmd(daralgunosbenxd, playerid, params[])
    {
        if(IsPlayerConnected(playerid))
	    {
 	        if(PlayerInfo[playerid][pJDS] > 7 || PlayerInfo[playerid][pDarpremium] == 1)
	        {
	            if(!sscanf(params, "uii", params[0],params[1],params[2]))
	            {
	                new string[120];
	                if(IsPlayerConnected(params[0]))
	    			{
			    	    if(params[0] != INVALID_PLAYER_ID)
			    	    {
			    	        switch (params[1])
							{
								case 1:
								{
									PlayerInfo[params[0]][pLevel] = params[2];
									format(string, sizeof(string), "El administrador %s modificó el nivel de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 2:
								{
									PlayerInfo[params[0]][pAccount] = params[2];
									format(string, sizeof(string), "El administrador %s modificó la cuenta bancaria de %s a: $%d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 3:
								{
									PlayerInfo[params[0]][pPnumber] = params[2];
									format(string, sizeof(string), "El administrador %s modificó el teléfono de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 4:
								{
									PlayerInfo[params[0]][pExp] = params[2];
                                    format(string, sizeof(string), "El administrador %s modificó los puntos de respeto de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 5:
								{
									PlayerInfo[params[0]][pPhousekey] = params[2];
									format(string, sizeof(string), "El administrador %s modificó la llave casa de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 6:
								{
									PlayerInfo[params[0]][pPbiskey] = params[2];
                                  format(string, sizeof(string), "El administrador %s modificó la llave negocio de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
							/*	case 7:
								{
									PlayerInfo[params[0]][pHizo] = params[2];
									format(string, sizeof(string), "Reset de cuenta al relogear.");
									Message(playerid, COLOR_GRAD2, string);
								}*/
								case 8:
								{
								    PlayerInfo[params[0]][pPcarkey] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó la llave del auto 1 de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 9:
								{
								    PlayerInfo[params[0]][pDEagle] = params[2];
                                    format(string, sizeof(string), "Deagle: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerStats(params[0]);
								}
								case 10:
								{
								    PlayerInfo[params[0]][pShotgun] = params[2];
								    format(string, sizeof(string), "Shotgun: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerStats(params[0]);
								}
								case 11:
								{
								    PlayerInfo[params[0]][pMP5] = params[2];
								    format(string, sizeof(string), "MP5: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerStats(params[0]);
								}
								case 12:
								{
								    PlayerInfo[params[0]][pAK47] = params[2];
								    format(string, sizeof(string), "AK47: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerStats(params[0]);
								}
								case 13:
								{
								    PlayerInfo[params[0]][pM4] = params[2];
								    format(string, sizeof(string), "M4: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerStats(params[0]);
								}
								case 14:
								{
								    PlayerInfo[params[0]][pSniper] = params[2];
								    format(string, sizeof(string), "Sniper: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerStats(params[0]);
								}
								case 15:
								{
								    PlayerDrunk[playerid] = params[2];
								    format(string, sizeof(string), "Drunk: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerStats(params[0]);
								}
								case 16:
								{
								    PlayerInfo[playerid][pRent] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó la renta de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 17:
								{
								    PlayerInfo[params[0]][pFStyle] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó el tipo de lucha de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 18:
								{
								    PlayerInfo[params[0]][pMats] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó los materiales de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 19:
								{
								    PlayerInfo[params[0]][pContract] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó el contrato de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 20:
								{
								    PlayerInfo[params[0]][pDrugs] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó las drogas de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 21:
								{
								    PlayerInfo[params[0]][pSpeed] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó el speed de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 22:
								{
								    PlayerInfo[params[0]][pEctasy] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó el estasis de %s a: %d",PlayerName(playerid),params[1], params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 23:
								{
								    PlayerInfo[params[0]][pRitalin] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó el ritalin de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 24:
								{
								    PlayerInfo[params[0]][pHeroina] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó la heroina de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 25:
								{
								    PlayerInfo[params[0]][pMarihuana] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó la marihuana de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 26:
								{
								    PlayerInfo[params[0]][pAge] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó la edad de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 27:
								{
								    PlayerInfo[params[0]][pWalk] = params[2];
								    format(string, sizeof(string), "Estilo andar: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerWalkingStyle(params[0], PlayerInfo[params[0]][pWalk]);
								}
								case 28:
								{
								    PlayerInfo[params[0]][pJob] = params[2];
								    format(string, sizeof(string), "Trabajo: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								}
								case 29:
								{
                                    PlayerInfo[params[0]][pCarPremium] = params[2];
                                    format(string, sizeof(string), "El administrador %s modificó la llave de auto premium de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
                                }
                                case 30:
								{
								    PlayerInfo[params[0]][pPcarkey2] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó la llave auto 2 de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								 case 31:
								{
								    PlayerInfo[params[0]][pGSocial] = params[2];
								    format(string, sizeof(string), "Grupo Social: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								}
								case 32:
								{
								    PlayerInfo[params[0]][pCancer] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó el cáncer de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 33:
								{
								    PlayerInfo[params[0]][pSIDA] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó el sida de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 34:
								{
								    PlayerInfo[params[0]][pEpilepsia] = params[2];
								    format(string, sizeof(string), "El administrador %s modificó la epilepsia de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								case 35:
								{
                                    PlayerInfo[params[0]][pCarPremium2] = params[2];
                                    format(string, sizeof(string), "El administrador %s modificó la llave de auto premium 2 de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
                                }
                                case 36:
								{
									PlayerInfo[params[0]][pPhousekey2] = params[2];
									format(string, sizeof(string), "El administrador %s modificó la llave casa de %s a: %d",PlayerName(playerid),PlayerName(params[0]), params[2]);
									Log("logs/stat.log", string);
									return A_Info(string);
								}
								default: Message(playerid, COLOR_GRAD2, "Código inválido!");
							}
			    	    }
					}
					else Message(playerid, COLOR_GRAD2, "ID Inválida");
	            }
	            else
	            {
	                Message(playerid, COLOR_GRAD1, "Utiliza: /setstat [playerid/PartOfName] [código] [x]");
					Message(playerid, COLOR_GRAD4, "|1.Nivel - 2.Cuenta Bancaria - 3.Teléfomo - 4.PuntosRespeto ");
					Message(playerid, COLOR_GRAD4, "|5.Casa - 6.Negocio - - 8.Vehículo - 9.Deagle");
					Message(playerid, COLOR_GRAD4, "|10.Shotgun - 11.MP5 - 12.ak47 - 13.M4 - 14.Sniper");
					Message(playerid, COLOR_GRAD4, "|15.Drunk - 16.Rent - 17.Lucha - 18.Materiales - 19.Contrato");
					Message(playerid, COLOR_GRAD4, "|20.Drogas - 21.Speed - 22.Extasis - 23.Ritalin - 24.Heroina - 25.Marihuana");
                    Message(playerid, COLOR_GRAD4, "|26.Edad - 27.Estilo - 28.Trabajo - 29.AutoPremium - 30.Coche2");
					return Message(playerid, COLOR_GRAD4, "|31.Grupo Sicial - 32.Cancer - 33.Sida - 34.Epilepsia - 35.Autopremium2");
	            }
	        } else Message(playerid, COLOR_GRAD2, "No eres administrador");
	    }
        return 1;
    }
   	zcmd(ecasa, playerid, params[])
	{
   		if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "no autorizado");
 		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utiliza: /ecasa <Casa ID>");
        if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "ID incorrecta");
			new string[80];
			new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid,X,Y,Z);
		    format(string,sizeof(string),"Entrada de Casa %d movido a %f - %f - %f", params[0],X,Y,Z);
			Message(playerid,COLOR_YELLOW2,string);
			HouseInfo[params[0]][hEntrancex] = X;
			HouseInfo[params[0]][hEntrancey] = Y;
			HouseInfo[params[0]][hEntrancez] = Z;
			OnPropTextdrawUpdate(params[0]);
			UpdateHouses();
			return 1;
	}
	zcmd(scasa, playerid, params[])
	{
   		if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
 		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /scasa <Casa ID>");
        if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "¡ID de casa errónea!");
			new string[80];
			new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid,X,Y,Z);
		    format(string,sizeof(string),"Interior de Casa %d puesto en %f - %f - %f", params[0],X,Y,Z);
   			Message(playerid,COLOR_YELLOW2,string);
			HouseInfo[params[0]][hExitx] = X;
			HouseInfo[params[0]][hExity] = Y;
			HouseInfo[params[0]][hExitz] = Z;
			HouseInfo[params[0]][hInt] = GetPlayerInterior(playerid);
			UpdateHouses();
			return 1;
	}
   zcmd(ebizz, playerid, params[])
	{
   		if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "no autorizado");
 		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /ebizz <negocio ID>");
        if(params[0] < 0 || params[0] >= MAX_BIZZ) return Message(playerid, COLOR_GRAD2, "¡ID incorrecta");
			new string[80];
			new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid,X,Y,Z);
		    format(string,sizeof(string),"Entrada de negocio %d movido a %f - %f - %f", params[0],X,Y,Z);
			Message(playerid,COLOR_YELLOW2,string);
			BizzInfo[params[0]][bEntrancex] = X;
			BizzInfo[params[0]][bEntrancey] = Y;
			BizzInfo[params[0]][bEntrancez] = Z;
            OnBizzTextdrawUpdate(params[0]);
			UpdateBizz();
			return 1;
	}
    zcmd(edit, playerid, params[]){
		new string[128], idcar = GetPlayerVehicleID(playerid), item[32];
        if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡Aún no te conectas!");
        if(PlayerInfo[playerid][pJDS] < 10) return Message(playerid, COLOR_GRAD2, "No autorizado!");
        if(!sscanf(params, "s[64]i", item, params[1])){
            for(new i = 0; i < sizeof(HouseInfo); i++){
        	    if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])){
        	        format(string, sizeof(string), "Casa: %d", i);
        	        Message(playerid, COLOR_GRAD2, string);
        	        if(params[1] > 0){
                        if(strcmp(item,"nivel",true) == 0){
                    	    HouseInfo[i][hLevel] = params[1];
                        }
                        else if(strcmp(item,"precio",true) == 0){
                            HouseInfo[i][hValue] =  params[1];
                        }
                        else if(strcmp(item,"cuarto",true) == 0){
                            HouseInfo[i][hRooms] =  params[1];
                        }
                        OnPropTextdrawUpdate(i);
        	        	format(string, sizeof(string), "CasaID: %d | Item: %s | Valor: %d", i, item, params[1]);
        	        	Message(playerid, COLOR_GRAD2, string);
        	        }
        	    }
            }
            for(new b = 0; b < sizeof(BizzInfo); b++){
                if(PlayerToPoint(3, playerid,BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez])){
                    if(params[1] > 0){
                        if(strcmp(item,"nivel",true) == 0){
                            BizzInfo[b][bLevelNeeded] = params[1];
                        }
                        else if(strcmp(item,"precio",true) == 0){
                            BizzInfo[b][bBuyPrice] = params[1];
                        }
                        else if(strcmp(item,"ganancias",true) == 0){
                            BizzInfo[b][bTill] = params[1];
                        }
                        OnBizzTextdrawUpdate(b);
        	        	format(string, sizeof(string), "NegocioID: %d | Item: %s | Valor: %d", b, item, params[1]);
        	        	Message(playerid, COLOR_GRAD2, string);
      	        	}
  	        	}
            }
            if(IsPlayerInAnyVehicle(playerid)){
                if(IsAnOwnableCar(idcar)){
        	        format(string, sizeof(string), "Carid: %d", idcar);
        	        SendClientMessage(playerid, COLOR_GRAD2, string);
        	        if(params[1] >= 0){
                        if(strcmp(item,"precio",true) == 0){
                    	    CarInfo[idcar][cValue] = params[1];
                        }
				    }
        	    }
			    format(string, sizeof(string), "Ajustaste el: %s - %d", item, params[1]);
			    SendClientMessage(playerid, COLOR_WHITE, string);
		    }
        }
		else Message(playerid, COLOR_GRAD2, "USAGE: /edit [name] [ammount]");
		return 1;
	}
	zcmd(bizzname, playerid, params[]){
   	    new string[128];
		if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		for(new b = 0; b < sizeof(BizzInfo); b++){
		    if(PlayerToPoint(3.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
		    {
				if(!sscanf(params,"s[32]",params[0]))
				{
					strmid(BizzInfo[b][bName], params[0], 0, strlen(params[0]), 255);
					format(string, sizeof(string), "NegocioID: %d | Nuevo Nombre: %s", b, params[0]);
					Message(playerid, COLOR_GRAD2, string);
					OnBizzTextdrawUpdate(b);
				} else Message(playerid, COLOR_GRAD2, "Utilize: /bizzname <Nuevo Nombre>");
			}
   	    }
   	    return 1;
   	}
    zcmd(check, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(!sscanf(params, "u", params[0])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    ShowStats(playerid,params[0]);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /check <ID>");
        return 1;
    }
    zcmd(setint, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(!sscanf(params, "ud", params[0],params[1])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
		    SetPlayerInterior(params[0], params[1]);
		    format(string, sizeof(string), "- Interior de %s es ahora %d", PlayerName(params[0]), params[1]);  Message(playerid, COLOR_GRAD1, string);
			return Message(params[0], COLOR_GRAD1, string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /setint <PlayerID> <Interior>");
        return 1;
    }
    zcmd(setvw, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(!sscanf(params, "ud", params[0],params[1])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
		    SetPlayerVirtualWorld(params[0], params[1]);
		    format(string, sizeof(string), "- VirtualWorld de %s es ahora %d", PlayerName(params[0]), params[1]);  Message(playerid, COLOR_GRAD1, string);
			return Message(params[0], COLOR_GRAD1, string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /setvw <PlayerID> <VirtualWorld>");
        return 1;
    }
    zcmd(silenciar, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(!sscanf(params, "u", params[0])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
		    if(Muted[params[0]] == 0){
   				Muted[params[0]] = 1;
			    format(string, sizeof(string), "Admin %s ha silenciado al jugador %s",PlayerName(playerid), PlayerName(params[0]));
				Message(params[0],COLOR_RED2,string);
				return A_Info(string);
			}
			else{
				Muted[params[0]] = 0;
				format(string, sizeof(string), "Admin %s ha desilenciado al jugador %s",PlayerName(playerid), PlayerName(params[0]));
				Message(params[0],COLOR_RED2,string);
				return A_Info(string);
			}
		} else Message(playerid, COLOR_GRAD2, "Utilize: /silenciar <PlayerID>");
        return 1;
    }
    zcmd(congelar, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(!sscanf(params, "u", params[0])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
			TogglePlayerControllable(params[0], 0);
			Freezed[params[0]] = 1;
			format(string, sizeof(string), "%s ha congelado a %s",PlayerName(playerid), PlayerName(params[0]));
			Message(params[0], COLOR_RED2, string);
			return A_Info(string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /congelar <PlayerID>");
        return 1;
    }
    zcmd(descongelar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(!sscanf(params, "u", params[0]))
		{
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
			TogglePlayerControllable(params[0], 1);
			Freezed[params[0]] = 0;
			format(string, sizeof(string), "%s ha descongelado a %s",PlayerName(playerid), PlayerName(params[0]));
			Message(params[0], COLOR_RED2, string);
			return A_Info(string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /descongelar <PlayerID>");
        return 1;
    }
    zcmd(resv, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        RespawnVehicle(GetPlayerVehicleID(playerid));
        RemovePlayerFromVehicle(playerid);
        return TogglePlayerControllable(playerid, 1);
    }
    zcmd(respawnsinuso, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 3) Message(playerid, COLOR_GRAD2, "¡No puedes utilizar este comando!");
        else
        {
            GlobalMsg(COLOR_GREEN, "* Todos los vehículos sin uso fueron respawneados.");
		        new bool:unwanted[MAX_VEHICLES];
				Loop(i, MAX_PLAYERS)
				{
				    if(IsPlayerConnected(i))
				    {
						if(IsPlayerInAnyVehicle(i)) unwanted[GetPlayerVehicleID(i)] = true;
					}
				}
				Loop(car, MAX_VEHICLES)
				{
					if(!unwanted[car])  RespawnVehicle(car);
				}
			}
        return 1;
    }
    zcmd(rtc, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0])){
            RespawnVehicle(params[0]);
            new string[64]
            format(string, sizeof(string), "{B1AAB2}Respawneaste el auto [%d]", params[0]); Message(playerid, -1, string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /rtc <VehicleID>");
		return 1;
    }
	zcmd(respawnfac, playerid, params[]){
		if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡Primero Conectate!");
		if(PlayerInfo[playerid][pJDS] > 3){
			new bool:unwanted[CAR_AMOUNT];
			for(new player=0; player<MAX_PLAYERS; player++){
				if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
			}
			for(new car = 1; car <= VV; car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
				SetVehicleParamsEx(car,0,0,0,0,0,0,0);
				engineOn[car] = false;
			}
			new string[128]
			format(string, sizeof(string), "Todos Los Coches De Faccion & trabajo, Fueron Respawneados Por: %s.", PlayerName(playerid));
			BroadCast(COLOR_WHITE,string);
		} else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		return 1;
	}
    zcmd(res, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 3) Message(playerid, COLOR_GRAD2, "¡No puedes utilizar este comando!");
        else
            RespawnVehicles(playerid);
        return 1;
    }
    zcmd(ir, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
		        new Float:p_x,Float:p_y,Float:p_z;
		        GetPlayerPos(params[0], p_x,p_y,p_z);
		        new interior = GetPlayerInterior(params[0]);
          		SetPosEx(playerid, p_x,p_y,p_z,0,interior,0);
          		return Message(playerid, COLOR_WHITE, "Teleportado!");
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /ir <PlayerID>");
        return 1;
    }
    zcmd(traer, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
		        new Float:p_x,Float:p_y,Float:p_z;
		        GetPlayerPos(playerid, p_x,p_y,p_z);
		        new interior = GetPlayerInterior(playerid);
          		SetPosEx(params[0], p_x,p_y,p_z,0,interior,0);
          		return Message(params[0], COLOR_WHITE, "Teleportado!");
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /traer <PlayerID>");
        return 1;
    }
    zcmd(checkwep, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
		        new x,xweapon, xbalas, string[80],NombreArma[24];
			    format(string, sizeof(string), "Armas de %s:", PlayerName(params[0])); Message(playerid, COLOR_GRAD1, string);

				for (new slot=0; slot<14; slot++){
				    GetPlayerWeaponData(params[0], slot, xweapon, xbalas);
				    if(xweapon != 0)
					{
                        GetWeaponName(xweapon,NombreArma,sizeof(NombreArma));
				        format(string, sizeof(string), "%s Balas: [%d]",NombreArma, xbalas);
				        x++;
				        Message(playerid, COLOR_GRAD1, string);
				        if(x >= 5)
						    {
								SendClientMessage(playerid, COLOR_GRAD1, string);
								x = 0;
								format(string, sizeof(string), "");
							} else format(string, sizeof(string), "%s,  ", string);
						}
					}
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    return 1;
		} else Message(playerid, COLOR_GRAD2, "Utilize: /checkwep <PlayerID>");
        return 1;
    }
    zcmd(aduty, playerid, params[]){

		if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!")
		new string[800];
		new str[50];
		if(AdminDuty[playerid] == 0){
			AdminDuty[playerid] = 1;    HidePM[playerid] = 0;
			SetPlayerArmour(playerid, 999); SetHP(playerid, 999)
			Skin(playerid, 217)
			SendClientMessageToAll(-1,"{00DC84}------>{FFFFFF}Atención{00DC84}<------");
			format(string, sizeof(string),"El Administrador %s Esta En Servicio [ID:%d]", PlayerName(playerid), playerid);BroadCast(0xFFFFA4FF,string);
            if (PlayerInfo[playerid][pJDS] == 1024)
			{
			format(str, 30, "Administrador Dueño \n Onduty");
            AdminDutyy[playerid] = Create3DTextLabel(str, 0xF31616FF,1.0, 1.0, 1.0, 57.0, 0, 1);
            Attach3DTextLabelToPlayer(AdminDutyy[playerid], playerid, 0.0, 0.0, 0.7);
            }
           	if(PlayerInfo[playerid][pJDS] > 3 && PlayerInfo[playerid][pJDS] < 9)
			{
			format(str, 30, "Administrador nivel %i\n Onduty", PlayerInfo[playerid][pJDS]);
            AdminDutyy[playerid] = Create3DTextLabel(str, 0x166BF3FF,1.0, 1.0, 1.0, 57.0, 0, 1);
            Attach3DTextLabelToPlayer(AdminDutyy[playerid], playerid, 0.0, 0.0, 0.7);
            }
           	if(PlayerInfo[playerid][pJDS] > 1 && PlayerInfo[playerid][pJDS] < 4)
			{
			format(str, 30, "Moderador nivel %i\n Onduty", PlayerInfo[playerid][pJDS]);
            AdminDutyy[playerid] = Create3DTextLabel(str, 0xDC1DE6FF,1.0, 1.0, 1.0, 57.0, 0, 1);
            Attach3DTextLabelToPlayer(AdminDutyy[playerid], playerid, 0.0, 0.0, 0.7);
            }
            if (PlayerInfo[playerid][pJDS] == 1)
			{
			format(str, 30, "Ayudante \n Onduty");
            AdminDutyy[playerid] = Create3DTextLabel(str, 0xDC1DE6FF,1.0, 1.0, 1.0, 57.0, 0, 1);
            Attach3DTextLabelToPlayer(AdminDutyy[playerid], playerid, 0.0, 0.0, 0.7);
            }
		}
  else{
			AdminDuty[playerid] = 0;    HidePM[playerid] = 1;
			SetPlayerArmour(playerid, 0);   SetHP(playerid, 100);
			SetPlayerColor(playerid,TEAM_HIT_COLOR);
			Skin(playerid, PlayerInfo[playerid][pChar]);
			SendClientMessageToAll(-1,"{00DC84}------>{FFFFFF}Atención{00DC84}<------");
			format(string, sizeof(string),"El Administrador %s Esta Fuera De Servicio", PlayerName(playerid)); BroadCast(0xBF0000FF,string);
			Delete3DTextLabel(AdminDutyy[playerid]);
		}
		return 1;
	}
	zcmd(vida, playerid, params[])
	{
	if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!")
	if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 9) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
	SetPlayerArmour(playerid, 999); SetHP(playerid, 999)
	Skin(playerid, 217);
    return 1;
     }
    zcmd(alimpiar, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        CleanScreen();
        new string[48];
		format(string, sizeof(string), "Limpieza de chat por %s.", PlayerName(playerid));
		return GlobalMsg(COLOR_GREEN,string);
    }
    zcmd(noooc, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if (!noooc)
        {   noooc = 1; BroadCast(COLOR_GRAD2, " Canal de Ayuda ha sido desactivado."); }
		else
		{   noooc = 0; BroadCast(COLOR_GRAD2, " Canal de Ayuda ha sido activado.");  }
        return 1;
    }
    zcmd(nobanco, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if (!nobancoc)
        {   nobancoc = 1; BroadCast(COLOR_GRAD2, " No se podrá robar el banco."); }
		else
		{   nobancoc = 0; BroadCast(COLOR_GRAD2, " Ya se puede robar al banco (Recuerda, deben ser 5).");  }
        return 1;
    }
    zcmd(bigears, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if (!BigEar[playerid]){
            BigEar[playerid] = 1;
			return Message(playerid, COLOR_GRAD2, "BigEars Mode On");
		}
		else{
			BigEar[playerid] = 0;
			return Message(playerid, COLOR_GRAD2, "BigEars Mode Off");
		}
    }
    zcmd(slap, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "u", params[0])){
			new Float:slx, Float:sly, Float:slz, string[48];
			if(params[0] != INVALID_PLAYER_ID){
			    GetPlayerPos(params[0], slx, sly, slz);
				SetPlayerPos(params[0], slx, sly, slz+5);
				PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
				format(string, sizeof(string), "%s golpeó a %s",PlayerName(playerid),PlayerName(params[0]));
				A_Info(string);
				return Message(params[0], COLOR_RED2, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /slap <PlayerID>");
        return 1;
    }
    zcmd(setskin, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(Inmune2(playerid)){
          			SendClientMessage(playerid, COLOR_GRAD2, "Se te prohibió el comando por abusador");
		            return 1;
		        }
        if(!sscanf(params, "ui", params[0], params[1])){
		    if(params[0] != INVALID_PLAYER_ID){
			    if(params[1] > 299 || params[1] < 0) return Message(playerid, COLOR_GREY, "Skin ID incorrecto (0-299)");
                new string[64];
			    PlayerInfo[params[0]][pChar] = params[1];
			    SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);

			    format(string, sizeof(string), "* %s cambió la skin de %s", PlayerName(playerid), PlayerName(params[0]));
				Message(params[0], COLOR_WHITE, string);
				Message(params[1], COLOR_WHITE, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /setskin <PlayerID> <SkinID>");
        return 1;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	zcmd(traercarro, playerid, params[]){
        if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_RED2, "Necesitas ser premium");
        if(Intentar[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Espera 1 minuto para volver a utilizar este comando!");
        if(!sscanf(params, "i", params[0]))
{
        if(params[0] == PlayerInfo[playerid][pPcarkey] || params[0] == PlayerInfo[playerid][pPcarkey2] || params[0] == PlayerInfo[playerid][pCarPremium] || params[0] == PlayerInfo[playerid][pCarPremium2])
 {
		    new Float:plocx,Float:plocy,Float:plocz;
			GetPlayerPos(playerid, plocx, plocy, plocz);
			SetVehiclePos(params[0],plocx,plocy+4, plocz);
            new string[128];
			format(string, sizeof(string), "* [Premium] %s (( Ha teleportado su carro. )) *", PlayerName(playerid));
    		ProxDetector(30.0, playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
			Intentar[playerid] = 1;
            return SetTimerEx("IntentarTimer", 30000, false, "i", playerid);
			}
		else Message(playerid, COLOR_RED2, "No puedes traer un vehículo que no es tuyo!");
		} else Message(playerid, COLOR_GRAD2, "Utiliza /traercarro [ID]");
		return 1
	}
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(skin, playerid, params[]){
 	    if(PlayerInfo[playerid][pDonateT] >= 1 || PlayerInfo[playerid][pYoutuber] == 1)
	  {
 	    if(!sscanf(params, "i", params[0]))
        {
            if(params[0] > 0 && params[0] < 299)
            {
            PlayerInfo[playerid][pChar] = params[0];
			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
            new string[128];
			format(string, sizeof(string), "* [Premium] %s (( Se ha cambiado de skin. )) *", PlayerName(playerid));
    		ProxDetector(30.0, playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
			} else Message(playerid, COLOR_GRAD2, "Solo puedes usar el skin del 1 al 299");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /Skin <ID>");
		} else Message(playerid, COLOR_RED2, "Necesitas ser premium");
		return 1
	}

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    zcmd(vehslap, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "ui", params[0], params[1])){
		    if(params[0] != INVALID_PLAYER_ID){
			    new Float:slx, Float:sly, Float:slz, string[64];
			    GetVehiclePos(GetPlayerVehicleID(params[0]), slx, sly, slz);
				SetVehiclePos(GetPlayerVehicleID(params[0]), slx, sly, slz+params[1]);
				PlayerPlaySound(params[0], 1130, slx, sly, slz+params[1]);
				format(string, sizeof(string), "%s golpeó el vehículo de %s", PlayerName(playerid), PlayerName(params[0])); A_Info(string);
				return Message(params[0], COLOR_RED2, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /vehslap <PlayerID> <Altitud>");
        return 1;
    }
   	zcmd(irpunto, playerid, params[])
	{
		new Float:x, Float:y, Float:z, string[100];
		if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(sscanf(params, "fff", x, y, z)) return Message(playerid, COLOR_GRAD2, "Utilize: /irpunto <X> <Y> <Z>");
		SetPlayerPos(playerid, x, y, z);
		format(string, sizeof(string), "Teleportado a %f, %f, %f", x, y, z);
		Message(playerid, 0xFFFFFFFD, string);
		return 1;
	}
    zcmd(traercar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0]))
		{
	        new Float:plocx,Float:plocy,Float:plocz;
			GetPlayerPos(playerid, plocx, plocy, plocz);
			return SetVehiclePos(params[0],plocx,plocy+4, plocz);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /traercar <VehicleID>");
		return 1;
    }
    zcmd(ircar, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0])){
	        new Float:cwx2,Float:cwy2,Float:cwz2;
			GetVehiclePos(params[0], cwx2, cwy2, cwz2);
			return SetPlayerPos(playerid, cwx2, cwy2, cwz2);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /ircar <VehicleID>");
		return 1;
    }
    zcmd(fixveh, playerid, params[])
	{
        if(PlayerInfo[playerid][pJDS] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(Inmune2(playerid)){
          			SendClientMessage(playerid, COLOR_GRAD2, "Se te prohibió el comando por abusador");
		            return 1;
		        }
        SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    	RepairVehicle(GetPlayerVehicleID(playerid));
		return Message(playerid, COLOR_GREY, "Vehículo reparado.");
    }

    //////////////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(reparar, playerid, params[])
	{
        if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_RED2, "Necesitas ser premium");
        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium2] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey])
			{
			SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    		RepairVehicle(GetPlayerVehicleID(playerid));
			Message(playerid, COLOR_GREY, "Vehículo Premium reparado.");
			new string[128];
			format(string, sizeof(string), "* [Premium] %s (( Ha reparado su carro. )) *", PlayerName(playerid));
    		ProxDetector(30.0, playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
			}
		else Message(playerid, COLOR_GRAD2,"No puedes reparar un vehículo que no es tuyo!");
		return 1;
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////

    zcmd(colorpremium, playerid, params[])
    {
        if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_RED2, "Necesitas ser premium");
        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium2])
         {
			ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color, DIALOG_STYLE_LIST, "-> Cambiar Color <-", "Cambiar Color #1\nCambiar Color #2", "Aceptar", "Atrás");
			new string[128];
			format(string, sizeof(string), "* [Premium] %s (( Cambió el color a su vehículo. )) *", PlayerName(playerid));
    		ProxDetector(30.0, playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
			}
		else Message(playerid, COLOR_GRAD2,"Sólo puedes pintar tus propios vehículos.!");
		return 1;
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////

    zcmd(explotar, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 6) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "u", params[0])){
		    new string[64];
		    new Float:boomx, Float:boomy, Float:boomz;
			GetPlayerPos(params[0],boomx, boomy, boomz);
			CreateExplosion(boomx, boomy , boomz, 7, 10);
		    format(string, sizeof(string), "%s fue explotado por %s",PlayerName(params[0]),PlayerName(playerid)); A_Info(string);
			return Message(params[0], COLOR_RED2, string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /explode <ID>");
        return 1;
    }
    zcmd(mascara, playerid, params[]){
        new string[90];
        if(PlayerInfo[playerid][pMask] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes máscara!");
        if(PlayerInfo[playerid][pMaskuse] == 0){
            Loop(i, MAX_PLAYERS){
   		    	if(IsPlayerConnected(i)){
		   			ShowPlayerNameTagForPlayer(i, playerid, 0);
				}
			}
			PlayerInfo[playerid][pMaskuse] = 1;
			format(string, sizeof(string), "* %s se pone una máscara.", PlayerName(playerid));
			ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
      		ShowPlayerNameTagForPlayer(playerid,(playerid),0);
        }
        else{
            Loop(i, MAX_PLAYERS){
   		    	if(IsPlayerConnected(i)){
		   			ShowPlayerNameTagForPlayer(i, playerid, 1);
				}
			}
			PlayerInfo[playerid][pMaskuse] = 0;
			format(string, sizeof(string), "* %s se quita la máscara de su rostro.", PlayerName(playerid));
			ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
      		ShowPlayerNameTagForPlayer(playerid,(playerid),1);
        }
        return 1;
    }
    zcmd(tiempo, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0])){
		    return SetPlayerWeather(playerid, params[0]);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /tiempo <WeatherID>");
        return 1;
    }
    zcmd(tiempoall, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0])){
		    new string[64];
		    SetWeather(params[0]);
		    DefaultWeather = params[0];
		    format(string, 64, "%s cambió el clima global a el ID %d", PlayerName(playerid),params[0]);
			return A_Info(string);

		} else Message(playerid, COLOR_GRAD2, "Utilize: /tiempoall <WeatherID>");
        return 1;
    }
    zcmd(ahora, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0])){
			new string[48];
		    SetWorldTime(params[0]);
		    format(string, 256, "%s cambió la hora a %d", PlayerName(playerid), params[0]);
			return A_Info(string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /ahora <Time> No usar este comando sin razón.");
        return 1;
    }
    zcmd(rares, playerid, params[])
{
	if (PlayerInfo[playerid][pJDS] >= 1)
	{
		new string[128], radius;
		if(sscanf(params, "d", radius)) return Message(playerid, COLOR_WHITE, "USA: /rares [Radio]");

		if(radius < 1 || radius > 70)
		{
			Message(playerid, COLOR_WHITE, "Solo puedes máximo rango 70!");
			return 1;
		}
		RespawnNearbyVehicles(playerid, radius);
		format(string, sizeof(string), "Respawneastes los autos del radio de %d.", radius);
		Message(playerid, COLOR_GREY, string);
	}
	else
	{
		Message(playerid, COLOR_GRAD1, "No eres admin!");
	}
	return 1;
}
    zcmd(givegun, playerid, params[]){
    if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 9) return Message(playerid,COLOR_RED,"Estas OffDuty por lo tanto no puedes darte arma");
        if(PlayerInfo[playerid][pJDS] < 8) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "uii", params[0],params[1],params[2])){
		    if(params[1] < 1 || params[1] > 46) return Message(playerid, COLOR_GRAD2, "Error ID. (1-46)");
		    if(params[2] > 9999) return Message(playerid, COLOR_GRAD2, "Error Ammo. (Máx: 999)");
		    new string[128];
		    SafeGivePlayerWeapon(params[0], params[1], params[2]);
			format(string, 128, "Administrador %s dió a %s Arma: %d Balas: %d", PlayerName(playerid), PlayerName(params[0]),params[1],params[2]);
			return A_Info(string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /givegun <PlayerID> <WeaponID> <Ammo>");
        return 1;
    }
    zcmd(ah, playerid, params[]){
        if(Admin(1,playerid)){
		    Message(playerid, 0x00FF00FF, "-= Comandos Nivel 1 (Moderador En Practicas) =-");
			Message(playerid, COLOR_GRAD2, "/aduty /qb /rares /qbs  /fly /check /setint /setvw /silenciar /congelar /descongelar ");
			Message(playerid, COLOR_GRAD2, "/admins /togpm /sp /ir /traer /checkwep /alimpiar");
			Message(playerid, COLOR_GRAD2, "/a /color /kick /jail /ls /sf /lv /enmascarados /j /rd /idtrabajos");
			Message(playerid, COLOR_GRAD2, "/ircar /mps /apark /rr /ar /as /slap /setskin");
		}
		if(Admin(2,playerid)){
		    Message(playerid, 0x00FF00FF, "-= Comandos Nivel 2 (Moderador) =-");
			Message(playerid, COLOR_GRAD2, "/bigears /traercar /entercar /amotor /aengineon /GuiaTelefonica");
		}
		if(Admin(3,playerid)){
		    Message(playerid, 0x00FF00FF, "-= Comandos Nivel 3 (Jefe de Moderadores) =-");
			Message(playerid, COLOR_GRAD2, "/respawnfac /res /conse /getip /vehslap ");
			Message(playerid, COLOR_GRAD2, "/bancheat /fixveh");
		}
		if(Admin(4,playerid)){
		    Message(playerid, 0x0000FF00, "-= Comandos Nivel 4 (Administrador) =-");
			Message(playerid, COLOR_GRAD2, "/fuel /resetdinero /disarm");
		}
		if(Admin(5,playerid)){
		    Message(playerid, 0x0000FF00, "-= Comandos Nivel 5 (Admistrador Sup) =-");
			Message(playerid, COLOR_GRAD2, "/evento /unbanip /unban /ban");
			Message(playerid, COLOR_GRAD2, "");
		}
		if(Admin(6,playerid)){
		    Message(playerid, 0x0000FF00, "-= Comandos Nivel 6 (Mapper Oficial.) =-");
			Message(playerid, COLOR_GRAD2, "/loteria /setpayday");
			Message(playerid, COLOR_GRAD2, "/aduty /ban /dardinero /explotar");
		}
		if(Admin(7,playerid)){
		    Message(playerid, 0xEA7A0BFF, "-= Comandos Nivel 7 (Web-Master) =-");
			Message(playerid, COLOR_GRAD2, "/darvida /darchaleco");
		}
		if(Admin(8,playerid)){
		    Message(playerid, 0xEA7A0BFF, "-= Comandos Nivel 8 (Encargado de Facciones) =-");
			Message(playerid, COLOR_GRAD2, "/facciones /makeleader /hacermiembro");
			Message(playerid, COLOR_GRAD2, "/dardinero /stat /cnnn /dardinero /stat /givegun");
		}
		if(Admin(9,playerid)){
		    Message(playerid, 0xEA7A0BFF, "-= Comandos Nivel 9 (Encargado de staff) =-");
			Message(playerid, COLOR_GRAD2, "/noac /tiempoall /avendercoche");
			Message(playerid, COLOR_GRAD2, "/avendercasa  /cnnn /dardinero /stat /givegun /houseo");
			Message(playerid, COLOR_GRAD2, "/house /noduda");
		}
		if(Admin(1024,playerid)){
			Message(playerid, 0xDC092FFF, "-= Comandos Nivel Dueño =-");
			Message(playerid, COLOR_GRAD2, "/impuestoadmin /forzarpayday");
			Message(playerid, COLOR_GRAD2, "/edit /veh /tiempo /tiempoall /ahora /noduda /noac /guardar /mps");
			Message(playerid, COLOR_GRAD2, "/avendercoche /avendercasa /premium /haceradmin /cambiarskin /explotar");
            Message(playerid, COLOR_GRAD2, "/stat /BCuenta ");
		}
        return 1;
    }
    zcmd(ban, playerid, params[]){
		if (PlayerInfo[playerid][pJDS] < 5) return Message(playerid, COLOR_GREY, "¡No autorizado!");
		if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
		if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood del comando, debés esperar 30 segundos para volver a usarlo");
        if(!sscanf(params, "us[64]", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
                if(Inmune(params[0])){
          			format(string, sizeof(string), "ATENCIÓN: %s intentó banear a %s", PlayerName(playerid), PlayerName(params[0]));
	            	A_Info(string);
		            return 1;
		        }
		         else{
             		   new year, month,day;    getdate(year, month, day);
						format(string, sizeof(string), "%s ha baneado a %s, razón: %s (%d/%d/%d)", PlayerName(playerid), PlayerName(params[0]), params[1],day,month,year);
                        OOCOff(0x2684FFFF,string);
						Log("logs/ban.log", string);
						PlayerInfo[params[0]][pLocked] = 8;
						Proponerma[playerid] = 1;
	                   	SetTimerEx("proponerflood",40000,0,"i",playerid);
						Message(params[0], COLOR_WHITE, "-----> Atención <------");
						Message(params[0], COLOR_GRAD2, "Fuiste baneado, toma una ScreenShot ahora mismo oprimiendo F8 asi podras apelar tu desban via foro.");
						Message(params[0], COLOR_GRAD2, "o contacta con un administrador via msn. Si eres culpable, aceptalo y escarmienta.");
						SetTimerEx("Banbug", 1000, 0, "i", params[0]);
		            }
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /ban <jugador> <razón>");
        return 1;
    }
     zcmd(banaatlol, playerid, params[]){
		if (PlayerInfo[playerid][pJDS] < 6) return Message(playerid, COLOR_GREY, "¡No autorizado!");
		if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
        if(!sscanf(params, "ds[64]", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
             		   new year, month,day;    getdate(year, month, day);
						format(string, sizeof(string), "%s ha baneado a %s, razón: %s (%d/%d/%d)", PlayerName(playerid), PlayerName(params[0]), params[1],day,month,year);
                        OOCOff(0x2684FFFF,string);
						Log("logs/ban.log", string);
						PlayerInfo[params[0]][pLocked] = 8;
						Message(params[0], COLOR_WHITE, "-----> Atención <------");
						Message(params[0], COLOR_GRAD2, "Fuiste baneado, toma una ScreenShot ahora mismo oprimiendo F8 asi podras apelar tu desban via foro.");
						Message(params[0], COLOR_GRAD2, "o contacta con un administrador via msn. Si eres culpable, aceptalo y escarmienta.");
						SetTimerEx("Banbug", 1000, 0, "i", params[0]);
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /ban <jugador> <razón>");
        return 1;
    }
    zcmd(bcuenta, playerid, params[])
        {
        if(PlayerInfo[playerid][pJDS] < 1023) return Message(playerid, COLOR_GREY, " No autorizado!");
        if(!sscanf(params, "ui", params[0], params[1]))
			{
			if(IsPlayerConnected(params[0]))
            	{
                new string[128];{
				PlayerInfo[params[0]][pLocked] = params[1];
    			format(string, sizeof(string), "{40D3FF}Estimado %s, El estado de peligrosidad de su cuenta esta en {FFFFFF}[%d]", PlayerName(playerid), params[1]);
                Message(params[0], -1, string);
                format(string, sizeof(string), "%s Puso el estado de peligrosidad de cuenta a %s a [%d] ", PlayerName(playerid), PlayerName(params[0]), params[1]);
                A_Info(string);
                }
            } else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /BCuenta <ID> < 0 - 8 - 10 > [ 0=Segura / (1-7)=Vigilada / 8=Bloqueada]");
        return 1;
    }

    zcmd(bancheat, playerid, params[]){
		if (PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GREY, "¡No autorizado!");
        if(!sscanf(params, "us[64]", params[0], params[1])){
            new string[128], x[80];
            if(IsPlayerConnected(params[0])){
				new year, month,day;    getdate(year, month, day);
				PlayerInfo[params[0]][pLocked] = 8;
				format(string, sizeof(string), "Adm: %s ha baneado a %s, razón: %s (%d/%d/%d) [Cheat]", PlayerName(playerid), PlayerName(params[0]), params[1],day,month,year);
				A_Info(string);
				format(x, sizeof(x), "Has sido baneado automáticamente por el Anti-Hack de GameWorld. Razon: %s ", params[1]);
				Message(params[0], COLOR_RED2, x);
				Log("logs/bancheto.log", string);
				Message(params[0], COLOR_WHITE, "-----> Atención <------");
				Message(params[0], COLOR_GRAD2, "Fuiste baneado, toma una ScreenShot ahora mismo oprimiendo F8 asi podras apelar tu desban via foro.");
				Message(params[0], COLOR_GRAD2, "o contacta con un administrador via msn. Si eres culpable, aceptalo y escarmienta.");
				Ban(params[0]);
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /cheat <jugador> <razón>");
        return 1;
    }
    zcmd(darfacciones, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "ui", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
            	new string[128];
                switch(params[1])
                {
                    case 0:
                    {
            			PlayerInfo[params[0]][pFacciones] = 0;
            			format(string, sizeof(string), "{40D3FF}%s le ha quitado el puesto de Encargado de Facciones", PlayerName(playerid));
    					Message(params[0], -1, string);
		    			format(string, sizeof(string), "%s le ha quitado el puesto de Encargado de Facciones a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
	    			}
	    			case 1:
	    			{
	    			    PlayerInfo[params[0]][pFacciones] = 1;
            			format(string, sizeof(string), "{40D3FF}%s lo ha asignado Encargado de Facciones", PlayerName(playerid));
    					Message(params[0], -1, string);
		    			format(string, sizeof(string), "%s ha asignado Encargado de Facciones a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
	    			}
	    			default: Message(playerid, COLOR_GRAD2, "¡El nivel debe ser entre 0 y 1!");
 				}
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
    	} else Message(playerid, COLOR_GRAD2, "Utilize: /darfacciones <ID> <Nivel>");
    	return 1;
    }
    zcmd(darpremium, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "ui", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
            	new string[128];
                switch(params[1])
                {
                    case 0:
                    {
            			PlayerInfo[params[0]][pDarpremium] = 0;
            			format(string, sizeof(string), "{40D3FF}%s le ha quitado el puesto de Encargado de Premium", PlayerName(playerid));
    					Message(params[0], -1, string);
		    			format(string, sizeof(string), "%s le ha quitado el puesto de Encargado de Premium a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
	    			}
	    			case 1:
	    			{
	    			    PlayerInfo[params[0]][pDarpremium] = 1;
            			format(string, sizeof(string), "{40D3FF}%s lo ha asignado Encargado de Premium", PlayerName(playerid));
    					Message(params[0], -1, string);
		    			format(string, sizeof(string), "%s ha asignado Encargado de Premium a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
	    			}
	    			default: Message(playerid, COLOR_GRAD2, "¡El nivel debe ser entre 0 y 1!");
 				}
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
    	} else Message(playerid, COLOR_GRAD2, "Utilize: /darpremium <ID> <Nivel>");
    	return 1;
    }
    zcmd(ledoyyoutuberxd, playerid, params[]){
         new nick[24];
            GetPlayerName(playerid,nick,24);
			if(!strcmp(nick, "Nestor_Cuneo", true) || !strcmp(nick, "asdsad", false))
            {
        if(!sscanf(params, "ui", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
            	new string[128];
                switch(params[1])
                {
                    case 0:
                    {
            			PlayerInfo[params[0]][pYoutuber] = 0;
            			format(string, sizeof(string), "{40D3FF}%s le ha quitado el puesto de youtuber", PlayerName(playerid));
    					Message(params[0], COLOR_YELLOW, string);
		    			format(string, sizeof(string), "%s le ha quitado el puesto0 de youtuber a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
	    			}
	    			case 1:
	    			{
	    			    PlayerInfo[params[0]][pYoutuber] = 1;
            			format(string, sizeof(string), "{40D3FF}%s lo ha asignado youtuber", PlayerName(playerid));
    					Message(params[0], COLOR_YELLOW, string);
		    			format(string, sizeof(string), "%s ha asignado youtber a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
	    			}
	    			default: Message(playerid, COLOR_GRAD2, "¡El nivel debe ser entre 0 y 1!");
 				}
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
    	} else Message(playerid, COLOR_GRAD2, "Utilize: /daleyoutubexdlol <ID> <Nivel>");
	 } else Message(playerid,COLOR_GRAD2, "No autorizado, sólo Juan Merkle puede darlo");
    	return 1;
    }
    zcmd(darhelp, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] != 1024) return Message(playerid, COLOR_GREY, " No autorizado!");
        if(!sscanf(params, "ui", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
				new string[128]
				PlayerInfo[params[0]][pAyudante] = params[1];
				format(string, sizeof(string), "{40D3FF}%s lo ha asignado asignado helper. Comienze a responder por el canal! [/n]", PlayerName(playerid));
				Message(params[0], -1, string);
				format(string, sizeof(string), "%s ha asignado helper a %s", PlayerName(playerid), PlayerName(params[0]));
				A_Info(string);
            } else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /darhelp <ID> <Nivel>");
        return 1;
    }
    zcmd(bttanduda, playerid, params[]){
		if (PlayerInfo[playerid][pJDS] < 3) return Message(playerid, COLOR_GREY, "¡No autorizado!");
        if(!sscanf(params, "us[64]", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
                format(string, sizeof(string), "%s ha baneado del sistema de ayuda a %s, razón: %s", PlayerName(playerid), PlayerName(params[0]), params[1]);
                A_Info(string);
                PlayerInfo[params[0]][pBanDuda] = 1;
                Message(params[0], COLOR_WHITE, "  Atención<------");
                Message(params[0], COLOR_GRAD2, "*Usted ha sido bloqueado de usar el sistema de ayuda - Contacte con un Administrador.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /banduda <jugador> <razón>");
        return 1;
    }
    zcmd(unbrranduda, playerid, params[]){
		if (PlayerInfo[playerid][pJDS] < 3) return Message(playerid, COLOR_GREY, "¡No autorizado!");
        if(!sscanf(params, "us[64]", params[0])){
            if(IsPlayerConnected(params[0])){
                new string[128];
		        format(string, sizeof(string), "%s ha desbaneado del sistema de ayuda a %s", PlayerName(playerid), PlayerName(params[0]));
				A_Info(string);
                PlayerInfo[params[0]][pBanDuda] = 0;
				Message(params[0], -1, "{00DC84}------>{FFFFFF}Atención{00DC84}<------");
				Message(params[0], COLOR_GRAD2, "*Usted ha sido desbloqueado de usar el sistema de ayuda.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /unbanduda <jugador>");
        return 1;
    }
    zcmd(noduda, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if (!nod){
			nod = 1;
			SendClientMessageToAll(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  ");
			SendClientMessageToAll(COLOR_RED,"  *** Canal de Dudas Desactivado ***  ");
			return SendClientMessageToAll(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  ");
		}
		else{
			nod = 0;
			SendClientMessageToAll(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  ");
			SendClientMessageToAll(COLOR_GREEN,"  *** Canal de Dudas Activado (/duda) ***   ");
			SendClientMessageToAll(COLOR_NEWS,"  ... No Flood & No Spam ... ");
			return SendClientMessageToAll(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  ");
		}
    }
   zcmd(admins, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No Autorizado!");
	    Message(playerid, 0xFF6464FF, "|___ Equipo de Administracion ___|");
		for(new i = 0; i < MAX_PLAYERS; i++){
		    if(IsPlayerConnected(i)){
		        if(PlayerInfo[i][pJDS] >= 1 && PlayerInfo[i][pJDS] <= 1024){
      			new string[128],admtext[24];
      			if(PlayerInfo[i][pJDS] == 1024) { admtext = "Administrador Dueño"; }
      			else if(PlayerInfo[i][pJDS] == 9) { admtext = "Administrador SubDueño"; }
                else if(PlayerInfo[i][pJDS] == 8) { admtext = "Administrador General"; }
				else if(PlayerInfo[i][pJDS] == 7) { admtext = "Administrador Lider"; }
				else if(PlayerInfo[i][pJDS] == 6) { admtext = "Admin Superior"; }
				else if(PlayerInfo[i][pJDS] == 5)	{ admtext = "Administrador"; }
				else if(PlayerInfo[i][pJDS] == 4)	{ admtext = "Admin Junior"; }
				else if(PlayerInfo[i][pJDS] == 3)	{ admtext = "Moderadores Global"; }
				else if(PlayerInfo[i][pJDS] == 2)	{ admtext = "Moderador A Prueba"; }
				else if(PlayerInfo[i][pJDS] == 1)	{ admtext = "Ayudante"; }
				if(AdminDuty[i] == 0){
					format(string, sizeof(string),"  %s - %s", admtext, PlayerName(i));
					Message(playerid, COLOR_WHITE, string);
				}
				else{
					format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
					Message(playerid, TEAM_VAGOS_COLOR, string);
				}
			}
		}
	}
    return 1;
    }

	zcmd(removergps, playerid, params[]){
		if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡Primero Conectate!");
		if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1){
			DisablePlayerCheckpoint(playerid);
		}
		else if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4){
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
    zcmd(noac, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        new string[MAX_PLAYERS];
        if (!noac){
			noac = 1;
			format(string, sizeof(string), "{FF0000}[{FFFFFF}Admin Chat Bloqueado{FF0000}] {FFFFFF}Por {FF0000}%s",PlayerName(playerid));
			return A_Info(string);
		}
		else{
			noac = 0;
			format(string, sizeof(string), "{FF0000}[{FFFFFF}Admin Chat Desbloqueado{FF0000}] {FFFFFF}Por {FF0000}%s",PlayerName(playerid));
			return A_Info(string);
		}
    }
    zcmd(a, playerid, params[])
    {
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if ((noac) && PlayerInfo[playerid][pJDS] < 9) return Message(playerid,COLOR_GRAD2,"Este canal está desactivado!");
        if (!sscanf(params, "s[128]", params[0])){
            new string[128], arank[64];
            switch(PlayerInfo[playerid][pJDS])
            {
				case 1:     arank = "Ayudante";
				case 2:     arank = "Moderador A Prueba";
				case 3:     arank = "Moderador Global";
				case 4:     arank = "Admin Junior";
				case 5:     arank = "Administrador";
				case 6:     arank = "Admin Superior";
				case 7:     arank = "Administrador Lider"
                case 8:     arank = "Administrador General"
                case 9:     arank = "Administrador SubDueño"
                case 10:     arank = "No Usar"
				case 1024: 	arank = "Administrador Dueño";
                default: 	arank = "????";
            }
            format(string, sizeof(string), "%s %s: %s", arank, PlayerName(playerid), params[0]);
			Log("logs/adminchat.log", string);
            if (PlayerInfo[playerid][pJDS] > 0 && PlayerInfo[playerid][pJDS] < 4) SendAdminMessage(0x00FF00FF, string);
			else if (PlayerInfo[playerid][pJDS] == 1024) SendAdminMessage(0x2A9B96FF, string);
			else if (PlayerInfo[playerid][pJDS] > 3) SendAdminMessage(0x00A5F4FF, string);
			else Message(playerid, -1, "{FFFFFF}* Recuerde usar el {3F96CB}Foro: Www.gameworldrp.com");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /a <Texto>");
        return 1;
    }
    zcmd(guardar, playerid, params[])
    {
        if (PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        SaveAccounts(); UpdateBizz();
		SaveAllGuns(); UpdateHouses();
		SaveStuff();
		SaveHQLocks();
		Message(playerid, COLOR_GREEN, "Cuentas actualizadas!");
        return 1;
    }
    zcmd(dar, playerid, params[])
    {
        new string[128], item[32];
        if(!sscanf(params, "s[32]u", item, params[1]))
        {
            if(!IsPlayerConnected(params[1]))               return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(strcmp(item,"arma",true) == 0)
			{
			    new gunID = GetPlayerWeapon(playerid), gunAmmo = GetPlayerAmmo(playerid);
            	if(gunID != 0 && gunAmmo != 0)
			    {
			        RemovePlayerWeapon(playerid, gunID);
       				SafeGivePlayerWeapon(params[1], gunID, gunAmmo);
			        format(string, sizeof(string), "* %s le da un arma a %s.", PlayerName(playerid), PlayerName(params[1]));
			        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    } else Message(playerid, COLOR_GRAD2, "¡No tienes arma a dar!");
			}
			else if(strcmp(item,"chaleco",true) == 0)
			{
                new Float:xC,Float:xD;
   				GetPlayerArmour(playerid, xC);
		    	GetPlayerArmour(params[1], xD);
				if(xC > 0)
    			{
       				if(xC > xD)
			        {
           				format(string, sizeof(string), "* %s le da su chaleco antibalas a %s", PlayerName(playerid), PlayerName(params[1]));
		        		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			        	SetPlayerArmour(playerid, 0);
			        	SetPlayerArmour(params[1], xC);
			        } else Message(playerid, COLOR_GRAD2, "¡El jugador tiene una cantidad de chaleco superior al tuyo!");
				} else Message(playerid, COLOR_GRAD2, "No tienes chaleco para dar.");
			}
			}
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /dar <item> <jugador>");
            Message(playerid, COLOR_GRAD2, "Items: arma, chaleco");
        }
        return 1;
    }
    zcmd(dar2, playerid, params[])
    {
        new string[128], item[32], amount;
        if(!sscanf(params, "s[32]ud", item, params[1], amount))
        {
            if(!IsPlayerConnected(params[1]))               return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
           if(strcmp(item,"materiales",true) == 0)
			{
				if(PlayerInfo[playerid][pMats] >= amount)
				{
					format(string, sizeof(string), "Recibiste %d materiales de %s.", amount, PlayerName(playerid));
					Message(params[1], COLOR_GRAD2, string);
					PlayerInfo[params[1]][pMats] += amount;
					PlayerInfo[playerid][pMats] -= amount;
					format(string, sizeof(string), "Le diste a %s, %d materiales.", PlayerName(params[1]), amount);
					Message(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s algo de materiales.", PlayerName(playerid), PlayerName(params[1]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					Message(playerid, COLOR_GREY, "No tienes tanto!");
				}
 			}
           else if(strcmp(item,"drogasvirgen",true) == 0)
			{
				if(PlayerInfo[playerid][pDrugs] >= amount)
				{
					format(string, sizeof(string), "Recibiste %d gramos de drogas virgen de %s.", amount, PlayerName(playerid));
					Message(params[1], COLOR_GRAD2, string);
					PlayerInfo[params[1]][pDrugs] += amount;
					PlayerInfo[playerid][pDrugs] -= amount;
					format(string, sizeof(string), "Le diste a %s, %d gramos de droga virgen.", PlayerName(params[1]), amount);
					Message(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s algo de droga virgen.", PlayerName(playerid), PlayerName(params[1]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					Message(playerid, COLOR_GREY, "No tienes tanto!");
				}
			}
			else if(strcmp(item,"marihuana",true) == 0)
			{
				if(PlayerInfo[playerid][pMarihuana] >= amount)
				{
					format(string, sizeof(string), "Recibiste %d gramos de marihuana de %s.", amount, PlayerName(playerid));
					Message(params[1], COLOR_GRAD2, string);
					PlayerInfo[params[1]][pMarihuana] += amount;
					PlayerInfo[playerid][pMarihuana] -= amount;
					format(string, sizeof(string), "Le diste a %s, %d gramos de marihuana.", PlayerName(params[1]), amount);
					Message(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s algo de marihuana.", PlayerName(playerid), PlayerName(params[1]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					Message(playerid, COLOR_GREY, "No tienes tanto!");
				}
			}
			else if(strcmp(item,"speed",true) == 0)
			{
				if(PlayerInfo[playerid][pSpeed] >= amount)
				{
					format(string, sizeof(string), "Recibiste %d gramos de speed de %s.", amount, PlayerName(playerid));
					Message(params[1], COLOR_GRAD2, string);
					PlayerInfo[params[1]][pSpeed] += amount;
					PlayerInfo[playerid][pSpeed] -= amount;
					format(string, sizeof(string), "Le diste a %s, %d gramos de speed.", PlayerName(params[1]), amount);
					Message(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s algo de speed.", PlayerName(playerid), PlayerName(params[1]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					Message(playerid, COLOR_GREY, "No tienes tanto!");
				}
			}
			else if(strcmp(item,"extasy",true) == 0)
			{
				if(PlayerInfo[playerid][pEctasy] >= amount)
				{
					format(string, sizeof(string), "Recibiste %d gramos de extasy de %s.", amount, PlayerName(playerid));
					Message(params[1], COLOR_GRAD2, string);
					PlayerInfo[params[1]][pEctasy] += amount;
					PlayerInfo[playerid][pEctasy] -= amount;
					format(string, sizeof(string), "Le diste a %s, %d gramos de extasy.", PlayerName(params[1]), amount);
					Message(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s algo de extasy.", PlayerName(playerid), PlayerName(params[1]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					Message(playerid, COLOR_GREY, "No tienes tanto!");
				}
			}
				else if(strcmp(item,"heroina",true) == 0)
			{
				if(PlayerInfo[playerid][pHeroina] >= amount)
				{
					format(string, sizeof(string), "Recibiste %d gramos de heroina de %s.", amount, PlayerName(playerid));
					Message(params[1], COLOR_GRAD2, string);
					PlayerInfo[params[1]][pHeroina] += amount;
					PlayerInfo[playerid][pHeroina] -= amount;
					format(string, sizeof(string), "Le diste a %s, %d gramos de heroina.", PlayerName(params[1]), amount);
					Message(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s algo de heroina.", PlayerName(playerid), PlayerName(params[1]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					Message(playerid, COLOR_GREY, "No tienes tanto!");
				}
			}
			else if(strcmp(item,"ritalin",true) == 0)
			{
				if(PlayerInfo[playerid][pRitalin] >= amount)
				{
					format(string, sizeof(string), "Recibiste %d gramos de ritalin de %s.", amount, PlayerName(playerid));
					Message(params[1], COLOR_GRAD2, string);
					PlayerInfo[params[1]][pRitalin] += amount;
					PlayerInfo[playerid][pRitalin] -= amount;
					format(string, sizeof(string), "Le diste a %s, %d gramos de ritalin.", PlayerName(params[1]), amount);
					Message(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s le da a %s algo de ritalin.", PlayerName(playerid), PlayerName(params[1]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					Message(playerid, COLOR_GREY, "No tienes tanto!");
				}
			}
			}
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /dar2 <item> <jugador> <Cantidad>");
            Message(playerid, COLOR_GRAD2, "Items: drogasvirgen,speed,extasy,ritalin,heroina,materiales");
        }
        return 1;
    }
    zcmd(soloparaesxdlol, playerid, params[]){
    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
    if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "No autorizado");
        if(!sscanf(params, "ui", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
                if(Inmune(params[0])){
          			format(string, sizeof(string), "ATENCIÓN: %s intentó modificar el nivel de adm a %s", PlayerName(playerid), PlayerName(params[0]));
	            	A_Info(string);
		            return 1;
		        }
				else{
				    PlayerInfo[params[0]][pJDS] = params[1];
				    PlayerInfo[params[0]][pResetAdmin] = 10;
				    format(string, sizeof(string), "{40D3FF}%s lo ha asignado administrador nivel %d", PlayerName(playerid), params[1]);
				    Message(params[0], -1, string);
				    format(string, sizeof(string), "%s ha asignado administrador nivel %d a %s", PlayerName(playerid), params[1], PlayerName(params[0]));
				    A_Info(string);
				    Log("logs/haceradmin.log", string);
				}
            } else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /haceradmin <ID> <Nivel>");
        return 1;
    }
     zcmd(putalavainaloca3, playerid, params[]){
     if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
        new nick[24];
            GetPlayerName(playerid,nick,24);
			if(!strcmp(nick, "Nestor_Cuneo", true) || !strcmp(nick, "asdsad", false))
            {
        if(!sscanf(params, "ui", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
				{
				    PlayerInfo[params[0]][pJDS] = params[1];
				    format(string, sizeof(string), "{40D3FF}%s lo ha asignado administrador nivel %d", PlayerName(playerid), params[1]);
				    Message(params[0], -1, string);
				    format(string, sizeof(string), "%s ha asignado administrador nivel %d a %s", PlayerName(playerid), params[1], PlayerName(params[0]));
				    A_Info(string);
				    Log("logs/haceradmin.log", string);
				}
            } else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /haceradmin <ID> <Nivel>");
        } else Message(playerid,COLOR_GRAD2,"No autorizado para usar este comando");
        return 1;
    }
    zcmd(ledoypremiumxd, playerid, params[]){
    if(PlayerInfo[playerid][pDarpremium] == 0) return Message(playerid, COLOR_GREY, " No autorizado!");
        if(!sscanf(params, "ui", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];{
                    PlayerInfo[params[0]][pDonateT] = params[1];
                    format(string, sizeof(string), "{40D3FF}Estimado %s, su sistema premium está en {FFFFFF}[%d]", PlayerName(playerid), params[1]);
                    Message(params[0], -1, string);
                    format(string, sizeof(string), "%s puso sistema premium a %s a [%d] ", PlayerName(playerid), PlayerName(params[0]), params[1]);
                    A_Info(string);
                    Log("logs/premium.log", string);
				}
            } else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /premium <ID> <0 - 1> [0 = No / 1 = Si]");
        return 1;
    }
    zcmd(color, playerid, params[]){
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");{
            ShowPlayerDialog(playerid, COLOR_ADM, DIALOG_STYLE_LIST, " {00ABFF}Selecciona su color", " {FF0005}>{FFFFFF}Rojo\n {00FF00}>{FFFFFF}Verde\n {FFFF00}>{FFFFFF}Amarillo\n {FFFFC2}>{FFFFFF}Crema\n {FFA1FF}>{FFFFFF}Rosado\n {3CB9FF}>{FFFFFF}Celeste\n {9A03DA}>{FFFFFF}Morado\n {FF6631}>{FFFFFF}Naranja\n {FFFFFF}>Blanco", "Ok", "Salir");
        }
        return 1;
    }
    zcmd(colornombre, playerid, params[]){
        if (PlayerInfo[playerid][pDonateT] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");{
           Premiumcolor[playerid] = 1;
           Message(playerid, COLOR_GRAD2, "Te has puesto el color en tu nombre");
           SetPlayerColor(playerid, VERDE_PREMIUM);
        }
        return 1;
    }
    zcmd(quitarcolor, playerid, params[]){
        if (PlayerInfo[playerid][pDonateT] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");{
        Premiumcolor[playerid] = 0;
           SetPlayerColor(playerid, TEAM_HIT_COLOR);
           Message(playerid, COLOR_GRAD2, "Te has quitado el color de tu nombre");
        }
        return 1;
    }
    zcmd(kick, playerid, params[]){
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood del comando, debés esperar 20 segundos para volver a usarlo");
        if (!sscanf(params, "us[180]", params[0], params[1])){
            if(params[0] != INVALID_PLAYER_ID){
                new string[180];
                if(Inmune(params[0]))
        		{
          			format(string, sizeof(string), "ATENCIÓN: %s intentó kickear a %s", PlayerName(playerid),PlayerName(params[0]));
	            	return A_Info(string);
		        }
		        format(string, sizeof(string), "%s ha kickeado a %s, razón: %s", PlayerName(playerid),PlayerName(params[0]),params[1]);
          		OOCOff(0x2684FFFF,string);
          		Proponerma[playerid] = 1;
           	    SetTimerEx("proponerflood",20000,0,"i",playerid);
				SetTimerEx("Kickbug", 1500, 0, "i", params[0]);
				Log("logs/kick.log", string);
				return 1;
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utiliza: /kick <PlayerID> <Razón>");
        return 1;
    }
    zcmd(kickaa, playerid, params[]){
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
        if (!sscanf(params, "ds[180]", params[0], params[1])){
            if(params[0] != INVALID_PLAYER_ID){
                new string[180];
                if(Inmune(params[0]))
        		{
          			format(string, sizeof(string), "ATENCIÓN: %s intentó kickear a %s", PlayerName(playerid),PlayerName(params[0]));
	            	return A_Info(string);
		        }
		        format(string, sizeof(string), "%s ha kickeado a %s, razón: %s", PlayerName(playerid),PlayerName(params[0]),params[1]);
          		OOCOff(0x2684FFFF,string);
				SetTimerEx("Kickbug", 1500, 0, "i", params[0]);
				Log("logs/kick.log", string);
				return 1;
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utiliza: /kick <PlayerID> <Razón>");
        return 1;
    }
	zcmd(disarm, playerid, params[])
	{
        if (PlayerInfo[playerid][pJDS] < 4) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 9) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
        if(!sscanf(params, "us[64]", params[0]))
        {
            new string[120];
            format(string, sizeof(string), "%s limpio el inventario de %s.", PlayerName(playerid), PlayerName(params[0]));
            A_Info(string);
            Log("logs/disarmar.log", string);
            ResetPlayerWeapons(params[0]);
		} else Message(playerid, COLOR_GRAD2, "Utiliza: /disarm <PlayerID>");
		return 1;
	}
    zcmd(jail, playerid, params[])
    {
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 1024) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
        if(DetectarSPAM(params[2])) return AccionSPAM(playerid, params[2]);
        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood del comando, debés esperar 20 segundos para volver a usarlo");
        if (!sscanf(params, "uis[50]", params[0], params[1], params[2]))
        {
            if(params[0] != INVALID_PLAYER_ID)
            {
                new string[MAX_PLAYERS];
		        PlayerInfo[params[0]][pJailed] = 1;
				PlayerInfo[params[0]][pJailTime] = params[1]*60;
				ResetPlayerWeapons(params[0]);
				SetPosEx(params[0], 2767.8936,445.4332,3.7747,163.2555,0,0);
				GameTextForPlayer(params[0], "~~~n~Jaileado~s~~~", 500000, 4);
				format(string, sizeof(string), "%s encarceló a %s por %d minuto(s), razón: %s", PlayerName(playerid), PlayerName(params[0]), params[1], params[2]);
                OOCOff(0x2684FFFF,string);
                Proponerma[playerid] = 1;
           	    SetTimerEx("proponerflood",20000,0,"i",playerid);
				Log("logs/jail.log", string);
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utiliza: /jail <PlayerID> <Minutos> <Razón>");
        return 1;
    }
    zcmd(jailaa, playerid, params[])
    {
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 1024) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
        if(DetectarSPAM(params[2])) return AccionSPAM(playerid, params[2]);
        if (!sscanf(params, "dis[32]", params[0], params[1], params[2]))
        {
            if(params[0] != INVALID_PLAYER_ID)
            {
                new string[MAX_PLAYERS];
		        PlayerInfo[params[0]][pJailed] = 1;
				PlayerInfo[params[0]][pJailTime] = params[1]*60;
				ResetPlayerWeapons(params[0]);
				SetPosEx(params[0], 2767.8936,445.4332,3.7747,163.2555,0,0);
				GameTextForPlayer(params[0], "~~~n~Jaileado~s~~~", 500000, 4);
				format(string, sizeof(string), "%s encarceló a %s por %d minuto(s), razón: %s", PlayerName(playerid), PlayerName(params[0]), params[1], params[2]);
                OOCOff(0x2684FFFF,string);
				Log("logs/jail.log", string);
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utiliza: /jail <PlayerID> <Minutos> <Razón>");
        return 1;
    }
    zcmd(mandarls, playerid, params[])
	{
	    if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /mandarls <PlayerID>");
    	if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 1024) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        SetPosEx(params[0], 1529.6,-1691.2,13.3, 0, 0 ,0);
        MessageEx(playerid, params[0], COLOR_GRAD4, "¡Jugador teleportado!");
        new string[240];
		format(string, sizeof(string), "{FFFFFF}Administrador {FF0000}%s{FFFFFF} Mando a Los Santos Al jugador {FF0000}%s", PlayerName(playerid), PlayerName(params[0]));
		A_Info(string);
	    return 1;
	}
    zcmd(ls, playerid, params[])
    {
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 1024) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
        if (GetPlayerState(playerid) == 2)
		{
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1529.6,-1691.2,13.3);
		}
		else
		{
			SetPosEx(playerid, 1529.6,-1691.2,13.3, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(sf, playerid, params[])
	{
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 1024) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
        if (GetPlayerState(playerid) == 2)
		{
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1699.2, 1435.1, 10.7);
		}
		else{
			SetPosEx(playerid, -1417.0,-295.8,14.1, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(lv, playerid, params[])
	{
        if (PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
   		if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 1024) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
        if (GetPlayerState(playerid) == 2)
		{
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1694.6566,1453.4523,10.7632);
		}
		else{
			SetPosEx(playerid, 1694.6566,1453.4523,10.7632, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(entercar, playerid, params[]){
        if (PlayerInfo[playerid][pJDS] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 1024) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
        if (!sscanf(params, "i", params[0])){
            PutPlayerInVehicle(playerid, params[0], 1);
			return Message(playerid, COLOR_GRAD1, "¡Teleportado!");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /entercar <VehicleID>");
        return 1;
    }
    zcmd(fuel, playerid, params[]){
        if (PlayerInfo[playerid][pJDS] < 4) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 1024) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
        GlobalMsg(COLOR_GREEN, "La gasolina de los vehículos fue llenada");
  		for(new c=0;c<VEH;c++){
  			if(!IsAnOwnableCar(c)) Gas[c] = GasMax;
			else{
   				if(CarInfo[c][cGas] == 1) Gas[c] = 100;
			    else if(CarInfo[c][cGas] == 2) Gas[c] = 100;
			    else if(CarInfo[c][cGas] == 3) Gas[c] = 100;
			    else if(CarInfo[c][cGas] == 4) Gas[c] = 100;
			}
		}
        return 1;
    }
	// zcmd:dialogs ============================================================================================================================
	zcmd(google, playerid, params[]){
		if(PlayerToPoint(20.0,playerid,1091.2749,-1380.7460,13.8054)){
		 	return ShowPlayerDialog(playerid, GOOGLE, DIALOG_STYLE_INPUT, "Google Chrome", "{FFFFEE}www.{0077AA}G{FF2200}o{EE9900}o{0077AA}g{338800}l{FF2200}e{FFFFEE}.com - Buscar online","Buscar","Salir");
		}
		return 1;
	}
	// zcmd:taxi
    zcmd(tarifa, playerid, params[]){
        if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, " /tarifa [$] (Establece la tarifa)");
    	if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 21){
		        if(params[0] < 1 || params[0] > 100) return Message(playerid, COLOR_WHITE, "Valor entre 1-10");
       			TarifaTaxi = params[0];
       			new string[80];
				format(string, sizeof(string), "{409DFF}Taxi: La tarifa del taxi se a establecido en {FFFFFF}%d$", TarifaTaxi);
	       		GlobalMsg(-1, string);
		} else Message(playerid, COLOR_GRAD2, "No autorizado!");
        return 1;
    }
	// zcmd:global ============================================================================================================================
	zcmd(hora, playerid, params[])
    {
        new mtext[20], year, month,day, string[128];
		getdate(year, month, day);
		if(month == 1) { mtext = "Enero"; }
		else if(month == 2) { mtext = "Febrero"; }
		else if(month == 3) { mtext = "Marzo"; }
		else if(month == 4) { mtext = "Abril"; }
		else if(month == 5) { mtext = "Mayo"; }
		else if(month == 6) { mtext = "Junio"; }
		else if(month == 7) { mtext = "Julio"; }
		else if(month == 8) { mtext = "Augosto"; }
		else if(month == 9) { mtext = "Septiembre"; }
		else if(month == 10) { mtext = "Octubre"; }
		else if(month == 11) { mtext = "Noviembre"; }
		else if(month == 12) { mtext = "Diciembre"; }
  		new hour,minuite,second;
		gettime(hour,minuite,second);
		FixHour(hour);
		hour = shifthour;
		if (minuite < 10)
		{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tiempo de Carcel: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
				}
		}
		else
		{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Tiempo de Carcel: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
				}
		}
		GameTextForPlayer(playerid, string, 5000, 1);
		format(string, sizeof(string), "* %s se fija en la hora de su reloj de muñeca.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
    }

    /////////////////////////// Paint Ball /////////////////////////////

    zcmd(paintball, playerid, params[])
	{
        if(!PlayerToPoint(5.0,playerid,1310.2435,-1367.8308,13.5413)) return Message(playerid, COLOR_GRAD2, "No estás en el paintball.");
        ShowPlayerDialog(playerid, DIALOG_PAINTBALL, DIALOG_STYLE_LIST, "Bienvenido al Paintball", "DeathMatch\nEquipo vs Equipo\nJugador vs Jugador", "Aceptar", "Cancelar");
        return 1;
	}
	zcmd(salirpaintball, playerid, params[])
	{
	    if(InPaintballDM[playerid] == 0 && InPaintballTvT[playerid] == 0 && InPaintPvP[playerid] == 0) return Message(playerid, COLOR_GRAD2, "No estás jugando en el paintball.");
     	{

	    	SetPosEx(playerid, 1310.2435,-1367.8308,13.5413,0,0,0);
	    	ResetPlayerWeapons(playerid);
			InPaintballDM[playerid] = 0;
			PaintballDMKills[playerid] = 0;
			InPaintballTvT[playerid] = 0;
			InTvTNaranja[playerid] = 0;
			InTvTVerde[playerid] = 0;
			InPaintPvP[playerid] = 0;
			PaintPvPKills[playerid] = 0;
            SetPlayerColor(playerid,TEAM_HIT_COLOR);
		}
		return 1;
	}
	/////////////////////////////////////////////////////////////////////
    zcmd(apgarage, playerid, params[])
    {
        CheckForOpenDoor(playerid);
        return 1;
    }
    zcmd(cpgarage, playerid, params[])
    {
        CheckForCloseDoor(playerid);
        return 1;
    }
    zcmd(subir, playerid, params[])
	{
	if(Team_NG(playerid)){
		if (PlayerToPoint(30, playerid,2787.02954102,-2299.03149414,9.41190529))
		{
		    MoveDynamicObject(saem4,2787.02954102,-2299.03149414,16.5, 2.0);
			SetTimer("Saem4", 7000, 0);
		}}return 1;}

		zcmd(abrirp, playerid, params[])
	{
	if(Team_NG(playerid)){
		if (PlayerToPoint(30, playerid,2273.59570312,-2663.29003906,20.54697227))
		{
			MoveDynamicObject(saem1,2273.59570312,-2663.29003906,20.54697227, 1.0); //Cerrada
			SetTimer("Saem1", 10000, 0);
			return 1;
		}
		if (PlayerToPoint(30, playerid,2338.10546875,-2353.88281250,20.73118401))
		{
			MoveDynamicObject(saem2,2338.10546875,-2353.88281250,20.73118401, 1.0);
			SetTimer("Saem2", 10000, 0);
			return 1;
		}
		if (PlayerToPoint(30, playerid,2458.59375000,-2255.52441406,32.28589249))
		{
			MoveDynamicObject(saem3,2458.59375000,-2255.52441406,32.28589249, 1.0);
			SetTimer("Saem3", 10000, 0);
			return 1;
		}
		else Message(playerid, COLOR_GREY,"No tienes el mando de la puerta!");
	}
		return 1;}
    zcmd(ap, playerid, params[]){
    if(Team_LSPD(playerid)){
        if (PlayerToPoint(2, playerid,250.48937988281, 63.033870697021, 1004.8109741211))
  		{
			MoveDynamicObject(lspdo, 250.4892578125, 63.033203125, 1007.6117553711, 2.0);
			return 1;
		}
		else if (PlayerToPoint(2, playerid,250.607421875, 67.644607543945, 1003.560546875)){
			MoveDynamicObject(lspdg, 250.607421875, 70.615737915039, 1003.560546875, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,266.8418,87.7773,1001.0391)){
			MoveDynamicObject(cell, 266.3408203125, 77.948211669922, 1001.8412475586, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,266.7480,81.9981,1001.0391)){
			MoveDynamicObject(cell, 266.3408203125, 74.504852294922, 1001.8412475586, 1.0);
			return 1;
  		}
  		else if (PlayerToPoint(1, playerid,248.01469421387, 75.232604980469, 1004.2604370117)){
			MoveDynamicObject(lspdg1, 248.0146484375, 75.232421875, 1006.8364868164, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,245.1971,76.1384,1003.6406)){
			MoveDynamicObject(lspdg2, 244.7890625, 75.232421875, 1006.9608764648, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,226.30581665039, 71.110366821289, 1005.6588745117))
  		{
			MoveDynamicObject(lspdg3, 226.3056640625, 68.285301208496, 1005.6588745117, 1.0);
			return 1;
		}
        else if (PlayerToPoint(1, playerid,226.3056640625, 75.235343933105, 1005.6588745117)){
			MoveDynamicObject(lspdg4, 226.3056640625, 79.384338378906, 1005.6588745117, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,250.81405639648, 86.482467651367, 1003.235168457)){
			MoveDynamicObject(lspdg5, 250.8134765625, 86.482421875, 1005.7106323242, 1.0);
			return 1;
		}
        else if (PlayerToPoint(10, playerid,245.0578,72.4314,1002.5406)){
      		MoveDynamicObject(lspddoor1, 244.0578,72.4314,1002.5406, 3.5000);
      		MoveDynamicObject(lspddoor2, 247.1478,72.4314,1002.5406, 3.5000);
      		MoveDynamicObject(lspdk, 245.17578125, 72.515525817871, 1003.8690795898, 2.5);
      		return 1;
       	}
		else if (PlayerToPoint(5, playerid,258.94287109375, 90.618301391602, 1001.330078125)){
			MoveDynamicObject(lspd2, 258.9423828125, 90.6181640625, 1004.3630371094, 1.0);
			return 1;
		} else { SendClientMessage(playerid, COLOR_GREY,"No hay señal"); 	return 1;	}
	}
	else if (Gobierno(playerid)) {
	 if(PlayerToPoint(5, playerid, 1516.2932,-1756.2100,-22.5822)) {
			MoveDynamicObject(ayunta, 1519.91040, -1756.91467, -23.59077, 2.0);
			MoveDynamicObject(ayunta1, 1512.90027, -1757.08008, -23.58875, 2.0);
			return 1;
			}
  else if(PlayerToPoint(5, playerid, 1525.6722,-1787.5110,-22.5984)) {
  MoveDynamicObject(ayunta2, 1526.72815, -1788.48083, -23.59802, 2.0);
  return 1;
  }
       	else { SendClientMessage(playerid, COLOR_GREY,"No hay señal"); return 1; }
	}
	else if (Team_FBI(playerid)){
	    if (PlayerToPoint(15, playerid,940.33, -1027.58, 33.36)){
	    MoveDynamicObject(PuertaFBI,  940.33, -1027.58, 28.01, 3.5000);
	    return 1;
	  	}
	  	else  if (PlayerToPoint(2, playerid,228.7567,150.5487,1003.0234)){
			MoveDynamicObject(lvpddoor2, 228.21276855,154.31411743,1002.02343750, 2.0);
			MoveDynamicObject(lvpddoor1, 228.24699402,148.20443726,1002.02343750, 2.0);
			return 1;
		}
		else if (PlayerToPoint(2, playerid,229.7680,158.0882,1003.0234)){
			MoveDynamicObject(lvpddoor3, 230.44369507,158.50949097,998.89562988, 2.0);
			return 1;
		}
		else { SendClientMessage(playerid, COLOR_GREY,"No hay señal"); return 1; }
	}
	else if (Mafia_Espanola(playerid)){
	    if (PlayerToPoint(15, playerid,923, -1210.5999755859, 18.799999237061)){
	    MoveDynamicObject(puertaespanola, 923, -1210.5999755859, 10.79, 3.5000);
	    }
       	else { SendClientMessage(playerid, COLOR_GREY,"No hay señal"); 	return 1;	}
	}
 else if (Umbrella7(playerid)){
        if (PlayerToPoint(2, playerid,253.27075195313, 109.32601928711, 1003.7384643555)){
			MoveDynamicObject(u7d1, 253.2705078125, 109.3251953125, 1006.5399780273, 2.0);
			return 1;
		}
		else if (PlayerToPoint(2, playerid,239.74563598633, 117.20024871826, 1003.7384643555)){
			MoveDynamicObject(u7d2, 239.7451171875, 117.2001953125, 1006.7141723633, 2.0);
			return 1;
		}
		else if (PlayerToPoint(10, playerid,244.86236572266, 110.86795043945, 1002.21875)){
			MoveDynamicObject(u7d3, 247.81130981445, 110.8671875, 1002.21875, 0.5);
			return 1;
		}
		else { SendClientMessage(playerid, COLOR_GREY,"No hay señal"); 	return 1;	}
	}
	else if(Team_Mecanicos(playerid))
	{
        if(PlayerToPoint(10,playerid,1421.6819,-1648.9844,13.3560))
			{
			    MoveDynamicObject(Portontaller,1419.59998, -1648.69995, 7.30000,3.5);
                return 1;
			}
	}
	else if(Team_SAMUR(playerid)){
       if (PlayerToPoint(20, playerid,1140.82, -1295.21, 15.41))//El 20 es el radio/distancia a la que se activa
{
MoveDynamicObject(samur, 1140.82, -1295.21, 20.45, 3.5);
SetTimer("samur1", 7000, 0);
SendClientMessage(playerid,0x33CCFFAA,"Has abierto la verja de SAMUR, la puerta cerrará en 7 segundos!.");
}
else
 {
 SendClientMessage(playerid, COLOR_GREY,"Muy lejos")
return 1;
}


	} else Message(playerid, COLOR_GREY,"No tiene mando a distancia para abrir esto!");
	return 1;
}
zcmd(cp, playerid, params[])
{
    if(Team_LSPD(playerid))
	{
       	if (PlayerToPoint(2, playerid,250.48937988281, 63.033870697021, 1004.8109741211)){
			MoveDynamicObject(lspdo, 250.52018737793, 62.803260803223, 1004.2604370117, 2.0);
			return 1;
		}
		else if (PlayerToPoint(2, playerid,250.607421875, 67.644607543945, 1003.560546875)){
			MoveDynamicObject(lspdg, 250.607421875, 67.644607543945, 1003.560546875, 1.0);
			return 1;
		}
		else if (PlayerToPoint(5, playerid,266.3408203125, 82.641418457031, 1001.8412475586)){
			MoveDynamicObject(cell, 266.3408203125, 82.641418457031, 1001.8412475586, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,248.01469421387, 75.232604980469, 1004.2604370117)){
			MoveDynamicObject(lspdg1, 248.01469421387, 75.232604980469, 1004.2604370117, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,245.1971,76.1384,1003.6406)){
			MoveDynamicObject(lspdg2, 244.78970336914, 75.232421875, 1004.2604370117, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,226.30581665039, 71.110366821289, 1005.6588745117)){
			MoveDynamicObject(lspdg3, 226.30581665039, 71.110366821289, 1005.6588745117, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,226.3056640625, 75.235343933105, 1005.6588745117)){
			MoveDynamicObject(lspdg4, 226.3056640625, 75.235343933105, 1005.6588745117, 1.0);
			return 1;
		}
		else if (PlayerToPoint(1, playerid,250.81405639648, 86.482467651367, 1003.235168457)){
			MoveDynamicObject(lspdg5, 250.81405639648, 86.482467651367, 1003.235168457, 1.0);
			return 1;
		}
		else if (PlayerToPoint(10, playerid,245.0578,72.4314,1002.5406)){
      		MoveDynamicObject(lspddoor1, 245.0578,72.4314,1002.5406, 3.5000);
      		MoveDynamicObject(lspddoor2, 245.9478,72.4314,1002.5406, 3.5000);
      		MoveDynamicObject(lspdk, 245.17594909668, 72.789848327637, 1003.8690795898, 1.0);
      		return 1;
       	}
		else if (PlayerToPoint(5, playerid,258.94287109375, 90.618301391602, 1001.330078125)){
			MoveDynamicObject(lspd2, 258.94287109375, 90.618301391602, 1001.330078125, 1.0);
			return 1;
		}
       	else { SendClientMessage(playerid, COLOR_GREY,"No hay señal"); }
	}
	else if (Gobierno(playerid)){
	   if(PlayerToPoint(7, playerid, 1516.2932,-1756.2100,-22.5822))
	   {
		MoveDynamicObject(ayunta, 1517.91040, -1756.91467, -23.59077, 3.0);
		MoveDynamicObject(ayunta1, 1514.90027, -1757.08008, -23.58875, 3.0);
		return 1;
		}
		else if(PlayerToPoint(7, playerid, 1525.6722,-1787.5110,-22.5984)){
		MoveDynamicObject(ayunta2, 1524.72815, -1788.48083, -23.59802, 3.0);
		return 1;
		}
       	else { SendClientMessage(playerid, COLOR_GREY,"No hay señal"); }
	}
	else if(Team_FBI(playerid)){
	if (PlayerToPoint(15, playerid,940.33, -1027.58, 33.36)){
	    MoveDynamicObject(PuertaFBI, 940.33, -1027.58, 33.36, 3.5000);
	    return 1;
	    }
	    	else if (PlayerToPoint(5, playerid,228.7567,150.5487,1003.0234)){
			MoveDynamicObject(lvpddoor1, 228.26893616,149.72817993,1002.02343750, 2.0);
			MoveDynamicObject(lvpddoor2, 228.20497131,152.73513794,1002.02343750, 2.0);
			return 1;
		}
		else if (PlayerToPoint(5, playerid,229.7680,158.0882,1003.0234)){
			MoveDynamicObject(lvpddoor3, 230.44369507,158.50949097,1001.94860840, 2.0);
			return 1;
		}
       	else { SendClientMessage(playerid, COLOR_GREY,"No hay señal"); }
	}
	else if(Mafia_Espanola(playerid)){
	if (PlayerToPoint(15, playerid,923, -1210.5999755859, 18.799999237061)){
	    MoveDynamicObject(puertaespanola, 923, -1210.5999755859, 18.799999237061, 3.5000);
	    }
       	else { SendClientMessage(playerid, COLOR_GREY,"No hay señal"); }
	}
	else if(Team_Mecanicos(playerid))
	{
        if(PlayerToPoint(10,playerid,1421.6819,-1648.9844,13.3560))
			{
			    MoveDynamicObject(Portontaller,1419.59998, -1648.69995, 16.30000,3.5);
                return 1;
			}
	}
 		else if (Umbrella7(playerid)){
        if (PlayerToPoint(2, playerid,253.27075195313, 109.32601928711, 1003.7384643555)){
			MoveDynamicObject(u7d1, 253.27075195313, 109.32601928711, 1003.7384643555, 2.0);
			return 1;
		}
		else if (PlayerToPoint(2, playerid,239.74563598633, 117.20024871826, 1003.7384643555)){
			MoveDynamicObject(u7d2, 239.74563598633, 117.20024871826, 1003.7384643555, 2.0);
			return 1;
		}
		else if (PlayerToPoint(10, playerid,244.86236572266, 110.86795043945, 1002.21875)){
			MoveDynamicObject(u7d3, 244.86236572266, 110.86795043945, 1002.21875, 0.5);
			return 1;
		}
		else Message(playerid, COLOR_GREY,"No hay señal");
	}
	else Message(playerid, COLOR_GREY,"Usted no tiene un mando a distancia para cerrar esto.");
	return 1;
    }
    zcmd(controlcelda, playerid, params[])
    {
        if(PlayerToPoint(3, playerid,200.70,168.43,1003.02) || PlayerToPoint(3, playerid, 198.50,157.95,1003.02) || PlayerToPoint(3, playerid, 198.73,179.19,1003.03))
        {
            ShowPlayerDialog(playerid, CELDAS, DIALOG_STYLE_LIST, "{FFFFFF}FBI - Control de Celdas", " {FFFFFF}>Celda Nro 1 \n {FFFFFF}>Celda Nro 2", "Ok", "Salir");
        }
        else if(PlayerToPoint(15, playerid,592.1495,838.9785,-86.0390))
        {
           ShowPlayerDialog(playerid, CPRISION, DIALOG_STYLE_LIST, "{6CF600}Guardia Nacional{FFFFFF}-Control de Celdas", " {00FF00}>{FFFFFF}Celda Nro 1 \n {00FF00}>{FFFFFF}Celda Nro 2 \n {00FF00}>{FFFFFF}Celda Nro 3", "Ok", "Salir");
        }
        else Message(playerid, -1, "{FFFFFF}No estás en el control de celdas!");
 		return 1;
	}
	zcmd(controlalqaeda, playerid, params[])
    {
        if(PlayerToPoint(3, playerid,267.0630,1863.3978,8.7649))
        {
            ShowPlayerDialog(playerid, CELDASAL, DIALOG_STYLE_LIST, "{FFFFFF}Alqaeda - Control de Celdas", " {FFFFFF}>Celda Nro 1 \n {FFFFFF}>Celda Nro 2 \n {FFFFFF}>Celda Nro 3", "Ok", "Salir");
        }
        else Message(playerid, -1, "{FFFFFF}No estás en el control de celdas!");
 		return 1;
	}
	zcmd(drogas, playerid, params[])
    {
        new string[64];
        format(string, sizeof(string), "Speed: %d - Extasis: %d - Ritalin: %d - Heroína: %d - Marihuana: %d -Droga virgen: %d",
		PlayerInfo[playerid][pSpeed],
		PlayerInfo[playerid][pEctasy],
		PlayerInfo[playerid][pRitalin],
		PlayerInfo[playerid][pHeroina],
		PlayerInfo[playerid][pMarihuana],
		PlayerInfo[playerid][pDrugs]);
		return Message(playerid, COLOR_YELLOW, string);
	}
    zcmd(sacarsangre, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(!Team_SAMUR(playerid) && !Team_LVMD(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
            if(OnDuty[playerid] == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
            if(IsPlayerConnected(params[0]))
            {
                if(PlayerToPoint(10.0, playerid, 2003.3566,2288.7163,1011.1256) || PlayerToPoint(20.0,params[0],1613.3740,1777.6775,-60.0662))
                {
                    if (ProxDetectorS(5.0, playerid, params[0]))
            		{
            		    new Float:HP, string[128]; GetPlayerHealth(params[0], HP);
            		    if(HP < 100) return Message(playerid, COLOR_GRAD2, "El paciente debe estar con el máximo de vida");
            		    SetHP(params[0], HP-80);
						SetPlayerDrunkLevel(params[0], 3000);
						Blood += 80;
						format(string, sizeof(string), "* El doctor %s realiza una extracción de sangre a %s", PlayerName(playerid), PlayerName(params[0]));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string, sizeof(string), "{FF2200}Información{FFFFFF}: Hay %d centilitros de sangre disponible.", Blood);
						Message(playerid, COLOR_WHITE, string);
						SaveStuff();
            		}
            		else Message(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted");
                }
                else Message(playerid, COLOR_GRAD2, "¡No estás en el hospital!");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /sacarsangre <jugador>");
        return 1;
    }
    zcmd(asistir, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(!Team_SAMUR(playerid) && !Team_LVMD(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
            if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No te puedes asistir ati mismo!");
			if(IsPlayerConnected(params[0]))
            {
                if (ProxDetectorS(4.0, playerid, params[0]))
                {
                    new Float:health, string[128]; GetPlayerHealth(params[0], health);
        			if(health < 20.1)
			        {
           				Rescued[params[0]] = 1;
               			Left4Life[params[0]] = 240;
                  		SetHP(params[0], 50);
                    	ClearAnimations(params[0]);
                    	format(string, sizeof(string), "* Médico %s reanima a %s que se encontraba inconsciente", PlayerName(playerid), PlayerName(params[0]));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                    format(string, sizeof(string), "{FF2200}Atención{FFFFFF}: %s ha sido reanimado.", PlayerName(params[0]));
	                    Message(params[0], COLOR_WHITE, string);
	                    Message(playerid, COLOR_WHITE, string);
	                    ClearAnimations(params[0]);
					}
					else Message(playerid, COLOR_GRAD2, "¡Este jugador tiene vida suficiente!");
                }
                else Message(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /Asistir <id>");
        return 1;
    }
    zcmd(pcinfo, playerid, params[]){
        if(!Team_SAMUR(playerid) && !Team_LVMD(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
        if(PlayerToPoint(5.0, playerid, -2670.3879,519.9204,48.0805) || PlayerToPoint(5.0, playerid, 1586.5464,1772.5278,-60.0662)){
			new string[128];
        	ClearChatbox(playerid, 5);
	        Message(playerid, 0x00D535FF, "Windows 7 (Loading ... )");
	        format(string, sizeof(string), "Sangre disponible: %d", Blood);
	        Message(playerid, COLOR_WHITE, string);
	        format(string, sizeof(string), "Radiación TAC: %d/%d", SBizzInfo[SAMUR][sbProducts],SBizzInfo[SAMUR][sbMaxProducts]);
	        Message(playerid, COLOR_WHITE, string);
	        format(string, sizeof(string), "Fondos: %d", SBizzInfo[SAMUR][sbTill]);
	        Message(playerid, COLOR_WHITE, string);
	        Message(playerid, 0x00D535FF, "------------------------------");
		}
		else Message(playerid, COLOR_GRAD2, "  No estás en el ordenador!");
		return 1;
	}
    zcmd(operar, playerid, params[])
	{
        if(!Team_SAMUR(playerid) && !Team_LVMD(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
        if(OnDuty[playerid] == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
        if(!sscanf(params, "i", params[0]))
        {
            if(!ProxDetectorS(10.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "¡El Jugador no esta cerca de ti!");
            if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No te puedes operar ati mismo!");
			if(IsPlayerConnected(params[0]))
            {
				if(PlayerToPoint(20.0, playerid, 2003.7998,2288.2026,1011.1256) || PlayerToPoint(20.0,params[0],1613.3740,1777.6775,-60.0662))
            	{
            	    new string[128], lucky = random(30);
					ClearChatbox(playerid, 10);
            	    Message(playerid, COLOR_WHITE, "{FFDD33}-- Comienza la Operación --");
					if(PlayerInfo[params[0]][pCancer] > MAX_CANCER)
            	    {
            	        format(string, sizeof(string), "* %s agarra sus instrumentos.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    	format(string, sizeof(string), "* %s intenta acabar con el cáncer de %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            			if(lucky > 20)
						{
            		    	format(string, sizeof(string), "* %s no puede acabar con el cáncer de %s", PlayerName(playerid), PlayerName(params[0]));
            				ProxDetector(30.0, playerid, string, ROJO_ADMIN,ROJO_ADMIN,ROJO_ADMIN,ROJO_ADMIN,ROJO_ADMIN);
                        	SetPlayerDrunkLevel(params[0], 15000);
                        	PlayerInfo[params[0]][pCancer] += 20;
            			}
            			else{
            		    	format(string, sizeof(string), "* %s acaba definitivamente con el cáncer de %s.", PlayerName(playerid), PlayerName(params[0]));
            				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            				PlayerInfo[params[0]][pCancer] = 0;
            				SetPlayerDrunkLevel(params[0], 10000);
            				}
						}
                    if(PlayerInfo[params[0]][pEpilepsia] > MAX_EPILEPSIA)
                    {
                        format(string, sizeof(string), "* %s acerca a la cabeza de %s un aparato.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    	format(string, sizeof(string), "* %s utiliza su maquinária para paliar la enfermedad a %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
           				if(lucky > 20)
			   			{
            		    	format(string, sizeof(string), "* %s no pudo curar a %s.", PlayerName(playerid), PlayerName(params[0]));
            				ProxDetector(30.0, playerid, string, ROJO_ADMIN,ROJO_ADMIN,ROJO_ADMIN,ROJO_ADMIN,ROJO_ADMIN);
                        	SetPlayerDrunkLevel(params[0], 15000);
            			}
            			else
            			{
            		    	format(string, sizeof(string), "* %s cura exitosamente a %s.", PlayerName(playerid), PlayerName(params[0]));
            				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            				PlayerInfo[params[0]][pEpilepsia] = 0;
            				SetPlayerDrunkLevel(params[0], 10000);
            				}
						}
            		if(PlayerInfo[params[0]][pSIDA] > 0)
            		{
            		    format(string, sizeof(string), "* %s utiliza tecnologia avanzada.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    	format(string, sizeof(string), "* %s intentar paliar el SIDA de %s con esperanza.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
           				if(lucky > 20)
            			{
            		    	format(string, sizeof(string), "* %s no tiene éxito al curar a %s", PlayerName(playerid), PlayerName(params[0]));
            				ProxDetector(30.0, playerid, string, ROJO_ADMIN,ROJO_ADMIN,ROJO_ADMIN,ROJO_ADMIN,ROJO_ADMIN);
                        	SetPlayerDrunkLevel(params[0], 15000);
            			}
            			else
            			{
            		    	format(string, sizeof(string), "* %s consiguió que el SIDA de %s sea história.", PlayerName(playerid), PlayerName(params[0]));
            				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            				PlayerInfo[params[0]][pSIDA] = 0;
            				SetPlayerDrunkLevel(params[0], 10000);
            				}
						}
				 	}
				else Message(playerid, COLOR_GRAD2, "El jugador no está en el Hospital ni en una Ambulancia");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /Operar <jugador>");
		return 1;
     }
    zcmd(diagnostico, playerid, params[])
    {
        if(!Team_SAMUR(playerid) && !Team_LVMD(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
        if(OnDuty[playerid] == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
        if(!sscanf(params, "i", params[0]))
        {
            if(!ProxDetectorS(10.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "¡El Jugador no esta cerca de ti!");
			if(IsPlayerConnected(params[0]))
            {
                if(PlayerToPoint(20.0,playerid,-2671.4275,528.9625,48.0803) || PlayerToPoint(20.0,params[0],1614.8881,1778.6704,-60.0662))
            	{
            	    new string[128];
            	    ClearChatbox(playerid, 10);
            	    Message(playerid, COLOR_WHITE, "{FFDD33}-- Diagnóstico TAC --");
            	    if(PlayerInfo[params[0]][pCancer] > MAX_CANCER)
            	    {
            	        format(string, sizeof(string), "{FFFFFF}Cáncer de pulmón -- {3AF69F}POSITIVO{FFFFFF}(%d\%)", PlayerInfo[params[0]][pCancer]);
						Message(playerid, COLOR_WHITE, string);
            	    }
            	    else
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Cáncer de pulmón -- {DB4740}NEGATIVO");
            	    }

            	    if(PlayerInfo[params[0]][pEpilepsia] > MAX_EPILEPSIA)
            	    {
            	        format(string, sizeof(string), "{FFFFFF}Epilepsia -- {3AF69F}POSITIVO{FFFFFF}(%d\%)", PlayerInfo[params[0]][pEpilepsia]);
						Message(playerid, COLOR_WHITE, string);
            	    }
            	    else
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Epilepsia -- {DB4740}NEGATIVO");
            	    }

            	    if(PlayerInfo[params[0]][pSIDA] > 0)
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Síndrome de Inmunodeficiencia Adquirida -- {3AF69F}POSITIVO");
            	    }
            	    else
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Síndrome de Inmunodeficiencia Adquirida -- {DB4740}NEGATIVO");
            	    }

            	    if(PlayerInfo[params[0]][pDengue] > 0)
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Virus DEN-1 -- {3AF69F}POSITIVO");
            	    }
            	    else
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Virus DEN-1 -- {DB4740}NEGATIVO");
            	    }

            	    ClearChatbox(playerid, 1);

                 	format(string, sizeof(string), "* El doctor %s realiza un diagnóstico general a %s", PlayerName(playerid), PlayerName(params[0]));
                 	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else Message(playerid, COLOR_GRAD2, "El jugador no está en la máquina de resonancia magnética");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /diagnostico <jugador>");
        return 1;
    }
    zcmd(curar, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(!Team_SAMUR(playerid) && !Team_LVMD(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
            if(OnDuty[playerid] == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
            if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No te puedes Transferir Sangre a Ti Mismo!");
			if(IsPlayerConnected(params[0]))
            {
                if(PlayerToPoint(20.0, playerid, 2003.3566,2288.7163,1011.1256) || PlayerToPoint(20.0,params[0],1613.3740,1777.6775,-60.0662))
				{
					new Float:health; GetPlayerHealth(params[0], health);
                	if(ProxDetectorS(5.0, playerid, params[0]))
                	{
                    	if(Blood > 99)
				    	{
				        	if(health < 100)
				        	{
            					Rescued[params[0]] = 0;
                				Left4Life[params[0]] = 0;
                   				SetHP(params[0], 100);
                   				new string[128];
                   				format(string, sizeof(string), "* El doctor %s transferido sangre satisfactoriamente a %s", PlayerName(playerid), PlayerName(params[0]));
                   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                      			format(string, sizeof(string), "{FFFFFF}¡El médico {FF7700}%s {FFFFFF}te ha curado con éxito!", PlayerName(playerid));
           						Message(params[0], -1, string);
			                	PlayerPlaySound(params[0], 1150, 0.0, 0.0, 0.0);
			                	PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			                	Blood -= 100;
			                	SaveStuff();
							}
							else Message(playerid, COLOR_GRAD2, "Este jugador tiene la vida al máximo");
				    	}
				    	else Message(playerid, COLOR_GRAD2, "¡No queda sangre suficiente, realiza una campaña de donación!");
                	}
                	else Message(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted");
				}
				else Message(playerid, COLOR_GRAD2, "Solo puedes hacer transfusiones de sangre en Hospitales o Ambulancias");
			}
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
        }
		else Message(playerid, COLOR_GRAD2, "Utilize: /curar <ID>");
        return 1;
    }
    zcmd(psv, playerid, params[])
    {
        if(PlayerToPoint(10.0, playerid, 251.0016,118.2015,1003.2188))
       	{
			new string[] = "\t\t\t{AA5599}--- Centro de Inteligencia --\n\t{FFFFFF}Escriba el servicio que desea y uno de nuestros agentes le atenderá.";
			ShowPlayerDialog(playerid,UMBRELLA7_DIALOG,DIALOG_STYLE_INPUT,"Oficina CA",string,"Enviar","Cancelar");
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en la oficina de U7!");
        return 1;
    }
    zcmd(gmlimits, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            new string[124];
	        format(string, sizeof(string), "%d Objects\n%d Pickups\n%d Checkpoints\n%d Race Checkpoints\n%d Map Icons\n%d 3D Text Labels",CountDynamicObjects(),CountDynamicPickups(),CountDynamicCPs(),CountDynamicRaceCPs(),CountDynamicMapIcons(),CountDynamic3DTextLabels());
	    	ShowPlayerDialog(playerid,DINFO,DIALOG_STYLE_MSGBOX,"SDC: Streamer Dynamics Counter",string,"Ok","");
		}
		return 1;
	}
	zcmd(comprarflores, playerid, params[]){
        if(GetPlayerMoney(playerid) > 9)
        {
		if(PlayerToPoint(5.0,playerid,1424.4368,-1717.5712,13.5469)||PlayerToPoint(5.0,playerid,1272.6466,-1651.7512,13.5469))
		{
		    SafeGivePlayerWeapon(playerid, 14, 1);
		    Bought(playerid, 9);
		}
		else Message(playerid,COLOR_GREY,"No te encuentras en una floristeria.");
		return 1;
    }
    else Message(playerid,COLOR_GREY,"No tienes suficiente dinero");
    return 1;
    }
    zcmd(patines, playerid, params[])
    {
        if(Skate[playerid] == 0) return Message(playerid,COLOR_GREY,"¡No tienes patines!");
        if(!sscanf(params, "d", params[0]))
        {
			switch(params[0])
			{
			    case 0:
			    {
				  	return Skate[playerid] = 1;
			    }
			    case 1:
			    {
			        Skate[playerid] = 20; Message(playerid, COLOR_GRAD2, "ACTIVADO ACCIÓN 2 --> Velocidad moderada");
			        return Message(playerid, COLOR_YELLOW, "Utilize: ESPACIO [correr] y ALT [parar] - Utilize /patines 0");
			    }
			    case 2:
			    {
			        Skate[playerid] = 30; Message(playerid, COLOR_GRAD2, "ACTIVADO ACCIÓN 3 --> Sprint");
			        return Message(playerid, COLOR_YELLOW, "Utilize: ESPACIO [correr] y ALT [parar] - Utilize /patines 0");
			    }
			    default: Message(playerid,COLOR_GREY,"Utiliza: /patines [acción] (0:parar,1:correr,2:sprint)");
			}
        }
        else Message(playerid,COLOR_GREY,"Utiliza: /patines [acción] (0:parar,1:correr,2:sprint)");
        return 1;
    }
    zcmd(cerrajear, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!Mafioso(playerid) && !TriadasTeam(playerid) && !Mafia_Alqaeda(playerid) && !Mafia_Espanola(playerid) && !Mafia_Alemana(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres mafioso!");
			{
	            if(PlayerInfo[playerid][pRob] == 5) return Message(playerid, COLOR_GRAD2, "¡Espera al próximo PayDay para robar más vehículos!");
				if(PickLock[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡Compra un PickLock, no dispones de uno!");
				new picklock = random(2)+1, engine, lights, alarm, doors, bonnet, boot, objective, string[128], car = IsPlayerInVehicleRadio(playerid, 5);
	            if(!IsPlayerInVehicleRadio(playerid, 5)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca de ningún vehículo!");
	            if(!IsAnOwnableCar(car)) return Message(playerid, COLOR_GRAD2, "¡No puedes cerrajear un vehículo de facción!");
				if(picklock == 1)
				{
				    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
				    format(string, sizeof(string), "* %s intenta cerrajear la cerradura del %s con su instrumental y lo logra", PlayerName(playerid), GetVehicleFriendlyName(car));
					ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
                    SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
					Message(playerid, COLOR_GREEN, "Vehículo abierto");
					CarInfo[car][cLock] = 0;
					PlayerInfo[playerid][pRob]++;
					if(CarInfo[car][cAlarm] > 0)
					{
					    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
						KillTimer(Alarm[car]);
						Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
						format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
					}
                    return 1;
				}
			    else
				{
				    format(string, sizeof(string), "* %s intenta cerrajear la cerradura del %s con su instrumental y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
					ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
					PlayerInfo[playerid][pRob]++;
					if(CarInfo[car][cAlarm] > 0)
					{
					    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
					    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
						KillTimer(Alarm[car]);
						Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
						format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
					}
                    return 1;
				}
			}
		}
		return 1;
	}
	zcmd(robarpieza, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            new car = IsPlayerInVehicleRadio(playerid, 5), engine,lights,alarm,doors,bonnet,boot,objective, stole = random(2)+1, Float:HP, string[128];

			if(gPlayerLogged[playerid] == 0) return Message(playerid, COLOR_GREY, "Inicia sesión!");
	        if(!Mafioso(playerid) && !Mafia_Alemana(playerid))  return Message(playerid, COLOR_GREY, "No eres mafioso.");
            if(sscanf(params, "s[32]", params[0])) return Message(playerid, COLOR_GREY, "Utiliza: /robarpieza [nitro, gps, stereo, llantas, rastreador]");
            if(PlayerInfo[playerid][pRob] == 5) return Message(playerid, COLOR_GRAD2, "¡Espera al próximo PayDay para robar más piezas!");
            if(!IsPlayerInVehicleRadio(playerid, 5)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca de ningún vehículo!");
            if(!IsAnOwnableCar(car)) return Message(playerid, COLOR_GRAD2, "¡No puedes robar un vehículo que no pertenece a nadie!");
            if(!PlayerToPoint(15.0,playerid, 2609.9314,-2201.4509,-0.2188)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca del NPC traficante \"Francisco Foresta\"!");

	        if(strcmp(params[0],"nitro",true) == 0)
	        {
         		if(CarInfo[car][cNitro] > 0)
           		{
             		if(stole == 1)
               		{
                 		RemoveVehicleComponent(car,CarInfo[car][cNitro]);
                   		CarInfo[car][cNitro] = 0;
                   		format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y lo consige", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
						format(string, sizeof(string), "* %s entrega la botella de N20 al traficante Francisco", PlayerName(playerid), car);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ProxDetector(20.0, playerid, "* Francisco dice: ¡Ha ha! Gracias! Tóma, tu recompensa, ¡sigue así!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						Message(playerid, COLOR_WHITE, "- Has recibido 1200$ vendiendo el óxido nitroso!");
						Earn(playerid, 1200);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
					else
					{
						format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
						format(string, sizeof(string), "* %s rompe mal el cristal y se hace daño", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						GetPlayerHealth(playerid, HP);
						SetHP(playerid, HP-5);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
				} else Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene óxido nitroso");
	        }
	        else if(strcmp(params[0],"gps",true) == 0)
	        {
         		if(CarInfo[car][cGPS] > 0)
         		{
         			if(stole == 1)
         			{
         		     	RemoveVehicleComponent(car,CarInfo[car][cGPS]);
                   		CarInfo[car][cGPS] = 0;
         				format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y lo consige", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
						format(string, sizeof(string), "* %s entrega el gps a Francisco", PlayerName(playerid), car);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ProxDetector(20.0, playerid, "* Francisco dice: ¡Ha ha! Gracias! Tóma, tu recompensa, ¡sigue así!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						Message(playerid, COLOR_WHITE, "- Has recibido 2000$ vendiendo el GPS!");
						Earn(playerid, 2000);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
					else
					{
		    			format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
						format(string, sizeof(string), "* %s rompe mal el cristal y se hace daño", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						GetPlayerHealth(playerid, HP);
						SetHP(playerid, HP-10);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
    			} else Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene GPS");
    		}
           else if(strcmp(params[0],"rastreador",true) == 0)
	        {
         		if(CarInfo[car][cRastreo] > 0)
         		{
         			if(stole == 1)
         			{
         		    	RemoveVehicleComponent(car,CarInfo[car][cRastreo]);
                   		CarInfo[car][cRastreo] = 0;
         				format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y lo consige", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
						format(string, sizeof(string), "* %s entrega el rastreador a Francisco", PlayerName(playerid), car);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ProxDetector(20.0, playerid, "* Francisco dice: ¡Ha ha! Gracias! Tóma, tu recompensa, ¡sigue así!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						Message(playerid, COLOR_WHITE, "- Has recibido 5000$ vendiendo el rastreador!");
						Earn(playerid, 5000);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
					else
					{
		    			format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
						format(string, sizeof(string), "* %s rompe mal el cristal y se hace daño", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						GetPlayerHealth(playerid, HP);
						SetHP(playerid, HP-10);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
    			} else Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene Rastreador");
    		}
           else if(strcmp(params[0],"stereo",true) == 0)
	        {
         		if(CarInfo[car][cPaintjob] > 0)
         		{
         			if(stole == 1)
         			{
         		    	RemoveVehicleComponent(car,CarInfo[car][cPaintjob]);
                   		CarInfo[car][cPaintjob] = 0;
         				format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y lo consige", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
						format(string, sizeof(string), "* %s entrega un gran subwoofer Francisco", PlayerName(playerid), car);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ProxDetector(20.0, playerid, "* Francisco dice: ¡Ha ha! Gracias! Tóma, tu recompensa, ¡sigue así!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						Message(playerid, COLOR_WHITE, "- Has recibido 700$ vendiendo el stereo!");
						Earn(playerid, 700);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
					else
					{
		    			format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
						format(string, sizeof(string), "* %s rompe mal el cristal y se hace daño", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						GetPlayerHealth(playerid, HP);
						SetHP(playerid, HP-5);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
    			} else Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene stereo");
    		}
    		else if(strcmp(params[0],"llantas",true) == 0)
	        {
         			if(stole == 1)
         			{
			         	if(CarInfo[car][cWheel] > 0) RemoveVehicleComponent(car,CarInfo[car][cWheel]); CarInfo[car][cWheel] = 0;
			         	AddVehicleComponent(car, 1025);
			         	NoWheels[car] = 1;
         				format(string, sizeof(string), "* %s intenta quitar las ruedas del %s con su instrumental y lo consige", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
						format(string, sizeof(string), "* %s arrastra las llantas y las entrega a Francisco", PlayerName(playerid), car);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ProxDetector(20.0, playerid, "* Francisco dice: Bonito, bueno, barato. ¡Qué grande eres, tóma, comprate unas birras!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						Message(playerid, COLOR_WHITE, "- Has recibido 1400$ vendiendo las llantas!");
						Earn(playerid, 1400);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						new panels, doorsx, lightsx, tires;
						GetVehicleDamageStatus(car, panels, doorsx, lightsx, tires);
						UpdateVehicleDamageStatus(car, panels, doorsx, lightsx, 15);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
					else
					{
		    			format(string, sizeof(string), "* %s intenta quitar las ruedas del %s con su instrumental y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
						format(string, sizeof(string), "* A %s se le rompe su instrumental de robo técnico", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
    		}
		}
		return 1;
	}
/////////////// Saem Puertas //////////////
	zcmd(abase, playerid, params[]) {

		if(Team_NG(playerid))
		{
			if (PlayerToPoint(30, playerid,141.72740173,1969.29382324,20.29737473))
			{
				MoveDynamicObject(saem2,141.9877,1969.3234,11.2817, 2.0);


				return 1;
			}
			else Message(playerid, COLOR_GREY,"  No hay señal!");

			return 1;
		}
		return 1;
	}
	zcmd(cbase, playerid, params[]) {

		if(Team_NG(playerid))
		{
			if (PlayerToPoint(30, playerid,141.72740173,1969.29382324,20.29737473))
			{
				MoveDynamicObject(saem2,141.72740173,1969.29382324,20.29737473, 2.0);


				return 1;
			}
			else Message(playerid, COLOR_GREY,"  No hay señal!");

			return 1;
		}
		return 1;
	}

	/////////////////////////////////////////////////

	zcmd(atar, playerid, params[])
    {
        if(Rope[playerid] == 0 && AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes cuerdas!");
        //if(Blinded[playerid] == 1 || Tied[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡No puedes hacer esto estando atado/vendado!");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if(ProxDetectorS(4.0,playerid,params[0]))
                {
                    new string[128];
                    if(Tied[params[0]] == 0)
                    {
                        Tied[params[0]] = 1;
						format(string, sizeof(string), "* %s agarra una cuerda y ata a %s", PlayerName(playerid), PlayerName(params[0]));
						ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
                    else
                    {
                        Tied[params[0]] = 0;
						format(string, sizeof(string), "* %s agarra una cuerda y desata a %s", PlayerName(playerid), PlayerName(params[0]));
						ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						TogglePlayerControllable(params[0], 1);
                    }
                }
                else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /atar <ID>");
        return 1;
    }
    zcmd(vendar, playerid, params[])
    {
            if(Rope[playerid] == 0 && AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes vendas!");
            //if(Blinded[playerid] == 1 || Tied[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡No puedes hacer esto estando atado/vendado!");
            if(!sscanf(params, "u", params[0]))
            {
                if(IsPlayerConnected(params[0]))
                {
                    if(ProxDetectorS(4.0,playerid,params[0]))
                    {
                        new string[90];
                        if(Blinded[params[0]] == 0)
                        {
                            Blinded[params[0]] = 1;
							format(string, sizeof(string), "* %s venda los ojos de %s", PlayerName(playerid), PlayerName(params[0]));
							ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetPlayerCameraPos(params[0],0.0,0.0,1000);
							SetPlayerCameraLookAt(params[0],0.0,0.0,5000);
							if(Mafia_Yakuza(playerid) || Mafia_Italiana(playerid)) PlayerInfo[playerid][pRob]++;
                        }
                        else
                        {
                            Blinded[params[0]] = 0;
							format(string, sizeof(string), "* %s desvenda los ojos de %s", PlayerName(playerid), PlayerName(params[0]));
							ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetCameraBehindPlayer(params[0]);
                        }
                    }
                    else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
                }
                else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
            }
            else Message(playerid, COLOR_GRAD2, "Utilize: /vendar <ID>");
        return 1;
    }
    zcmd(gps, playerid, params[])
	{
	    new idcar = GetPlayerVehicleID(playerid)
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehiculo!");
       	if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood de checkpoints, puedes usar el comando cada 1 minuto, para más info /infocheck");
        if(AutosGPS(idcar)) { }
		if(IsAnOwnableCar(idcar)) { if(CarInfo[idcar][cGPS] == 0) return Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene un GPS!"); }
		ShowPlayerDialog(playerid, MAPAS,DIALOG_STYLE_LIST,"Guia de Los Santos","24-7 Unity\nAyuntamiento\n24-7 Ayuntamiento\nPaintBall\nHospital\nAmmunation\nLSPD\nFBI\nAlhambra\nPizzas Boys\nConcesionaria - 1\nConcesionaria - 2\nConcesionaria - 3\nConcesionaria - 4\nCentro de Noticias(CNN)\nIglesia\n24-7 Vinewood\nMecanico\nAereopuerto\nLicencieros\nLavanderia\nFabrica", "Aceptar", "Cancelar");
         Proponerma[playerid] = 1;
		SetTimerEx("proponerflood",60000,0,"i",playerid);
		return 1;
	}
    zcmd(mapa, playerid, params[])
	{
	   if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood de checkpoints, puedes usar el comando cada 1 minuto, para más info /infocheck");
	 	if(LugaresMapas(playerid))
	 	{
	 	new string[MAX_PLAYERS];
	 	format(string, sizeof(string), "* %s Mira el mapa.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	 	ShowPlayerDialog(playerid, MAPAS,DIALOG_STYLE_LIST,"Mapa de Los Santos","24-7 Unity\nAyuntamiento\n24-7 Ayuntamiento\nPaintBall\nHospital\nAmmunation\nLSPD\nFBI\nAlhambra\nPizzas Boys\nConcesionaria - 1\nConcesionaria - 2\nConcesionaria - 3\nConcesionaria - 4\nCentro de Noticias(CNN)\nIglesia\n24-7 Vinewood\nMecanico\nAereopuerto\nLicencieros\nLavanderia", "Aceptar", "Cancelar");
        Proponerma[playerid] = 1;
		SetTimerEx("proponerflood",60000,0,"i",playerid);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "No estas en Mapa Publico");
		    return 1;
		}
	 	return 1;
	}
     zcmd(trabajos, playerid, params[])
	{
        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood de Checkpoints, debés esperar 1 minuto, Para más info /infocheck");
	 	ShowPlayerDialog(playerid, TRABAJOS,DIALOG_STYLE_LIST,"Trabajos de Los Santos","Vendedor de móbiles\nBarrendero\nPizzero\nPiloto\nChófer de Tren\nLadrón\nHeladero\nCamionero", "Aceptar", "Cancelar");
	 	Proponerma[playerid] = 1;
	 	SetTimerEx("proponerflood",60000,0,"i",playerid);
	 	return 1;
	}
	zcmd(firmarcheque, playerid, params[])
    {
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
         if(PlayerInfo[playerid][pConnectTime] < 2) return Message(playerid, COLOR_GREY, "No puedes usar el comando hasta pasado 3 horas");
        if(!sscanf(params, "ui", params[0], params[1]))
        {
            if(PlayerInfo[playerid][pAccount] < params[1]) return Message(playerid, COLOR_GRAD2, "No posees esa cantidad.");
            if(params[1] < 1) return Message(playerid, COLOR_GRAD2, "La cantidad no debe ser inferior a 1.");
            if(IsPlayerConnected(params[0]))
            {
                if(ProxDetectorS(5.0, playerid, params[0]))
                {
                    new string[128];
					PlayerInfo[playerid][pAccount] -= params[1];
                    format(string, sizeof(string), "* %s saca su talonario y le Extiende un cheque de %d$ a %s", PlayerName(playerid), params[1], PlayerName(params[0]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    PlayerInfo[params[0]][pAccount] += params[1];
					format(string, sizeof(string), "* Le acaban de entregar un cheque valorado en %d$.", params[1]);
					Message(params[0], 0xF0AB4FFF, string);
                } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /Firmarcheque <jugador> <cantidad>");
        return 1;
    }
	zcmd(sacar, playerid, params[])
	{
	 	if(gPlayerLogged[playerid] == 0) return Message(playerid, COLOR_GRAD2, "No estás logeado!");

   		if(IsAtATM(playerid) || IsAtBank(playerid))
     	{
			if (sscanf(params, "d", params[0])) return Message(playerid, COLOR_GRAD2, "Utiliza: /sacar [cantidad]");
			if (params[0] > PlayerInfo[playerid][pAccount] || params[0] < 1) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta");

			new string[64],curfunds;
			Earn(playerid,params[0]);
			SaveAccounts();
			curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]-=params[0];
			FMB -= params[0];
			Message(playerid, COLOR_WHITE, "|___ ESTADO BANCARIO ___|");
			format(string, sizeof(string), "  Antiguo Balance: $%d", curfunds);
			Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "  Extrajo: $%d",params[0]);
			Message(playerid, COLOR_GRAD4, string);
			Message(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  Nuevo Balance: $%d", PlayerInfo[playerid][pAccount]);
			Message(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s hace una transacción bancaria.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Till(16,1000);
			return 1;
		}
		else Message(playerid, COLOR_GREY, "   No estás en un cajero automático!");
		return 1;
	}
	zcmd(depositar, playerid, params[])
	{
		if(gPlayerLogged[playerid] == 0) return Message(playerid, COLOR_GRAD2, "No estás logeado!");

	    if(IsAtATM(playerid) || IsAtBank(playerid))
	    {
	        if (sscanf(params, "d", params[0])) return Message(playerid, COLOR_GRAD2, "Utiliza: /depositar [cantidad]");
	        if (params[0] > GetPlayerMoney(playerid) || params[0] < 1) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta");

            new string[64],curfunds;
	    	Bought(playerid,params[0]);
			curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]+=params[0];
			FMB += params[0];
			Message(playerid, COLOR_WHITE, "|___ ESTADO BANCARIO ___|");
			format(string, sizeof(string), "  Antiguo Balance: $%d", curfunds);
			Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "  Depositó: $%d",params[0]);
			Message(playerid, COLOR_GRAD4, string);
			Message(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  Nuevo Balance: $%d", PlayerInfo[playerid][pAccount]);
			Message(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s hace una transacción bancaria.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SaveAccounts();
			Till(16,1000);
			return 1;
		}
		else	Message(playerid, COLOR_GREY, "   No estás en un cajero automático!");
		return 1;
	}
	zcmd(transferir, playerid, params[])
    {
        if(PlayerInfo[playerid][pLevel] < 3) return Message(playerid, COLOR_GRAD1, "¡Level 3 Mínimo!");
		if(!IsAtBank(playerid)) 			return Message(playerid, COLOR_GRAD2, "No estás en los cajeros del banco.");
		if(!sscanf(params, "ii", params[0], params[1]))
		{
		    if(params[1] < 1 || params[1] > 1000000) return Message(playerid, COLOR_GRAD2, "Cantidad Incorrecta!");
		    else if(params[1] > PlayerInfo[playerid][pAccount]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
		    if (IsPlayerConnected(params[0]))
			{
				new string[128];
				PlayerInfo[playerid][pAccount] -= params[1];
				PlayerInfo[params[0]][pAccount] += params[1];
				format(string, sizeof(string), "* Has transferido %d$ a %s", params[1], PlayerName(params[0]));
				Message(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "* Recibiste una transferencia de %d$ de %s", params[1], PlayerName(playerid));
				Message(params[0], COLOR_GRAD1, string);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "ATENCIÓN: %s hizo una transferencia de $%d a %s", PlayerName(playerid), params[1], PlayerName(params[0]));
				ABroadCast(COLOR_YELLOW,string,1);
				Log("logs/banco.log", string);
				Till(16,1000);
				SaveAccounts();
			}
			else Message(playerid, COLOR_GREY, "Jugador desconectado.");
		}
		else Message(playerid, COLOR_GREY, "Utilize: /transferir <jugador> <cantidad>");
        return 1;
    }
	zcmd(tirar, playerid, params[])
	{
	    new sendername[MAX_PLAYER_NAME]; GetPlayerName(playerid, sendername, sizeof(sendername));
	    new string[128], apuesta, tiro;
	    if(IsAtBowling(playerid))
	    {
		    if (sscanf(params, "d", apuesta)) return Message(playerid, COLOR_GRAD2, "Utiliza: /tirar [$$] (Establece la apuesta)");
		    if (apuesta > 10 || apuesta < 1) return Message(playerid, COLOR_GRAD2, "Apuesta mínimo 1 máximo 10");
		    if (apuesta > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "No tienes esa cantidad!");
		    if (Bowling[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Espera unos segundos para volver a tirar");
			tiro = random(11);
			if(tiro == 0)
			{
			    format(string, sizeof(string), "** %s tiró la bola muy mal y se desvió fuera", sendername);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = (-10)+(-apuesta);
			}
			if(tiro == 1)
			{
			    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = (-9)+(-apuesta);
			}
			if(tiro == 2)
			{
			    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = (-8)+(-apuesta);
			}
			if(tiro == 3)
			{
			    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = (-7)+(-apuesta);
			}
			if(tiro == 4)
			{
			    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = (-6)+(-apuesta);
			}
			if(tiro == 5)
			{
			    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = apuesta;
			}
			if(tiro == 6)
			{
			    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = 6+apuesta;
			}
			if(tiro == 7)
			{
			    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = 7+apuesta;
			}
			if(tiro == 8)
			{
			    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = 8+apuesta;
			}
			if(tiro == 9)
			{
			    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = 9+apuesta;
			}
			if(tiro == 10)
			{
			    format(string, sizeof(string), "** %s tiró el balón e hizo un strike!", sendername, tiro);
			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    BowlingMoney[playerid] = 10+apuesta;
			}
			SetPlayerAttachedObject(playerid, 1, 3065, 6);
			format(string, sizeof(string), "** Apostaste %d, y tiraste %d bolos. Tus ganancias son de: %d", apuesta, tiro, BowlingMoney[playerid]);
			Message(playerid, COLOR_WHITE, string);
			GivePlayerMoney(playerid, BowlingMoney[playerid]);
			Bowling[playerid] = 1;
			SetTimerEx("StopHold", 5000, 0, "i", playerid);
			SetTimerEx("ShootAgain", 10000, 0, "i", playerid);
		}
		else Message(playerid, COLOR_GRAD2, "No estás en una bolera");
		return 1;
	}
 zcmd(bmbuy, playerid, params[])
	{
		Connect
            if(PlayerInfo[playerid][pLevel] < 5) return Message(playerid, COLOR_RED2, "Debes ser como mínimo nivel 5");
			if(PlayerToPoint(10,playerid, 1380.9454,-1480.4342,13.5469))
			{
					if(sscanf(params, "d", params[0]))
					{
						Message(playerid, COLOR_WHITE, "Utiliza: /BmBuy [# Item]");
						Message(playerid, COLOR_BLUE, "***              BlackMarket              ***");
						Message(playerid, COLOR_GRAD2, "| 1: Puño Americano 20$");
						Message(playerid, COLOR_GRAD2, "| 2: Máscara             50$");
						Message(playerid, COLOR_GRAD2, "| 3: Ganzúas             70$");
						Message(playerid, COLOR_GRAD2, "| 4: Pick Lock           90$");
						Message(playerid, COLOR_GRAD2, "| 5: Soga + Venda     120$");
		            	return 1;
					}
					switch(params[0])
					{
			   			case 1:
			   			{
						    if(CheckMoney(playerid, 20))
						    {
				   				Bought(playerid, 20);
				   				Message(playerid, COLOR_WHITE, "Compraste un puño americano");
								SafeGivePlayerWeapon(playerid, 1,1);
								return 1;
							}
						}
						case 2:
			   			{
						    if(CheckMoney(playerid, 50))
						    {
				   				Bought(playerid, 50);
				   				Message(playerid, COLOR_WHITE, "Máscara comprada, utiliza /mascara");
								PlayerInfo[playerid][pMask] = 1;
								return 1;
							}
						}
						case 3:
			   			{
						    if(CheckMoney(playerid, 70))
						    {
				   				Ganzuas[playerid] = 1;
								Bought(playerid, 70);
								Message(playerid, COLOR_WHITE, "Ganzuas compradas.");
								return 1;
							}
						}
						case 4:
			   			{
						    if(CheckMoney(playerid, 90))
						    {
						        Message(playerid, COLOR_WHITE, "Compraste un PickLock");
				   				PickLock[playerid] = 1;
								Bought(playerid, 90);
								return 1;
							}
						}
						case 5:
			   			{
						    if(CheckMoney(playerid, 120))
						    {
						        Message(playerid, COLOR_WHITE, "Compraste una kit de secuestro");
				   				Rope[playerid] = 1;
								Bought(playerid, 120);
								return 1;
							}
						}
						default:
					 				Message(playerid, COLOR_GRAD2, "Item incorrecto - No tienes dinero");
					}
				}
				else
						Message(playerid, COLOR_GRAD2, "¡No estás en el mercado negro!");
		}
		return 1;

	}
	//////////////////////////// Suicidarse //////////////////////////////////////////
		zcmd(suicidarse, playerid, params[])
    {
        if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "Usted aún no está conectado.");
        if(Intentar[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Espera 30 segundos para volver a utilizar este comando!");
        if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
        new randa = random(2)+1;
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
			if(PlayerInfo[playerid][pMaskuse] == 1)
			{
					if(randa == 1)
					{
						format(string, sizeof(string), "* Desconocido consigue suicidarse%s", params[0]);
						ProxDetector(3.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
						SetHP(playerid,0);
					}
					else
					{
						format(string, sizeof(string), "* Desconocido no logra suicidarse%s", params[0]);
						ProxDetector(3.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
					}
					Intentar[playerid] = 1;
					SetTimerEx("IntentarTimer", 30000, false, "i", playerid);
			}
			else
			{
				    if(randa == 1)
					{
						format(string, sizeof(string), "* %s consigue suicidarse%s", PlayerName(playerid), params[0]);
						ProxDetector(3.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
						SetHP(playerid,0);
					}
					else
					{
						format(string, sizeof(string), "* %s no logra suicidarse%s", PlayerName(playerid), params[0]);
						ProxDetector(3.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
					}
					Intentar[playerid] = 1;
					SetTimerEx("IntentarTimer", 30000, false, "i", playerid);
			}
		} else Message(playerid, COLOR_GRAD2, "Utilize: /Suicidarse <(Aguantando la respiracion) Rol de ambiente >");
		return 1;
    }

 ///////////////////////// Armarse Sureños 13 /////////////////////////////////////////
zcmd(armarse, playerid, params[])
	{
		Connect
       if(PlayerInfo[playerid][pConnectTime] < 3 || PlayerInfo[playerid][pWRestricted] == 1) return Message(playerid, COLOR_GRAD2, "*Tienes protección de armas las 3 primeras horas");
		if(Team_LK(playerid))
		{
            if(PlayerToPoint(10,playerid, 619.5929,-129.3072,998.8395))
            {
                if(sscanf(params, "d", params[0]))
					{
						Message(playerid, COLOR_WHITE, "Utiliza: /Armarse [# Item]");
						Message(playerid, COLOR_BLUE, "***              Almacen              ***");
						Message(playerid, COLOR_GRAD2, "| 1: Puño Americano ");
						Message(playerid, COLOR_GRAD2, "| 2: Bate");
						Message(playerid, COLOR_GRAD2, "| 3: Cuchillo");
						Message(playerid, COLOR_GRAD2, "| 4: Desert Eagle");
						Message(playerid, COLOR_GRAD2, "| 5: Ganzuas");
                        Message(playerid, COLOR_GRAD2, "| 6: Botiquin");
						return 1;
     				}

			 	switch(params[0])
					{
			   			case 1:
			   			{
					    	Message(playerid, COLOR_WHITE, "Encontraste un Puño Americano entre las cajas de carton");
							SafeGivePlayerWeapon(playerid, 1,1);
							return 1;
							}

                		case 2:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Bate entre las cajas de carton");
							SafeGivePlayerWeapon(playerid, 5,1);
							return 1;
							}

                        case 3:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Cuchillo entre las cajas de carton.");
                            SafeGivePlayerWeapon(playerid, 4,1);
							return 1;
							}
                        case 4:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste una Deser Eagle entre las cajas de carton");
			   				SafeGivePlayerWeapon(playerid, 24,40);
							return 1;
							}
                        case 5:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un juego de ganzuas entre las cajas de carton");
			   				Ganzuas[playerid] = 1;
							return 1;
							}
                        case 6:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un Botiquin dentro del armario");
			   				SetHP(playerid, 100);
							return 1;
							}
                        default: Message(playerid, COLOR_GRAD2, "Item incorrecto ");
						}
                    }
            else Message(playerid, COLOR_GRAD2, "¡No estas en el almacen!");
            return 1;
		}

        if (Team_Groove(playerid))
		{
            if(PlayerToPoint(10,playerid, 2492.5696,-1708.5306,1018.3368))
            {
                if(sscanf(params, "d", params[0]))
					{
						Message(playerid, COLOR_WHITE, "Utiliza: /Armarse [# Item]");
						Message(playerid, COLOR_BLUE, "***              Armario              ***");
						Message(playerid, COLOR_GRAD2, "| 1: Puño Americano ");
						Message(playerid, COLOR_GRAD2, "| 2: Bate");
						Message(playerid, COLOR_GRAD2, "| 3: Cuchillo");
						Message(playerid, COLOR_GRAD2, "| 4: Desert Eagle");
						Message(playerid, COLOR_GRAD2, "| 5: Ganzuas");
						Message(playerid, COLOR_GRAD2, "| 6: Botiquin");
		            	return 1;
     				}
                switch(params[0])
					{
			   			case 1:
			   			{
					    	Message(playerid, COLOR_WHITE, "Encontraste un Puño Americano dentro del armario");
							SafeGivePlayerWeapon(playerid, 1,1);
							return 1;
							}

                		case 2:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Bate dentro del armario");
							SafeGivePlayerWeapon(playerid, 5,1);
							return 1;
							}

                        case 3:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Cuchillo dentro del armario");
                            SafeGivePlayerWeapon(playerid, 4,1);
							return 1;
							}
                        case 4:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste una Deser Eagle dentro del armario");
			   				SafeGivePlayerWeapon(playerid, 24,40);
							return 1;
							}
                        case 5:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un juego de ganzuas dentro del armario");
			   				Ganzuas[playerid] = 1;
							return 1;
							}
                        case 6:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un Botiquin dentro del armario");
			   				SetHP(playerid, 100);
							return 1;
							}
                       default: Message(playerid, COLOR_GRAD2, "Item incorrecto ");
					    }
                	}
			else Message(playerid, COLOR_GRAD2, "¡No te encuentras delante del Armario!");
            return 1;
			}

		if (Team_Hermandad(playerid))
		{
            if(PlayerToPoint(10,playerid, 2455.9211,-1700.7104,1013.5078))
            {
                if(sscanf(params, "d", params[0]))
					{
						Message(playerid, COLOR_WHITE, "Utiliza: /Armarse [# Item]");
						Message(playerid, COLOR_BLUE, "***              Armario              ***");
						Message(playerid, COLOR_GRAD2, "| 1: Puño Americano ");
						Message(playerid, COLOR_GRAD2, "| 2: Bate");
						Message(playerid, COLOR_GRAD2, "| 3: Cuchillo");
						Message(playerid, COLOR_GRAD2, "| 4: Desert Eagle");
						Message(playerid, COLOR_GRAD2, "| 5: Ganzuas");
						Message(playerid, COLOR_GRAD2, "| 6: Botiquin");
		            	return 1;
     				}
                switch(params[0])
					{
			   			case 1:
			   			{
					    	Message(playerid, COLOR_WHITE, "Encontraste un Puño Americano dentro del armario");
							SafeGivePlayerWeapon(playerid, 1,1);
							return 1;
							}

                		case 2:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Bate dentro del armario");
							SafeGivePlayerWeapon(playerid, 5,1);
							return 1;
							}

                        case 3:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Cuchillo dentro del armario");
                            SafeGivePlayerWeapon(playerid, 4,1);
							return 1;
							}
                        case 4:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste una Deser Eagle dentro del armario");
			   				SafeGivePlayerWeapon(playerid, 24,40);
							return 1;
							}
                        case 5:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un juego de ganzuas dentro del armario");
			   				Ganzuas[playerid] = 1;
							return 1;
							}
                        case 6:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un Botiquin dentro del armario");
			   				SetHP(playerid, 100);
							return 1;
							}
                       default: Message(playerid, COLOR_GRAD2, "Item incorrecto ");
					    }
                	}
			else Message(playerid, COLOR_GRAD2, "¡No te encuentras delante del Armario!");
            return 1;
            }

	    if (Team_Cripz(playerid))
		{
            if(PlayerToPoint(10,playerid, -290.4914,1480.0802,1088.8750))
            {
                if(sscanf(params, "d", params[0]))
					{
						Message(playerid, COLOR_WHITE, "Utiliza: /Armarse [# Item]");
						Message(playerid, COLOR_BLUE, "***              Armario              ***");
						Message(playerid, COLOR_GRAD2, "| 1: Puño Americano ");
						Message(playerid, COLOR_GRAD2, "| 2: Bate");
						Message(playerid, COLOR_GRAD2, "| 3: Cuchillo");
						Message(playerid, COLOR_GRAD2, "| 4: Desert Eagle");
						Message(playerid, COLOR_GRAD2, "| 5: Ganzuas");
						Message(playerid, COLOR_GRAD2, "| 6: Botiquin");
		            	return 1;
     				}
                switch(params[0])
					{
			   			case 1:
			   			{
					    	Message(playerid, COLOR_WHITE, "Encontraste un Puño Americano dentro del armario");
							SafeGivePlayerWeapon(playerid, 1,1);
							return 1;
							}

                		case 2:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Bate dentro del armario");
							SafeGivePlayerWeapon(playerid, 5,1);
							return 1;
							}

                        case 3:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Cuchillo dentro del armario");
                            SafeGivePlayerWeapon(playerid, 4,1);
							return 1;
							}
                        case 4:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste una Deser Eagle dentro del armario");
			   				SafeGivePlayerWeapon(playerid, 24,40);
							return 1;
							}
                        case 5:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un juego de ganzuas dentro del armario");
			   				Ganzuas[playerid] = 1;
							return 1;
							}
                        case 6:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un Botiquin dentro del armario");
			   				SetHP(playerid, 100);
							return 1;
							}
                       default: Message(playerid, COLOR_GRAD2, "Item incorrecto ");
					    }
                	}
			else Message(playerid, COLOR_GRAD2, "¡No te encuentras delante del Armario!");
            return 1;
			}

		if (Team_Blood(playerid))
		{
            if(PlayerToPoint(10,playerid, 78.3783,1343.1749,1088.3672))
            {
                if(sscanf(params, "d", params[0]))
					{
						Message(playerid, COLOR_WHITE, "Utiliza: /Armarse [# Item]");
						Message(playerid, COLOR_BLUE, "***              Armario              ***");
						Message(playerid, COLOR_GRAD2, "| 1: Puño Americano ");
						Message(playerid, COLOR_GRAD2, "| 2: Bate");
						Message(playerid, COLOR_GRAD2, "| 3: Cuchillo");
						Message(playerid, COLOR_GRAD2, "| 4: Desert Eagle");
						Message(playerid, COLOR_GRAD2, "| 5: Ganzuas");
						Message(playerid, COLOR_GRAD2, "| 6: Botiquin");
		            	return 1;
     				}
                switch(params[0])
					{
			   			case 1:
			   			{
					    	Message(playerid, COLOR_WHITE, "Encontraste un Puño Americano dentro del armario");
							SafeGivePlayerWeapon(playerid, 1,1);
							return 1;
							}

                		case 2:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Bate dentro del armario");
							SafeGivePlayerWeapon(playerid, 5,1);
							return 1;
							}

                        case 3:
			   			{
			   				Message(playerid, COLOR_WHITE, "Encontraste un Cuchillo dentro del armario");
                            SafeGivePlayerWeapon(playerid, 4,1);
							return 1;
							}
                        case 4:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste una Deser Eagle dentro del armario");
			   				SafeGivePlayerWeapon(playerid, 24,40);
							return 1;
							}
                        case 5:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un juego de ganzuas dentro del armario");
			   				Ganzuas[playerid] = 1;
							return 1;
							}
                        case 6:
			   			{
					        Message(playerid, COLOR_WHITE, "Encontraste un Botiquin dentro del armario");
			   				SetHP(playerid, 100);
							return 1;
							}
                       default: Message(playerid, COLOR_GRAD2, "Item incorrecto ");
					    }
                	}
			else Message(playerid, COLOR_GRAD2, "¡No te encuentras delante del Armario!");
            return 1;
            }





		else Message(playerid, COLOR_GRAD2, "¡No Perteneces a una banda Callejera!");
		}
    return 1;
  }

/////////////////////////////////////////////////////////////////////////////

    zcmd(iphone, playerid, params[])
    {
        if(gPlayerLogged[playerid] == 0) return Message(playerid, COLOR_GREY, "Inicia sesión!");
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GREY, "No tienes teléfono, cómpra uno en el 24/7");
        ShowPlayerDialog(playerid, IPHONE_OPTIONS, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Opciones", "{DD1111}iPhone\t{FFFFFF}-\t{11AA11}Llamar\n{DD1111}iPhone\t{FFFFFF}-\t{008899}Mandar SMS\n{DD1111}iPhone\t{FFFFFF}-\t{FFBB88}Buzón entrada\n{DD1111}iPhone\t{FFFFFF}-\t{FFEE88}iPod", "Aceptar", "Salir");
        return 1;
	}

 ////////////////////////////////////////////////////////////////////

 zcmd(ipod, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	     SetPlayerAttachedObject(playerid, 1, 18874, 7);
			ShowPlayerDialog(playerid, DIALOGO_RADIO, DIALOG_STYLE_LIST,"Menu del IPOD", "{1CE737}Lista de Emisoras\n{B39CC8}Memoria MP3\n{B39CC8}Apagar IPOD","Aceptar","Cancelar");
		}
		return 1;
	}




 ///////////////////////////////////////////////////////////////////
    zcmd(enmascarados, playerid, params[]){
        if(IsPlayerConnected(playerid))
	    if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GREY, " No autorizado.");{
			SendClientMessage(playerid, COLOR_GRAD1, "Enmascarados:");
			for(new i = 0; i < MAX_PLAYERS; i++){
				if(IsPlayerConnected(i)){
				    if(PlayerInfo[i][pMaskuse] == 1){
						new string[128];
						format(string, 256, "** ID: %d ** %s", i, PlayerName(i));
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}

	////////////////////////////// Premiums /////////////////////////////////////

	zcmd(premiums, playerid, params[]){
        if(IsPlayerConnected(playerid))
	    if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GREY, " No autorizado.");{
			SendClientMessage(playerid, COLOR_GRAD1, "Premiums:");
			for(new i = 0; i < MAX_PLAYERS; i++){
				if(IsPlayerConnected(i)){
				    if(PlayerInfo[i][pDonateT] > 0){
						new string[128];
						format(string, 256, "** ID: %d ** %s", i, PlayerName(i));
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}

	//////////////////////////////////// Cuentas Peligrosas ///////////////////////////////////////////

	zcmd(cuentas, playerid, params[]){
        if(IsPlayerConnected(playerid))
	    if(PlayerInfo[playerid][pJDS] < 1023) return Message(playerid, COLOR_GREY, " No autorizado.");{
			SendClientMessage(playerid, COLOR_GRAD1, "Cuentas Peligrosas:");
			for(new i = 0; i < MAX_PLAYERS; i++){
				if(IsPlayerConnected(i)){
				    if(PlayerInfo[i][pLocked] > 0){
						new string[128];
						format(string, 256, "** ID: %d ** %s", i, PlayerName(i));
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}

	////////////////////////////// Policias ///////////////////////////////////////
	/*
	zcmd(policias, playerid, params[]){
        if(IsPlayerConnected(playerid))
	    if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GREY, " No autorizado.");{
			SendClientMessage(playerid, COLOR_GRAD1, "Policias:");
			for(new i = 0; i < MAX_PLAYERS; i++){
				if(IsPlayerConnected(i)){
                    if(Team_LSPD(playerid)[i]){
						new string[128];
						format(string, 256, "** ID: %d ** %s", i, PlayerName(i));
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}

	////////////////////////////// Mecanicos //////////////////////////////////////

	zcmd(mecanicos, playerid, params[]){
        if(IsPlayerConnected(playerid))
	    if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GREY, " No autorizado.");{
			SendClientMessage(playerid, COLOR_GRAD1, "Mecanicos:");
			for(new i = 0; i < MAX_PLAYERS; i++){
				if(IsPlayerConnected(i)){
				    if(PlayerInfo[i][Team_Mecanicos] > 0){
						new string[128];
						format(string, 256, "** ID: %d ** %s", i, PlayerName(i));
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}
	*/
	///////////////////////////////////////////////////////////////////////////////
    zcmd(flist, playerid, params[])
    {
        new member = PlayerInfo[playerid][pMember];
        new leader = PlayerInfo[playerid][pLeader];
        new teamnumber;
		if (PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
		else if (PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];
        if(member > 0 || leader > 0)
        {
            Message(playerid, COLOR_GREEN, "- Miembros activos -");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    new string[32];
				if (IsPlayerConnected(i))
				{
					if (PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (LÍDER)",PlayerName(i));
					else if (PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), "%s, Rank: %d.",PlayerName(i), PlayerInfo[i][pRank]);
					if(strlen(string) > 0) Message(playerid, COLOR_GRAD2, string);
				}
			}
		} else Message(playerid, COLOR_GRAD2, "No perteneces a ninguna facción.");
        return 1;
    }
    zcmd(miembros, playerid, params[])
    {
        return cmd_flist(playerid, params);
    }
    // zcmd:attach ============================================================================================================================
    zcmd(mochila, playerid, params[])
    {
        if(ReduceTime[playerid] == 1) return Message(playerid, COLOR_GREY, "Este comando se utiliza cada 3 segundos.");
        if(PlayerInfo[playerid][pMochila] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes una mochila!");
        else
        {
            if(!sscanf(params, "s[32]", params[0]))
            {
                new string[128], gunID = GetPlayerWeapon(playerid), gunAmmo = GetPlayerAmmo(playerid), gunname[32];
            	if(strcmp(params[0],"garma",true) == 0)
            	{
            	    if(gunID != 0 && gunAmmo != 0)
		            {
		                if(Mochila[playerid][0] == 0 || Mochila[playerid][1] == 0)
		                {
			                ReduceTime[playerid] = 1;
			                SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
			                Mochila[playerid][0] = gunID;
			                Mochila[playerid][1] = gunAmmo;
							RemovePlayerWeapon(playerid, Mochila[playerid][0]);
							GetWeaponName(gunID, gunname, sizeof(gunname));
							format(string, sizeof(string), "* %s guarda una %s en su mochila.", PlayerName(playerid), gunname);
							ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetPlayerAttachedObject(playerid, 1, 371, 1, 0.0000, -0.0954, -0.0012, 359.8081, 89.4325, 358.1167);
							Att_Obj_Slot_1[playerid] = "Mochila";
						}
						else Message(playerid, COLOR_GREY, "Ya tienes un arma guardada.");
		            }
		            else Message(playerid, COLOR_GREY, "No tienes ningún arma para guardar.");
            	}
            	else if(strcmp(params[0],"sarma",true) == 0)
            	{
            	    if(Mochila[playerid][0] != 0 && Mochila[playerid][1] != 0)
		            {
		                ReduceTime[playerid] = 1;
		                SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
		                GetWeaponName(Mochila[playerid][0], gunname, sizeof(gunname));
		                SafeGivePlayerWeapon(playerid, Mochila[playerid][0], Mochila[playerid][1]);
		      			format(string, sizeof(string), "* %s saca una %s de su mochila.", PlayerName(playerid), gunname);
						ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		      			Mochila[playerid][0] = 0;
		      			Mochila[playerid][1] = 0;
		      			if(strcmp(Att_Obj_Slot_1[playerid],"Mochila",true) == 0)
		      			{
		      			    RemovePlayerAttachedObject(playerid, 1);
							Att_Obj_Slot_1[playerid] = "Vacio";
		      			}
		            }
		            else Message(playerid, COLOR_GREY, "No tienes ningún arma guardada en tu mochila.");
            	}
            	else if(strcmp(params[0],"agarrar",true) == 0)
           		{
       		    	SetPlayerAttachedObject(playerid, 1, 371, 1, 0.0000, -0.0954, -0.0012, 359.8081, 89.4325, 358.1167);
					Att_Obj_Slot_1[playerid] = "Mochila";
            	    format(string, sizeof(string), "* %s agarra su mochila.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			}
            	else Message(playerid, COLOR_GREY, "Item incorrecto.");
            }
            else Message(playerid, COLOR_GREY, "Utilize: /mochila <nombre> (garma, sarma, agarrar)");
        }
        return 1;
    }
    zcmd(maleta, playerid, params[])
    {
        if(PlayerInfo[playerid][pMaleta] == 0) return Message(playerid, COLOR_GRAD2, "No tienes una maleta!");
        new string[64];
		SetPlayerAttachedObject(playerid, 0, 1210, 6, 0.289999, 0.079999, -0.000000, 0.000000, -100.000000, 1.000000);
		Att_Obj_Slot_1[playerid] = "Maleta";
	 	format(string, sizeof(string), "* %s agarra su maletín.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return Message(playerid, COLOR_GRAD2, "Utiliza /qobjeto para quitar el objeto!");
    }
    zcmd(gafas, playerid, params[])
    {
        if(PlayerInfo[playerid][pGafas] == 0) return Message(playerid, COLOR_GRAD1, " No tienes gafas.");
        new string[64];
        if(UsingRayBan[playerid] == 0)
        {

			SetPlayerAttachedObject( playerid, 3, 19022, 18, -0.008390, -0.110742, -0.001029, 88.036231, 353.353454, 1.575388, 0.826243, 1.000000, 1.012219 );
	    	Att_Obj_Slot_3[playerid] = "Gafas";
   			format(string, sizeof(string), "* %s se pone sus gafas de sol.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  		ApplyAnimation(playerid,"RIOT","RIOT_shout",2.0,0,0,0,0,0);
	    	TextDrawBoxColor(SunGlasses, 0x00000040);
	     	TextDrawShowForPlayer(playerid, SunGlasses);
	     	return UsingRayBan[playerid] = 1;
        }
        else
        {
            RemovePlayerAttachedObject(playerid, 3);
	      	Att_Obj_Slot_3[playerid] = "Vacío";
		    format(string, sizeof(string), "* %s se quita sus gafas de sol.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  		TextDrawHideForPlayer(playerid, SunGlasses);
	    	ApplyAnimation(playerid,"RIOT","RIOT_shout",2.0,0,0,0,0,0);
	        return UsingRayBan[playerid] = 0;
        }
    }

	////////////////////////////////////////////////////////////////////////////////////////////////////////////

	zcmd(casco, playerid, params[])
    {
        if(PlayerInfo[playerid][pCasco] == 0) return Message(playerid, COLOR_GRAD1, " No tienes Casco.");
        new string[64];
        if(UsingCasco[playerid] == 0)
        {
            SetPlayerAttachedObject( playerid, 2, 18645, 2, 0.054665, 0.019579, -0.002646, 24.949916, 96.733367, 68.246139, 1.016691, 1.000000, 1.094870 );
	    	Att_Obj_Slot_2[playerid] = "CascoMoto-1";
			format(string, sizeof(string), "* %s se coloca su casco.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  		return UsingCasco[playerid] = 1;
        }
        else
        {
            RemovePlayerAttachedObject(playerid, 2);
	      	Att_Obj_Slot_2[playerid] = "Vacío";
            UsingCasco[playerid] = 0;
			format(string, sizeof(string), "* %s se saca su casco.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
 		}
	return 1
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////

    zcmd(brillo, playerid, params[])
    {
        if(UsingRayBan[playerid] == 0) return Message(playerid,COLOR_GRAD2,"No tienes las gafas puestas. (/gafas)");
		else ShowPlayerDialog(playerid,BRILLO_GAFAS,DIALOG_STYLE_INPUT,"Sistema de Gafas","Porfavor elije el brillo de tus gafas\nLuminoso\nNormal\nOscuro\nMuyOscuro","Ok","Cancel");
        return 1;
    }
    zcmd(qobjeto, playerid, params[])
    {
        new string[64];
		if(!sscanf(params, "d", params[0]))
        {
			switch(params[0])
			{
			    case 0:
			    {
			        RemovePlayerAttachedObject(playerid, 0);
				    format(string, sizeof(string), "Removiste el Slot 0: %s", Att_Obj_Slot_0[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_0[playerid] = "Vacío";
			    }
			    case 1:
			    {
			        RemovePlayerAttachedObject(playerid, 1);
				    format(string, sizeof(string), "Removiste el Slot 1: %s", Att_Obj_Slot_1[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_1[playerid] = "Vacío";
			    }
			    case 2:
			    {
                    RemovePlayerAttachedObject(playerid, 2);
				    format(string, sizeof(string), "Removiste el Slot 2: %s", Att_Obj_Slot_2[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_2[playerid] = "Vacío";
			    }
			    case 3:
			    {
                    RemovePlayerAttachedObject(playerid, 3);
				    format(string, sizeof(string), "Removiste el Slot 3: %s", Att_Obj_Slot_3[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_3[playerid] = "Vacío";
			    }
			    case 4:
			    {
                    RemovePlayerAttachedObject(playerid, 4);
				    format(string, sizeof(string), "Removiste el Slot 4: %s", Att_Obj_Slot_4[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_4[playerid] = "Vacío";
			    }
			    default: Message(playerid, COLOR_GRAD2, "Slots: 0-4");
			}
		}
		else
		{
		    Message(playerid, COLOR_GRAD2, "- /qobjeto [slot(0-4)]     Remueve un objeto.");
			format(string, sizeof(string), "Slot 0 (MANOS) - %s", Att_Obj_Slot_0[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 1 (ESPALDA) - %s", Att_Obj_Slot_1[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 2 (CABEZA) - %s", Att_Obj_Slot_2[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 3 (OJOS) - %s", Att_Obj_Slot_3[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 4 (OTRO) - %s", Att_Obj_Slot_4[playerid]); Message(playerid, COLOR_GRAD2, string);
			return 1;
		}
		return 1;
	}
	// zcmd:job ============================================================================================================================
    zcmd(trabajo, playerid, params[])
    {
		if(PlayerInfo[playerid][pContract] > 0)
		{
            new string[50];
		    format(string, sizeof(string), "* Tienes %d horas de contrato a cumplir!", PlayerInfo[playerid][pContract]);
		    return Message(playerid, COLOR_GRAD2, string);
		}
		if (PlayerToPoint(3.0, playerid, 994.3551,-1296.4821,13.5469))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 4;
			PlayerInfo[playerid][pContract] = 1;
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Vendedor de móviles por 1h");
		}
		else if (PlayerToPoint(3.0, playerid, 1616.0334,-1897.3287,13.5491))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 2;
			PlayerInfo[playerid][pContract] = 3;
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Barrendero por 3h");
		}
		else if (PlayerToPoint(3.0, playerid, 2103.7043,-1809.8376,13.5547))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 6;
            PlayerInfo[playerid][pContract] = 3;
            return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Pizzero por 3h");
        }
		else if (PlayerToPoint(3.0, playerid, 1642.3722,-2238.3552,13.4976))
		{
		if(PlayerInfo[playerid][pFlyLic] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas la licencia de vuelo para tener este trabajo");
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 3;
			PlayerInfo[playerid][pContract] = 3;
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Piloto por 3h");
		}
		else if (PlayerToPoint(3.0, playerid, 1684.7078,-1944.5562,13.5469))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 1;
			PlayerInfo[playerid][pContract] = 1;
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Chófer de tren por 1h");
		}
		else if (PlayerToPoint(3.0, playerid, 2610.85, -2193.26, -0.22))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 5;
			PlayerInfo[playerid][pContract] = 3;
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Ladrón por 3h");
		}
		else if (PlayerToPoint(3.0, playerid, 1038.1670,-1340.3824,13.7408))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 7;
			PlayerInfo[playerid][pContract] = 4;
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Heladero por 3h");
		}
        else if (PlayerToPoint(3.0, playerid, 2040.6719,-2137.0037,13.2200))
        {
            GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 8;
			PlayerInfo[playerid][pContract] = 5;
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Camionero por 5h");
		}
		return 1;
	}
	zcmd(renunciar, playerid, params[])	{
		if(PlayerInfo[playerid][pJob] > 0 && PlayerInfo[playerid][pContract] == 0){
		    PlayerInfo[playerid][pJob] = 0;
			return Message(playerid, COLOR_GRAD2, "* Has renunciado a tu trabajo, ya puedes obtener uno nuevo.");}
		else if(PlayerInfo[playerid][pJob] == 0){Message(playerid, COLOR_GRAD2, "* Tu no tienes trabajo.");}
		else{
            new string[50];
		    format(string, sizeof(string), "* Tienes %d horas de contrato a cumplir, aun no puedes renunciar.", PlayerInfo[playerid][pContract]);
		    return Message(playerid, COLOR_GRAD2, string);
        }return 1;
	}
	zcmd(vendertelefono, playerid, params[])
    {
        if(PlayerInfo[playerid][pJob] != 4) return Message(playerid, COLOR_GRAD1, "No eres vendedor de móviles!");
		if(!sscanf(params, "uii", params[0], params[1], params[2]))
		{
		    if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GRAD1, "¡ No estás cerca del jugador !");
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        new string[128];
		        if(params[1] > 999999 || params[1] < 1000) return Message(playerid, COLOR_GRAD2, "Número entre 4-6 cifras.");
		        if(params[2] < 1 || params[2] > 500) return Message(playerid, COLOR_GRAD2, "Precio entre 1 a 500.");
                NumSeller[params[0]] = playerid;
				NumBuy[params[0]] = params[1];
				NumPrice[params[0]] = params[2];
				Message(playerid, 0x00DCF4FF, "Ofreciste vender un telefono");
				format(string, sizeof(string), "* %s te ofrece venderte el número %d por %d$, utiliza /aceptar telefono", PlayerName(playerid), params[1], params[2]);
				return Message(params[0],0x00DCF4FF, string);
		    }
		}
		else Message(playerid, COLOR_GRAD2, "Utiliza: /vendertelefono <ID> <número> <precio>");
        return 1;
    }
    zcmd(ruta, playerid, params[])
    {
        new idcar = GetPlayerVehicleID(playerid);
        if(PlayerInfo[playerid][pJob] == 1)
		{
		    if(IsATrain(idcar))
		    {
		        if(Train_Route[playerid] > 0) return Message(playerid, COLOR_GRAD2, "Ya estás en ruta!");
		        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Espera un tiempo para volver a trabajar, no te canses!");
		        Train_Route[playerid] = 1;
		        Message(playerid, COLOR_GRAD2, "Dirígete al Checkpoint para recoger a la gente!");
		        SetPlayerCheckpoint(playerid, 805.1542,-1357.9359,-0.1724, 5.0);
		        //OOCNews(0xCA0065FF, "Ferrocarriles de San Andreas - Tren Saliendo.");
		        GText(playerid, "~w~Proxima estacion:~n~~r~LS", 5000, 1);
		        TogglePlayerControllable(playerid, 1);
	 	       Proponerma[playerid] = 1;
	 	       SetTimerEx("proponerflood",180000,0,"i",playerid);
		        return 1;
		    }
		    else return Message(playerid, COLOR_GRAD2, "No estás en un tren!");
		}
		else if(PlayerInfo[playerid][pJob] == 3)
		{
		    if(IsAPlane(idcar))
		    {
		        if(Plane_Route[playerid] > 0) return Message(playerid, COLOR_GRAD2, "Ya estás en ruta!");
		        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Espera un tiempo para volver a trabajar, no te canses!");
                Plane_Route[playerid] = 1;
		        Message(playerid, COLOR_GRAD2, "Aterriza en los diferentes aereopuertos de San Andreas.");
		        SetPlayerCheckpoint(playerid,1481.7509,1557.6327,11.7434, 15.0);
		        //OOCNews(0xCA0065FF, "Aereolíneas de San Andreas - Despegando.");
		        GText(playerid, "~w~Proximo destino:~n~~r~Aereopuerto de Las venturas", 5000, 1);
		        Proponerma[playerid] = 1;
	 	       SetTimerEx("proponerflood",180000,0,"i",playerid);
		        TogglePlayerControllable(playerid, 1);
		        return 1;
		    }
		    else return Message(playerid, COLOR_GRAD2, "No estás en un avión!");
		}
		else if(PlayerInfo[playerid][pJob] == 8)
		{
		    if(IsACamion(idcar))
		    {
                if(PlayerIsRuta[playerid] > 0) return Message(playerid, COLOR_GRAD2, "Ya estás en ruta!");
                if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Espera un tiempo para volver a trabajar, no te canses!");
//	      	    new randomize;
	      	    PlayerIsRuta[playerid] = 1;
//	       	    randomize = random(sizeof(gTrunkPoints));
	       	    SetPlayerCheckpoint(playerid, Checkpoint1, 5.0);
	       	    Proponerma[playerid] = 1;
	 	       SetTimerEx("proponerflood",180000,0,"i",playerid);
	       	   // SetPlayerCheckpoint(playerid, gTrunkPoints[randomize][0], gTrunkPoints[randomize][1], gTrunkPoints[randomize][2], 5.0);
	       	    SendClientMessage(playerid, COLOR_WHITE, "Dirígete a cargar el camion");
	       	}
	       	else return Message(playerid, COLOR_GRAD2, "No estás en un camión!");
	    }
		else Message(playerid, COLOR_GRAD2, "No autorizado!");
        return 1;
    }
    zcmd(barrer, playerid, params[])
    {
        if(PlayerIsSweeping[playerid] == 1) return Message(playerid, COLOR_GREY, "Ya estás barriendo las calles!");
        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Espera un tiempo breve para volver a barrer!");
	    if(IsASweeper(GetPlayerVehicleID(playerid)))
	    {
	    	PlayerIsSweeping[playerid] = 1;
	     	TogglePlayerControllable(playerid, 1);
	      	new randomize;
	       	randomize = random(sizeof(gSweeperPoints));
	       	Proponerma[playerid] = 1;
 	         SetTimerEx("proponerflood",180000,0,"i",playerid);
	      	SetPlayerCheckpoint(playerid, gSweeperPoints[randomize][0], gSweeperPoints[randomize][1], gSweeperPoints[randomize][2], 5.0);
	      	SendClientMessage(playerid, COLOR_WHITE, "Dirígete a los Checkpoints.");
	    }
        return 1;
    }
    zcmd(dbarrer, playerid, params[])
    {
        if(PlayerIsSweeping[playerid] == 1)
	  	{
	   		DisablePlayerCheckpoint(playerid);
	     	PlayerIsSweeping[playerid] = 0;
	      	SendClientMessage(playerid, COLOR_WHITE, "Has dejado de barrer.");
	      	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	       	RemovePlayerFromVehicle(playerid);
	       	TogglePlayerControllable(playerid, 1);
	  	}
  		else Message(playerid, COLOR_GREY, "No estás barriendo!");
        return 1;
    }
    // zcmd: mecas ============================================================================================================================
zcmd(eqmeca, playerid, params[])
{
if(Team_Mecanicos(playerid))
{
if(OnDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
if(PlayerToPoint(5.0, playerid, 1356.8921,-1680.6548,13.7940))
{
            	ShowPlayerDialog(playerid,EQUIPO_MECANICO,DIALOG_STYLE_LIST, "Equipo Mecánico","Ayudate\nMecánico\nDirector\nRopa normal", "Equipar", "Cancelar");
}
else Message(playerid, COLOR_GRAD2, "En este lugar no te puedes cambiar");
}
else Message(playerid, COLOR_GRAD2, "No eres mecánico");
return 1;
}
zcmd(aceptarmeca, playerid, params[])
    {
    if(!sscanf(params, "u", params[0]))
	    {
        if(Team_Mecanicos(playerid))
        {
        if(Llamadas[params[0]] == 1)
        {
                     new string[128];
                    SendClientMessage(playerid, 0xFF8080FF, ">><<>><<>> Estableciendo contacto ... >><<>><<>>");
                    SendClientMessage(playerid, COLOR_WHITE, "GPS: Estableciendo contacto, aguarde unos segundos...");
                    Llamadas[params[0]] = 0;
                    buscameca[playerid] = params[0];
                    format(string, sizeof(string), "{FFFFFF}* {b2982e}%s {FFFFFF}aceptó su pedido de mecánico, aguarde en esta posición.", PlayerName(playerid));
		            Message(params[0], -1, string);
		            SetTimerEx("Mecanicos", 4000, false, "i", playerid);
                } else Message(playerid, COLOR_WHITE, "Éste no ha pedido un mecánico");
                } else Message(playerid, COLOR_WHITE, "¡No autorizado!");
                } else Message(playerid, COLOR_WHITE, "Utilice /aceptarmeca ID");
        return 1;
                }
zcmd(rastrearveh, playerid, params[])
    {
    if(!sscanf(params, "i", params[0]))
		{
                buscaauto[playerid] = params[0];
                if(CarInfo[params[0]][cRastreo] > 0)
                {
                    SendClientMessage(playerid, 0x2558D8FF, ">><<>><<>> Estableciendo contacto ... >><<>><<>>");
                    SendClientMessage(playerid, COLOR_WHITE, "El rastreo se está estableciendo, aguarde unos segundos...");
		            SetTimerEx("policiarastreo", 4000, false, "i", playerid);
		            } else Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene un sistema de rastreo");
                } else Message(playerid, COLOR_WHITE, "Utilice /rastrearveh [ID car]");
                return 1;
                }
        zcmd(cstat, playerid, params [])
		{
        new string[56];
        new idcar = GetPlayerVehicleID(playerid);
		if(Team_Mecanicos(playerid)){
			    Message(playerid, COLOR_YELLOW, "------------------------------");
			    format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", CarInfo[idcar][cEmbargo], CarInfo[idcar][cMulta]);
		        Message(playerid, COLOR_WHITE, string);
			    } else Message(playerid, COLOR_WHITE, "No eres mecánico");
			return 1;
		}
		zcmd(mabrir, playerid, params[ ]) {
		if(Team_Mecanicos(playerid)){
        if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GREY, "¡Debés de ser ingeniero para abrir la puerta!");
		Message(playerid, COLOR_GREEN, "Que experto ingeniero! has abierto el vehículo");
		new engine, lights, alarm, bonnet, boot, objective, car = IsPlayerInVehicleRadio(playerid, 5);
		SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
		CarInfo[car][cLock] = 0;
		} else Message(playerid, COLOR_WHITE, "No eres mecánico");
        return 1;
     }
     zcmd(embargar, playerid, params[]) {
     if(Team_LSPD(playerid))
	 {
	 new idcar = GetPlayerVehicleID(playerid);
     new Float:x,Float:y,Float:z,Float:a;
					if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
				    if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
			        Message(playerid, COLOR_YELLOW, "Has agregado un embargo a este vehículo!");
			        CarInfo[idcar][cEmbargo] += 1;
                    GetVehiclePos(idcar, x, y, z);  GetVehicleZAngle(idcar, a);
					CarInfo[idcar][cLocationx] = x;
						CarInfo[idcar][cLocationy] = y;
							CarInfo[idcar][cLocationz] = z;
								CarInfo[idcar][cAngle] = a;
								} else Message(playerid, COLOR_GRAD2, "No eres policía para embargar el vehículo");
			        return 1;
				}
     zcmd(remolcar, playerid, params[])
	 {
	 if(Team_LSPD(playerid))
	 {
	 new idcar = GetPlayerVehicleID(playerid);
     if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				    {
				        if(GetVehicleModel(idcar) == 525)
				        {
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
					   			vid++;
			   					GetVehiclePos(vid,vX,vY,vZ);
			   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
					  				Found=1;
						    		if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
					           		{
		   				        		DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
					           		}
						           	else
						           	{
		    							AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
			 					}
		    				}
							if(!Found)
			 				{
					   					SendClientMessage(playerid,COLOR_GRAD2,"No hay ningún vehículo cerca!");
		  					}
						}
						else return Message(playerid, COLOR_GRAD2, "No puedes remolcar con este vehículo!");
					}
					else return Message(playerid, COLOR_GRAD2, "Tienes que ser conductor!");
		 }else Message(playerid, COLOR_GRAD2, "Debes ser policía para usar este comando");
					return 1;
				}
	zcmd(mm, playerid, params[])
    {
        if(Team_Mecanicos(playerid))
    	{
     		if(OnDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
	    	return ShowPlayerDialog(playerid, MECANICO_MENU, DIALOG_STYLE_LIST, "-> Mecánico Menú <-", "Repararaciones\nGasolinera\nPiezas\nEmbargar\nRemolcar\nRemover Sistemas\nOtros", ">>", "<<");
		}
		else Message(playerid, COLOR_GRAD2, "No eres mecánico!");
		return 1;
	}
	zcmd(mdiamantes, playerid, params[])
    {
        if(Mafia_Capone(playerid))
    	{
    	 if(PlayerToPoint(10,playerid, 1618.1917,713.4023,10.8203))
			{
	    	return ShowPlayerDialog(playerid, MECANICO_MENU, DIALOG_STYLE_LIST, "-> Los 14 diamantes negros <-", "Repararaciones\nGasolinera\nPiezas\nEmbargar\nRemolcar\nRemover Sistemas\nOtros", ">>", "<<");
		} else Message(playerid, COLOR_GRAD2, "No estás en el taller de los 14 diamantes negros");
		}
		else Message(playerid, COLOR_GRAD2, "No eres mecánico!");
		return 1;
	}

	// zcmd: narcos ============================================================================================================================
    zcmd(cosechardrogas, playerid, params[])
    {
        if(DrugFarming[playerid] != 0) return Message(playerid, COLOR_GREY, "Ya estás cosechando droga!");
        if(Harvest_Vehicle(GetPlayerVehicleID(playerid)))
	    {
	    	DrugFarming[playerid] = 1;
	     	TogglePlayerControllable(playerid, 1);
	      	new randomize;
	       	randomize = random(sizeof(gDrugFarmVar));
	      	SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
	      	SendClientMessage(playerid, COLOR_WHITE, "Dirígete a los Checkpoints.");
	    }
		else Message(playerid, COLOR_GREY, "No estás en una cosechadora!");
        return 1;
    }
    zcmd(cancelardrogas, playerid, params[])
    {
        if(IsANarco(playerid))
		{
		    if(Smuggling[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No estás importando droga!");
		    Smuggling[playerid] = 0;
		    SmugglingType[playerid] = 0;
		    Message(playerid, COLOR_GRAD2, "Dejaste el contrabando de drogas.");
		    return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No eres narcotraficante!");
        return 1;
    }
    zcmd(comprarmateriales, playerid, params[])
    {
    if(PlayerToPoint(10,playerid, 1380.9454,-1480.4342,13.5469))
			{
		new cme[] = "100materiales (100$)\n200materiales (200$)\n500materiales (500$)\n1000materiales (1000$)\n2000materiales (2000$)\n5000materiales (5000$)\n10.000materiales (10.000$)\n20.000materiales (20.000$)";
         ShowPlayerDialog(playerid,MATERIALES_DIALOG,DIALOG_STYLE_LIST,">> Comprar Materiales <<",cme,"Equipar","Cancelar");
		}
		else
		{
		Message(playerid, COLOR_GRAD2, "No estás en el mercado negro, dirigete al Chekpoint");
		SetPlayerCheckpoint(playerid, 1380.9454,-1480.4342,13.5469, 8.0);
		}
        return 1;
    }
    zcmd(venderdrogas, playerid, params[])
    {
        if(sscanf(params,"uii",params[0],params[1],params[2]))
		{
	        Message(playerid, COLOR_GRAD1, "Utiliza: /venderdrogas [ID] [#Tipo] [Cantidad]");
	        return Message(playerid, COLOR_GRAD1, "Tipos: 1 - Speed || 2 - Extasis || 3 - Ritalin || 4 - Heroina || 5 - Marihuana");
		}
		new string[128];
		if(IsPlayerConnected(params[0]))
	 	{
	  		if(params[0] != INVALID_PLAYER_ID)
	    	{
	    	    if(!ProxDetectorS(5.0,playerid, params[0])) return Message(playerid, COLOR_GRAD2, "Persona muy lejos.");
				if (IsANarco(playerid))
				{
					switch (params[1])
					{
					    case 1:
					    {
					        if(PlayerInfo[playerid][pSpeed] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 1;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Speed\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    case 2:
					    {
					        if(PlayerInfo[playerid][pEctasy] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 2;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Extasis\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    case 3:
					    {
					        if(PlayerInfo[playerid][pRitalin] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 3;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Ritalin\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    case 4:
					    {
					        if(PlayerInfo[playerid][pHeroina] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 4;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Heroina\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    case 5:
					    {
					        if(PlayerInfo[playerid][pMarihuana] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 5;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Marihuana\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    default: Message(playerid, COLOR_GRAD2, "ITEM INCORRECTO!");
					}
				}
			}
		}
        return 1;
    }
    zcmd(fabricar, playerid, params[])
    {
        if(!TraficantesTeam(playerid) && !Mafia_Rusa(playerid) && !Mafia_Alemana(playerid)) return Message(playerid, COLOR_GRAD2, "¡No sabes hacer esto!");
        if(PlayerToPoint(10.0,playerid,2549.3479,-1294.4144,1044.1250))
		{
		    ShowPlayerDialog(playerid,CREATE_WEAPON,DIALOG_STYLE_LIST,"Fábrica de Armas",   \
			"Arma		\tMateriales \tMunición/Unidades\n" \
			"Navaja 	\t25 \t1\n" \
			"Bate 		\t40 \t1\n" \
			"Katana		\t80 \t1\n" \
			"C.Molotov 	\t120 \t1\n" \
			"9mm 		\t200 \t140\n" \
			"D.Eagle 	\t300 \t140\n" \
			"S.Pistol 	\t280 \t140\n" \
			"Shotgun	\t450 \t60\n" \
			"SPAS12		\t500 \t60\n" \
			"MP5		\t190 \t150\n" \
			"AK47		\t200\t150\n" \
			"M4			\t200 \t150\n" \
			"Rifle		\t420 \t45\n" \
			"Sniper		\t500 \t60\n" \
			,"Aceptar","Salir");
		}
		else
		{
		Message(playerid, COLOR_GRAD2, "No estás en la fábrica, usa /mapa o /gps para ubicarla");
		}
        return 1;
    }
    zcmd(venderarma, playerid, params[])
    {
        new gunname[12], string[128];
        if(GetPlayerWeapon(playerid) == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningún arma en mano!");
        if(sscanf(params, "ud", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "Utiliza: /venderarma ID precio");
        if(params[1] < 1) return Message(playerid, COLOR_GRAD2, "La cantidad no debe ser inferior a 1.");
        if(params[1] > 15000) return Message(playerid, COLOR_GRAD2, "No puede superar los $5000.");
		if(IsPlayerConnected(params[0]))
		{
		    if(ProxDetectorS(8.0,playerid, params[0]))
		    {
		    if(GetPlayerMoney(params[0]) >= params[1])
		    {
		        GetWeaponName(GetPlayerWeapon(playerid),gunname, sizeof(gunname));
				BuyNarco[params[0]] = playerid;
				NarcoSellPrice[params[0]] = params[1];
				NarcoSellArm[params[0]] = GetPlayerWeapon(playerid);
				NarcoSellAmmo[params[0]] = GetPlayerAmmo(playerid);
				format(string, sizeof(string), "\t\tComprar %s (Balas:%d) Precio: %d\n\tEl Narcotraficante %s te ha ofrecido que le compres un arma. ¿Aceptas?",gunname,NarcoSellAmmo[params[0]],NarcoSellPrice[params[0]],PlayerName(playerid));
				SendRequest(params[0],string);
				Facturing[params[0]] = 1;
				Petition_ID[params[0]] = 4;
				Message(playerid, COLOR_GRAD2, "- Ofreciste venderle el arma, espera.");
				return 1;
				} else Message(playerid, COLOR_GRAD2, "El jugador no tiene ese dinero");
		    }
		    else return Message(playerid, COLOR_GRAD2, "Muy lejos de este jugador!");
		}
        return 1;
    }
    zcmd(pda, playerid, params[])
    {
    if(IsANarco(playerid))
        {
			ClearChatbox(playerid, 10);
            new string[64];
		    Message(playerid, COLOR_YELLOW, "====================== PDA ======================");
		    format(string, sizeof(string), ":: Materiales -- %d ::", PlayerInfo[playerid][pMats]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Droga virgen -- %d ::", PlayerInfo[playerid][pDrugs]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Speed -- %d ::", PlayerInfo[playerid][pSpeed]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Extasis -- %d ::", PlayerInfo[playerid][pEctasy]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Ritalin -- %d ::", PlayerInfo[playerid][pRitalin]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Heroina -- %d ::", PlayerInfo[playerid][pHeroina]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Marihuana -- %d ::", PlayerInfo[playerid][pMarihuana]);
		    Message(playerid, COLOR_WHITE, string);
		    Message(playerid, COLOR_YELLOW, "====================== ***** ======================");
            return 1;
            }
            return 1;
    }
    zcmd(importardrogas, playerid, params[])
    {
        if(IsANarco(playerid))
        {
            if(Smuggling[playerid] == 0)
            {
                new string[64];
	            if(!sscanf(params, "s[64]i", string, params[1]))
	            {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 442 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 482)
	                {
	                    if(PlayerToPoint(5.0,playerid,-117.99618530,-96.64963531,2.66079330))
	                    {
	                        if(PlayerInfo[playerid][pDrugs] < params[1]) return Message(playerid, COLOR_GRAD2, "Cantidad inccorrecta.");

                     		if(strcmp(string,"speed",true) == 0)    	DrugsSmuggling(playerid, 1, params[1]);
                     		else if(strcmp(string,"extasy",true) == 0)  DrugsSmuggling(playerid, 2, params[1]);
                     		else if(strcmp(string,"ritalin",true) == 0) DrugsSmuggling(playerid, 3, params[1]);
                     		else if(strcmp(string,"heroina",true) == 0) DrugsSmuggling(playerid, 4, params[1]);
                     		else if(strcmp(string,"marihuana",true) == 0) DrugsSmuggling(playerid, 5, params[1]);
             				else Message(playerid, COLOR_GRAD2, "Item incorrecto");
                    	}
                     	else Message(playerid, COLOR_GRAD2, "¡No estás en el lugar de importación de mercancías!");
             		} else Message(playerid, COLOR_GRAD2, " ¡No estas en un coche para importar drogas!");
	            }
	            else
	            {
	                Message(playerid, COLOR_GRAD2, "Utilize: /importar <nombre> <cantidad>");
	                Message(playerid, COLOR_GRAD2, "Nombre: speed, extasy, ritalin, heroina, marihuana.");
	            }
			 }
			 else
			 {
			    Smuggling[playerid] = 0;
			    SmugglingType[playerid] = 0;
			    Message(playerid, COLOR_GRAD2, "Dejaste el contrabando de drogas.");
			 }
        }
        else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
    // zcmd: clothes ===================================================================================================================
    zcmd(accesorios, playerid, params[])
    {
        if(IsAtClothShop(playerid))
        {
			return ClothesShopMenu(playerid);
		}
		else Message(playerid, COLOR_GRAD2, "No estás en ninguna tienda de ropa!");
        return 1;
    }
    zcmd(comprar, playerid, params[])
    {
        if(Accesory[playerid] > 0)
        {
	        Accesory[playerid] = 0;
		    Message(playerid, COLOR_GRAD2, "Prenda de ropa comprada.");
		    return Message(playerid, COLOR_GRAD2, "Utiliza /qobjeto para quitartela");
		}
		else if (PlayerToPoint(20, playerid,665.1661,-568.5448,16.3433))
		{
  			return ShowPlayerDialog(playerid, DIALOG_FARMACIA, DIALOG_STYLE_LIST, "Farmacia + 24h","Condón (1$)\nIbuprofeno (10$)\nParches de Nicotina (15$)\nEnergisyl (30$)\nPastillas SIDA\nAnti Epilectica\nAntibiótico", "Comprar", "Salir");
		}
		else if (IsAt247(playerid))
		{
  			return ShowBuyMenu(playerid);
		}
		else if (PlayerToPoint(20, playerid,-105.3736,-11.0229,1000.7188))
		{
  			return ShowPlayerDialog(playerid, DIALOG_DILDO, DIALOG_STYLE_LIST, "Sex Shoop","Dildo doble (200$)\nDildo (100$)\nVibrator (350$)\nSilver Vibrator (500$)\nFlores románticas (150$)", "Comprar", "Salir");
		}
		return 1;
    }
    zcmd(cropa, playerid, params[])
    {
        if(!IsAtClothShop(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No estás en una tienda de Ropa !");
        if(IsPlayerConnected(playerid))
        {
          //  ShowPlayerDialog(playerid, SEL_SKIN, DIALOG_STYLE_INPUT, "> Comprar Ropa", "{78F700}Escribe el ID del que desees\n{FFFFFF}Recuerda que algunos skin's están reservados.\nTIP <1 - 299>\n", "Ok", "Salir");
        // If there was a previously created selection menu, destroy it
		DestroySelectionMenu(playerid);

	    SetPVarInt(playerid, "skinc_active", 1);
	    //SetPVarInt(playerid, "skinc_page", 0); // will reset the page back to the first

	    CreateSelectionMenu(playerid);
	    SelectTextDraw(playerid, 0xACCBF1FF);
		}
        else Message(playerid, COLOR_GRAD2, "¡ No estás conectado !");
        return 1;
    }
	zcmd(salirvestidor, playerid, params[])
    {
		if(Accesory[playerid] > 0)
		{
		    Accesory[playerid] = 0;
		    Message(playerid, COLOR_GRAD2, "Saliste del vestidor!");
		}
		else Message(playerid, COLOR_GRAD2, "No puedes utilizar el comando ahora");
        return 1;
    }
    // zcmd: chat ===================================================================================================================
    zcmd(me, playerid, params[])
    {
    	if(AdminDuty[playerid] == 1) return Message(playerid,COLOR_RED,"No puedes rolear estando duty");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
            if(PlayerInfo[playerid][pMaskuse] == 1) format(string, sizeof(string), "* Desconocido %s.", params[0]);
			else format(string, sizeof(string), "* %s %s.", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /me <Acción>");
        return 1;
    }
     zcmd(yo, playerid, params[])
    {
    	if(AdminDuty[playerid] == 1) return Message(playerid,COLOR_RED,"No puedes rolear estando duty");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
            if(PlayerInfo[playerid][pMaskuse] == 1) format(string, sizeof(string), "* Desconocido %s.", params[0]);
			else format(string, sizeof(string), "* %s %s.", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /yo <Acción>");
        return 1;
    }
    zcmd(b, playerid, params[])
    {
        if(AdminDuty[playerid] == 1) return Message(playerid,COLOR_RED,"Estas Duty,Usa el comando /J Para poder hablar");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[240];
            if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "Usted aún no está conectado.");
            if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
            format(string, sizeof(string), "{FF002C}((%s: {FF002C}%s{FF002C}))", PlayerName(playerid), params[0]);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /b <Canal OOC>");
        return 1;
    }
    zcmd(c, playerid, params[])
    {
        if(AdminDuty[playerid] == 1) return Message(playerid,COLOR_RED,"No puedes rolear estando duty");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
            format(string, sizeof(string), "%s dice: %s", PlayerName(playerid), params[0]);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /c <Texto>");
        return 1;
    }
    zcmd(intentar, playerid, params[])
    {
        if(AdminDuty[playerid] == 1) return Message(playerid,COLOR_RED,"No puedes rolear estando duty");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(Intentar[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Espera 10 segundos para volver a utilizar este comando!");
        if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
        new randa = random(2)+1, string[MAX_PLAYERS];
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /intentar <Acción>");
		if(PlayerInfo[playerid][pMaskuse] == 1){
					if(randa == 1){
						format(string, sizeof(string), "* Desconocido consigue %s", params[0]);
						ProxDetector(3.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
					}
					else{
						format(string, sizeof(string), "* Desconocido no logra %s", params[0]);
						ProxDetector(3.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
					}
					Intentar[playerid] = 1;
					SetTimerEx("IntentarTimer", 10000, false, "i", playerid);
			}
			else{
				    if(randa == 1){
						format(string, sizeof(string), "* %s consigue %s", PlayerName(playerid), params[0]);
						ProxDetector(3.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
					}
					else{
						format(string, sizeof(string), "* %s no logra %s", PlayerName(playerid), params[0]);
						ProxDetector(3.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
					}
					Intentar[playerid] = 1;
					SetTimerEx("IntentarTimer", 10000, false, "i", playerid);
			}
		return 1;
    }
    zcmd(do, playerid, params[])
    {
        if(AdminDuty[playerid] == 1) return Message(playerid,COLOR_RED,"No puedes rolear estando duty");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
            if(PlayerInfo[playerid][pMaskuse] == 1) format(string, sizeof(string), "* %s (( Desconocido )).", params[0]);
			else format(string, sizeof(string), "* %s [ %s ].", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string, COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN,COLOR_LIGHTGREEN);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /do <Acción>");
        return 1;
    }
    zcmd(s, playerid, params[])
    {
        if(AdminDuty[playerid] == 1) return Message(playerid,COLOR_RED,"No puedes rolear estando duty");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
            if(PlayerInfo[playerid][pMaskuse] == 1) format(string, sizeof(string), "Desconocido susurra: %s", params[0]);
			else format(string, sizeof(string), "%s susurra: %s", PlayerName(playerid), params[0]);
            ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /(l)ow <Acción>");
        return 1;
    }
    zcmd(j, playerid, params[]){
	if(PlayerInfo[playerid][pJDS] < 1) return  Message(playerid, COLOR_GREY,"No Autorizado");
    if(AdminDuty[playerid] == 0 && PlayerInfo[playerid][pJDS] < 1024) return Message(playerid,COLOR_RED,"No puedes usar este comando OFFDuty");
	if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0])){
            new string[128];
			format(string, sizeof(string), "%s Administrador dice: %s", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string,ORANGE_ADMIN,ORANGE_ADMIN,ORANGE_ADMIN,ORANGE_ADMIN,ORANGE_ADMIN);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /j <Texto>");
        return 1;
    }
    zcmd(g, playerid, params[])
    {
        if(AdminDuty[playerid] == 1) return Message(playerid,COLOR_RED,"No puedes rolear estando duty");
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
            if(PlayerInfo[playerid][pMaskuse] == 1) format(string, sizeof(string), "Desconocido grita: ¡¡ %s !!", params[0]);
			else format(string, sizeof(string), "%s grita: %s!", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /g <Texto>");
        return 1;
    }
    zcmd(w, playerid, params[])
    {
       if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "us[128]", params[0], params[1]))
        {
            if(params[0] != INVALID_PLAYER_ID)
    		{
    		if(PlayerInfo[playerid][pLevel] >= 6 || PlayerInfo[params[0]][pJDS] > 0) {
	         		if(HidePM[params[0]] == 1) return Message(playerid, COLOR_GRAD2, "Tiene los susurros bloqueados.");
	         		new string[128];
					format(string, sizeof(string), "Mensaje de %s (%d): %s", PlayerName(playerid), playerid, params[1]);
					Message(params[0], 0xE9BC0AFF, string);
					format(string, sizeof(string), "Susurras a %s (%d): %s", PlayerName(params[0]), params[0] ,params[1]);
					Message(playerid,  0xE9BC0AFF, string);
					    for(new i = 0; i < MAX_PLAYERS; i++)
					    {
					        if(PlayerInfo[i][pJDS] > 0)
					        {
					            if(See_MP[i] == 1)
					            {
					                format(string, sizeof(string), ":MP: %s(%d) a %s(%d): %s", PlayerName(playerid), playerid, PlayerName(params[0]), params[0], params[1]);
					                Message(i, 0xFF8000FF, string);
					            }
					        }
					    }
					    } else Message(playerid, COLOR_GRAD2, "Precisas lvl 6 para enviar susurros a otro usuario");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
		else Message(playerid, COLOR_GRAD2, "Utilize: /w <PlayerID> <Texto>");
        return 1;
    }
    zcmd(rd, playerid, params[])
    {
        if(!sscanf(params, "us[128]", params[0], params[1]))
        {
            if(params[0] != INVALID_PLAYER_ID)
    		{
    		if(PlayerInfo[playerid][pJDS] > 0) {
	         		new string[128];
					format(string, sizeof(string), " %s [ID:%d] te responde: %s", PlayerName(playerid), playerid, params[1]);
					Message(params[0], COLOR_WHITE, string);
					format(string, sizeof(string), "%s responde a %s[ID:%d] : %s", PlayerName(playerid), PlayerName(params[0]), params[0] ,params[1]);
					ABroadCast(COLOR_WHITE, string, 1);
					    } else Message(playerid, COLOR_GRAD2, "No autorizado.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
		else Message(playerid, COLOR_GRAD2, "Utilize: /rd <PlayerID> <Texto>");
        return 1;
    }
    zcmd(rde, playerid, params[])
    {
        if(!sscanf(params, "ds[128]", params[0], params[1]))
        {
            if(params[0] != INVALID_PLAYER_ID)
    		{
    		if(PlayerInfo[playerid][pJDS] > 0) {
	         		new string[128];
					format(string, sizeof(string), " %s [ID:%d] te responde: %s", PlayerName(playerid), playerid, params[1]);
					Message(params[0], COLOR_WHITE, string);
					format(string, sizeof(string), "%s responde a %s[ID:%d] : %s", PlayerName(playerid), PlayerName(params[0]), params[0] ,params[1]);
					ABroadCast(COLOR_WHITE, string, 1);
					    } else Message(playerid, COLOR_GRAD2, "No autorizado.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
		else Message(playerid, COLOR_GRAD2, "Utilize: /rd <PlayerID> <Texto>");
        return 1;
    }
	zcmd(ita, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!Mafia_Italiana(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No sabes Italiano !");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 12 || PlayerInfo[i][pLeader] == 12 || PlayerInfo[i][pMember] == 22 || PlayerInfo[i][pLeader] == 22)
						{
					    	format(string, sizeof(string), "%s dice: [Italiano] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "Uso: /ita <Texto>");
		return 1;
	}
	zcmd(jap, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No estás conectado !");
        if(!Mafia_Yakuza(playerid) && !TriadasTeam(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No sabes Japones !");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 13 || PlayerInfo[i][pLeader] == 13 || PlayerInfo[i][pMember] == 20 || PlayerInfo[i][pLeader] == 20)
						{
					    	format(string, sizeof(string), "%s dice: [Japonés] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "Uso: /jap <Texto>");
		return 1;
	}
 	zcmd(ale, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No estás conectado !");
        if(!Mafia_Alemana(playerid) && !TriadasTeam(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No sabes Japones !");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 29 || PlayerInfo[i][pLeader] == 29)
						{
					    	format(string, sizeof(string), "%s dice: [Alemán] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "Uso: /jap <Texto>");
		return 1;
	}
	zcmd(ara, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No estás conectado !");
        if(!Mafia_Alqaeda(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No sabes Árabe !");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 27 || PlayerInfo[i][pLeader] == 27)
						{
					    	format(string, sizeof(string), "%s dice: [Árabe] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "Uso: /ara <Texto>");
		return 1;
	}
	zcmd(rus, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No estás conectado !");
        if(!Mafia_Rusa(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No sabes Ruso !");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 14 || PlayerInfo[i][pLeader] == 14)
						{
					    	format(string, sizeof(string), "%s dice: [Ruso] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "Uso: /rus <Texto>");
		return 1;
	}
    zcmd(ing, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No estás conectado !");
        if(!Mafia_Espanola(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No sabes inglés !");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 28 || PlayerInfo[i][pLeader] == 28)
						{
					    	format(string, sizeof(string), "%s dice: [inglés] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "Uso: /ing	 <Texto>");
		return 1;
	}
    zcmd(ao, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 4) return Message(playerid, COLOR_GRAD2, "No autorizado.");
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[MAX_PLAYERS];
        	format(string, sizeof(string), "{FFFFFF}[{FF0000}AOOC{FFFFFF}] {FF0000}Administrador {FFFFFF}%s: %s " , PlayerName(playerid), params[0]);
			OOCOff(0x2684FFFF,string);
			printf("%s", string);
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /ao (Texto)");
        return 1;
    }
    zcmd(yout, playerid, params[])
    {
        if(PlayerInfo[playerid][pYoutuber] < 1) return Message(playerid, COLOR_GRAD2, "No autorizado.");
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[MAX_PLAYERS];
        	format(string, sizeof(string), "{FFFFFF}[{FF0000}AOOC{FFFFFF}] {FF0000}Youtuber {FFFFFF}%s: %s " , PlayerName(playerid), params[0]);
			OOCOff(COLOR_GREY,string);
			printf("%s", string);
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /yout (Texto)");
        return 1;
    }
    zcmd(n, playerid, params[])
    {
		new string[MAX_PLAYERS];
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(Muted[playerid] == 1) return Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
        if(NewUsed > 0 && PlayerInfo[playerid][pJDS] == 0)
		{
		format(string, sizeof(string), "Debes esperar %d segundos para volver a hablar por el canal de ayuda.", NewUsed);
		Message(playerid, COLOR_GREY, string);
		return 1;
		}
		if((noooc)) return Message(playerid, COLOR_GRAD2, "El canal de ayuda ha sido deshabilitado por un administrador.");
        if(Muted[playerid] == 1) return Message(playerid, COLOR_GRAD2, "   Usted no puede usar este canal esta silenciado del chat !");
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /n <Pregunta>");
        if(PlayerInfo[playerid][pAyudante] < 1 || PlayerInfo[playerid][pJDS] < 1)
        {
            NewUsed = 30;
            format(string, sizeof(string), "({00C0A4}(Canal /n) {0081A4}Pregunta %s: %s ))" , PlayerName(playerid), params[0]);
            OOCOff(CHATNEW,string);
         }
         else if(PlayerInfo[playerid][pAyudante] == 1)
         {
             format(string, sizeof(string), "({00C0A4}(Canal /n) {0081A4}Ayudante %s: %s ))" , PlayerName(playerid), params[0]);
             OOCOff(CHATNEW,string);
             printf("%s", string);
		}
		else if(PlayerInfo[playerid][pJDS] == 1)
         {
             format(string, sizeof(string), "({00C0A4}(Canal /n) {0081A4}Moderador %s: %s ))" , PlayerName(playerid), params[0]);
             OOCOff(CHATNEW,string);
             printf("%s", string);
		}
		else if(PlayerInfo[playerid][pJDS] > 1)
         {
             format(string, sizeof(string), "({00C0A4}(Canal /n) {0081A4}Admin %s: %s ))" , PlayerName(playerid), params[0]);
             OOCOff(CHATNEW,string);
             printf("%s", string);
		}
		else Message(playerid, COLOR_GRAD2, "Usted no es un usuario nuevo!");
		return 1;
	}
    zcmd(mps, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "No autorizado.");
        if(See_MP[playerid] == 1)
		{
			See_MP[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "- Notificación de mensajes privados desactivada.");
		}
        else
		{
            See_MP[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "- Notificación de mensajes privados activada.");
		}
        return 1;
    }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    zcmd(maletero, playerid, params[])
    {
        if(ReduceTime[playerid] == 1) return Message(playerid, COLOR_GREY, "Debes esperar 3 segundos para volver a utilizar este comando.");

        if(!sscanf(params, "s[32]", params[0]))
        {
            new counter, result, gunname[32], string[128];
            for(new i; i != MAX_VEHICLES; i++)
    		{
      			new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
	        	if(dist)
		        {
          			result = i;
	            	counter++;
		        }
		    }

		    if(counter == 0) return Message(playerid, COLOR_GREY, "Ningún vehículo cerca de usted.");
		    if(counter > 1) return Message(playerid, COLOR_GREY, "Encontrado más de un vehículo.");

		    if(IsAPlane(result) || IsABike(result) || Harvest_Vehicle(result)|| IsASweeper(result) || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
   			{
  				return Message(playerid, COLOR_GREY, "Este vehículo no tiene maletero.");
   			}

   			if(IsAnOwnableCar(result))
   			{
   			    if(IsACop(playerid)) { }
	    		else if(PlayerInfo[playerid][pPcarkey] == result) { }
	    		else if(PlayerInfo[playerid][pPcarkey2] == result) { }
		    	else Message(playerid, COLOR_GREY, "Maltetero cerrado.");
			}

            if(strcmp(params[0],"info",true) == 0)
            {
                if(BootOpen[result] == 1)
                {
					Message(playerid, COLOR_YELLOW2, "|_______ Maletero del vehículo _______|");
					for(new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
					{
	    				if(vehTrunk[result][slot] != 0)
						{
	     					GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
			        		format(string, sizeof(string), "| Slot %i: %s (Balas: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
							Message(playerid, COLOR_WHITE, string);
		    			}
					    else
					    {
							format(string, sizeof(string), "| Slot %i: Vacio (Balas: N/A)", slot);
							Message(playerid, COLOR_WHITE, string);
					    }
					}
					format(string, sizeof(string), "| Chaleco: %f%", vehTrunkArmour[result]);
					Message(playerid, COLOR_WHITE, string);
	    			format(string, sizeof(string), "* %s abre el maletero de su vehículo.", PlayerName(playerid));
	     			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				} else Message(playerid, COLOR_GRAD2, "El maletero está cerrado.");
        	}
        	else if(strcmp(params[0],"garma",true) == 0)
            {
                if(vehTrunkCounter[result] != (MAX_TRUNK_SLOTS-1))
            	{
        	    	if(BootOpen[result] == 1)
                	{
             		new gunID = GetPlayerWeapon(playerid), gunAmmo = GetPlayerAmmo(playerid);

					if(gunID != 0 && gunAmmo != 0)
     				{
         				ReduceTime[playerid] = 1;
         				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
             			GetWeaponName(gunID, gunname, sizeof(gunname));
                		vehTrunkCounter[result]++;
                  		vehTrunk[result][vehTrunkCounter[result]] = gunID;
                    	vehTrunkAmmo[result][vehTrunkCounter[result]] = gunAmmo;
                     	format(string, sizeof(string), "Usted ha puesto su %s (Balas: %i) en el coche.", gunname, gunAmmo);
                        Message(playerid, COLOR_WHITE, string);
                        RemovePlayerWeapon(playerid, gunID);
						format(string, sizeof(string), "* %s abre el maletero del coche yguarda un arma.", PlayerName(playerid));
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
         			}
				} else Message(playerid, COLOR_GREY, "Maletero está cerrado.");
              } else Message(playerid, COLOR_GRAD2, "El maletero está lleno.");
            }
            else if(strcmp(params[0],"sarma",true) == 0)
            {
                if(vehTrunkCounter[result] != 0)
            	{
            		if(BootOpen[result] == 1)
                	{
           			ReduceTime[playerid] = 1;
					SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
					GivePlayerWeapon(playerid, vehTrunk[result][vehTrunkCounter[result]], vehTrunkAmmo[result][vehTrunkCounter[result]]);
     				GetWeaponName(vehTrunk[result][vehTrunkCounter[result]], gunname, sizeof(gunname));
         			format(string, sizeof(string), "Usted ha tomado una %s (Balas: %i) De El Vehiculo.", gunname, vehTrunkAmmo[result][vehTrunkCounter[result]]);
			        Message(playerid, COLOR_WHITE, string);
           			vehTrunk[result][vehTrunkCounter[result]] = '\0';
	          		vehTrunkAmmo[result][vehTrunkCounter[result]] = '\0';
	          		vehTrunkCounter[result]--;
		           	format(string, sizeof(string), "* %s abre el maletero del coche y saca un arma.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					} else Message(playerid, COLOR_GRAD2, "El maletero está cerrado.");
			    } else Message(playerid, COLOR_GREY, "Maletero vacío.");
            }
            else if(strcmp(params[0],"gchaleco",true) == 0)
            {
            if(BootOpen[result] == 1)
                	{
                new Float:plyArmour;    GetPlayerArmour(playerid, plyArmour);
			    if(plyArmour != 0)
       			{
			       	SetPlayerArmour(playerid, 0);
			       	vehTrunkArmour[result] = plyArmour;
					format(string, sizeof(string), "* %s se quita su armadura y la pone en maletero del coche.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

				} else Message(playerid, COLOR_GREY, "No tienes chaleco.");
              } else Message(playerid, COLOR_GRAD2, "El maletero está cerrado.");
			}
            else if(strcmp(params[0],"schaleco",true) == 0)
            {
            if(BootOpen[result] == 1)
                	{
                if(vehTrunkArmour[result] != 0)
            		{
            		SetPlayerArmour(playerid, vehTrunkArmour[result]);
            		vehTrunkArmour[result] = 0;
					format(string, sizeof(string), "* %s saca la armadura corporal del tronco y se lo pone.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				} else Message(playerid, COLOR_GREY, "No hay chaleco en el maletero.");
   			} else Message(playerid, COLOR_GRAD2, "El maletero está cerrado.");
   			}
        }
		else
		{
		    Message(playerid, COLOR_GRAD2, "Utilize: /maletero <item>");
		    Message(playerid, COLOR_GRAD2, "Items: garma, sarma, gchaleco, schaleco, info");
		}
        return 1;
    }
    zcmd(pastilla, playerid, params[])
    {
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"ibuprofeno",true) == 0)
	        {
	            if(Ibuprofeno[playerid] > 0)
	            {
					Ibuprofeno[playerid] --;
					format(string, sizeof(string), "* %s se pone una pastilla en su vaso y se la toma con agua.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "Has tomado un ibuprofeno, te quedan %d", Ibuprofeno[playerid]);
					Message(playerid, COLOR_WHITE, string);
   					SetPlayerDrunkLevel(playerid, 3000);
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"nicotina",true) == 0)
	        {
	            if(cNicotina[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(Nicotina[playerid] > 0)
	            {
					Nicotina[playerid] --;
					format(string, sizeof(string), "Te has puesto un parche de Nicotina, te quedan %d", Nicotina[playerid]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se coloca un parche de nicotina.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					cNicotina[playerid] = 1;
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"energysil",true) == 0)
	        {
	            if(cEnergysil[playerid] == 1) return Message(playerid, COLOR_GRAD2, "  Ya has tomado una!");
	            if(Energysil[playerid] > 0)
	            {
					Energysil[playerid] --;
					format(string, sizeof(string), "Consumes 1 Energysil, te quedan %d", Energysil[playerid]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se siente con más energía.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					cEnergysil[playerid] = 1;
   					SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pDEagle])
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pShotgun]+50)
					SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pMP5]+50)
					SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pAK47]+50)
					SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pM4]+100)
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PlayerInfo[playerid][pSniper]+50)
					PlayerDrunk[playerid] = -5;
					new Float:HP; GetPlayerHealth(playerid, HP);
					SetHP(playerid, HP+50);
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"sida",true) == 0)
	        {
	            if(cSIDA[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(PlayerInfo[playerid][pAntiSIDA] > 0)
	            {
					PlayerInfo[playerid][pAntiSIDA] -= 1;
					format(string, sizeof(string), "* %s se toma una pastilla.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "Te has tomado la pastilla para curar el SIDA, te quedan %d", PlayerInfo[playerid][pAntiSIDA]);
					Message(playerid, COLOR_WHITE, string);
   					cSIDA[playerid] = 1;
   					new antisida = random(30);
   					if(antisida == 14)
   					{
   					    Message(playerid, COLOR_WHITE, "Felicidades! Te has curado! Puedes dejar de tomar estas pastillas!");
   					    format(string, sizeof(string), "* %s se siente muy feliz.", PlayerName(playerid));
   						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   						PlayerInfo[playerid][pSIDA] = 0;
					}
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"cancer",true) == 0)
	        {
	            if(cCancer[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(PlayerInfo[playerid][pAntiCancer] > 0)
	            {
					PlayerInfo[playerid][pAntiCancer] -= 1;
					format(string, sizeof(string), "Te has tomado la pastilla para curar el cancer, te quedan %d", PlayerInfo[playerid][pAntiCancer]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se toma una pastilla.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					if(PlayerInfo[playerid][pCancer] > 120)
	                {
	                    format(string, sizeof(string), "* %s tose y escupe la pastilla.", PlayerName(playerid));
   						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   						SetPlayerDrunkLevel(playerid, 10000);
	                }
   					else
   					{
   					    cCancer[playerid] = 1;
   					    PlayerInfo[playerid][pCancer] -= 3;
					}
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"epilepsia",true) == 0)
	        {
	            if(cEpilepsia[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(PlayerInfo[playerid][pAntiEpilepsia] > 0)
	            {
					PlayerInfo[playerid][pAntiEpilepsia] -= 1;
					format(string, sizeof(string), "Te has tomado la pastilla para evitar la epilepsia, te quedan %d", PlayerInfo[playerid][pAntiEpilepsia]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se toma una pastilla.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					cEpilepsia[playerid] = 1;
   					PlayerInfo[playerid][pEpilepsia] -= 2;
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /pastilla <nombre>");
            Message(playerid, COLOR_GRAD2, "Nombres: Ibuprofeno, Nicotina, Energysil, Cancer, Epilepsia, SIDA");
        }
        return 1;
    }
    zcmd(usardrogas, playerid, params[])
    {
        if(UsingDrugs[playerid] == 1) return Message(playerid, COLOR_WHITE, "¡Estás con el efecto de la droga aún!");
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"speed",true) == 0)
	        {
	            if(PlayerInfo[playerid][pSpeed] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes Speed!");

	            SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 999);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);

				new VIH = random(10);
				if(VIH == 5 || VIH == 7)	PlayerInfo[playerid][pSIDA] += 1;
				if(VIH == 2)				PlayerInfo[playerid][pDengue] += 1;

				PlayerInfo[playerid][pEpilepsia] += 10;
				PlayerInfo[playerid][pCancer] += 5;

				format(string, sizeof(string), "* %s consume un polvo blanco.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   				ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
   				UsingSpeed[playerid] = 600;
				SpeedEffect[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
   				Message(playerid, COLOR_WHITE, "Has tomado speed, el efecto de la droga durará 2 minutos");
   				PlayerInfo[playerid][pSpeed] -= 1;
			}
			else if(strcmp(params[0],"extasis",true) == 0)
	        {
	            if(PlayerInfo[playerid][pEctasy] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes pastillas de extasis!");

	            PlayerInfo[playerid][pEpilepsia] += 10;
	            new Mareo = random(50000), Float:Health, Vida = random(80);

				SetPlayerDrunkLevel(playerid, Mareo);
				GetPlayerHealth(playerid, Health);
				SetHP(playerid, Health+Vida);
				SetPlayerWeather(playerid, 2009);

				format(string, sizeof(string), "* %s se toma una pastilla de color.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,1);
				UsingEctasy[playerid] = 300;
				EctasyEffect[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has tomado extasis, el efecto de la droga durará 5 minutos");
				PlayerInfo[playerid][pEctasy] -= 1;
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(strcmp(params[0],"ritalin",true) == 0)
	        {
	            if(PlayerInfo[playerid][pRitalin] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes pastillas de Ritalin!");

	            PlayerInfo[playerid][pEpilepsia] += 3;
	            PlayerInfo[playerid][pCancer] += 3;

	            new VIH = random(10), Mareo = random(5);

				if(VIH == 2 || VIH == 8)		PlayerInfo[playerid][pSIDA] += 1;
				SetPlayerDrunkLevel(playerid, Mareo*1000);
				SetPlayerArmour(playerid, Mareo*20);
				SetPlayerWeather(playerid, -68);
				format(string, sizeof(string), "* %s se toma una pastilla blanca.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,1);
				UsingRitalin[playerid] = 300;
				RitalinEffect[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has tomado Ritalin, el efecto de la droga durará 5 minutos");
				PlayerInfo[playerid][pRitalin] -= 1;
				PlayerDrunk[playerid] = 11;
			}
			else if(strcmp(params[0],"heroina",true) == 0)
	        {
	            if(PlayerInfo[playerid][pHeroina] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes suficiente Heroina!");

	            PlayerInfo[playerid][pEpilepsia] += 5;
	            PlayerInfo[playerid][pCancer] += 5;

	            new VIH = random(15);

				if(VIH == 8)			PlayerInfo[playerid][pSIDA] += 1;
				SetPlayerArmour(playerid, 100);
				SetHP(playerid, 200);
				format(string, sizeof(string), "* %s se inyecta una substancia.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
				UsingHeroina[playerid] = 120;
				HeroinaEffect[playerid] = 1;
				HeroinaBeat[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has tomado Heroina, el efecto de la droga durará 2 minutos");
   				PlayerInfo[playerid][pHeroina] -= 1;
			}
			else if(strcmp(params[0],"marihuana",true) == 0)
	        {
	            if(PlayerInfo[playerid][pMarihuana] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes suficiente Marihuana!");

	            PlayerInfo[playerid][pEpilepsia] += 5;
	            PlayerInfo[playerid][pCancer] += 5;

	            new VIH = random(15);

				if(VIH == 8)			PlayerInfo[playerid][pSIDA] += 1;
				SetPlayerArmour(playerid, 100);
				SetHP(playerid, 200);
				format(string, sizeof(string), "* %s fuma marihuana.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
				UsingMarihuana[playerid] = 120;
				MarihuanaEffect[playerid] = 1;
				MarihuanaBeat[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has fumado Marihuana, el efecto de la droga durará 2 minutos");
   				PlayerInfo[playerid][pMarihuana] -= 1;
			}
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /usardrogas <nombre> (speed, ectasy, ritalin, heroina, marihuana)");
        return 1;
    }
    // zcmd: binds  ===================================================================================================================
    zcmd(macros, playerid, params[])
    {
		ClearChatbox(playerid, 10);
		Message(playerid, -1, "{DEFBCB}Macros por Comando - GameWorld RolePlay");
        Message(playerid, COLOR_WHITE, "Macro de Pistola - /1");
        Message(playerid, COLOR_WHITE, "Macro de Apuntar - /2");
        Message(playerid, COLOR_WHITE, "Macro de arma en auto - /3");
        Message(playerid, COLOR_WHITE, "Macro de Arma Pesada de maletero - /4");
        Message(playerid, COLOR_WHITE, "Macro de Noquear - /5");
        return Message(playerid, COLOR_WHITE, "Macro de arma Pesada - /6");
    }
	zcmd(1, playerid, params[])
    {
        new string[64];
        format(string, sizeof(string), "* %s Saca su Arma Liviana del cinturon y la carga, Clack", PlayerName(playerid));
		return ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    zcmd(2, playerid, params[])
    {
        new string[64];
        format(string, sizeof(string), "* %s Apunta al sujeto y lo amenaza con disparar", PlayerName(playerid));
		return ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
	zcmd(3, playerid, params[])
    {
        new string[70];
        format(string, sizeof(string), "* %s Saca su arma de debajo del vehículo y la carga", PlayerName(playerid));
		return ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    zcmd(4, playerid, params[])
    {
        new string[64];
        format(string, sizeof(string), "* %s Saca un arma del maletero y la carga", PlayerName(playerid));
		return ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    zcmd(5, playerid, params[])
    {
        new string[64];
        format(string, sizeof(string), "* %s utiliza su arma para noquear contundentemente al sujeto", PlayerName(playerid));
		return ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    zcmd(6, playerid, params[])
    {
        new string[64];
        format(string, sizeof(string), "* %s Saca su Arma Pesada de su Bolso/Espalda la Carga y quita Seguro, Clack", PlayerName(playerid));
		return ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
   	zcmd(ctoys,playerid, params[])
	{
	ShowPlayerDialog(playerid, BUYTOYSGOLD, DIALOG_STYLE_MSGBOX, "Tienda de Accesorios", "Bienvenido al dispensador de accesorios Especial! Aquí puedes comprar accesorios para ti.\nPrimero, tienes que elegir que menú verás","Ok", "Salir");
	return 1;
	}
    zcmd(toyayuda,playerid, params[])
    {
        Message(playerid, COLOR_WHITE,"Ayuda Accesorios");
        ClearChatbox(playerid, 1);
        Message(playerid, COLOR_GRAD1,"Para comprar un accesorio en la tienda usa: {FFFFFF}/ctoys");
        Message(playerid, COLOR_GRAD1,"Para ponerte y editar un accesorio usa: {FFFFFF}/toys");
        Message(playerid, COLOR_GRAD1,"Para ponerte todos tus accesorios usa: {FFFFFF}/ptoys");
        Message(playerid, COLOR_GRAD1,"Para quitarte todos tus accesorios usa: {FFFFFF}/qtoys");
        return 1;
    }
    CMD:toy(playerid, params[])
	{
	new toyslot,string[128];
	if(sscanf(params, "d", toyslot)) return SendClientMessage(playerid, COLOR_WHITE, "USA: /toy [slot (0-9)]");
	if(toyslot < 0 || toyslot > MAX_PLAYERTOYS) return SendClientMessage(playerid, COLOR_GRAD1, "Los Slots de los toys son del número 0 al 9!");
	switch(toyslot)
	{
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	{
	if(IsPlayerAttachedObjectSlotUsed(playerid, toyslot)){
	new name[24];
	format(name, sizeof(name), "None");
	for(new i;i<sizeof(HoldingObjectsAll);i++){
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][toyslot][ptModelID]){
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}
	format(string, sizeof(string), "Te quitaste el toy correctamente. (%s) (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][toyslot][ptBone]], toyslot);
	SendClientMessage(playerid, COLOR_WHITE, string);
	RemovePlayerAttachedObject(playerid, toyslot);
	return 1;
	}
	else
	{
	if(PlayerToyInfo[playerid][toyslot][ptModelID] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No tienes ningún toy en ese slot.");
	SetPlayerAttachedObject(playerid, toyslot, PlayerToyInfo[playerid][toyslot][ptModelID], PlayerToyInfo[playerid][toyslot][ptBone], PlayerToyInfo[playerid][toyslot][ptPosX], PlayerToyInfo[playerid][toyslot][ptPosY], PlayerToyInfo[playerid][toyslot][ptPosZ], PlayerToyInfo[playerid][toyslot][ptRotX], PlayerToyInfo[playerid][toyslot][ptRotY], PlayerToyInfo[playerid][toyslot][ptRotZ], PlayerToyInfo[playerid][toyslot][ftscaleX],
	PlayerToyInfo[playerid][toyslot][ftscaleY], PlayerToyInfo[playerid][toyslot][ftscaleZ]);
	new name[24];
	format(name, sizeof(name), "Nada");
	for(new i;i<sizeof(HoldingObjectsAll);i++){
	if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][toyslot][ptModelID]){
	format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
	}
	}
	format(string, sizeof(string), "Te pusiste el toy correctamente. (%s) (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][toyslot][ptBone]], toyslot);
	SendClientMessage(playerid, COLOR_WHITE, string);
	}
	}
	}
	return 1;
	}
	zcmd(toys,playerid, params[])
	{
	ShowPlayerDialog( playerid, TOYS, DIALOG_STYLE_LIST, "Toy Menu", "Poner/Quitar un Toy\nEditar un Toy\nEliminar un Toy","OK", "Cancelar" );
	return 1;
	}
    zcmd(ptoys,playerid, params[])
    {
	    SendClientMessage(playerid, COLOR_GREEN, "* Te colocaste todos los toys de tu inventario.");
	    for(new x;x<MAX_PLAYERTOYS;x++)
	    {
		    if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ], 1, 1, 1);
	    }
	    return 1;
    }
    zcmd(qtoys,playerid, params[])
    {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "* Te quitaste todos los toys de tu inventario.");
	    for(new x;x<MAX_PLAYERTOYS;x++)
	    {
		    RemovePlayerAttachedObject(playerid, x);
        }
        return 1;
    }

public OnPlayerCommandReceived(playerid, cmdtext[])
{
	new string[99];
	format(string, sizeof string, "[CMD]: (%s, %s)",PlayerName(playerid), cmdtext);
	printf(string);
	Log("logs/comandos.log", string);
	if(strfind(cmdtext, "|", true) != -1)
	{
	    Message(playerid, COLOR_GRAD2, "No puedes usar el carácter '|' en un comando.");
		return 0;
	}
	if(strfind(cmdtext,"=",true) != -1)
	{
	    Message(playerid,COLOR_GRAD2,"No puedes usar el carácter '=' en un comando.");
		return 0;
	}
	return 1;
}
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
if(!success)
{
new string[99];
format(string, sizeof string, "{FF0000}(%s){FFFFFF}El Comando que escribio no Existe use /Ayuda", cmdtext);
SendClientMessage(playerid, -1, string);
}
return 1;
}

//------------------------------------------------------------------------------------------------------

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

/*public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}*/

public PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:tempposx, Float:tempposy, Float:tempposz;
		tempposx = (curx -x);
		tempposy = (cury -y);
		tempposz = (curz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}
public NameTimer()
{
	for(new i = 0;i < MAX_PLAYERS;i++)
 	{
	 	if(IsPlayerConnected(i))
 		{
 			for(new q = 0;q < MAX_PLAYERS;q++)
 			{
				if(IsPlayerConnected(q))
				{
 					new Float:p1x;
					new Float:p1y;
					new Float:p1z;
					new Float:p2x;
					new Float:p2y;
					new Float:p2z;
					if(IsPlayerConnected(i) && IsPlayerConnected(q))
					{
						GetPlayerPos(i,p1x,p1y,p1z);
    					GetPlayerPos(q,p2x,p2y,p2z);
						if(GetPointDistanceToPointExMorph(p1x,p1y,p1z,p2x,p2y,p2z) < pdistance)
						{
								ShowPlayerNameTagForPlayer(i,q,1);
						}
                    }
                }
            }
        }
	}
}

public CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[150];
	NameTimer();
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			if(oldposx!=0.0 && oldposy!=0.0 && oldposz!=0.0)
			{

				for(new sb = 0; sb < sizeof(SBizzInfo); sb++)
				{
					if(PlayerToPoint(2.0, i, SBizzInfo[sb][sbEntranceX],SBizzInfo[sb][sbEntranceY],SBizzInfo[sb][sbEntranceZ]))
					{
						//TextDrawShowForPlayer(i, HouseDraw[i]);
						format(string, sizeof(string), "~w~-----------------~n~%s~n~~w~-----------------",SBizzInfo[sb][sbMessage]);
						//TDStr(HouseDraw[i], string);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
					else
					{
						//TextDrawHideForPlayer(i, HouseDraw[i]);
					}
				}
			}
			if (PlayerToPoint(3.0, i, 2033.9985,-1401.9303,17.2931))
			{// U7 Ascensor
				if(GetPlayerState(i) == PLAYER_STATE_ONFOOT && Umbrella7(i))
			    {
					GameTextForPlayer(i, "~w~Ascensor: pulsa ~r~intro", 5000, 5);
				}
			}
			else if (PlayerToPoint(2.0, i, 1790.3563,-1591.3485,13.4936))
			{
				GameTextForPlayer(i, "~w~/comprarentrada - ~n~~y~Para entrar al Club VIP", 5000, 1);
			}
			////////////////////////////////////////////////////////////////////////////////
			else if (PlayerToPoint(3.0, i, 994.3551,-1296.4821,13.5469))
			{
				GameTextForPlayer(i, "~w~oferta de empleo~n~~r~vendedor de moviles~n~~w~utilize ~g~/trabajo", 5000, 3);
			}
			else if (PlayerToPoint(3.0, i, 1684.6674,-1944.6483,13.5469))
			{
				GameTextForPlayer(i, "~w~oferta de empleo~n~~r~conductor de tren~n~~w~utilize ~g~/trabajo", 5000, 3);
			}
			else if (PlayerToPoint(3.0, i, 1642.3722,-2238.3552,13.4976))
			{
				GameTextForPlayer(i, "~w~oferta de empleo~n~~r~piloto~n~~w~utilize ~g~/trabajo", 5000, 3);
			}
			else if (PlayerToPoint(3.0, i, 1616.0295,-1897.1339,13.5491))
			{
				GameTextForPlayer(i, "~w~oferta de empleo~n~~r~barrender~n~~w~utilize ~g~/trabajo", 5000, 3);
			}
		}
	}
	return 1;
}


public OnPlayerText(playerid, text[])
{
    SetPlayerChatBubble(playerid, text, -335538177, 20.0, 5000);
    //if(DetectarSpam(text)) { SendClientMessage(playerid,COLOR_GRAD2,"*No esta permitido el SPAM!*"); return 0; }
        new
                sendername[MAX_PLAYER_NAME],    string[256],    tmp[256],       car = GetVehicleModel(GetPlayerVehicleID(playerid));
        if(DetectarSPAM(text))
    {
        new x[186];
        format(x, sizeof(x), "{11BB11}- AntiSPAM {FFFFFF}|| {FF2200}%s(%d): {FFFFFF}%s ||", PlayerName(playerid),playerid, text); A_Info(x);
        return 0;
        }
        if(AFK[playerid] > 0)
        {
            Message(playerid, COLOR_GRAD2, "¡No puedes hablar en estado AFK!");
            return 0;
    }
        if(Muted[playerid] == 1)
        {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
                return 0;
        }
    if(strcmp(Flood[playerid],text, true ) == 0)
        {
                if(ChatBan[playerid] > 30)
                {
                        Message(playerid, COLOR_GRAD2, "Flood, has sido silenciado por 30 segundos");
                        Muted[playerid] = 1;
                        KillTimer(ChatBanTimer[playerid]);
                        ChatBanTimer[playerid] = SetTimerEx("UnsetFlood", 30000, false, "i", playerid);
                        printf("AntiCheat: Flood by %s (cmd: %s)", PlayerName(playerid),Flood[playerid]);
                        return 0;
                }
                else
                {
                    ChatBan[playerid] ++;
                }
        }
        strmid(Flood[playerid], text, 0, strlen(text), 128);

        if(UsingEctasy[playerid] > 0)
        {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "¡Una fuerza desconocida te impide hablar!");
                return 0;
        }
        if(TalkingLive[playerid] != 0)
        {
                if(PlayerInfo[playerid][pRank] == 3)
            {
                if(car == 488 || car == 582)
                {
                                Message(playerid, COLOR_GRAD2, "No estás en un vehículo CNN!");
                                return 0;
                }
                else return Message(playerid, COLOR_GRAD2, "No estás en un vehículo CNN!");
            }
            else
            {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(Journalist(playerid))
                        {
                            format(string, sizeof(string), "[CNN](%s): %s", sendername, text);
                                OOCNews(0xCF2B13FF, string);
                        }
                        else
                        {
                            format(string, sizeof(string), "[CNN]Invitado(%s): %s", sendername, text);
                                OOCNews(0xCF2B13C3, string);
                        }
                        return 0;
                }
        }
        if(Mobile[playerid] != 255)
        {
                new idx;
                tmp = strtok(text, idx);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                if(UnidentifedCall[playerid] == 1)
                {
                    format(string, sizeof(string), "(Teléfono) Desconocido: %s", text);
                }
                else
                {
                        format(string, sizeof(string), "(Teléfono) %s: %s", sendername, text);
                }
                ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                // -================= Mecanicos =======================- //
                if(Mobile[playerid] == 556)
                {
                        if(!strlen(tmp))
                        {
                            Message(playerid, COLOR_WHITE, "Operador: ¿ Si necesita asistencia, diga: ASISTENCIA, para anular la llamada NO ?");
                                return 0;
                        }
                        else if ((strcmp("asistencia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("asistencia")))
                        {
                                Message(playerid, COLOR_WHITE, "Operador: Muy bien! Necesita asistencia!");
                                Message(playerid, COLOR_WHITE, "Operador: Entonces ... ¿Dónde se encuentra?");
                                Mobile[playerid] = 557;
                                return 0;
                        }
                        else if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
                        {
                                Message(playerid, COLOR_WHITE, "Operador: Anulastes la llamada! Pásese por el taller y descubra ofertas en tuning, arreglos etc!");
                                Message(playerid, COLOR_WHITE, "Operador: Que tenga buen día!");
                                Mobile[playerid] = 255;
                                return 0;
                        }
                        else
                        {
                                Message(playerid, COLOR_WHITE, "Operador: ¿ Si necesita asistencia, diga: ASISTENCIA, para anular la llamada NO ?");
                                return 0;
                        }
                }
                if(Mobile[playerid] == 557)
                {
                        if(!strlen(tmp))
                        {
                            Message(playerid, COLOR_WHITE, "Operador: ¿ Si necesita asistencia, diga: ASISTENCIA, para anular la llamada NO ?");
                                return 0;
                        }
                        else  if(strfind(text, " ", true))
                        {
                                format(string, sizeof(string), "** Usted está en: %s, aguarde un momento, un mecánico ya llegará", text);
                                Message(playerid, COLOR_WHITE, string);
                                MechanicCall = playerid;
                                Mobile[playerid] = 255;
                                Llamadas[playerid] = 1;
                                format(string, sizeof(string), "* Central: %s [ID:%d] necesita asistencia mecánica urgente. <Ubicación: %s.> (Telf: %d)", PlayerName(playerid), playerid, text, PlayerInfo[MechanicCall][pPnumber]);
                                SendRadioMessage(7, TEAM_BLUE_COLOR, string);
                                SendRadioMessage(7,COLOR_WHITE, "   ¿ Estás disponible ? Acepta la llamada con \"/aceptarmeca \" (Recuerda llevar grúa)");
                                return 0;
                        }
                        else
                        {
                                Message(playerid, COLOR_WHITE, "Operador: ¿ Si necesita asistencia, diga: ASISTENCIA, para anular la llamada NO ?");
                                return 0;
                        }
                }
                // -================= Transportes =====================- //
                if(Mobile[playerid] == 445)
                {
                        if(!strlen(tmp))
                        {
                            Message(playerid, COLOR_ORANGE, "  Operadora: Diga TAXI para continuar, diga NO para cancelar");
                                return 0;
                        }
                        else if ((strcmp("taxi", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("taxi")))
                        {
                                Message(playerid, COLOR_ORANGE, "  Operadora: ¿ Donde se encuentra, en LS o LV ?");
                                Mobile[playerid] = 446;
                                return 0;
                        }
                        else if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
                        {
                                Message(playerid, COLOR_ORANGE, "  Operadora: Buen día!");
                                Mobile[playerid] = 255;
                                return 0;
                        }
                        else
                        {
                                Message(playerid, COLOR_ORANGE, "  Operadora: Diga TAXI para continuar, diga NO para cancelar");
                                return 0;
                        }
                }
                if(Mobile[playerid] == 446)
                {
                        if(!strlen(tmp))
                        {
                            Message(playerid, COLOR_ORANGE, "  Operadora: ¿ Donde está en LS o LV ?");
                                return 0;
                        }
                        else if ((strcmp("LS", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("LS")))
                        {
                if(IsPlayerConnected(playerid))
                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
                Message(playerid, COLOR_YELLOW2, "  Operadora: Puedes llamar a los siguientes taxistas de tu zona.");
                Message(playerid, COLOR_YELLOW2, "  Operadora: Gracias por preferirnos, si no hay taxistas intente en otro momento.");
                        for(new i = 0; i < MAX_PLAYERS; i++)
                            {
                                    if(IsPlayerConnected(i))
                                    {
                                        if(Team_Taxi(i))
                                        {
                                                    GetPlayerName(i, sendername, sizeof(sendername));
                                                    format(string, 256, "  Tlf: %d - Nombre: %s", PlayerInfo[i][pPnumber] ,sendername);
                                                    Message(playerid, -1, string);
                                                    TaxiCalled[playerid] = 1;
                                                    Mobile[playerid] = 255;
                                        }
                                    }
                                }
                                return 0;
                        }
                        else if ((strcmp("LV", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("LV")))
                        {
                if(IsPlayerConnected(playerid))
                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
                            Message(playerid, COLOR_YELLOW2, "  Operadora: Puedes llamar a los siguientes taxistas de tu zona.");
                            Message(playerid, COLOR_YELLOW2, "  Operadora: Gracias por preferirnos, si no hay taxistas intente en otro momento.");
                        for(new i = 0; i < MAX_PLAYERS; i++)
                            {
                                    if(IsPlayerConnected(i))
                                    {
                                        if(Team_Taxi(i))
                                        {
                                                    GetPlayerName(i, sendername, sizeof(sendername));
                                                    format(string, 256, "   Tlf: %d - Nombre: %s", PlayerInfo[i][pPnumber] ,sendername);
                                                    Message(playerid, -1, string);
                                                    TaxiCalled[playerid] = 1;
                                                    Mobile[playerid] = 255;
                                        }
                                    }
                                }
                                return 0;
                        }
                        else
                        {
                                Message(playerid, COLOR_ORANGE, "  Operadora: ¿ Donde está en LS o LV ?");
                                return 0;
                        }
                }
                // -============================ · ============================- //
                if(Mobile[playerid] == 915)
                {
                    if(!strlen(tmp))
                        {
                                SendClientMessage(playerid, COLOR_ALLDEPT, "Central: Entendido, ¿su ubicación porfavor?");
                                return 0;
                        }
                        if(strfind(text, " ", true))
                        {
                        new turner[MAX_PLAYER_NAME];
                        new wanted[128];
                        GetPlayerName(playerid, turner, sizeof(turner));
                        format(wanted, sizeof(wanted), "[Central]: %s necesita una ambulancia en %s. [/TLC] -> Asistir a la llamada",turner, text);
                        SendRadioMessage(4, AMARILLO_ADMIN, wanted);
                        format(wanted, sizeof(wanted), "- [Incidente]: %s",Situacion[playerid]);
                        SendRadioMessage(4, AMARILLO_ADMIN, wanted);
                        new Float:trace_x, Float:trace_y, Float:trace_z;
                        GetPlayerPos(playerid, trace_x, trace_y, trace_z);
                        emdtrace = 1; emdtrace_x = trace_x; emdtrace_y = trace_y; emdtrace_z = trace_z;
                        SendClientMessage(playerid, COLOR_ALLDEPT, "Central: Ahora le enviamos una ambulancia, sea paciente.");
                        SendClientMessage(playerid, COLOR_WHITE, "- Colgaron.");
                        Mobile[playerid] = 255;
                        return 0;
                        }
                }
                if(Mobile[playerid] == 914)
                {
                        if(!strlen(tmp))
                        {
                                SendClientMessage(playerid, COLOR_ALLDEPT, "Central: Por favor, ¿una breve explicación de la situación?");
                                return 0;
                        }
                        SendClientMessage(playerid, COLOR_ALLDEPT, "Central: Entendido, ¿su ubicación porfavor?");
                        strmid(Situacion[playerid], text, 0, strlen(text), 255);
                        Mobile[playerid] = 915;
                        return 0;
                }
                if(Mobile[playerid] == 913)
                {
                        if(!strlen(tmp))
                        {
                                SendClientMessage(playerid, COLOR_ALLDEPT, "Comisaria: repítame que no le he entendido!");
                                return 0;
                        }
                        GetPlayerName(playerid, sendername, sizeof(sendername));
   if(strfind(text, " ", true))
   {
                            format(string, sizeof(string), "** Central: han solicitado una patrulla en: %s",text);
                                SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
                                format(string, sizeof(string), "** Central: un tal %s denuncia: %s",sendername, Situacion[playerid]);
                                SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
                                SendClientMessage(playerid, 0x0080FFFF, "Comisaria: una patrulla se pasará por la zona.");
                                SendClientMessage(playerid, 0x0080FFFF, "Comisaria: ¡Gracias por su información!");
                                Mobile[playerid] = 255;
                                new Float:trace_x, Float:trace_y, Float:trace_z;
                                GetPlayerPos(playerid, trace_x, trace_y, trace_z);
                                pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
                                return 0;
   }
                        else
                        {
                            SendClientMessage(playerid, 0x0080FFFF, "Comisaria: No comprendro ¿podría repetirlo?");
                            return 0;
                        }
                }
                if(Mobile[playerid] == 912)
                {
                        if(!strlen(tmp))
                        {
                                SendClientMessage(playerid, COLOR_ALLDEPT, "Comisaria: no le entiendo., repíta porfavor!");
                                return 0;
                        }
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        strmid(Situacion[playerid], text, 0, strlen(text), 255);
                        format(string, sizeof(string), "Comisaria: entendido señor %s, díganos la ciudad y ubicación exacta", sendername);
                        SendClientMessage(playerid, 0x0080FFFF, string);
                        Mobile[playerid] = 913;
                        return 0;
                }
                if(Mobile[playerid] == 911)
                {
                        if(!strlen(tmp))
                        {
                                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA:  Lo sentimos, no le entendimos, POLICIA o SAMUR ?");
                                return 0;
                        }
                        else if ((strcmp("Policia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Policia")))
                        {
                                Message(playerid, COLOR_WHITE, "--> Conexión establecida con LSPD.");
                                SendClientMessage(playerid, 0x0080FFFF, "Central: Explique brevemente lo ocurrido.");
                                Mobile[playerid] = 912;
                                return 0;
                        }
                        else if ((strcmp("samur", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("samur")))
                        {
                            Message(playerid, COLOR_WHITE, "--> Conexión establecida con SAMUR.");
                                SendClientMessage(playerid, COLOR_ALLDEPT, "Central: Explique brevemente lo ocurrido.");
                                Mobile[playerid] = 914;

                                return 0;
                        }
                        else
                        {
                                SendClientMessage(playerid, 0x0080FFFF, "EMERGENCIA: Lo sentimos, no le entendimos, POLICIA o SAMUR ?");
                                return 0;
                        }
                }
		/*if(Mobile[playerid] == 3900)
		{
			SendFamilyMessage(17, COLOR_GREEN, "Central: Llegó un nuevo mensaje a CNN:");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[ID:%d] Mensaje de %s: %s", playerid, sendername, text);
			SendFamilyMessage(17, COLOR_GREEN, string);
			SendClientMessage(playerid, COLOR_GREEN, "CNN Estudio: Gracias por su informacion !");
			SendClientMessage(playerid, COLOR_GRAD2, "   La LLamda Se A Colgado...");
			Mobile[playerid] = 255;
			return 0;
		}*/

		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				if(PlayerInfo[Mobile[playerid]][pSpeaker] == 1)
				{
					ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else
				{
				    SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Theres nobody there");
		}
		return 0;
	}
	if (realchat)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(PlayerInfo[playerid][pMaskuse] == 1)
			{
				format(string, sizeof(string), "Desconocido dice: %s", text);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			}
			else
			{
		    	format(string, sizeof(string), "%s dice: %s", PlayerName(playerid), text);
		    	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			}
		}
		else
		{
		    new carid = GetPlayerVehicleID(playerid);
		    //new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
		    if(IsABike(carid) || IsAPlane(carid))
		    {
		        if(PlayerInfo[playerid][pMaskuse] == 1)
				{
					format(string, sizeof(string), "Desconocido dice: %s", text);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else
				{
		    		format(string, sizeof(string), "%s dice: %s", PlayerName(playerid), text);
		    		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
		    }
		    else
		    {
		    	if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
		    	{
		    		if(PlayerInfo[playerid][pMaskuse] == 1)
					{
						format(string, sizeof(string), "(Ventana Cerrada) Desconocido dice: %s", text);
						ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
					else
					{
		    			format(string, sizeof(string), "(Ventana Cerrada) %s dice: %s", PlayerName(playerid), text);
		    			ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
				}
				else
				{
			    	if(PlayerInfo[playerid][pMaskuse] == 1)
					{
						format(string, sizeof(string), "(Ventana Abierta) desconocido Dice: %s", text);
						ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
					else
					{
		    			format(string, sizeof(string), "(Ventana Abierta) %s dice: %s", PlayerName(playerid), text);
		    			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
				}
			}
		}
		return 0;
	}
	return 1;
}

public FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}

public AddsOn()
{
	if(adds > 0)
	{
	    adds -= 1;
	}
	return 1;
}

stock IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if (x > minx && x < maxx && y > miny && y < maxy) return 1;
    return 0;
}
function HouseTimer()
{
	for(new h=0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hTime] <= gettime())
		{
		    HouseInfo[h][hOwned] = 0;
		    HouseInfo[h][hLock] = 1;
		    HouseInfo[h][hRent] = 0;
		    HouseInfo[h][hRentabil] = 0;
		    HouseInfo[h][hWep] = 0;
			HouseInfo[h][hAmmo] = 0;
			HouseInfo[h][hMats] = 0;
			HouseInfo[h][hDrugs] = 0;
			HouseInfo[h][hSpeed] = 0;
			HouseInfo[h][hEctasy] = 0;
			HouseInfo[h][hRitalin] = 0;
			HouseInfo[h][hHeroina] = 0;
			HouseInfo[h][hMarihuana] = 0;
			HouseInfo[h][hTime] = 1999999999;
			strmid(HouseInfo[h][hOwner], "El Estado", 0, strlen("El Estado"), 64);
	        OnPropTextdrawUpdate(h);
		}
	}
	return 0;
}
public TeleportPlayer(playerid)
{
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(playerid, cx, cy, cz);
	// LSPD Entrance
	if(PlayerToPointStripped(1, playerid,1554.9537,-1675.6584,16.1953, cx,cy,cz))
	{
	    if(IsACop(playerid))
	    {
			GameTextForPlayer(playerid, "~w~Departamento De ~n~Policia de LS", 5000, 1);
			SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid,246.7079,66.2239,1003.6406);
			PlayerInfo[playerid][pInt] = 6;
			PlayerPlaySound(playerid, 1052, 246.7562,64.4719,1003.6406);
			return 1;
		}
		if(GetPlayerWeapon(playerid) > 0 && !IsACop(playerid))
		{
		    GameTextForPlayer(playerid, "~w~Departamento De ~n~Policia de LS", 5000, 1);
			SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid,246.7079,66.2239,1003.6406);
			PlayerInfo[playerid][pInt] = 6;
			ProxDetector(15.0, playerid, "Biiiiiiip! Biiiiip!", 0xFF8080FF,0xFF8080FF,0xFF8080FF,0xFF8080FF,0xFF8080FF);
			PlayerPlaySound(playerid, 1055, 246.7562,64.4719,1003.6406);
			return 1;
		}
		if(GetPlayerWeapon(playerid) == 0 && !IsACop(playerid))
		{
		    GameTextForPlayer(playerid, "~w~Departamento De ~n~Policia de LS", 5000, 1);
			SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid,246.7079,66.2239,1003.6406);
			PlayerInfo[playerid][pInt] = 6;
			PlayerPlaySound(playerid, 1052, 246.7562,64.4719,1003.6406);
			return 1;
		}
	}
    if(PlayerToPointStripped(1, playerid,246.5928,87.7546,1003.6406, cx,cy,cz))
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
           	ShowPlayerDialog(playerid, DIALOG_LSPD_ELEVATOR, DIALOG_STYLE_LIST, "Ascensor LSPD", "¿ Donde desea ir ?", "Garage", "Terraza");
		}
		else
		{
			GameTextForPlayer(playerid, "~r~Solo Policias!", 5000, 3);
		}
	}
	if(PlayerToPointStripped(1, playerid,2258.4861,2454.7061,38.6837, cx,cy,cz))
	{
		SetPlayerPos(playerid,2343.3733,2459.3279,14.9742);
	}
	if(PlayerToPointStripped(1, playerid,2282.2898,2423.4922,3.4766, cx,cy,cz))
	{
		SetPlayerPos(playerid,2343.3733,2459.3279,14.9742);
	}
	//aero int
	if(PlayerToPointStripped(1, playerid,1672.5437,1447.8615,10.7881, cx,cy,cz))
    {
		Pause(playerid);
	    SetPosEx(playerid,-1855.7919,44.0830,1055.1891,0,14,0);
		PlayerInfo[playerid][pInt] = 14;
	}
	if(PlayerToPointStripped(1, playerid,-1855.7919,44.0830,1055.1891, cx,cy,cz))
    {
	    SetPosEx(playerid,1672.5437,1447.8615,10.7881,0,0,0);
		PlayerInfo[playerid][pInt] = 14;
	}
	// LVPD
	// HospitalLV
	if(PlayerToPointStripped(1, playerid,1172.8470,-1323.1869,15.3999, cx,cy,cz)){ Pause(playerid);  SetPosEx(playerid,1586.1621,1745.0776,-60.5596,0,0,0);}
	if(PlayerToPointStripped(1, playerid,1586.1621,1745.0776,-60.5596, cx,cy,cz)){ Pause(playerid); SetPosEx(playerid,1172.8470,-1323.1869,15.3999,0,0,0);}
	// Hospital2puerta
	if(PlayerToPointStripped(1, playerid,1600.4548,1760.7028,-60.5523, cx,cy,cz)) SetPosEx(playerid,1600.0018,1765.1306,-60.0662,0,0,0);
	if(PlayerToPointStripped(1, playerid,1600.0018,1765.1306,-60.0662, cx,cy,cz)) SetPosEx(playerid,1600.4548,1760.7028,-60.5523,0,0,0);
	// Ascensor de FBI
	else if(PlayerToPointStripped(1, playerid,919.2597,-1020.9984,107.5781, cx,cy,cz)) SetPosEx(playerid,917.3611,-1004.4540,37.9829,165.2810,0,0);
	// Ascensor de FBI2
	else if(PlayerToPointStripped(1, playerid,917.3611,-1004.4540,37.9829, cx,cy,cz)) SetPosEx(playerid,919.2597,-1020.9984,107.5781,253.5660,0,0);
	// Casino Yakuza Entrada
	else if(PlayerToPointStripped(1, playerid,2019.3704,1007.8625,10.8203, cx,cy,cz)) SetPosEx(playerid,2019.0571,1018.2001,996.8750,87.7010,10,0);
	// Casino Yakuza Salida
	else if(PlayerToPointStripped(1, playerid,2019.0571,1018.2001,996.8750, cx,cy,cz)) SetPosEx(playerid,2019.3704,1007.8625,10.8203,93.1961,0,0);
	//Casino LCN Entrada
	else if(PlayerToPointStripped(1, playerid,2016.9799,1919.8507,12.3424, cx,cy,cz)) SetPosEx(playerid,1133.1649,-15.8272,1000.6797,358.4233,12,0);
	//Casino LCN Salida
	else if(PlayerToPointStripped(1, playerid,1133.1649,-15.8272,1000.6797, cx,cy,cz)) SetPosEx(playerid,2016.9799,1919.8507,12.3424,91.6527,0,0);
	//Casino-Club
	else if(PlayerToPointStripped(1, playerid,1143.7104,6.1954,1000.6797, cx,cy,cz)) SetPosEx(playerid,-2634.3232,1409.8407,906.4647,273.0276,3,0);
	//Club-Casino
	else if(PlayerToPointStripped(1, playerid,-2634.3232,1409.8407,906.4647, cx,cy,cz)) SetPosEx(playerid,1143.7104,6.1954,1000.6797,273.9676,12,0);
	// BOWLING ENTER
	else if(PlayerToPointStripped(1, playerid,1632.0132,-1172.9296,24.0781, cx,cy,cz)) SetPosEx(playerid,-2355.876464,917.654235,93.634971,0,0,0);
	// BOWLING EXIT
	else if(PlayerToPointStripped(1, playerid,-2355.876464,917.654235,93.634971, cx,cy,cz)) SetPosEx(playerid, 1631.8143,-1171.8892,24.0781,0,0,0);
	// 10GREEN ENTER
	else if(PlayerToPointStripped(1, playerid,2309.891601,-1643.565429,14.827047, cx,cy,cz)) SetPosEx(playerid,501.902038,-67.564384,998.757812,0,11,0);
	// 10GREEN EXIT
	else if(PlayerToPointStripped(1, playerid,501.902038,-67.564384,998.757812, cx,cy,cz)) SetPosEx(playerid, 2309.891601,-1643.565429,14.827047,20.0,0,0);
	// AMMU ENTER
	else if(PlayerToPointStripped(1, playerid,1368.842407,-1279.880737,13.546875, cx,cy,cz)) SetPosEx(playerid,315.810302,-143.586303,999.601562,0,7,0);
	// AMMU EXIT
	else if(PlayerToPointStripped(1, playerid,315.810302,-143.586303,999.601562, cx,cy,cz)) SetPosEx(playerid, 1368.842407,-1279.880737,13.546875,20.0,0,0);
	// VICTIM ENTER
	else if(PlayerToPointStripped(1, playerid,461.499267,-1500.973266,31.058967, cx,cy,cz)) SetPosEx(playerid,227.562377,-7.929605,1002.210937,0,5,0);
	// VICTIM EXIT
	else if(PlayerToPointStripped(1, playerid,227.562377,-7.929605,1002.210937, cx,cy,cz)) SetPosEx(playerid, 461.499267,-1500.973266,31.058967,20.0,0,0);
 // Biblioteca ENTER
	else if(PlayerToPointStripped(1, playerid,1546.6545,-1097.5780,25.0625, cx,cy,cz))
	{
        Pause(playerid);
		SetPosEx(playerid,911.5309,-1012.7484,14.6151,0,0,0);
		GText(playerid, "~w~Biblioteca", 5000, 1);
	}
	// Biblioteca EXIT
	else if(PlayerToPointStripped(1, playerid,911.5309,-1012.7484,14.6151, cx,cy,cz)) SetPosEx(playerid, 1546.6545,-1097.5780,25.0625,20.0,0,0);
// LSTV ENTER
	else if(PlayerToPointStripped(1, playerid,732.4431,-1350.7870,13.5000, cx,cy,cz)) ShowPlayerDialog(playerid, ENTER_LSTV, DIALOG_STYLE_LIST, "¿ Dónde desea ir ?", "LSTV Planta 1\tOficina\nLSTV Planta 2\tEstudio", "Ir", "Salir");
	// LSTV EXIT
	else if(PlayerToPointStripped(1, playerid,243.2710,302.7583,999.1343, cx,cy,cz) || PlayerToPointStripped(1, playerid,-2719.7854,519.2936,48.3752, cx,cy,cz)) SetPosEx(playerid, 732.4431,-1350.7870,13.5000,20.0,0,0);

// Ciclistas entrada
	else if(PlayerToPointStripped(1, playerid,-77.1084,-1136.6163,1.0781, cx,cy,cz))
	{

		SetPosEx(playerid,422.0919,2536.5906,10.0000,0,0,0);
	GText(playerid, "~w~Club Ciclista", 5000, 1);
SetPlayerInterior(playerid, 10);
	}

	// Ciclistas salida
	else if(PlayerToPointStripped(1, playerid,422.0919,2536.5906,10.0000, cx,cy,cz)) //
	{
        Pause(playerid);
      SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
		SetPosEx(playerid,-77.1084,-1136.6163,1.0781,0,0,0);
	GText(playerid, "~w~Los Santos", 5000, 1);
	}
// carniceria entrar
	else if(PlayerToPointStripped(1, playerid,2372.1367,2759.6951,10.8203, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~Carniceria de la tia Pepi", 5000, 1);
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid,964.8276,2160.0486,1011.0303);
		PlayerInfo[playerid][pInt] = 0;
	}

// carniceria salir
	else if(PlayerToPointStripped(1, playerid,964.8276,2160.0486,1011.0303, cx,cy,cz)) //
	{
        Pause(playerid);
SetPlayerInterior(playerid, 0);
SetPlayerVirtualWorld(playerid, 0);
		SetPosEx(playerid,2372.1367,2759.6951,10.8203,0,0,0);
	GText(playerid, "~w~Las Venturas", 5000, 1);
	}


	//LSPD Exit
	else if(PlayerToPointStripped(1, playerid,246.5325,62.4251,1003.6406, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1552.3231,-1674.6780,16.1953);
		PlayerInfo[playerid][pInt] = 0;
	}
	// HOSPITAL PLANTAS 2-3 ENTER
	else if(PlayerToPointStripped(1, playerid,-2665.0129,535.0582,48.0791, cx,cy,cz))
	{
	    Pause(playerid);
		SetPlayerPos(playerid,-2663.5913,533.6900,51.5451);
	}
	// HOSPITAL PLANTAS 2-3 EXIT
	else if(PlayerToPointStripped(1, playerid,-2663.5913,533.6900,51.5451, cx,cy,cz))
	{
		SetPlayerPos(playerid,-2665.0129,535.0582,48.0791);
	}
	// DMVTR ENTER
	else if(PlayerToPointStripped(1, playerid,275.0726,126.1257,1032.0173, cx,cy,cz))
	{
		SetPlayerPos(playerid,-1965.4487,779.9248,107.1754);
	}
	// DMVTR EXIT
	else if(PlayerToPointStripped(1, playerid,1165.5671,1344.7800,10.8125, cx,cy,cz))
	{
		SetPlayerPos(playerid,-2029.7664,-119.6192,1035.1719);
		SetPlayerInterior(playerid, 3);
	}
	// Acensor U7 ENTER
	else if(PlayerToPointStripped(1, playerid,2033.9985,-1401.9303,17.2931, cx,cy,cz)) SetPlayerPos(playerid,2067.3105,-1432.1187,48.3359);
	// Acensor U7 EXIT
	else if(PlayerToPointStripped(1, playerid,2067.3105,-1432.1187,48.3359, cx,cy,cz)) SetPlayerPos(playerid,2033.9985,-1401.9303,17.2931);
	// Dispatch ENTER
	else if(PlayerToPointStripped(1, playerid,-2185.8447,897.8077,96.9397, cx,cy,cz)) SetPlayerPos(playerid,-2193.9558,887.8521,96.9397);
	// Dispatch EXIT
	else if(PlayerToPointStripped(1, playerid,-2193.9558,887.8521,96.9397, cx,cy,cz)) SetPlayerPos(playerid,-2185.8447,897.8077,96.9397);
	else if(PlayerToPointStripped(1, playerid,2441.1465,2065.4824,10.8203, cx,cy,cz)) SetPosEx(playerid,681.7051,-451.1463,-25.6172, 0, 1, 0); //bar
	else if(PlayerToPointStripped(1, playerid,681.7051,-451.1463,-25.6172, cx,cy,cz)) SetPosEx(playerid,2441.1465,2065.4824,10.8203, 0, 0, 0); //bar exit
    // TAXI Office ENTER LS
	else if (PlayerToPointStripped(1.0, playerid,1752.5724,-1894.1763,13.5574, cx,cy,cz)) SetPosEx(playerid,-1837.1744,134.5490,15.1190, 0, 0, 0);

/////// Santi LCN ////

	else if (PlayerToPointStripped(1, playerid,1122.71,-2037.06,69.89, cx,cy,cz))
	{
		if(Mafia_Italiana(playerid))
		{
		    Pause(playerid);
			SetPosEx(playerid,1523.3448,-988.7369,1959.6600, 0, 0, 0);
			PlayAudioStreamForPlayer(playerid,"http://fulekicserkesz.wbl.sk/Godfather_-_Corleone_Theme.mp3");
		}
		else if(hqlock[ITA] == 0)
		{
		    Pause(playerid);
		    SetPosEx(playerid,1523.3448,-988.7369,1959.6600, 0, 0, 0);
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,1523.3448,-988.7369,1959.6600, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 0)
	{
		//LCN Exit
		StopAudioStreamForPlayer(playerid);
		SetPosEx(playerid, 1122.71,-2037.06,69.89,0 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}

////////////////////////////////////////////////


	// TAXI Office ENTER LV
	else if (PlayerToPointStripped(1.0, playerid,1055.1499,1307.5128,10.8203, cx,cy,cz)) SetPosEx(playerid,-1837.1744,134.5490,15.1190, 0, 0, 1);
	// TAXI Office EXIT
	else if (PlayerToPointStripped(1.0, playerid,-1837.1744,134.5490,15.1190, cx,cy,cz))
	{
	    if(GetPlayerVirtualWorld(playerid) == 0)
	    {
			SetPosEx(playerid,1752.5724,-1894.1763,13.5574, 0, 0, 0);
			GameTextForPlayer(playerid, "~w~unity", 5000, 1);
		}
		else if(GetPlayerVirtualWorld(playerid) == 1)
	    {
			SetPosEx(playerid,1055.1499,1307.5128,10.8203, 0, 0, 0);
			GameTextForPlayer(playerid, "~y~las venturas", 5000, 1);
		}
	}
	// Farmacia ENTER
	else if (PlayerToPointStripped(1.0, playerid,895.3104,-1664.9683,13.546, cx,cy,cz))
	{
		SetPosEx(playerid,663.1843,-573.4727,16.3359, 0, 0, 0);
		GameTextForPlayer(playerid, "~g~Farmacia ~r~+", 5000, 3);
	}
	// Lavanderia
	else if (PlayerToPointStripped(1.5, playerid, 1837.0604,-1417.3403,13.5625, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 3932.5288,-827.3693,1874.0156,0,0,0);
	}
	else if (PlayerToPointStripped(1.5, playerid, 3932.5288,-827.3693,1874.0156, cx,cy,cz)) SetPosEx(playerid, 1837.0604,-1417.3403,13.5625,0,0,0);
	//Misty/10 Green Toilets
	else if (PlayerToPointStripped(1.0, playerid,488.2531,-82.7632,998.7578, cx,cy,cz))
	{
		SetPlayerPos(playerid,2277.5942,-1139.8883,1050.8984);
		GameTextForPlayer(playerid, "~w~Restroom", 5000, 1);
		SetPlayerInterior(playerid,11);
		PlayerInfo[playerid][pInt] = 11;
	}
	else if(PlayerToPointStripped(1, playerid,2229.9011,-1721.2582,13.5613, cx,cy,cz))
	{//Ganton Gym
		GameTextForPlayer(playerid, "~w~gym", 5000, 1);
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,771.9399,-2.2574,1000.7292);
		PlayerInfo[playerid][pInt] = 5;
	}
	else if(PlayerToPointStripped(1, playerid,772.3594,-5.5157,1000.7286, cx,cy,cz))
	{//Some teleports are fucked up but they are working
		GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2225.6699,-1725.3134,13.5586);
		PlayerInfo[playerid][pInt] = 0;
	}

/////////////////////////////////// Donuts Entrada /////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,1567.9321,-1897.9972,13.5609, cx,cy,cz))
	{
	    SetPosEx(playerid, 377.3211,-193.3048,1000.6328,0,0,0);
	    SetPlayerInterior(playerid, 17);
 		GameTextForPlayer(playerid, "Donuts", 5000, 1);
		SetPlayerWalkingStyle(playerid, 0);
	}

/////////////////////////////////// Donuts Salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,377.3211,-193.3048,1000.6328, cx,cy,cz))
	{
	if(GetPlayerVirtualWorld(playerid) == 0)
	    {
	    SetPosEx(playerid, 1567.9321,-1897.9972,13.5609,0,0,0);
		GameTextForPlayer(playerid, "Los Santos", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
		}
        if(GetPlayerVirtualWorld(playerid) == 1)
	    {
	    SetPosEx(playerid, 1925.0188,-1864.5414,13.5597,0,0,0);
		GameTextForPlayer(playerid, "Los Santos", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
		}
  }
  /////////////////////////////////// Dildo Entrada /////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,1087.5924,-922.5757,43.3906, cx,cy,cz))
	{
	    SetPosEx(playerid, -100.1124,-24.3600,1000.7188,0,3,0);
	    SetPlayerInterior(playerid, 3);
 		GameTextForPlayer(playerid, "Sex Shoop", 5000, 1);
		SetPlayerWalkingStyle(playerid, 0);
	}

/////////////////////////////////// Dildo Salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,-100.1124,-24.3600,1000.7188, cx,cy,cz))
	{
	    SetPosEx(playerid, 1087.5924,-922.5757,43.3906,0,0,0);
		GameTextForPlayer(playerid, "Los Santos", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
  }
 /////////////////////////////////// casino gabriel Entrada /////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,1022.5776,-1121.4274,23.8723, cx,cy,cz))
	{
	    SetPosEx(playerid, 2233.7373,1713.8658,1012.2695,0,0,0);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 21);
 		GameTextForPlayer(playerid, "Casino", 5000, 1);
		SetPlayerWalkingStyle(playerid, 0);
	}

/////////////////////////////////// casino gabriel Salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid, 2233.7373,1713.8658,1012.2695, cx,cy,cz))
	{
	    SetPosEx(playerid, 1022.5776,-1121.4274,23.8723,0,0,0);
		GameTextForPlayer(playerid, "Los Santos", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
		}
/////////////////////////////////// El maldito negocio Entrada /////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,1925.0188,-1864.5414,13.5597, cx,cy,cz))
	{
	    SetPosEx(playerid, 377.3211,-193.3048,1000.6328,0,0,0);
	    SetPlayerInterior(playerid, 17);
	    SetPlayerVirtualWorld(playerid, 1);
 		GameTextForPlayer(playerid, "Donuts", 5000, 1);
		SetPlayerWalkingStyle(playerid, 0);
	}
   // Farmacia ENTER
	else if (PlayerToPointStripped(1.0, playerid,-2491.7339,2363.2793,10.2728, cx,cy,cz))
	{
		SetPosEx(playerid,663.1843,-573.4727,16.3359, 0, 0, 0);
		SetPlayerVirtualWorld(playerid, 1);
		GameTextForPlayer(playerid, "~g~Farmacia ~r~+", 5000, 3);
	}
	// Farmacia EXIT
	else if (PlayerToPointStripped(1.0, playerid,663.1843,-573.4727,16.3359, cx,cy,cz))
	{
	    if(GetPlayerVirtualWorld(playerid) == 0)
	    {
			SetPosEx(playerid,895.3104,-1664.9683,13.546, 0, 0, 0);
			GameTextForPlayer(playerid, "~g~Los Santos ~r~+", 5000, 3);
		}
		if(GetPlayerVirtualWorld(playerid) == 1)
	    {
			SetPosEx(playerid,-2491.7339,2363.2793,10.2728, 0, 0, 0);
			GameTextForPlayer(playerid, "~g~Barrio Premium ~r~+", 5000, 3);
		}

	}
/////////////////////////////////// El maldito negocio Salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,377.3211,-193.3048,1000.6328, cx,cy,cz))
	{
	    SetPosEx(playerid, 1567.9321,-1897.9972,13.5609,0,0,0);
		GameTextForPlayer(playerid, "Los Santos", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
	}
/////////////////////////////////// Tunel entrada /////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,1526.1118,-1740.3665,-22.5822, cx,cy,cz))
	{
 if(Gobierno(playerid))
 {
       SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerPos(playerid, 1526.0797,-1736.1464,-23.5770);
	    } else Message(playerid, COLOR_GRAD2, "No autorizado");
	}

/////////////////////////////////// tunel salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,1526.0797,-1736.1464,-23.5770, cx,cy,cz))
	{
       SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, 1526.1118,-1740.3665,-22.5822);
	}
 /////////////////////////////////// Tunel entrada /////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,1545.4865,-1741.2111,-23.4981, cx,cy,cz))
	{
        SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, 1559.6454,-1720.0007,6.2188);
	}

/////////////////////////////////// tunel salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,1559.6454,-1720.0007,6.2188, cx,cy,cz))
	{
        SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerPos(playerid, 1545.4865,-1741.2111,-23.4981);
	}
 /////////////////////////////////// Foro premium subida /////////////////////////////////

	else if(PlayerToPointStripped(2, playerid,-2384.8647,2216.1096,12.8594, cx,cy,cz))
	{
	    SetPlayerPos(playerid, -2385.6704,2215.8301,4.9844);
	}

/////////////////////////////////// Foro premium BAJADA //////////////////////////////////

	else if(PlayerToPointStripped(2, playerid,1030.0093,1012.9295,48.1328, cx,cy,cz))
	{
	    SetPlayerPos(playerid, 996.4258,1067.7837,10.8203);
	}
 /////////////////////////////////// alemana subida /////////////////////////////////

	else if(PlayerToPointStripped(2, playerid,2479.7000,1498.7773,10.8203, cx,cy,cz))
	{
	    SetPlayerPos(playerid, 2466.4976,1503.5673,18.9453);
	}

/////////////////////////////////// alemana BAJADA //////////////////////////////////

	else if(PlayerToPointStripped(2, playerid,2466.4976,1503.5673,18.9453, cx,cy,cz))
	{
	    SetPlayerPos(playerid, 2479.7000,1498.7773,10.8203);
	}
	/////////////////////////////////// Tony Montana Estadio Entrada /////////////////////////////////

	else if(PlayerToPointStripped(2, playerid,-2929.1001,471.2475,4.9141, cx,cy,cz))
	{
	    SetPlayerPos(playerid, -2925.9724,467.3102,5.3842);
	}

/////////////////////////////////// Tony Montana Estadio Salida //////////////////////////////////

	else if(PlayerToPointStripped(2, playerid,-2925.9724,467.3102,5.3842, cx,cy,cz))
	{
	    SetPlayerPos(playerid, -2929.1001,471.2475,4.9141);
	}
/////////////////////////////////// LSPD Entrada Reconocimiento/////////////////////////////////

 	else if(PlayerToPointStripped(1, playerid,225.5393,69.1785,1005.0391, cx,cy,cz))
	{
        GameTextForPlayer(playerid, "~w~Reconocimiento", 5000, 1);
        SetPlayerInterior(playerid, 6);
		SetPlayerPos(playerid,232.096,67.12,1005.04);
        PlayerInfo[playerid][pInt] = 6;
	}

/////////////////////////////////// LSPD Salida Reconocimiento //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,232.096,67.12,1005.04, cx,cy,cz))
	{
        GameTextForPlayer(playerid, "~w~Comisaria", 5000, 1);
		SetPlayerInterior(playerid, 6);
		GameTextForPlayer(playerid, "LSPD", 5000, 1);
        SetPlayerPos(playerid,225.5393,69.1785,1005.0391);
		PlayerInfo[playerid][pInt] = 6;
	}
//////////////////////////////////////// Iglesia //////////////////////////////////////////////////

else if(PlayerToPointStripped(1, playerid,2233.4822,-1333.4851,23.9816, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~Iglesia", 5000, 1);
		Pause(playerid);
		SetPlayerInterior(playerid, 18);
		SetPlayerPos(playerid,1466.0930,853.6067,-68.00);
		PlayerInfo[playerid][pInt] = 18;

	}
	else if(PlayerToPointStripped(1, playerid,1466.0930,853.6067,-68.00, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2233.4822,-1333.4851,23.9816);
		PlayerInfo[playerid][pInt] = 0;
	}
/////////////////////////////////// Motion Salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,-227.8032,1401.1753,27.7656, cx,cy,cz))
	{
	    SetPosEx(playerid, 1303.0094,-1131.5190,23.8281,0,0,0);
		GameTextForPlayer(playerid, "Los Santos", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
	}


/////////////////////////////////// The Pig Pen Entrada /////////////////////////////////

 	else if(PlayerToPointStripped(1, playerid,2421.5994,-1219.8439,25.5226, cx,cy,cz))
	{
	    SetPosEx(playerid, 1205.4116,-13.3220,1000.9219,0,0,0);
	    SetPlayerInterior(playerid, 2);
		GameTextForPlayer(playerid, "Pig Pen", 5000, 1);
		SetPlayerWalkingStyle(playerid, 0);
	}

/////////////////////////////////// The Pig Pen Salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,1205.4116,-13.3220,1000.9219, cx,cy,cz))
	{
	    SetPosEx(playerid, 2421.5994,-1219.8439,25.5226,0,0,0);
		GameTextForPlayer(playerid, "Los Santos", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
	}

/////////////////////////////////// Kenta Entrada /////////////////////////////////

 	else if(PlayerToPointStripped(1, playerid,512.0120,-1487.1361,14.5070, cx,cy,cz))
	{
	    SetPosEx(playerid, -794.9228,489.5780,1376.1953,0,0,0);
	    SetPlayerInterior(playerid, 1);
		GameTextForPlayer(playerid, "Restaurante Kenta", 5000, 1);
		SetPlayerWalkingStyle(playerid, 0);
	}

/////////////////////////////////// Kenta Salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,-794.9228,489.5780,1376.1953, cx,cy,cz))
	{
	    SetPosEx(playerid, 512.0120,-1487.1361,14.5070,0,0,0);
		GameTextForPlayer(playerid, "Los Santos", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
	}

/////////////////////////////////// Alhambra Entrada /////////////////////////////////

 	else if(PlayerToPointStripped(1, playerid,1878.0690,-1737.0540,13.3292, cx,cy,cz))
	{
	    SetPosEx(playerid, -2636.5510,1402.4657,906.4609,0,0,0);
	    SetPlayerInterior(playerid, 3);
		GameTextForPlayer(playerid, "Pleasure Domes", 5000, 1);
		SetPlayerWalkingStyle(playerid, 0);
	}

/////////////////////////////////// Alhambra Salida //////////////////////////////////

	else if(PlayerToPointStripped(1, playerid,-2636.5510,1402.4657,906.4609, cx,cy,cz))
	{
	    SetPosEx(playerid, 1878.0690,-1737.0540,13.3292,0,0,0);
		GameTextForPlayer(playerid, "Los Santos", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
	}
	// GARITO DROGA ENTER
	else if(PlayerToPointStripped(1, playerid,2447.89,-1962.84,13.55, cx,cy,cz))
	{
		SetPosEx(playerid,2569.8796,-1301.6450,1044.1250,0,2,0);
	}
	// GARITO DROGA EXIT
	else if(PlayerToPointStripped(1, playerid,2569.8796,-1301.6450,1044.1250, cx,cy,cz))
	{
		SetPosEx(playerid,2447.89,-1962.84,13.55,0,0,0);
	}
	//Casa Droga Enter
	else if(PlayerToPointStripped(1, playerid,-59.73925781,141.57812500,2.78918934, cx,cy,cz))
	{
	    if(!IsANarco(playerid)) return GText(playerid, "~r~Cerrado", 5000, 1);
		SetPosEx(playerid,2523.1343,-1286.0913,1054.6406,0,2,0);
	}
	// Casa DROGA EXIT
	else if(PlayerToPointStripped(1, playerid,2523.1343,-1286.0913,1054.6406, cx,cy,cz))
	{
		SetPosEx(playerid,-59.73925781,141.57812500,2.78918934,0,0,0);
	}
	// Elevator UP ^
	else if (PlayerToPointStripped(1, playerid,1599.2181,1757.7725,-60.5596, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 0)
	{
	    if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
	    {
			SetPosEx(playerid, 1156.1799,-1343.1420,26.6719, 180, 0, 0);
			GameTextForPlayer(playerid, "~w~azotea",5000,1);
		}
		else return GameTextForPlayer(playerid, "~r~solo personal!",5000,1);
	}
	// Elevator DOWN ^
	else if (PlayerToPointStripped(1, playerid,1156.1799,-1343.1420,26.6719, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 0)
	{
	        Pause(playerid);
			SetPosEx(playerid, 1599.2181,1757.7725,-60.5596, 0,0,0);
			GameTextForPlayer(playerid, "~r~hospital",5000,1);
	}
 // premium entrada ^
	else if (PlayerToPointStripped(2, playerid,816.1408,-1386.7759,13.6076, cx,cy,cz))
	{
	    if(PlayerInfo[playerid][pDonateT] >= 1)
	    {
	        Pause(playerid);
	        PlayAudioStreamForPlayer(playerid,"http://tegos.kz/new/mp3_full/Katy_Perry_-_Unconditionally.mp3");
			SetPosEx(playerid, 672.3542,-1472.3069,497.9464, 180, 1, 0);
			GameTextForPlayer(playerid, "~w~Lugar premium",5000,1);
		}
		else return GameTextForPlayer(playerid, "~r~solo premiums!",5000,1);
	}
	// Elevator DOWN ^
	else if (PlayerToPointStripped(2, playerid,672.3542,-1472.3069,497.9464, cx,cy,cz))
	{
            StopAudioStreamForPlayer(playerid);
			SetPosEx(playerid, 816.1408,-1386.7759,13.6076, 0,0,0);
			GameTextForPlayer(playerid, "~r~Los Santos",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2045.3928,-1908.0372,13.5469, cx,cy,cz))
	{
		//DMW
		Pause(playerid);
		SetPlayerPos(playerid, 2062.7327,-2214.6492,2664.6157);
		GameTextForPlayer(playerid, "~w~Centro de licencia",5000,1);
		SetPlayerFacingAngle(playerid, 180);
	}
	else if (PlayerToPointStripped(1, playerid,2062.7327,-2214.6492,2664.6157, cx,cy,cz))
	{
		//DMW Exit
		SetPlayerPos(playerid, 2046.8928,-1908.0372,13.5469);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		SetPlayerInterior(playerid,0);
		SetPlayerFacingAngle(playerid, 280);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1, playerid,1524.5724,-1677.8043,6.2188, cx,cy,cz))
	{
	    //PD Elevator
	    SetPlayerPos(playerid, 246.5928,87.7546,1003.6406);
	    GameTextForPlayer(playerid, "~w~Departamento Policial",5000,1);
	    SetPlayerInterior(playerid,6);
	    SetPlayerFacingAngle(playerid, 270);
		PlayerInfo[playerid][pInt] = 6;
	}
	else if (PlayerToPointStripped(1, playerid,1557.7257,-1675.2711,28.3955, cx,cy,cz))
	{
	    //PD Elevator
	    SetPlayerPos(playerid, 246.5928,87.7546,1003.6406);
	    GameTextForPlayer(playerid, "~w~Departamento Policial",5000,1);
	    SetPlayerInterior(playerid,6);
	    SetPlayerFacingAngle(playerid, 270);
		PlayerInfo[playerid][pInt] = 6;
	}
	// BINCO ENTER
	else if (PlayerToPointStripped(1, playerid,2244.4690,-1665.1603,15.4766, cx,cy,cz))
	{
	    SetPosEx(playerid,207.7209,-111.2660,1005.1328,0,15,0);
	    GText(playerid, "binco", 5000, 1);
	    Message(playerid, COLOR_GRAD2, "Utiliza /cropa para cambiar tu indumentaria");
	}
	// BINCO EXIT
	else if (PlayerToPointStripped(1, playerid,207.7209,-111.2660,1005.1328, cx,cy,cz))
	{
	    SetPosEx(playerid,2244.4690,-1665.1603,15.4766,0,0,0);
	    GText(playerid, "~w~los santos", 5000, 1);
	    Message(playerid, COLOR_GRAD2, "Utiliza /cropa para cambiar tu indumentaria");
	}
	else if (PlayerToPointStripped(1.5, playerid,1570.3828,-1333.8882,16.4844, cx,cy,cz))
	{
	    //Next to PD building
	    SetPlayerPos(playerid, 1545.0068,-1366.5094,327.2868);
	    GameTextForPlayer(playerid, "~w~Azotea edificio de Noticias",5000,1);
	    SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1.5, playerid,1548.8167,-1366.2247,326.2109, cx,cy,cz))
	{
	    //Next to PD building
	    SetPlayerPos(playerid, 1572.1115,-1332.5288,16.4844);
	    GameTextForPlayer(playerid, "~w~Edificio de noticias",5000,1);
	    SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (PlayerToPointStripped(1.5, playerid,-973.4909,1089.8402,1344.9849, cx,cy,cz))
	{
	    //Training Exit
	    SetPlayerPos(playerid, 246.4079,87.7789,1003.6406);
	    GameTextForPlayer(playerid, "~w~Edificio de noticias",5000,1);
	    SetPlayerInterior(playerid,6);
		PlayerInfo[playerid][pInt] = 6;
	}
	else if (PlayerToPointStripped(1.5, playerid,2025.3062,-1402.3466,17.2104, cx,cy,cz))
	{
		// U7 Enter
		SetPosEx(playerid,246.3536,107.3032,1003.2188,179.2000,10,0);
	    GameTextForPlayer(playerid, "~p~umbrella 7",5000,1);
	    MoveDynamicObject(u7d3, 244.86236572266, 110.86795043945, 1002.21875, 2.5);
	    Revisado[playerid] = 0;
	}
	else if (PlayerToPointStripped(1.5, playerid,246.3536,107.3032,1003.2188, cx,cy,cz))
	{
	    // U7 Exit
	    SetPosEx(playerid, 2025.3062,-1402.3466,17.2104,0,0,0);
	    GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	    Revisado[playerid] = 0;
	}
	else if (PlayerToPointStripped(0.5, playerid,305.6703,-141.7649,1004.0625, cx,cy,cz))
	{
	    // Accuracy's ENTER
	    SetPosEx(playerid, 304.2044,-141.8087,1004.0625,266.2744,7,0);
	    GText(playerid, "~y~Training Room",5000,1);
	}
	else if (PlayerToPointStripped(0.5, playerid,304.2044,-141.8087,1004.0625, cx,cy,cz))
	{
	    // Accuracy's EXIT
	    SetPosEx(playerid, 305.6703,-141.7649,1004.0625,93.4107,7,0);
	    GText(playerid, "~w~Ammunation",5000,1);
	}
	else if (PlayerToPointStripped(0.5, playerid,300.0952,-141.8644,1004.0625, cx,cy,cz))
	{
	    //PvP ENTER
	    SetPosEx(playerid, 299.1417,-141.8611,1004.0547,279.7479,7,0);
	    GText(playerid, "~r~Player vs player",5000,1);
	}
	else if (PlayerToPointStripped(0.5, playerid,299.1417,-141.8611,1004.0547, cx,cy,cz))
	{
	    //PvP EXIT
	    SetPosEx(playerid, 300.0952,-141.8644,1004.0625,92.3728,7,0);
	    GText(playerid, "~w~Ammunation",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1481.1450,-1771.7369,18.8485, cx,cy,cz))
	{
		//City hall LS
		Pause(playerid);
		SetPosEx(playerid, 1467.9763,-1789.3737,-18.4500,0,0,0);
		GameTextForPlayer(playerid, "~y~Ayuntamiento",5000,1);
	}
	// Club Vip
    else if (PlayerToPointStripped(1, playerid,1797.5867,-1578.8649,14.0855, cx,cy,cz))
    {
		if(PlayerInfo[playerid][pDonateT] >= 1 || ComproBoleto[playerid] == 1)
		{
            SetPlayerVirtualWorld(playerid, 2);
		    SetPlayerPos(playerid, 1803.0931,-1562.1166,-47.4675);
		    GameTextForPlayer(playerid, "~w~Club ~y~VIP",5000,6);
		    ComproBoleto[playerid] = 0;
		}
		else Message(playerid, COLOR_GRAD2, " Usted no compro el boleto para entrar al club.");
		return 1;
    }
    else if (PlayerToPointStripped(1, playerid,1803.0931,-1562.1166,-47.4675, cx,cy,cz))
    {
    	SetPlayerVirtualWorld(playerid, 0);
    	SetPlayerPos(playerid, 1797.5867,-1578.8649,14.0855);
    	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
    }
    // Guardia Nacional
    // Prision
    else if(PlayerToPointStripped(1, playerid,2729.6455,-2451.4712,17.5937, cx,cy,cz))
    {
		Pause(playerid);
        SetPosEx(playerid, 630.0692,839.3478,-90.2031, 0, 0, 0)
        SetPlayerVirtualWorld(playerid, 1);
		GText(playerid, "~g~P~w~rision~n~~w~Militar", 4000, 1);
        PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,-1276.0891,2484.5713,87.0876, cx,cy,cz))
    {
		Pause(playerid);
        SetPosEx(playerid, 630.0692,839.3478,-90.2031, 0, 0, 0)
        SetPlayerVirtualWorld(playerid, 2);
		GText(playerid, "~g~P~w~rision~n~~w~Al Qaeda", 4000, 1);
        PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,2473.4519,-2112.1450,13.5469, cx,cy,cz))
    {
		Pause(playerid);
        SetPosEx(playerid, 630.0692,839.3478,-90.2031, 0, 0, 0)
        SetPlayerVirtualWorld(playerid, 3);
		GText(playerid, "~g~P~w~rision~n~~w~Visage", 4000, 1);
        PlayerInfo[playerid][pInt] = 0;
	}
    else if(PlayerToPointStripped(1, playerid,2561.5166,1561.7197,10.8203, cx,cy,cz))
    {
		Pause(playerid);
        SetPosEx(playerid, 630.0692,839.3478,-90.2031, 0, 0, 0)
        SetPlayerVirtualWorld(playerid, 12);
		GText(playerid, "~g~P~w~rision~n~~w~Alemana ", 4000, 1);
        PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,632.7405,839.2097,-90.2031, cx,cy,cz))
	{
		if(GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPosEx(playerid, 2729.6455,-2451.4712,17.5937, 0, 0, 0)
        	GText(playerid, "~g~Guardia~n~~w~Nacional", 5000, 1);
        	PlayerInfo[playerid][pInt] = 0;
        }
        if(GetPlayerVirtualWorld(playerid) == 2) //
		{
			SetPosEx(playerid, -1276.0891,2484.5713,87.0876, 0, 0, 0)
        	GText(playerid, "~g~HQ~n~~w~Al Qaeda", 5000, 1);
        	PlayerInfo[playerid][pInt] = 0;
		}
		if(GetPlayerVirtualWorld(playerid) == 3) //
		{
			SetPosEx(playerid, 2473.4519,-2112.1450,13.5469, 0, 0, 0)
        	GText(playerid, "~g~HQ~n~~w~Visage", 5000, 1);
        	PlayerInfo[playerid][pInt] = 0;
		}
		if(GetPlayerVirtualWorld(playerid) == 12) //
		{
			SetPosEx(playerid, 2561.5166,1561.7197,10.8203, 0, 0, 0)
        	GText(playerid, "~g~HQ~n~~w~Alemana", 5000, 1);
        	PlayerInfo[playerid][pInt] = 0;
		}
    }
    else if(PlayerToPointStripped(1, playerid,2748.3799,-2451.3127,13.6671, cx,cy,cz)) //228.7534,1963.4094,18.1465
    {//Cuarteles
        Pause(playerid);
        SetPosEx(playerid, 2908.8123,2126.5759,0.3203, 0, 0, 0)
        GText(playerid, "~g~C~w~uarteles", 4000, 1);
        PlayerInfo[playerid][pInt] = 0;
    }
    else if(PlayerToPointStripped(1, playerid,2907.2405,2126.5566,0.3281, cx,cy,cz))
    {
        SetPosEx(playerid, 2748.3799,-2451.3127,13.6671, 0, 0, 0) //228.7534,1963.4094,18.1465
        GText(playerid, "~g~Guardia~n~~w~Nacional", 5000, 1);
        PlayerInfo[playerid][pInt] = 0;
    }
	//== Gym Las Venturas
	else if(PlayerToPointStripped(1, playerid,1968.6984,2295.8733,16.4559, cx,cy,cz))
	{
	    GText(playerid, "~w~GYM ~b~LV", 5000, 1);
	    SetPosEx(playerid, 773.8900,-47.7700,1000.5859, 0, 6, 0)
	    PlayerInfo[playerid][pInt] = 6;
	}
	else if(PlayerToPointStripped(1, playerid,774.1598,-50.4763,1000.5859, cx,cy,cz))
	{
	    GText(playerid, "~g~L~w~as ~g~V~w~enturas", 5000, 1);
	    SetPosEx(playerid, 1966.9120,2294.7424,16.4559, 0, 0, 0)
	    PlayerInfo[playerid][pInt] = 0;
	}
	//== Vice Bar
    else if(PlayerToPointStripped(1, playerid,2489.9966,2065.4270,10.8203, cx,cy,cz))
    {
        SetPosEx(playerid, 1212.4438,-27.5760,1000.9531, 0, 3, 0)
        GText(playerid, "~w~Vice ~r~Bar", 5000, 1);
        PlayerInfo[playerid][pInt] = 0;
	}
	else if(PlayerToPointStripped(1, playerid,1212.0148,-25.8768,1000.9531, cx,cy,cz))
	{
        SetPosEx(playerid, 2490.3801,2062.8562,10.8203, 0, 0, 0)
        GText(playerid, "~g~L~w~as ~g~V~w~enturas", 5000, 1);
        PlayerInfo[playerid][pInt] = 0;
    }
   	//peaje caseta
	else if(PlayerToPointStripped(1, playerid,1745.8348,506.3512,28.6844, cx,cy,cz)) SetPosEx(playerid, 1746.6254,506.0255,28.6844, 0, 0, 0)
	else if(PlayerToPointStripped(1, playerid,1746.6254,506.0255,28.6844, cx,cy,cz)) SetPosEx(playerid, 1745.8348,506.3512,28.6844, 0, 0, 0)
	else if(PlayerToPointStripped(1, playerid,1723.2781,514.7321,28.6539, cx,cy,cz)) SetPosEx(playerid, 1722.5691,514.9397,28.6560, 0, 0, 0)
	else if(PlayerToPointStripped(1, playerid,1722.5691,514.9397,28.6560, cx,cy,cz)) SetPosEx(playerid, 1723.2781,514.7321,28.6539, 0, 0, 0)
 	else if(PlayerToPointStripped(1, playerid,2233.4822,-1333.4851,23.9816, cx,cy,cz))
	{//iglesia
		Pause(playerid)
        SetPosEx(playerid, 1465.0500,853.8983,-68.1137, 0, 0, 0)
	}
	else if(PlayerToPointStripped(1, playerid,1465.0500,853.8983,-68.1137, cx,cy,cz)) SetPosEx(playerid, 2233.4822,-1333.4851,23.9816, 0, 0, 0)

	//City hall EXIT
	else if (PlayerToPointStripped(1, playerid,1467.9763,-1789.3737,-18.4500, cx,cy,cz))
	{
		if(GetPlayerVirtualWorld(playerid) == 0)
		{
		    Pause(playerid);
		    SetPosEx(playerid, 1481.1450,-1771.7369,18.8485,0,0,0);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		}
		else if(GetPlayerVirtualWorld(playerid) == 1)
		{
		    SetPosEx(playerid, 1672.870361, 1447.974975, 10.787118,0,0,0);
			GameTextForPlayer(playerid, "~w~los santos",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,154.2457,-1946.2103,5.1346, cx,cy,cz)) SetPosEx(playerid,154.1186,-1949.6292,47.8750,1.4819,0,0);
	else if (PlayerToPointStripped(1, playerid,154.1186,-1949.6292,47.8750, cx,cy,cz)) SetPosEx(playerid,154.2457,-1946.2103,5.1346,1.4819,0,0);
	else if (PlayerToPointStripped(1, playerid,1833.512939, -1842.450073, 13.578125, cx,cy,cz))
	{
		// 24/7 1 Enter Cerca del negocio D:
		SetPosEx(playerid, -25.570781, -141.143249, 1003.546875, 3.118535, 16, 0);
		GameTextForPlayer(playerid, "~r~~h~24 ~g~~h~7",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,-25.570781, -141.143249, 1003.546875, cx,cy,cz))
	{
		// 24/7 1 Exit
		SetPosEx(playerid, 1833.512939, -1842.450073, 13.578125, 268.009368, 0, 0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1352.232055, -1758.937500, 13.507812, cx,cy,cz))
	{
		// 24/7 2 Enter
		SetPosEx(playerid, -26.896020, -57.764526, 1003.546875, 357.141845, 6, 0);
  		GameTextForPlayer(playerid, "~r~~h~24 ~g~~h~7",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,-26.896020, -57.764526, 1003.546875, cx,cy,cz))
	{
		// 24/7 2 Exit
		SetPosEx(playerid, 1352.232055, -1758.937500, 13.507812, 358.105255,0, 0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1315.636962, -898.366149, 39.578125, cx,cy,cz))
	{
		// 24/7 3 Enter
		SetPosEx(playerid,  -27.485527, -31.096693, 1003.557250, 0.588506, 4, 0);
		GameTextForPlayer(playerid, "~r~~h~24 ~g~~h~7",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,-27.485527, -31.096693, 1003.557250, cx,cy,cz))
	{
		// 24/7 3 Exit
		SetPosEx(playerid, 1315.636962, -898.366149, 39.578125, 182.636932,0, 0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
	}
	//24-7 [las Venturas]
	else if (PlayerToPointStripped(1, playerid,-2388.9241,2367.7637,8.3421, cx,cy,cz)) // 1er 24-7
	{
	    SetPosEx(playerid, -25.9779,-188.2599,1003.5469,2.1022,17,0);
	    GameTextForPlayer(playerid, "~y~24-7",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,-25.9779,-188.2599,1003.5469, cx,cy,cz)) // 1er 24-7 salida
	{
	    SetPosEx(playerid, -2388.9241,2367.7637,8.3421,99.4110,0,0);
	    GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1578.2845,-1809.9559,13.3465, cx,cy,cz)) // 2do 24-7
	{
	    SetPosEx(playerid, 5.9366,-31.7583,1003.5494,5.7563,10,0);
	    GameTextForPlayer(playerid, "~y~24-7",5000,1);
	}
    else if (PlayerToPointStripped(1, playerid,5.9366,-31.7583,1003.5494, cx,cy,cz)) // 2do 24-7 salida
	{
	    SetPosEx(playerid, 1578.2845,-1809.9559,13.3465,261.9651,0,0);
	    GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2247.6543,2396.3069,10.8203, cx,cy,cz)) // 3er 24-7
	{
	    SetPosEx(playerid, -31.1186,-92.0091,1003.5469,359.2649,18,0);
	    GameTextForPlayer(playerid, "~y~24-7",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,-31.1186,-92.0091,1003.5469, cx,cy,cz)) // 3er 24-7
	{
	    SetPosEx(playerid, 2247.6543,2396.3069,10.8203,5.8450,0,0);
	    GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
	}
 	//Int ayunta LV
	else if (PlayerToPointStripped(1, playerid,2364.2021,2377.5361,10.8203, cx,cy,cz)) //
	{
	    SetPlayerVirtualWorld(playerid, 3);
	    SetPlayerPos(playerid, 2339.7661,2404.6941,-77.7784);
	    GameTextForPlayer(playerid, "~b~Ayuntamiento",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2339.7661,2404.6941,-77.7784, cx,cy,cz)) //
	{
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, 2364.2021,2377.5361,10.8203);
	    GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
	}
	//Tienda de Ropa [LV] [2]
	else if (PlayerToPointStripped(1, playerid,1657.0188,1733.1072,10.8281, cx,cy,cz)) //
	{
	    SetPosEx(playerid, 204.4261,-168.5780,1000.5234,359.4101,14,0);
	    Message(playerid, COLOR_GRAD2, " Use /cropa o /accesorios para cambiar tu vestimenta");
	    GameTextForPlayer(playerid, "~g~Tienda~n~de Ropa",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,204.4261,-168.5780,1000.5234, cx,cy,cz)) //
	{
	    SetPosEx(playerid, 1657.0188,1733.1072,10.8281,86.5128,0,0);
	    GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
	}
	// Alhambra LS
	else if(PlayerToPointStripped(1, playerid,1836.4064,-1682.4403,13.3493, cx,cy,cz))
	{
	    SetPosEx(playerid, 493.3891,-22.7212,1000.6797,0,17,0);
		GameTextForPlayer(playerid, "~h~~p~Al~r~~h~ham~h~~p~bra", 5000, 1);
		SetPlayerWalkingStyle(playerid, 0);
	}
	// Alhambra Exit
	else if(PlayerToPointStripped(1, playerid,493.7739,-23.9849,1000.6797, cx,cy,cz))
	{
	    SetPosEx(playerid, 1836.4064,-1682.4403,13.3493,0,0,0);
		GameTextForPlayer(playerid, "~h~~p~Al~r~~h~ham~h~~p~bra", 5000, 1);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
	}
	// Banco ENTER
	else if (PlayerToPointStripped(1, playerid,299.9359,-1612.0057,33.1292, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 2396.4661,2461.1394,-18.9096,0, 0, 0);
		GText(playerid, "~w~Banco", 5000, 1);
	}
	// Banco EXIT
	else if (PlayerToPointStripped(1, playerid,2396.4661,2461.1394,-18.9096, cx,cy,cz))
	{
	    SetPosEx(playerid, 299.9359,-1612.0057,33.1292,0, 0, 0);
		GText(playerid, "~w~los santos", 5000, 1);
	}
	else if (PlayerToPointStripped(1, playerid,2425.9856,1541.0057,-70.6681, cx,cy,cz)) SetPosEx(playerid, 2426.7837,1541.2019,-70.6681,0, 0, 0);
	else if (PlayerToPointStripped(1, playerid,2426.7837,1541.2019,-70.6681, cx,cy,cz)) SetPosEx(playerid, 2425.9856,1541.0057,-70.6681,0, 0, 0);
	// Hitman ENTER
	else if (PlayerToPointStripped(1, playerid,2197.5725,-2220.9834,13.5547, cx,cy,cz))
	{
		if(Hitman(playerid))
		{
		    SetPosEx(playerid, -2175.8762,886.8079,96.9397,0.0000,0,0);
			GameTextForPlayer(playerid, "~w~Hitman",5000,1);
		}
		else if(hqlock[HIT] == 0)
		{
		    SetPosEx(playerid, -2175.8762,886.8079,96.9397,0.0000,0,0);
			GameTextForPlayer(playerid, "~w~Hitman",5000,1);
		}
		else return GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2197.5725,-2220.9834,13.5547, cx,cy,cz)) SetPosEx(playerid, -2175.8762,886.8079,96.9397,0, 0, 0);
	// Hitman exit
	else if (PlayerToPointStripped(1, playerid,-2175.8762,886.8079,96.9397, cx,cy,cz)) SetPosEx(playerid, 2197.5725,-2220.9834,13.5547,0, 0, 0);

//////////////////////////////////// HQ Cripz //////////////////////////////////////////////////////////////

else if (PlayerToPointStripped(1, playerid,2260.429931,-1019.969970,59.279998, cx,cy,cz))
	{
		if(Team_Cripz(playerid))
		{
		    SetPosEx(playerid, -285.899993,1470.800048,1084.300048,0.0000,15,0);
			GameTextForPlayer(playerid, "~w~Cripz",5000,1);
		}
		else if(hqlock[HIT] == 0)
		{
		    SetPosEx(playerid, -285.899993,1470.800048,1084.300048,0.0000,15,0);
			GameTextForPlayer(playerid, "~w~Cripz",5000,1);
		}
		else return GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2260.429931,-1019.969970,59.279998, cx,cy,cz)) SetPosEx(playerid, -285.899993,1470.800048,1084.300048,0, 15, 0);
	// Cripz exit
	else if (PlayerToPointStripped(1, playerid,-285.899993,1470.800048,1084.300048, cx,cy,cz)) SetPosEx(playerid, 2260.429931,-1019.969970,59.279998,0, 0, 0);

/////////////////////////////////////// HQ Triadas ////////////////////////////////////////////////////////////

else if (PlayerToPointStripped(1, playerid,725.6910,-1440.3323,13.5391, cx,cy,cz))
	{
		if(TriadasTeam(playerid))
		{
		    SetPosEx(playerid, 2324.3738,-1149.4618,1050.7101,0.0000,12,0);
			GameTextForPlayer(playerid, "~w~Triadas",5000,1);
		}
		else if(hqlock[HIT] == 0)
		{
		    SetPosEx(playerid, 2324.3738,-1149.4618,1050.7101,0.0000,12,0);
			GameTextForPlayer(playerid, "~w~Triadas",5000,1);
		}
		else return GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2260.429931,-1019.969970,59.279998, cx,cy,cz)) SetPosEx(playerid, 2324.3738,-1149.4618,1050.7101,0.0000,12,0);
	// Cripz exit
	else if (PlayerToPointStripped(1, playerid,2324.3738,-1149.4618,1050.7101, cx,cy,cz)) SetPosEx(playerid, 725.6910,-1440.3323,13.5391,0, 0, 0);


////////////////////////////////////////HQ Blood///////////////////////////////////////////////////////////////

else if (PlayerToPointStripped(1, playerid,1939.2191,-1114.4823,27.4523, cx,cy,cz))
	{
		if(Team_Blood(playerid))
		{
		    SetPosEx(playerid, 83.1090,1322.2809,1083.8662,0.0000,9,4);
			GameTextForPlayer(playerid, "~w~Blood",5000,1);
		}
		else if(hqlock[BLO] == 0)
		{
		    SetPosEx(playerid, 83.1090,1322.2809,1083.8662,0.0000,9,4);
			GameTextForPlayer(playerid, "~w~Blood",5000,1);
		}
		else return GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1939.2191,-1114.4823,27.4523, cx,cy,cz)) SetPosEx(playerid, 83.1090,1322.2809,1083.8662,0, 9, 4);
	// Cripz exit
	else if (PlayerToPointStripped(1, playerid,83.1090,1322.2809,1083.8662, cx,cy,cz)) SetPosEx(playerid, 1939.2191,-1114.4823,27.4523,0, 0, 0);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



	// FBI ENter
	else if (PlayerToPointStripped(2, playerid,913.8191,-1004.3729,37.9846, cx,cy,cz)){
	Pause(playerid);
	SetPosEx(playerid,239.01,140.01,1003.02,0,3,0);}
	// Fbi exit
	else if (PlayerToPointStripped(2, playerid,239.01,140.01,1003.02, cx,cy,cz)) SetPosEx(playerid, 913.8191,-1004.3729,37.9846,0, 0, 0);
	//Dani entrada
    else if (PlayerToPointStripped(1, playerid,793.9489,1687.0396,5.2813, cx,cy,cz)) SetPosEx(playerid, 804.5389,1688.2112,-10.7863,0, 0, 0);
	//Dani Salida
	else if (PlayerToPointStripped(1, playerid,801.8858,1688.3055,-10.7863, cx,cy,cz)) SetPosEx(playerid, 793.9489,1687.0396,5.2813,0, 0, 0);
	// Fbi garage [adentro]
	else if (PlayerToPointStripped(2, playerid,288.58,167.71,1007.17, cx,cy,cz)) SetPosEx(playerid,913.12,-1039.47,31.90,0, 0, 0);
	//afuera
	else if (PlayerToPointStripped(1, playerid,913.12,-1039.47,31.90, cx,cy,cz)) SetPosEx(playerid,288.58,167.71,1007.17,0, 3, 0);
	else if (PlayerToPointStripped(1, playerid,1658.4622,2200.2151,10.8203, cx,cy,cz))
	{
		//Meca ENTER
		if(Team_Mecanicos(playerid))
		{
		    SetPosEx(playerid, -1532.5659,307.7570,53.5650,268.0867,0,0);
			GameTextForPlayer(playerid, "~w~taller",5000,1);
		}
		else if(hqlock[MEC] == 0)
		{
		    SetPosEx(playerid, -1532.5659,307.7570,53.5650,268.0867,0,0);
			GameTextForPlayer(playerid, "~w~taller",5000,1);
		}
		else return GameTextForPlayer(playerid, "~r~cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,-1532.5659,307.7570,53.5650, cx,cy,cz))
	{
		//Meca EXIT
		SetPosEx(playerid, 1658.4622,2200.2151,10.8203,173.7734, 0,0);
		GameTextForPlayer(playerid, "~w~las venturas",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1968.727050, 2295.718750, 16.455863, cx,cy,cz))
	{
		// Gym Enter
		SetPosEx(playerid, 774.044372, -78.846015, 1000.662780, 175,7,0);
		GameTextForPlayer(playerid, "~r~Below the belt",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,774.044372, -78.846015, 1000.662780, cx,cy,cz))
	{
		// Gym Exit
		SetPosEx(playerid, 1968.727050, 2295.718750, 16.455863, 175, 0,0);
		GameTextForPlayer(playerid, "~w~las venturas",5000,1);
	}
	// Autoscuela ENTER
	else if (PlayerToPointStripped(1, playerid,1165.4834,1346.0511,10.9219, cx,cy,cz))
	{
		SetPosEx(playerid, 1165.5952,1344.7820,10.8125,0,0,0);
		GameTextForPlayer(playerid, "~w~circuito",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1165.5952,1344.7820,10.8125, cx,cy,cz))
	{
		SetPosEx(playerid, 1165.4834,1346.0511,10.9219,0,0,0);
		GameTextForPlayer(playerid, "~w~autoescuela",5000,1);
	}
	// -=========================== FOOD PLACES SA ===========================- //
	else if (PlayerToPointStripped(1, playerid,364.7064,-11.3221,1001.8516, cx,cy,cz) && GetPlayerInterior(playerid) == 9)
	{
		SetPosEx(playerid, 928.6895,-1353.0563,13.3438,89.7594,0,0);
	    GText(playerid, "~w~Los santos", 5000, 1);
	}
	else if (PlayerToPointStripped(1, playerid,928.6895,-1353.0563,13.3438, cx,cy,cz))
	{
		// CBELL ENTER LS
		SetPosEx(playerid, 364.7064,-11.3221,1001.8516,357.6383, 9, 0);
		GameTextForPlayer(playerid, "~h~~y~Clukin ~w~bell",5000,1);
		SetPlayerShopName(playerid,"FDCHICK");
	}
	else if (PlayerToPointStripped(1, playerid,363.1719,-74.8738,1001.5078, cx,cy,cz) && GetPlayerInterior(playerid) == 10)
	{
		SetPosEx(playerid, 810.6635,-1616.1995,13.5469,267.7108,0,0);
	    GText(playerid, "~w~Los santos", 5000, 1);
	}
	else if (PlayerToPointStripped(1, playerid,810.6635,-1616.1995,13.5469, cx,cy,cz))
	{
		// BSHOT ENTER LS
		SetPosEx(playerid,363.1719,-74.8738,1001.5078,314.0846, 10, 0);
		GameTextForPlayer(playerid, "~w~burger~b~~h~shot",5000,1);
		SetPlayerShopName(playerid,"FDBURG");
	}
	else if (PlayerToPointStripped(1, playerid,372.3216,-133.2976,1001.4922, cx,cy,cz) && GetPlayerInterior(playerid) == 5)
	{
		SetPosEx(playerid, 2105.2844,-1806.5475,13.5547,90.9893,0,0);
	    GText(playerid, "~w~Los santos", 5000, 1);
	}
	else if (PlayerToPointStripped(1, playerid,2105.2844,-1806.5475,13.5547, cx,cy,cz))
	{
		// PIZZA STACK ENTER LS
		SetPosEx(playerid,372.3216,-133.2976,1001.4922, 0, 5, 0);
		GameTextForPlayer(playerid, "~w~pizza~y~stack",5000,1);
		SetPlayerShopName(playerid,"FDPIZA");
	}
	// -=========================== HQ Locks ========================- //
	// Johnson House - GS HQ
	else if (PlayerToPointStripped(1, playerid,2495.3481,-1691.1355,14.7656, cx,cy,cz))
	{
		if(Team_Groove(playerid))
		{
			SetPosEx(playerid, 2496.0061,-1693.5201,1014.7422, 181, 3, 1);
			GameTextForPlayer(playerid, "~g~Groove Street HQ",5000,1);
		}
		else if(hqlock[GS] == 0)
		{
		    SetPosEx(playerid, 2496.0061,-1693.5201,1014.7422, 181, 3, 1);
			GameTextForPlayer(playerid, "~g~Groove Street HQ",5000,1);
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,2496.0039,-1692.2004,1014.7422, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 1)
	{
		//GS Exit
		SetPosEx(playerid, 2495.3718,-1688.8561,14.0673,1 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}
	// Sureños 13 HQ
	else if (PlayerToPointStripped(1, playerid,1899.3693,-2003.9104,13.5469, cx,cy,cz))
	{
		if(Team_Hermandad(playerid))
		{
			SetPosEx(playerid, 2468.6663,-1698.2738,1013.5078, 181, 2, 1);
			GameTextForPlayer(playerid, "~b~Surenos 13 HQ",5000,1);
		}
		else if(hqlock[LH] == 0)
		{
		    SetPosEx(playerid, 2468.6663,-1698.2738,1013.5078, 181, 2, 1);
			GameTextForPlayer(playerid, "~b~Surenos 13 HQ",5000,1);
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,2468.6663,-1698.2738,1013.5078, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 1)
	{
		//LH Exit
		SetPosEx(playerid, 1899.3693,-2003.9104,13.5469,86.7545,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}

	///////////////////////////// Latin Kings HQ /////////////////////////////////////
	else if (PlayerToPointStripped(1, playerid,2628.5281,-1067.8455,69.6127, cx,cy,cz))
	{
		if(Team_LK(playerid))
		{
			SetPosEx(playerid, 260.9743,1237.6493,1084.2578, 181, 9, 50);
			GameTextForPlayer(playerid, "~y~Latin Kings HQ",5000,1);
		}
		else if(hqlock[LK] == 0)
		{
		    SetPosEx(playerid, 260.9743,1237.6493,1084.2578, 181, 9, 50);
			GameTextForPlayer(playerid, "~y~Latin Kings HQ",5000,1);
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,260.9743,1237.6493,1084.2578, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 50)
	{
		//LK Exit
		SetPosEx(playerid, 2628.5281,-1067.8455,69.6127,1 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}

	//////////////////////////////// Latin Kings Almacen ////////////////////////////////////

	else if (PlayerToPointStripped(1, playerid,2613.3953,-1065.7686,69.9656, cx,cy,cz))
	{
		if(Team_LK(playerid))
		{
			SetPosEx(playerid, 620.3647,-119.8322,998.8494, 181, 3, 50);
			GameTextForPlayer(playerid, "~y~Latin Kings Almacen",5000,1);
		}
		else if(hqlock[LK] == 0)
		{
		    SetPosEx(playerid, 620.3647,-119.8322,998.8494, 181, 3, 50);
			GameTextForPlayer(playerid, "~y~Latin Kings Almacen",5000,1);
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,620.3647,-119.8322,998.8494, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 50)
	{
		//LK Exit
		SetPosEx(playerid, 2613.3953,-1065.7686,69.9656,1 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}


    // Capone

	else if (PlayerToPointStripped(2, playerid,1680.9414,755.1716,11.5805, cx,cy,cz))
	{
		if(Mafia_Capone(playerid))
		{
			SetPosEx(playerid, 1678.7639,750.9521,3.8977,356.9969, 5, 0);
			GameTextForPlayer(playerid, "~w~Los 14 diamantes negros hq",5000,1);
		}
		else if(hqlock[CAP] == 0)
		{
        	SetPosEx(playerid, 1678.7639,750.9521,3.8977,356.9969, 5, 0);
			GameTextForPlayer(playerid, "~w~Los 14 diamantes negros hq",5000,1);
        }
        else
		{
		GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,1678.7639,750.9521,3.8977, cx,cy,cz))
	{
		//LK Exit
		SetPosEx(playerid, 1680.9414,755.1716,11.5805,0 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
	}
	//ALEMANA
    else if (PlayerToPointStripped(2, playerid,2481.4021,1525.6007,11.7471, cx,cy,cz))
	{
		if(Mafia_Alemana(playerid))
		{
			SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 0);
			GameTextForPlayer(playerid, "~w~Familia Alemana HQ",5000,1);
			SetPlayerVirtualWorld(playerid, 12);
		}
		else if(hqlock[CAP] == 0)
		{
        	SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 0);
			GameTextForPlayer(playerid, "~w~Familia Alemana HQ",5000,1);
			SetPlayerVirtualWorld(playerid, 12);
        }
        else
		{
		GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
    else if (PlayerToPointStripped(1, playerid,1260.8531,-785.5576,1091.9063, cx,cy,cz))
	{
		if(GetPlayerVirtualWorld(playerid) == 3) //
		{
			SetPosEx(playerid, 2481.4451,1525.6948,11.7297,0 ,0 ,0); // Salida Capone
			GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
		}
		if(GetPlayerVirtualWorld(playerid) == 5)
		{
			SetPosEx(playerid, 691.2953,-1275.7925,13.5605,0 ,0 ,0); // Salida Rusos
			GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		}
		if(GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPosEx(playerid, -1336.0488,2509.7566,87.5861,0 ,0 ,0); // Salida Al Qaeda
			GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
		}
		if(GetPlayerVirtualWorld(playerid) == 2)
		{
			SetPosEx(playerid, 2671.8694,-2112.4568,14.2702,0 ,0 ,0); // Salida Españoles
			GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		}
		if(GetPlayerVirtualWorld(playerid) == 12)
		{
			SetPosEx(playerid, 2481.4021,1525.6007,11.7471,0 ,0 ,0); // Salida Alemanes
			GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
		}
	}
	//////////////////////////////////////////////////////////////////////////////////////////
	// Russian HQ
	else if (PlayerToPointStripped(1, playerid,691.2953,-1275.7925,13.5605, cx,cy,cz))
	{
		if(Mafia_Rusa(playerid))
		{
			SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 5);
			SetPlayerVirtualWorld(playerid, 5);
			GameTextForPlayer(playerid, "~w~familia rusa hq",5000,1);
		}
		else if(hqlock[RUS] == 0)
		{
		    SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 5);
            SetPlayerVirtualWorld(playerid, 5);
			GameTextForPlayer(playerid, "~w~familia rusa hq",5000,1);
            }
		else
		{
		    GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}

	    else if (PlayerToPointStripped(1, playerid,1260.8531,-785.5576,1091.9063, cx,cy,cz))
	{
		//Exit MaddDog
		if(GetPlayerVirtualWorld(playerid) == 5)
		{
			SetPosEx(playerid, 691.2953,-1275.7925,13.5605,0 ,0 ,0);
			GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		}
	}
	// Russian HQ Terraza
	else if (PlayerToPointStripped(1, playerid,725.5151,-1276.4104,13.6484, cx,cy,cz))
	{
		if(Mafia_Rusa(playerid))
		{
			SetPosEx(playerid, 718.0347,-1276.3741,17.6484,264.6607, 0, 0);
		}
		else if(hqlock[RUS] == 0)
		{
		    SetPosEx(playerid, 718.0347,-1276.3741,17.6484,264.6607, 0, 0);
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,718.0347,-1276.3741,17.6484, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 0)
	{
		//RUS Exit
		SetPosEx(playerid, 725.5151,-1276.4104,13.6484,0 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}
	// Al Qaeda

	else if (PlayerToPointStripped(1, playerid,-1336.0061,2509.8330,87.5935, cx,cy,cz))
	{
		if(Mafia_Alqaeda(playerid))
		{
			SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 1);
			SetPlayerVirtualWorld(playerid, 1);
			GameTextForPlayer(playerid, "~w~Al Qaeda hq",5000,1);
		}
		else if(hqlock[ALQ] == 0)
		{
		    SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 1);
            SetPlayerVirtualWorld(playerid, 1);
			GameTextForPlayer(playerid, "~w~Al Qaeda hq",5000,1);
            }
		else
		{
		    GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}

	    else if (PlayerToPointStripped(1, playerid,1260.8531,-785.5576,1091.9063, cx,cy,cz))
	{
		//Exit MaddDog
		if(GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPosEx(playerid,1260.8531,-785.5576,1091.9063,0 ,0 ,0);
			GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,2671.8694,-2112.4568,14.2702, cx,cy,cz))
	{
		if(Mafia_Espanola(playerid))
		{
			SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 2);
			SetPlayerVirtualWorld(playerid, 2);
			GameTextForPlayer(playerid, "~w~Mafia Visage HQ",5000,1);
		}
		else if(hqlock[ESP] == 0)
		{
		    SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 2);
            SetPlayerVirtualWorld(playerid, 2);
			GameTextForPlayer(playerid, "~w~Mafia Visage HQ",5000,1);
            }
		else
		{
		    GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
	// Yakuza

	else if (PlayerToPointStripped(1, playerid,1259.6372,-785.5560,92.0313, cx,cy,cz))
	{
		if(Mafia_Yakuza(playerid))
		{
			SetPosEx(playerid, 2317.9177,-1026.7655,1050.2178,0, 9, 2);
			SetPlayerVirtualWorld(playerid, 71);
		}
		else if(hqlock[YAK] == 0)
		{
        	SetPosEx(playerid, 2317.9177,-1026.7655,1050.2178,0, 9, 2);
        	SetPlayerVirtualWorld(playerid, 71);
        }
        else
		{
		GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
		}
	}
	else if (PlayerToPointStripped(1, playerid,2317.9177,-1026.7655,1050.2178, cx,cy,cz))
	{
		//Exit MaddDog
		if(GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPosEx(playerid, -683.9296,939.5487,13.6328,0 ,0 ,0);
			GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		}
        else if(GetPlayerVirtualWorld(playerid) == 3) // Salida Capone
		{
			SetPosEx(playerid, 2561.3613,1561.7455,10.8203,0 ,0 ,0);
			GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		}
		else if(GetPlayerVirtualWorld(playerid) == 5)
		{
			SetPosEx(playerid, 691.2953,-1275.7925,13.5605,1 ,0 ,0);
			GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		}
		else if(GetPlayerVirtualWorld(playerid) == 71)
		{
			SetPosEx(playerid, 1259.6372,-785.5560,92.0313,1 ,0 ,0);
			GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		}
	}
	return 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////
public ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
	return 1;
}

stock strvalEx( const string[] ) // fix for strval-bug with > 50 letters.
{
	// written by mabako in less than a minute :X
	if( strlen( string ) >= 50 ) return 0; // It will just return 0 if the string is too long
	return strval(string);
}

public CheckCarHealth()
{
    new string[128];
    new sendername[MAX_PLAYER_NAME];
    for (new i=0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
        {
             new Float:health;
             GetVehicleHealth(GetPlayerVehicleID(i),health);
             new newcar = GetPlayerVehicleID(i);
             if (health <= 500 && !IsABike(newcar) && !IsAPlane(newcar))
             {
                 if(engineOn[GetPlayerVehicleID(i)] == 1)
                 {
                    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
                    {
                        new engine,lights,alarm,doors,bonnet,boot,objective;
                    	GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
                    	SetVehicleParamsEx(newcar,0,lights,alarm,doors,bonnet,boot,objective);
                 		engineOn[GetPlayerVehicleID(i)] = false;
                 		GetPlayerName(i, sendername, sizeof(sendername));
                 		format(string, sizeof(string), "* El Vehiculo de  %s se ha apagado bruscamente", sendername);
						ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				 }
             }
         }
    }
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    new string[128];
	//new giveplayerid;
	if(newkeys == KEY_FIRE)
	{
	   	if(Tazer[playerid] > 0)
	    {
	        if(IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GREY, "Este comando no se puede utilizar estando en un vehículo.");
	        new suspect = GetClosestPlayer(playerid);
	        if(PlayerTazeado[suspect] > 0) return Message(playerid, COLOR_GREY, "¡Este jugador ya está tazeado!");
	        if(ProxDetectorS(3.0, playerid,suspect))
			{
				if(IsACop(suspect)) return Message(playerid, COLOR_GREY, "¡No puedes tazear a un compañero!");
				new randt = random(4)+1;
				if(randt == 1)
				{
	   				format(string, sizeof(string), "* Oficial %s dispara contra %s, pero no consigue tazear al sujeto", PlayerName(playerid), PlayerName(suspect));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					Tazer[playerid] = 0;
					SetTimerEx("RemoveStun", 7000, false, "i", playerid);
				}
				else
				{
					format(string, sizeof(string), "* Oficial %s dispara contra %s y tazea al sujeto", PlayerName(playerid), PlayerName(suspect));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "* Tazeado (%s)", PlayerName(suspect));
					ProxDetector(30.0,playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
					GameTextForPlayer(suspect, "ARRESTADO", 2500, 3);
					TogglePlayerControllable(suspect, 0);
					ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
    	            PlayerTazeado[suspect] = 1;
					Tazer[playerid] = 0;
					SetTimerEx("RemoveStun", 7000, false, "i", playerid);
					SetTimerEx("UntazePlayer", 20000, false, "i", suspect);
				}
			}
			else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
		}
	}
	if(newkeys & KEY_WALK)
	{
	    if(Skate[playerid] > 9)
		{
		    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
		}
	}
	if(newkeys & KEY_SPRINT)
    {
    	if(IsPlayerConnected(playerid))
		{
  			if(PlayerDrunk[playerid] > 9) { ApplyAnimation(playerid,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[playerid]*1000); }
  			else if(Skate[playerid] > 9)
  			{
  			    if(Skate[playerid] == 10) ApplyAnimation(playerid,"SKATE","skate_idle",4.0,1,1,1,1,500);
  			    else if(Skate[playerid] == 20) ApplyAnimation(playerid,"SKATE","skate_run",4.0,1,1,1,1,500);
  			    else if(Skate[playerid] == 30) ApplyAnimation(playerid,"SKATE","skate_sprint",4.0,1,1,1,1,500);
  			}
  			else if(PlayerCuffed[playerid] > 0 || Rescued[playerid] > 0) 	ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
            else if(PuedeP[playerid] == 1) 	GameTextForPlayer(playerid, "~r~Espere", 3000, 3);
			else if(TutTime[playerid] > 0)
			{
       			if(TutTime[playerid] == 15)   TutTime[playerid] = 25;
			    else if(TutTime[playerid] == 25)   TutTime[playerid] = 35;
			    else if(TutTime[playerid] == 35)   TutTime[playerid] = 50;
			    else if(TutTime[playerid] == 50)   TutTime[playerid] = 65;
			    else if(TutTime[playerid] == 65)   TutTime[playerid] = 70;
			    TutorialStep_Forward(playerid);
			}
			else if(Accesory[playerid] > 0)
			{
			    if(Accesory[playerid] == 1) // Glasses
			    {
					switch(ClothesID[playerid])
					{
					    case 19005: { Accesory_Test(playerid, 3, 19006, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19006: { Accesory_Test(playerid, 3, 19007, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19007: { Accesory_Test(playerid, 3, 19008, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19008: { Accesory_Test(playerid, 3, 19009, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19009: { Accesory_Test(playerid, 3, 19010, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19010: { Accesory_Test(playerid, 3, 19011, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19011: { Accesory_Test(playerid, 3, 19012, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19012: { Accesory_Test(playerid, 3, 19013, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19013: { Accesory_Test(playerid, 3, 19014, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19014: { Accesory_Test(playerid, 3, 19015, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19015: { Accesory_Test(playerid, 3, 19016, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19016: { Accesory_Test(playerid, 3, 19017, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19017: { Accesory_Test(playerid, 3, 19018, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19018: { Accesory_Test(playerid, 3, 19019, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19019: { Accesory_Test(playerid, 3, 19020, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19020: { Accesory_Test(playerid, 3, 19021, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19021: { Accesory_Test(playerid, 3, 19022, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19022: { Accesory_Test(playerid, 3, 19023, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19023: { Accesory_Test(playerid, 3, 19024, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19024: { Accesory_Test(playerid, 3, 19025, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19025: { Accesory_Test(playerid, 3, 19026, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19026: { Accesory_Test(playerid, 3, 19027, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19027: { Accesory_Test(playerid, 3, 19028, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19028: { Accesory_Test(playerid, 3, 19029, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19029: { Accesory_Test(playerid, 3, 19030, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19030: { Accesory_Test(playerid, 3, 19031, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19031: { Accesory_Test(playerid, 3, 19032, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19032: { Accesory_Test(playerid, 3, 19033, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19033: { Accesory_Test(playerid, 3, 19034, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19034: { Accesory_Test(playerid, 3, 19035, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    default: 	{ClothesID[playerid] = 19005; Message(playerid, COLOR_GRAD2, "Has visto todas las gafas. Apreta ESPACIO para volver a verlas"); }
					}
				}
				else if(Accesory[playerid] == 2) // Bandana
			    {
					switch(ClothesID[playerid])
					{
					    case 18910: {Accesory_Bandana(playerid, 18917);}
					    case 18917: {Accesory_Bandana(playerid, 18913);}
					    case 18913: {Accesory_Bandana(playerid, 18916);}
					    case 18916: {Accesory_Bandana(playerid, 18915);}
					    case 18915: {Accesory_Bandana(playerid, 18912);}
					    default: 	{ClothesID[playerid] = 18910; Message(playerid, COLOR_GRAD2, "Has visto todas las bandanas. Apreta ESPACIO para volver a verlas"); }
					}
				}
				else if(Accesory[playerid] == 3) // Hat
			    {
					switch(ClothesID[playerid])
					{
					    case 18925: { Accesory_Test(playerid, 2, 18926, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18926: { Accesory_Test(playerid, 2, 18927, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18927: { Accesory_Test(playerid, 2, 18928, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18928: { Accesory_Test(playerid, 2, 18929, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18929: { Accesory_Test(playerid, 2, 18930, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18930: { Accesory_Test(playerid, 2, 18931, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18931: { Accesory_Test(playerid, 2, 18932, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18932: { Accesory_Test(playerid, 2, 18933, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18933: { Accesory_Test(playerid, 2, 18934, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18934: { Accesory_Test(playerid, 2, 18935, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    default: 	{ClothesID[playerid] = 18925; Message(playerid, COLOR_GRAD2, "Has visto todas las gorras. Apreta ESPACIO para volver a verlas"); }
					}
				}
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
    	if(IsPlayerConnected(playerid))
		{
		    if(RStep[playerid] > 0)
		    {
		        if(RStep[playerid] == 1)
		        {
		            new mtext[12],otext[12];
		            if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
		            if(PlayerInfo[playerid][pOrigin] == 1) otext = "America";
		            if(PlayerInfo[playerid][pOrigin] == 2) otext = "Europa";
		            if(PlayerInfo[playerid][pOrigin] == 3) otext = "Asia";
		            if(PlayerInfo[playerid][pOrigin] == 4) otext = "Africa";
		            if(PlayerInfo[playerid][pOrigin] == 5) otext = "Oceania";
					if(RegConfig[playerid] == 1)
					{
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~>~~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext);
					    TDStr(RegDraw[playerid], string);
					    PlayerInfo[playerid][pChar] = GetPlayerSkin(playerid);
					    RegConfig[playerid] = 2;
					    RegText[playerid] = 0;
					    ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
					    return 1;
					}
					else if(RegConfig[playerid] == 2)
					{
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
					    RegConfig[playerid] = 3;
					    RegText[playerid] = 1;
					    PlayerInfo[playerid][pOrigin] = 1;
					    ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
					    return 1;
					}
					else if(RegConfig[playerid] == 3)
					{
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge],otext);
					    TDStr(RegDraw[playerid], string);
						RStep[playerid] = 1;
						RegText[playerid] = 1;
						RegConfig[playerid] = 4;
						ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
					    return 1;
					}
					else if(RegConfig[playerid] == 4)
					{
					    ClearChatbox(playerid, 15);
					    TextDrawHideForPlayer(playerid, RegDraw[playerid]);
					    TextDrawHideForPlayer(playerid, RegInfo);
					    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1)
					    RStep[playerid] = 0;
					    RegText[playerid] = 0;
						RegConfig[playerid] = 0;
      					SetTimerEx("Reg_ShowDNI", 3000, false, "i", playerid);
						GameTextForPlayer(playerid, "~r~Configurando ~w~DNI", 3000, 3);
						SetTimerEx("RegMsn", 6000, false, "i", playerid);
					}
		        }
		    }
		    if (GetPlayerState(playerid) == 1)
			{
				TeleportPlayer(playerid);
				if(ReduceTime[playerid] == 0)
				{
				    new Float:hp; GetPlayerHealth(playerid, hp);
					if(PlayerToPoint(1.0,playerid,-36.3182,-56.8905,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-19.1974,-56.8366,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-35.9060,-139.2014,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-15.2743,-139.2626,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+5);
					}
					else if(PlayerToPoint(1.0,playerid,-16.7039,-139.3292,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
				}
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
						if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0 || AdminDuty[playerid] == 1 || PlayerInfo[playerid][pPhousekey2] == i)
						{
							SetPosEx(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz],0,HouseInfo[i][hInt],HouseInfo[i][hWorld]);
                            PlayerInfo[playerid][pEntered] = i;
						}
						else GameTextForPlayer(playerid, "~r~Cerrado", 5000, 1);
					}
                    else if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
				    	if(PlayerInfo[playerid][pEntered] == i)
				    	{
				    	    SetPosEx(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez],0,0,0);
                            PlayerInfo[playerid][pEntered] = -1;
						}
					}
					else if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
                            new key = PlayerInfo[playerid][pEntered];
				    	    SetPosEx(playerid,HouseInfo[key][hEntrancex],HouseInfo[key][hEntrancey],HouseInfo[key][hEntrancez],0,0,0);
                            PlayerInfo[playerid][pEntered] = -1;
					}
				}
			}
			else if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			}
		}
	}
    return 1;
}



public StartingTheVehicle(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            new RandomStart;
    		new string[128];
    		new engine,lights,alarm,doors,bonnet,boot,objective;
    		new newcar = GetPlayerVehicleID(playerid);
    		GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
            RandomStart = random(8);
            switch(RandomStart)
            {
                case 0,1,2,3,4,6,7:
                {
					SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
                    format(string, sizeof(string), "* %s enciende el motor de su %s", PlayerName(playerid), GetVehicleFriendlyName(newcar));
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    gEngine[playerid] = 0;
                    engineOn[newcar] = true;
                }
                case 5:
                {
                    format(string, sizeof(string), "* El %s de %s no enciende",GetVehicleFriendlyName(newcar), PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					gEngine[playerid] = 0;
					engineOn[newcar] = false;
                }
            }
        }
		else
		{
		    gEngine[playerid] = 0;
		}
    }
    return 1;
}
public StartingPuente(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            new RandomStart;
    		new string[128];
    		new engine,lights,alarm,doors,bonnet,boot,objective;
    		new newcar = GetPlayerVehicleID(playerid);
    		GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
            RandomStart = random(4);
            switch(RandomStart)
            {
                case 0,1,2:
                {
					SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
                    format(string, sizeof(string), "*%s intenta hacer un puente al %s y consigue hacerlo", PlayerName(playerid),GetVehicleFriendlyName(newcar));
                    ProxDetector(30.0, playerid, string, COLOR_GROVE,COLOR_GROVE,COLOR_GROVE,COLOR_GROVE,COLOR_GROVE);
                    gEngine[playerid] = 0;
                    engineOn[newcar] = true;
                }
                case 3:
                {
                    format(string, sizeof(string), "* %s no logra hacer un puente al %s", PlayerName(playerid),GetVehicleFriendlyName(newcar));
					ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
					gEngine[playerid] = 0;
					engineOn[newcar] = false;
                }
            }
        }
		else
		{
		    gEngine[playerid] = 0;
		}
    }
    return 1;
}

public LoadHQLocks()
{
	new arrCoords[11][32];
	new strFromFile2[32];
	new File: file = fopen("hq_locks.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, '$');
		hqlock[GS] = strval(arrCoords[0]);
		hqlock[LH] = strval(arrCoords[1]);
		hqlock[LK] = strval(arrCoords[2]);
		hqlock[ITA] = strval(arrCoords[3]);
		hqlock[RUS] = strval(arrCoords[4]);
		hqlock[MEC] = strval(arrCoords[5]);
		hqlock[YAK] = strval(arrCoords[6]);
		hqlock[TRI] = strval(arrCoords[7]);
		hqlock[CAP] = strval(arrCoords[8]);
		hqlock[ALQ] = strval(arrCoords[9]);
		hqlock[ESP] = strval(arrCoords[9]);
		fclose(file);
	}
	return 1;
}

public SaveHQLocks()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d$%d$%d$%d$%d$%d$%d%d%d$%d$%d", hqlock[GS],hqlock[LH], hqlock[LK], hqlock[ITA], hqlock[RUS], hqlock[MEC], hqlock[YAK], hqlock[TRI], hqlock[CAP], hqlock[ALQ], hqlock[ESP], hqlock[ALE]);
	new File: file2 = fopen("hq_locks.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

stock ClearKnock(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	KnockedDown[playerid] = 0;
}

public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	ResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			SafeGivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return 1;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(Distance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}
function Float:Distance2(Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2)
{
	new Float:result = floatsqroot(floatpower(floatsub(x2,x1),2)+floatpower(floatsub(y2,y1),2)+floatpower(floatsub(z2,z1),2));
	return result;
}
stock Float:GetDistance(playerid, Float:x, Float:y)
{
	new Float:x2, Float:y2, Float:z2;
	GetPlayerPos(playerid, x2, y2, z2);
	x = x - x2;
	y = y - y2;
	return floatsqroot(x*x+y*y);
}

public TraceLastCall()
{
	pdtrace = 0;
	pdtrace_x = 0;
	pdtrace_y = 0;
	pdtrace_z = 0;
	emdtrace = 0;
	emdtrace_x = 0;
	emdtrace_y = 0;
	emdtrace_z = 0;
}

public ReportReset(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(JustReported[playerid] == 1)
	    {
			JustReported[playerid] = 0;
	    }
	}
}

public ReduceTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(ReduceTime[playerid] == 1)
	    {
			ReduceTime[playerid] = 0;
	    }
	}
}


public FreezePlayer(playerid)	{	TogglePlayerControllable(playerid, 0);	}

public UnfreezePlayer(playerid)	{	TextDrawHideForPlayer(playerid, Cargando); TextDrawHideForPlayer(playerid, Textdrawinicio2); TogglePlayerControllable(playerid, 1);	}

public Heal(playerid)			{	SetHP(playerid, 100);			return 1;	}

public CheckForOpenDoor(playerid)
{
	if(IsACop(playerid))
    {
        if (PlayerToPoint(10, playerid,1589.053344,-1638.123168,14.122960))
		{
      		MoveDynamicObject(pdgate1,1599.053344,-1638.123168,14.122960, 0.8);
      		PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
			return 1;
		}
		if (PlayerToPoint(15, playerid,1545.7398681641, -1627.7280273438, 15.206203460693))
		{
      		MoveDynamicObject(pdgate2,1545.7392578125, -1627.7275390625, 20.381204605103, 3.0);
      		SetTimer("GateClose5", 7000, 0);
      		return 1;
		}
		else if (PlayerToPoint(15, playerid,1534.9020,-1451.5979,14.4882))
		{
      		MoveDynamicObject(fbigate,1534.9020,-1451.5979,20.4882, 1.5);
      		SetTimer("GateClose3", 7000, 0);
      		return 1;
		}
		else if (PlayerToPoint(10, playerid,2334.91796875,2443.72534180,6.76478863))
		{
      		MoveDynamicObject(lvpdgate,2340.77026367,2453.67626953,6.75299644, 2.5);
      		SetTimer("lvpdgates", 7000, 0);
		    return 1;
		}
	}
	else if(Mafia_Yakuza(playerid))
	{
	    if (PlayerToPoint(30, playerid,1241.4000244141, -741.70001220703, 97.20))
	    {
	        MoveDynamicObject(puertayakuza1,1241.4000244141, -741.70001220703, 90.00, 2.2);
	        SetTimer("Puertayakuza1", 10000, 0);
	    }
	    if (PlayerToPoint(30, playerid,1308.1999511719, -725.20001220703, 94.60))
	    {
	        MoveDynamicObject(puertayakuza2,1308.1999511719, -725.20001220703, 87.00, 2.2);
	        SetTimer("Puertayakuza2", 10000, 0);
	    }
	    if (PlayerToPoint(30, playerid,1316.0999755859, -819.90002441406, 75.70))
	    {
	        MoveDynamicObject(puertayakuza3,1316.0999755859, -819.90002441406, 68.00, 2.2);
	        SetTimer("Puertayakuza3", 10000, 0);
	    }
	}

///////////////////////////////////// Al Qaeda ////////////////////////////////

else if(Mafia_Alqaeda(playerid))
	{
	    if (PlayerToPoint(30, playerid,135.2843,1942.0272,19.3213))
	    {
	        MoveDynamicObject(portonalqaeda,125.56851, 1941.33850, 19.34000, 3.0);
	        MoveDynamicObject(portonalqaeda1,145.14885, 1941.32520, 19.34000, 3.0);
	        SetTimer("Portonalqaeda", 6000, 0);
	    }
	    if (PlayerToPoint(20, playerid,214.2263,1876.9351,13.1406))
	    {
	    MoveDynamicObject(portonalqaeda2,223.30409, 1875.37415, 13.81230, 3.0);
	    SetTimer("Portonalqaeda2", 6000, 0);
	    }
	}
///////////////////////////////////// Mafia Española //////////////////////////

else if(Mafia_Espanola(playerid))
	{
	    if (PlayerToPoint(20, playerid,2427.5054,-2087.6772,13.5469))
	    {
	        MoveDynamicObject(portonespanol,2425.93, -2089.47, 9.14, 2.2);
	        SetTimer("Portonespanol", 10000, 0);
	    }
	    if (PlayerToPoint(20, playerid,2536.5808,-2116.8438,13.5469))
	    {
	        MoveDynamicObject(portonespanol2,2538.64, -2116.84, 9.27, 2.2);
	        SetTimer("Portonespanol2", 10000, 0);
	    }
	    if (PlayerToPoint(20, playerid,2623.3557,-2118.5232,13.5469))
	    {
	        MoveDynamicObject(portonespanol3,2625.12, -2116.98, 9.37, 2.2);
	        SetTimer("Portonespanol3", 10000, 0);
	    }
	}
    else if(Mafia_Alemana(playerid))
	{
	    if (PlayerToPoint(20, playerid,2568.0242,1484.5782,10.6719))
	    {
	        MoveDynamicObject(puertacapone1,2567.43,1484.18,5.46, 3.0);
	        SetTimer("puertacap1", 10000, 0);
	    }
	    if (PlayerToPoint(20, playerid,2507.4451,1602.4242,10.6719))
	    {
	        MoveDynamicObject(puertacapone2,2507.27,1603.04,5.46, 3.0);
	        SetTimer("puertacap2", 10000, 0);
	    }
	}
//////////////////////////////////////Mafia Italiana/////////////////////////////////////////
	else if(Mafia_Italiana(playerid))
	{
      if (PlayerToPoint(30, playerid, 1298.79980469,-2056.79980469,59.70000076))
	    {
	        MoveDynamicObject(crgate, 1298.79980469,-2056.79980469,49.70000076, 1.0);
	        SetTimer("CartelGateClose", 10000, 0);
      		return 1;
	    }
	    else if (PlayerToPoint(30, playerid,1298.79980469,-2056.79980469,62.79999924))
		{
      		MoveDynamicObject(crgate1, 1298.79980469,-2056.79980469,48.79999924, 1.0);
      		SetTimer("CartelGateClose1", 10000, 0);
      		return 1;
		}
	}
/////////////////////////////////////// Santi Saem  ///////////////////////
		else if(Team_NG(playerid))
	{
		if(PlayerToPoint(20, playerid, 2758.20, -2565.70, 16.20))
		{
		    MoveDynamicObject(saem1,2758.20, -2565.70, 8.15, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2671.70, -2504.00, 15.30))
		{
		    MoveDynamicObject(saem2,2671.70, -2504.00, 8.85, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2617.10, -2404.50, 15.30))
		{
		    MoveDynamicObject(saem3,2617.10, -2404.50, 9.34, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}

////////////////////////////////// Capone //////////////////////////////////

else if(Mafia_Capone(playerid))
	{
	    if (PlayerToPoint(20, playerid,1578.1980,713.9958,10.7568))
	    {
	        MoveDynamicObject(capon1,1577.80005, 713.09998, 5.6, 3.0);
	        SetTimer("CaponeGateClose", 7000, 0);
      		return 1;
	    }
	    if (PlayerToPoint(30, playerid,2567.32446289,1483.23754883,12.45306396))
	    {
	        MoveDynamicObject(capon2,2567.28222656,1483.28295898,17.88230515, 1.5);
	        SetTimer("Capone2GateClose", 7000, 0);
      		return 1;
	    }
	}

////////////////////////////////// HQ Triadas //////////////////////////////

else if(TriadasTeam(playerid))
	{
		if (PlayerToPoint(25, playerid,711.36908000,-1422.32885700,13.31281300))
		{
			MoveDynamicObject(triada1, 708.29998779297, -1417.3000488281, 5.30, 3.0);
			SetTimer("CTriada1", 6000, 0);
			return 1;
		}
		if (PlayerToPoint(25, playerid,764.77752700,-1422.80786100,13.31906100))
		{
			MoveDynamicObject(triada2, 767.40002441406, -1420.3000488281, 5.30, 3.0);
			SetTimer("CTriada2", 6000, 0);
			return 1;
		}
        if (PlayerToPoint(25, playerid,725,-1577,3))
		{
			MoveDynamicObject(triada3, 725.00, -1577.00, -3.00, 3.0);
			SetTimer("CTriada3", 6000, 0);
			return 1;
		}
	}

///////////////////////////////////////////////////////////////////////////
		else if(IsANarco(playerid))
	{
	    if (PlayerToPoint(30, playerid,-24.91601562,161.30957031,2.22968745))
	    {
	        MoveDynamicObject(reja1,-20.33726120,158.74198914,2.22968745,1.5);
			MoveDynamicObject(reja2,-34.67095947,167.26675415,2.22968745,1.5)
	        SetTimer("reja1trafi", 7000, 0);
      		return 1;
	    }
	    if (PlayerToPoint(30, playerid,-82.58573151,65.67722321,4.01718760))
	    {
	        MoveDynamicObject(reja3,-84.99796295,58.49941254,4.01718760,1.5);
	        SetTimer("reja2trafi", 7000, 0);
      		return 1;
	    }
	}
///////////////////////////////////////////////////////////////////////

else if(Hitman(playerid))
	{
	 if (PlayerToPoint(20, playerid,2235.6250,-2213.9744,13.5469))
	    {
	        MoveDynamicObject(hitmanreja, 2234.40, -2215.74, 8.17, 3.0);
	        SetTimer("TerroClose", 10000, 0);
      		return 1;
	    }
	}
	else if(Mafia_Rusa(playerid))
	{
	    if (PlayerToPoint(30, playerid,787.20361328,-1152.45361328,25.40438461))
	    {
         	MoveDynamicObject(rusg,787.20312500,-1152.45312500,29.85149193, 2.0);
	        SetTimer("RusaClose", 7000, 0);
      		return 1;
	    }
	    if (PlayerToPoint(30, playerid,662.1038,-1228.5162,15.5905))
	    {
	        MoveDynamicObject(rusg2,658.6991,-1225.7975,1.7825, 2.0);
	        SetTimer("RusaClose2", 7000, 0);
      		return 1;
	    }
	    if (PlayerToPoint(30, playerid,665.0096,-1304.3438,13.4609))
	    {
	        MoveDynamicObject(rusg3,665.3931,-1308.6857,20.6859, 2.0);
	        SetTimer("RusaClose3", 7000, 0);
      		return 1;
	    }
	}
	else if(TriadasTeam(playerid))
	{
	    if (PlayerToPoint(30, playerid,2235.11962891,-2216.07739258,15.32021713))
	    {
         	MoveDynamicObject(tria,2235.1196289,-2216.0773925,20.395193099, 2.0);
         	SetTimer("GateTriada", 7000, 0);
      		return 1;
	    }
	}
	else if(Journalist(playerid))
    {
      	if (PlayerToPoint(15, playerid,777.70, -1330.10, 13.00))
      	{
	       	MoveDynamicObject(tvp, 768.84, -1329.99, 13.00, 5.0);
	       	SetTimer("GateCloseLSTV", 7000, 0);
       }
       if (PlayerToPoint(15, playerid,774.12, -1384.97, 12.92))
      	{
	       	MoveDynamicObject(tvp2,  765.03, -1385.32, 12.92, 5.0);
	       	SetTimer("GateCloseLSTV2", 7000, 0);
       }
       else Message(playerid, COLOR_GREY,"  No hay señal!");
	}
    return 1;
}

public CheckForCloseDoor(playerid)
{
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(IsACop(playerid))
    {
        if (PlayerToPoint(15, playerid,1589.053344,-1638.123168,14.122960))
		{
			MoveDynamicObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97);
      		PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
      		return 1;
		}
		else { SendClientMessage(playerid, COLOR_GREY,"El destino es demasiado lejano."); }
	}
	else if(Team_NG(playerid))
	{
		if(PlayerToPoint(20, playerid, 2758.20, -2565.70, 16.20))
		{
		    MoveDynamicObject(saem1, 2758.20, -2565.70, 16.20, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2671.70, -2504.00, 15.30))
		{
		    MoveDynamicObject(saem2, 2671.70, -2504.00, 15.30, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2617.10, -2404.50, 15.30))
		{
		    MoveDynamicObject(saem3, 2617.10, -2404.50, 15.30, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}
	//////////////////////// Triadas cerrar /////////////////////////////////////////
	if(TriadasTeam(playerid))
    {
        if (PlayerToPoint(25, playerid,711.36908000,-1422.32885700,13.31281300))
		{
			MoveDynamicObject(triada1,708.29998779297, -1417.3000488281, 15.30,0.97);
			return 1;
 		}
 		if (PlayerToPoint(25, playerid,764.77752700,-1422.80786100,13.31906100))
		{
			MoveDynamicObject(triada2,767.40002441406, -1420.3000488281, 15.30,0.97);
			return 1;
		}
		if (PlayerToPoint(25, playerid,725.00, -1577.00, 3.00))
		{
			MoveDynamicObject(triada3,725.00, -1577.00, 3.00,0.97);
			return 1;
		}
		else { SendClientMessage(playerid, COLOR_GREY,"El destino es demasiado lejano."); }
	}
	return 1;
	}

public OnPlayerCheckStat(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	    {
			if(PlayerToPoint(4, playerid, 246.5186,108.5494,1003.2188) && !Umbrella7(playerid) && Revisado[playerid] == 0)
			{
	            ProxDetector(40.0, playerid, "Seguridad: Hola, le vamos a proceder a quitar todo aquello que sea peligroso.",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	            SetTimerEx("CleanPlayer", 5000, false, "i", playerid);
	            Revisado[playerid] = 1;
			}
			return 1;
		}
	}
return 1;
}
public CleanPlayer(playerid)
{
	if(IsPlayerConnected(playerid))
	    {
	        if(PlayerToPoint(4, playerid, 246.5186,108.5494,1003.2188))
	            {
	                ResetPlayerWeapons(playerid);
	                ProxDetector(40.0, playerid, "Seguridad: Limpio, puede proceder.",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	                MoveDynamicObject(u7d3, 249.31018066406, 110.8671875, 1002.21875, 1.0);
	                Revisado[playerid] = 1;
	                MoveDynamicObject(u7d3, 247.81130981445, 110.8671875, 1002.21875, 0.5);
	                return 1;
				}
		}
return 1;
}
   /*CMD:robarbanco(playerid, params[])
	{
	if(IsPlayerInRangeOfPoint(playerid, 7.0, -1971.6210,138.0550,27.6875)){
	if(PlayerInfo[playerid][pRob] > 0){
		new string[128];
		new sendername[MAX_PLAYER_NAME];
		TiempoEx = SetTimerEx("Tiempo", 10000, false, "i", playerid);
		SetPlayerWorldBounds(playerid, -1950.474, -1981.375, 179.8405, 116.7211);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "**Atención a todas las unidades, el banco está siendo robado!. **", sendername);
		SendRadioMessage(Team_Blue, COLOR_RED, string);
		SendClientMessage(playerid, COLOR_RED,"No puedes salir del banco, espera 10 minutos para que puedas escapar");
		SetPlayerWantedLevel(playerid, 6);
		SetPlayerColor(playerid, COLOR_RED);
  timesrobbed[playerid]+=1;
        return activado = 1;
		}return SendClientMessage(playerid, COLOR_YELLOW, "Solo se puede robar una ves despues de cada Pay Day!");
	}return SendClientMessage(playerid, COLOR_RED,"No estas en el lugar !");
}

        CMD:robarjoyas(playerid, params[]){
		if(IsPlayerInRangeOfPoint(playerid, 7.0, -1971.6210,138.0550,27.6875)){
		if(PlayerInfo[playerid][pRob] > 0){
			   new string[128];
			    new sendername[MAX_PLAYER_NAME];
				JoyasEx = SetTimerEx("JoyasP", 50000, false, "i", playerid);
				GameTextForPlayer(playerid,"~r~Robando...",50000, 3);
				format(string, sizeof(string), "**Atención a todas las unidades, la tienda de joyas está siendo robada!. **", sendername);
                GetPlayerName(playerid, sendername, sizeof(sendername));
				SendRadioMessage(1, COLOR_RED, string);
	            format(string,sizeof(string), "* %s está buscando joyas por todas partes", sendername);
	            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerWantedLevel(playerid, 1);
				SetPlayerColor(playerid, COLOR_RED);
				TogglePlayerControllable(playerid, 0);
				timesrobbed[playerid]+=1;
				return activado = 1;
			}return SendClientMessage(playerid, COLOR_YELLOW, "Solo se puede robar una ves despues de cada Pay Day!");
		}return SendClientMessage(playerid, COLOR_RED,"No estas en el lugar !");
	}





        CMD:jinv(playerid, params[])
	{
	new string[128];
	format(string,sizeof(string), "Tienes {7F0000}%i {0094FF}Joyas", ObservarJoyas(playerid));
	SendClientMessage(playerid,COLOR_BLANCO,string);
	return 1;
	}

    CMD:venderjoyas(playerid, params[]){
	if(IsPlayerInRangeOfPoint(playerid, 7.0, -1971.6210,138.0550,27.6875)){
        if(Joyas[playerid] > 0){
	    VJoyasEx = SetTimerEx("VJoyasP", 4000, false, "i", playerid);
	    GameTextForPlayer(playerid,"~r~Vendiendo mercancia...",4000, 3);
		return activado = 1;
	   }return SendClientMessage(playerid,COLOR_ROJO,"No tienes joyas");
	}return	SendClientMessage(playerid, COLOR_ROJO,"No estas en el lugar !");
}*/

public SaveGuns(playerid)
{
    for(new slot = 0; slot != 12; slot++)
    {
    	new wep, ammo;
     	GetPlayerWeaponData(playerid, slot, wep, ammo);
      	if(wep != 0 && ammo != 0)
       	{
       		if(PlayerInfo[playerid][pWeapon] == 0) { PlayerInfo[playerid][pWeapon] = wep; PlayerInfo[playerid][pAmmo] = ammo; }
	       	else if(PlayerInfo[playerid][pWeapon2] == 0) { PlayerInfo[playerid][pWeapon2] = wep; PlayerInfo[playerid][pAmmo2] = ammo; }
		    else if(PlayerInfo[playerid][pWeapon3] == 0) { PlayerInfo[playerid][pWeapon3] = wep; PlayerInfo[playerid][pAmmo3] = ammo; }
		    else if(PlayerInfo[playerid][pWeapon4] == 0) { PlayerInfo[playerid][pWeapon4] = wep; PlayerInfo[playerid][pAmmo4] = ammo; }
      		else if(PlayerInfo[playerid][pWeapon5] == 0) { PlayerInfo[playerid][pWeapon5] = wep; PlayerInfo[playerid][pAmmo5] = ammo; }
		    else if(PlayerInfo[playerid][pWeapon6] == 0) { PlayerInfo[playerid][pWeapon6] = wep; PlayerInfo[playerid][pAmmo6] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon7] == 0) { PlayerInfo[playerid][pWeapon7] = wep; PlayerInfo[playerid][pAmmo7] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon8] == 0) { PlayerInfo[playerid][pWeapon8] = wep; PlayerInfo[playerid][pAmmo8] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon9] == 0) { PlayerInfo[playerid][pWeapon9] = wep; PlayerInfo[playerid][pAmmo9] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon10] == 0) { PlayerInfo[playerid][pWeapon10] = wep; PlayerInfo[playerid][pAmmo10] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon11] == 0) { PlayerInfo[playerid][pWeapon11] = wep; PlayerInfo[playerid][pAmmo11] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon12] == 0) { PlayerInfo[playerid][pWeapon12] = wep; PlayerInfo[playerid][pAmmo12] = ammo; }
		}
    }
    //SendClientMessage(playerid, TEAM_GROVE_COLOR, "* Your weapons were saved!");
    return 1;
}

public SaveAllGuns()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gPlayerLogged[i])
		    {
			    for(new slot = 0; slot != 12; slot++)
			    {
			    	new wep, ammo;
			     	GetPlayerWeaponData(i, slot, wep, ammo);
			      	if(wep != 0 && ammo != 0)
			       	{
			       	    if(AdminDuty[i] == 0 && PlayerInfo[i][pJDS] < 6)
   		    			{
				        	if(PlayerInfo[i][pWeapon] == 0) { PlayerInfo[i][pWeapon] = wep; PlayerInfo[i][pAmmo] = ammo; }
				         	else if(PlayerInfo[i][pWeapon2] == 0) { PlayerInfo[i][pWeapon2] = wep; PlayerInfo[i][pAmmo2] = ammo; }
					   	    else if(PlayerInfo[i][pWeapon3] == 0) { PlayerInfo[i][pWeapon3] = wep; PlayerInfo[i][pAmmo3] = ammo; }
					        else if(PlayerInfo[i][pWeapon4] == 0) { PlayerInfo[i][pWeapon4] = wep; PlayerInfo[i][pAmmo4] = ammo; }
					        else if(PlayerInfo[i][pWeapon5] == 0) { PlayerInfo[i][pWeapon5] = wep; PlayerInfo[i][pAmmo5] = ammo; }
					        else if(PlayerInfo[i][pWeapon6] == 0) { PlayerInfo[i][pWeapon6] = wep; PlayerInfo[i][pAmmo6] = ammo; }
				            else if(PlayerInfo[i][pWeapon7] == 0) { PlayerInfo[i][pWeapon7] = wep; PlayerInfo[i][pAmmo7] = ammo; }
				            else if(PlayerInfo[i][pWeapon8] == 0) { PlayerInfo[i][pWeapon8] = wep; PlayerInfo[i][pAmmo8] = ammo; }
				            else if(PlayerInfo[i][pWeapon9] == 0) { PlayerInfo[i][pWeapon9] = wep; PlayerInfo[i][pAmmo9] = ammo; }
				            else if(PlayerInfo[i][pWeapon10] == 0) { PlayerInfo[i][pWeapon10] = wep; PlayerInfo[i][pAmmo10] = ammo; }
				            else if(PlayerInfo[i][pWeapon11] == 0) { PlayerInfo[i][pWeapon11] = wep; PlayerInfo[i][pAmmo11] = ammo; }
				            else if(PlayerInfo[i][pWeapon12] == 0) { PlayerInfo[i][pWeapon12] = wep; PlayerInfo[i][pAmmo12] = ammo; }
				        }
					}
			    }
			    SendClientMessage(i, TEAM_GROVE_COLOR, "* Your weapons were saved!");
			}
		}
	}
    return 1;
}

function ShowBuyMenu(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		ShowPlayerDialog(playerid,D247_BUY,DIALOG_STYLE_LIST, \
		"Comprar - 24 7","1.\tiPhone\t\t\t\t(200$) \n2.\tGPS - Mantenimiento No Comprar\t\t\t\t(75$)\n3.\tLotería\t\t\t\t(5$)\n4.\tSpray Anti-Ladrones\t\t(40$)\n5.\tCigarros\t\t\t(10$)\n6.\tCámara\t\t\t\t(70$)\n7.\tEncendedor\t\t\t(5$)\n8.\tGafas RayBan\t\t\t(300$)\n9.\tMaleta\t\t\t\t(175$)\n10.\tMochila\t\t\t\t(75$)\n11.\tCasco\t\t\t\t(120$)\n12\tPatines\t\t\t\t(50$)\n13\tWalkie\t\t\t\t(60$)","Comprar","Cancelar");
	}
	return 1;
}

function ShowAmmunation(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ShowPlayerDialog(playerid,AMMUNATION_MENU,DIALOG_STYLE_LIST,"Ammunation - Compras","Defensa personal\nPistolas\nAmetralladores-SubFusiles\nEscopetas\nProtección\nLecciones","Ver","Salir");
	}
	return 1;
}
stock Bought(playerid, amount)
{
	if(IsPlayerConnected(playerid))
	{
		    new a[12];
			format(a,sizeof(a),"~r~ -%d$",amount);
		    GameTextForPlayer(playerid, a, 5000, 1);
			GivePlayerMoney(playerid, -amount);
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
	}
	return 1;
}

stock Earn(playerid, amount)
{
	if(IsPlayerConnected(playerid))
	{
		    new a[12];
			format(a,sizeof(a),"~g~ %d$",amount);
		    GameTextForPlayer(playerid, a, 5000, 1);
			GivePlayerMoney(playerid, amount);
			PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
	}
	return 1;
}

stock CheckMoney(playerid, money)
{
    if(IsPlayerConnected(playerid))
	{
	    new b[64];
	    new xx;
		xx = money - (GetPlayerMoney(playerid));
	    if(GetPlayerMoney(playerid) >= money)
		{
			return 1;
		}
		else
		{
		    format(b,sizeof(b),"    No tienes dinero suficiente! Te faltan %d$",xx);
			SendClientMessage(playerid, COLOR_GRAD2, b);
			return 0;
		}
	}
	return 0;
}

public RusaClose()
{
			MoveDynamicObject(rusg,787.20361328,-1152.45361328,25.40438461, 2.0);
			return 1;
}

public RusaClose2()
{
			MoveDynamicObject(rusg2,658.68890381,-1226.62780762,17.62639618, 2.0);
			return 1;
}

public RusaClose3()
{
			MoveDynamicObject(rusg3,665.05010986,-1310.76293945,15.35269642, 2.0);
			return 1;
}

public ShootAgain(playerid)
{
	Bowling[playerid] = 0;
    BowlingMoney[playerid] = 0;
}

forward SetPlayerStats(playerid);
public SetPlayerStats(playerid)
{
	PlayerInfo[playerid][pDEagle] = 999;
	PlayerInfo[playerid][pShotgun] = 999;
	PlayerInfo[playerid][pMP5] = 999;
	PlayerInfo[playerid][pAK47] = 999;
	PlayerInfo[playerid][pM4] = 999;
	PlayerInfo[playerid][pSniper] = 999;
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pDEagle])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pShotgun])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pMP5])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pAK47])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pM4])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PlayerInfo[playerid][pSniper])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 300);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 300);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 300);

	SetPlayerFightingStyle (playerid, PlayerInfo[playerid][pFStyle]);
	SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);

}

stock GetPlayerIdFromName(playername[])
{
  for(new i = 0; i <= MAX_PLAYERS; i++)
  {
    if(IsPlayerConnected(i))
    {
      new playername2[MAX_PLAYER_NAME];
      GetPlayerName(i, playername2, sizeof(playername2));
      if(strcmp(playername2, playername, true, strlen(playername)) == 0)
      {
        return i;
      }
    }
  }
  return INVALID_PLAYER_ID;
}

forward CheckVida();
public CheckVida()
{
	new Float:Life;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        GetPlayerHealth(i,Life);
			if(Life < 15.1 && First_Spawn[i] == 0)
			{
			    ForbidHandsUp[i] = 1;
				if(IsPlayerInAnyVehicle(i))
				{
					GetPlayerHealth(i, Life);
					SetHP(i, Life-1.0);
				}
				if(MensajeMuriendo[i]==0 && gPlayerLogged[i] == 1)
				{
				    if(!IsPlayerInAnyVehicle(i))
				    {
						Message(i,COLOR_LIGHTRED,"Tu estado actual es crítico. Te estás muriendo!");
						Message(i,COLOR_LIGHTRED,"Ojalá alguien pueda llamar a una ambulancia, y rápido!");
						Message(i,COLOR_LIGHTRED,"Si no es así, morirás en poco tiempo!");
						ApplyAnimation(i, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0); // Dead Crawling
						MensajeMuriendo[i]=1;
						if(MsgL4L[i] == 0)
						{
						    if(Life < 16 && Life > 12) { Left4Life[i] = 180; }
						    if(Life < 13 && Life > 8) { Left4Life[i] = 149; }
						    if(Life <  9) { Left4Life[i] = 99; }
							MsgL4L[i] = 1;
						}
					}
				    if(IsPlayerInAnyVehicle(i))
				    {
						Message(i,COLOR_LIGHTRED,"Tu estado actual es crítico. Te estás muriendo!");
						Message(i,COLOR_LIGHTRED,"Si sigues en el coche tu vida disminuairá más rapido!");
						Message(i,COLOR_LIGHTRED,"Intenta bajar inmediatamente!");
						MensajeMuriendo[i]=1;
					}
				}
			}
			else{MensajeMuriendo[i]=0; ForbidHandsUp[i] = 0; MsgL4L[i] = 0; Left4Life[i] = 0;}
		}
	}
}

forward Spawned(playerid);
public Spawned(playerid)
{
	First_Spawn[playerid] = 0;
}

forward Tiempo1();
public Tiempo1()
{
	for(new i=0;i<=MAX_PLAYERS;i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        ComprobarKeysCatalogo(i);
		}
	}
	return 1;
}

forward ComprobarKeysCatalogo(playerid);
public ComprobarKeysCatalogo(playerid)
{
    new Keys,ud,lr,string[258];
    GetPlayerKeys(playerid,Keys,ud,lr);
	if(lr > 0) // Right
	{
	    if(PuedePresionar[playerid] == true)
	    {
	        if(RStep[playerid] == 1)
	        {
	            if(RegConfig[playerid] == 1)
	            {
		            if(RegText[playerid] == 1)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Masculino          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
		                PlayerInfo[playerid][pSex] = 1;
		                Skin(playerid, 26);
		                PlayerInfo[playerid][pChar] = 26;
		                RegText[playerid] = 2;
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
			    		return 1;
					}
					else if(RegText[playerid] == 2)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Femenino          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
		                PlayerInfo[playerid][pSex] = 2;
		                Skin(playerid, 90);
		                PlayerInfo[playerid][pChar] = 90;
		                RegText[playerid] = 1;
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
			    		return 1;
					}
				}
				else if(RegConfig[playerid] == 2)
	            {
	                    if(PlayerInfo[playerid][pAge] > 98) return GText(playerid, "~w~Edad maxima: ~r~99", 3000, 3);
	                    PlayerInfo[playerid][pAge] ++;
	                    new mtext[12];
					    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~>~~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 100, 0, "d", playerid);
			    		ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
			    		return 1;
	            }
	            else if(RegConfig[playerid] == 3)
	            {
	                if(RegText[playerid] == 5)
	                {
	                    return 1;
	                }
	                else
	                {
	                    RegText[playerid] += 1;
	                	ChooseOrigin(playerid);
					}
				}
				else if(RegConfig[playerid] == 4)
	            {
	                if(RegText[playerid] == 13)
	                {
	                    return 1;
	                }
	                else
	                {
	                    RegText[playerid] += 1;
	                	ChooseWalk(playerid);
					}
				}
			}
          if(ClothesMenu[playerid] == true)
			{
			    if(GetPlayerSkin(playerid) == 299) return Message(playerid, COLOR_GRAD2, "Vuelve para atrás, no hay más skins!");
			    SetPlayerSkin(playerid, GetPlayerSkin(playerid)+1);
			    PuedePresionar[playerid] = false;
			    SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			}
		}
	}
	if(lr < 0) // Left
	{
	    if(PuedePresionar[playerid] == true)
	    {
	        if(RStep[playerid] == 1)
	        {
	            if(RegConfig[playerid] == 1)
	            {
		            if(RegText[playerid] == 1)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Masculino          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
		                PlayerInfo[playerid][pSex] = 1;
		                RegText[playerid] = 2;
		                Skin(playerid, 26);
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
			    		return 1;
					}
					else if(RegText[playerid] == 2)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Femenino          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
		                PlayerInfo[playerid][pSex] = 2;
		                RegText[playerid] = 1;
		                Skin(playerid, 90);
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
			    		return 1;
					}
				}
				else if(RegConfig[playerid] == 2)
	            {
	                    if(PlayerInfo[playerid][pAge] < 19) return GText(playerid, "~w~Edad minima: ~g~18", 3000, 3);
	                    PlayerInfo[playerid][pAge] --;
	                    new mtext[12];
					    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~>~~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 100, 0, "d", playerid);
			    		return 1;
	            }
	            else if(RegConfig[playerid] == 3)
	            {
	                if(RegText[playerid] == 1)
	                {
	                    return 1;
	                }
	                else
	                {
	                    RegText[playerid] -= 1;
	                	ChooseOrigin(playerid);
					}
				}
				else if(RegConfig[playerid] == 4)
	            {
	                if(RegText[playerid] == 1)
	                {
	                    return 1;
	                }
	                else
	                {
	                    RegText[playerid] -= 1;
	                	ChooseWalk(playerid);
					}
				}
			}
		 if(ClothesMenu[playerid] == true)
			{
			    if(GetPlayerSkin(playerid) == 0) return Message(playerid, COLOR_GRAD2, "Vuelve para adelante, no hay más skins!");
			    SetPlayerSkin(playerid, GetPlayerSkin(playerid)-1);
			    PuedePresionar[playerid] = false;
			    SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			}
		}
	}
	/*else if(ud > 0) // Down
	{
	    if(PuedePresionar[playerid] == true)
	    {
	        if(RStep[playerid] == 1)
	        {

			}
		}
	}
	else if(ud < 0) // Forward
	{
	    if(PuedePresionar[playerid] == true)
	    {
	        if(RStep[playerid] == 1)
	        {

			}
		}
	}*/
	return 1;
}

forward NewUs();
public NewUs()
{
if(NewUsed > 0)
	{
	    NewUsed -= 1;
	}
      return 1
}

forward VolverPresionar(playerid);
public VolverPresionar(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		PuedePresionar[playerid] = true;
		return 1;
	}
	return 1;
}

forward PuedePTimer(playerid);
public PuedePTimer(playerid)
{
	PuedeP[playerid] = 0;
	return 1;
}

/*forward Reg_ShowDNI(playerid);
public Reg_ShowDNI(playerid) { ShowDNI(playerid,playerid); }

public ShowDNI(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
	    new string[64], sex[4], otext[14], word[3];
	    new sendername[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    if(PlayerInfo[playerid][pSex] == 1) { sex = "M"; }
   		if(PlayerInfo[playerid][pSex] == 2) { sex = "F"; }
   		if(PlayerInfo[targetid][pOrigin] == 2) { otext = "Europa"; }
		else if(PlayerInfo[targetid][pOrigin] == 1) { otext = "América"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "Asia"; }
		else if(PlayerInfo[targetid][pOrigin] == 4) { otext = "África"; }
		else if(PlayerInfo[targetid][pOrigin] == 5) { otext = "Oceanía"; }

	    Message(targetid, 0xFFD600FF, "|___________ Documento Nacional de Identidad ___________|");
   		format(string, sizeof(string), "   Nombre: %s", sendername);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Sexo: %s", sex);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Edad: %d     Fecha Nacimiento: %d", PlayerInfo[playerid][pAge], 2011-PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nacionalidad: %s", otext);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nº DNI: %d%s", PlayerInfo[playerid][pDNI],word);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   IDSA%s%d%s<<%s>%d-%d", word,PlayerInfo[playerid][pDNI],sex,sendername,2011-PlayerInfo[playerid][pAge],PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_GRAD2, string);
   		Message(targetid, 0xFFD600FF, "|________________ Ministerio del Interior _________________|");
	}
}*/

stock Admin(lvl,playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new admin = PlayerInfo[playerid][pJDS];
	    if(admin	>=	lvl)
		{
		    return 1;
		}
	}
	return 0;
}

new VehicleFriendlyNames[212][] = {
	{"Landstalker"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"},
	{"Dumper"},{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},
	{"Pony"},{"Mule"},{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},
	{"Washington"},{"Bobcat"},{"Mr. Whoopee"},{"BF. Injection"},{"Hunter"},{"Premier"},{"Enforcer"},
	{"Securicar"},{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Article Trailer"},
	{"Previon"},{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},
	{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Article Trailer 2"},{"Turismo"},{"Speeder"},
	{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkley's RC Van"},{"Skimmer"},
	{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},{"Sanchez"},
	{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},{"Rustler"},{"ZR-350"},
	{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},{"Baggage"},{"Dozer"},
	{"Maverick"},{"News Chopper"},{"Rancher"},{"FBI Rancher"},{"Virgo"},{"Greenwood"},{"Jetmax"},{"Hotring"},
	{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},{"Mesa"},{"RC Goblin"},
	{"Hotring Racer A"},{"Hotring Racer B"},{"Bloodring Banger"},{"Rancher"},{"Super GT"},{"Elegant"},
	{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stunt"},{"Tanker"},{"Roadtrain"},
	{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},{"NRG-500"},{"HPV1000"},
	{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},{"Willard"},{"Forklift"},
	{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},{"Blade"},{"Freight"},{"Streak"},
	{"Vortex"},{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},{"Firetruck LA"},{"Hustler"},{"Intruder"},
	{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},{"Utility"},{"Nevada"},{"Yosemite"},{"Windsor"},
	{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},
	{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},{"Bandito"},{"Freight Flat"},{"Streak Carriage"},
	{"Kart"},{"Mower"},{"Dunerider"},{"Sweeper"},{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},
	{"Stafford"},{"BF-400"},{"Newsvan"},{"Tug"},{"Article Trailer 3"},{"Emperor"},{"Wayfarer"},{"Euros"},{"Mobile Hotdog"},
	{"Club"},{"Freight Carriage"},{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police Car (LSPD)"},
	{"Police Car (SFPD)"},{"Police Car (LVPD)"},{"Police Ranger"},{"Picador"},{"S.W.A.T Van"},{"Alpha"},
	{"Phoenix"},{"Glendale"},{"Sadler"},{"Luggage Trailer A"},{"Luggage Trailer B"},{"Stair Trailer"},
	{"Boxville"},{"Farm Plow"},{"Utility Trailer"}
};

stock GetVehicleFriendlyName(vehicleid)
{
	new GVFNstring[56];
	format(GVFNstring, sizeof(GVFNstring), VehicleFriendlyNames[GetVehicleModel(vehicleid)-400]);
	return GVFNstring;
}

stock CreateRoadblock(Object,Float:x,Float:y,Float:z,Float:Angle)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(Roadblocks[i][sCreated] == 0)
  	    {
            Roadblocks[i][sCreated] = 1;
            Roadblocks[i][sX] = x;
            Roadblocks[i][sY] = y;
            Roadblocks[i][sZ] = z-0.7;
            Roadblocks[i][sObject] = CreateDynamicObject(Object, x, y, z-0.9, 0, 0, Angle);
	        return 1;
  	    }
  	}
  	return 0;
}

stock DeleteAllRoadblocks(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(PlayerToPoint(playerid, 100, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
	  	    if(Roadblocks[i][sCreated] == 1)
	  	    {
	  	        Roadblocks[i][sCreated] = 0;
	            Roadblocks[i][sX] = 0.0;
	            Roadblocks[i][sY] = 0.0;
	            Roadblocks[i][sZ] = 0.0;
	            DestroyDynamicObject(Roadblocks[i][sObject]);
	  	    }
  	    }
	}
    return 0;
}


stock DeleteClosestRoadblock(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(PlayerToPoint(5.0, playerid, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
  	        if(Roadblocks[i][sCreated] == 1)
            {
                Roadblocks[i][sCreated] = 0;
                Roadblocks[i][sX] = 0.0;
                Roadblocks[i][sY] = 0.0;
                Roadblocks[i][sZ] = 0.0;
                DestroyDynamicObject(Roadblocks[i][sObject]);
                return 1;
  	        }
  	    }
  	}
    return 0;
}

stock PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new str[128];
		ClearChatbox(playerid, 10);
		format(str, sizeof(str), "Negocio: %s", BizzInfo[targetid][bMessage]);
		Message(playerid, COLOR_WHITE, str);
		format(str, sizeof(str), "Till: %d", BizzInfo[targetid][bTill]);
		Message(playerid, COLOR_WHITE, str);
		format(str, sizeof(str), "Productos: %d", BizzInfo[targetid][bProducts]);
		Message(playerid, COLOR_WHITE, str);
	}
}

stock Till(bizzid, amount)
{
	if(BizzInfo[bizzid][bOwned] == 1){
        if(strcmp("Nadie", BizzInfo[bizzid][bExtortion], true ) == 0){
        	BizzInfo[bizzid][bTill] += amount;
       	}
       	else{
       	    new money = amount / 4;
			BizzInfo[bizzid][bTill] += money * 3;
			BizzInfo[bizzid][bTillEx] += money;
		}
	}
	return 1;
}

stock Benefeits(bizid, earn, spent)
{
//    new f_str[128];
	//format(f_str, sizeof(f_str), "Bizz(%d) Till(%d(+%d))    Products(%d(-%d))", bizid,SBizzInfo[bizid][sbTill], earn, SBizzInfo[bizid][sbProducts], spent);
	//GlobalMsg(COLOR_NEWS, f_str);
	SBizzInfo[bizid][sbTill] += earn;
	SBizzInfo[bizid][sbProducts] -= spent;
}
forward Mecanicos(playerid);
public Mecanicos(playerid)
{
Connect
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(buscameca[playerid], X,Y,Z);
	SetPlayerCheckpoint(playerid, X,Y,Z, 6);
	Message(playerid, TEAM_RADIO_COLOR, "** Información: se estableció el destino de búsqueda en su radar");
	endif
	return 1;
}
forward Detective_FindPerson(playerid);
public Detective_FindPerson(playerid)
{
	Connect
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(WhoFind[playerid],X,Y,Z);
	SetPlayerCheckpoint(playerid, X,Y,Z, 6);
	Message(playerid, TEAM_RADIO_COLOR, "** Información: se estableció el destino de búsqueda en su radar");
	WhoFind[playerid] = 0;
	endif
	return 1;
}
forward policiarastreo(playerid);
public policiarastreo(playerid)
{
	Connect
	new Float:X,Float:Y,Float:Z;
	GetVehiclePos(buscaauto[playerid], X,Y,Z);
	SetPlayerCheckpoint(playerid, X,Y,Z, 10);
	Message(playerid, TEAM_RADIO_COLOR, "** Información: se estableció la última posición del vehiculo registrada");
	endif
	return 1;
}
forward Detective_FindCar(playerid);
public Detective_FindCar(playerid)
{
	Connect
	new Float:X,Float:Y,Float:Z;
	GetVehiclePos(WhoFind[playerid], X,Y,Z);
	SetPlayerCheckpoint(playerid, X,Y,Z, 10);
	Message(playerid, TEAM_RADIO_COLOR, "** Información: se estableció la última posición del vehiculo registrada");
	WhoFind[playerid] = 0;
	endif
	return 1;
}
forward SearchHit(playerid);
SearchHit(playerid)
{
	new string[128];
	if(IsPlayerConnected(playerid))
	{
	    Message(playerid, COLOR_WHITE, "- Objetivos pendientes -");
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        new name[MAX_PLAYER_NAME];
	        GetPlayerName(i, name, sizeof(name));
	        if(PlayerInfo[i][pHead] > 0)
	        {
	            format(string, sizeof(string), "  Nombre: %s (Recompensa: %d)", name,PlayerInfo[i][pHead]);
	            Message(playerid, WANTED_COLOR, string);
	        }
	    }
	}
	return 1;
}
forward FailExam(playerid)
FailExam(playerid)
{
	Message(playerid, 0xFF5151FF, "Has suspendido el examen. Necesitas un 8 mínimo para aprobar.");
	Message(playerid, 0xFF5151FF, "Puedes volverlo a intentar cuando desees.");
	Message(playerid, 0x00FF00FF, "Te cobramos 100$");
    ePoints[playerid] = 0;
    PlayerInfo[playerid][pCarLic] = 0;
    GivePlayerMoney(playerid, -100);
	return 1;
}
forward PassExam(playerid)
PassExam(playerid)
{
	new string[64];
    PlayerInfo[playerid][pCarLic] = ePoints[playerid];
	Message(playerid, 0x00FF00FF, "Felicidades! Has aprovado el examen!");
	if(ePoints[playerid] == 8)
	{
	    format(string, sizeof(string), "Tu nota: %d/10", ePoints[playerid]);
	    Message(playerid, 0x00FF00FF, string);
	    Message(playerid, 0x00FF00FF, "Has obtenido Licencia Básica Teórica");
	    Message(playerid, 0x00FF00FF, "Ahora sólo te falta cursar la práctica! Ve a una autoescuela!");
	    PlayerInfo[playerid][pCarLic] = 8;
	}
	else if(ePoints[playerid] == 9)
	{
	    format(string, sizeof(string), "Tu nota: %d/10", ePoints[playerid]);
	    Message(playerid, 0x00FF00FF, string);
	    Message(playerid, 0x00FF00FF, "Has obtenido Licencia Avanzada Teórica");
	    Message(playerid, 0x00FF00FF, "Ahora sólo te falta cursar la práctica! Ve a una autoescuela!");
     	PlayerInfo[playerid][pCarLic] = 9;
	}
	else if(ePoints[playerid] == 10)
	{
	    format(string, sizeof(string), "Tu nota: %d/10", ePoints[playerid]);
	    Message(playerid, 0x00FF00FF, string);
	    Message(playerid, 0x00FF00FF, "Has obtenido Licencia Experta Teórica");
	    Message(playerid, 0x00FF00FF, "Ahora sólo te falta cursar la práctica! Ve a una autoescuela!");
     	PlayerInfo[playerid][pCarLic] = 10;
	}
	Message(playerid, 0x00FF00FF, "Te cobramos 100$");
	GivePlayerMoney(playerid, -100);
	Benefeits(DGT,100,0);
    ePoints[playerid] = 0;
	return 1;
}
stock BizTill()
{
	SBizzInfo[LSPD][sbTill] += TaxValue*8;
	SBizzInfo[SAMUR][sbTill] += TaxValue*4;
	SBizzInfo[YCAB][sbTill] += 300;
	SBizzInfo[CRMO][sbTill] += 300;
	SBizzInfo[U7][sbTill] += 500;
	SBizzInfo[DGT][sbTill] += 350;
	SBizzInfo[CNN][sbTill] += 400;

	BizzInfo[0][bTill] += 200;
	BizzInfo[1][bTill] += 1000;
	BizzInfo[2][bTill] += 100;
	BizzInfo[3][bTill] += 250;
	BizzInfo[4][bTill] += 500;
	BizzInfo[5][bTill] += 5000;
	BizzInfo[6][bTill] += 600;
	BizzInfo[7][bTill] += 100;
	BizzInfo[8][bTill] += 400;
	BizzInfo[9][bTill] += 400;
	BizzInfo[10][bTill] += 3000;
	BizzInfo[11][bTill] += 4000;
	BizzInfo[12][bTill] += 200;

}
function OnGlobalPropTextdrawUpdate()
{
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        OnPropTextdrawUpdate(h)
	}
	return 1;
}

function OnPropTextdrawUpdate(hid)
{
	new string[256];
	if(HouseInfo[hid][hOwned] == 0)
	{
 		DestroyDynamic3DTextLabel(House3DText[hid]);
		DestroyDynamicPickup(HousePickup[hid]);
  		format(string, sizeof(string), "Casa en Venta\n{C00000}Precio{FFFFFF}: %d$\n{C00000}Nivel{FFFFFF}: %d\n{C00000}ID{FFFFFF}:  %d\n{C00000}Función{FFFFFF}: /Comprarcasa",HouseInfo[hid][hValue],HouseInfo[hid][hLevel],hid);
    	House3DText[hid] = CreateDynamic3DTextLabel(string,0xFFFFFFDD, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		HousePickup[hid] = CreateDynamicPickup(1273, 1, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez]);
	}
	else
	{
 		DestroyDynamicPickup(HousePickup[hid]);
		HousePickup[hid] = CreateDynamicPickup(1239, 1, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez]);
  		if(HouseInfo[hid][hRent] > 0)
  		{
    		DestroyDynamic3DTextLabel(House3DText[hid]);
      		format(string, sizeof(string), "Propiedad en Renta\n{C00000}Dueño{FFFFFF}: %s\n{C00000}Renta{FFFFFF}: %d$\n{C00000}Habitaciones{FFFFFF}: %d\n{C00000}ID{FFFFFF}: %d\n{C00000}Función{FFFFFF}: /Rcuarto",HouseInfo[hid][hOwner],HouseInfo[hid][hRent],HouseInfo[hid][hRooms],hid);
			House3DText[hid] = CreateDynamic3DTextLabel(string,0xFFFFFFDD, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		}
		else
		{
  			DestroyDynamic3DTextLabel(House3DText[hid]);
	    	format(string, sizeof(string), "Propiedad Privada\n{C00000}Dueño{FFFFFF}: %s\n{C00000}ID{FFFFFF}: %d",HouseInfo[hid][hOwner],hid);
    		House3DText[hid] = CreateDynamic3DTextLabel(string,0xFFFFFFDD, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		}
	}
	return 1;
}
function OnGlobalBizzTextdrawUpdate()
{
    for(new b = 0; b < sizeof(BizzInfo); b++)
	{
	    OnBizzTextdrawUpdate(b);
 	}
 	return 1;
}

function OnBizzTextdrawUpdate(bid)
{
    new string[256];
	if(BizzInfo[bid][bOwned] == 0)
 	{
 		DestroyDynamic3DTextLabel(Bizz3DText[bid]);
  		DestroyDynamicPickup(BizzPickup[bid]);
   		format(string, sizeof(string), "Negocio en Venta\n{C00000}Nombre{FFFFFF}: %s\n{C00000}Precio{FFFFFF}: %d$\n{C00000}Nivel{FFFFFF}: %d\n{C00000}ID{FFFFFF}: %d\nUsa /comprarnegocio",BizzInfo[bid][bName],BizzInfo[bid][bBuyPrice],BizzInfo[bid][bLevelNeeded],bid);
		Bizz3DText[bid] = CreateDynamic3DTextLabel(string,0xFFFFFFDD, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		BizzPickup[bid] = CreateDynamicPickup(1272, 1, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez]);
	}
	else
	{
 		DestroyDynamic3DTextLabel(Bizz3DText[bid]);
  		DestroyDynamicPickup(BizzPickup[bid]);
   		format(string, sizeof(string), "Negocio\n{C00000}Nombre{FFFFFF}:%s\n{C00000}Dueño{FFFFFF}: %s\n{C00000}Extorcion{FFFFFF}: %s\n{C00000}ID{FFFFFF}: %d",BizzInfo[bid][bName],BizzInfo[bid][bOwner],BizzInfo[bid][bExtortion],bid);
		Bizz3DText[bid] = CreateDynamic3DTextLabel(string,0xFFFFFFDD, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		BizzPickup[bid] = CreateDynamicPickup(1272, 1, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez]);
	}
	return 1;
}

forward CartelGateClose();
public CartelGateClose()
{
	MoveDynamicObject(crgate,1298.79980469,-2056.79980469,59.70000076,0.8);
	return 1;
}
forward TerroClose();
public TerroClose()
{
      MoveDynamicObject(hitmanreja, 2234.40, -2215.74, 15.17, 2.0);
	  return 1;
}
forward CartelGateClose1();
public CartelGateClose1()
{
	MoveDynamicObject(crgate1,1298.79980469,-2056.79980469,62.79999924,0.8);
	return 1;
}
//////////////////////// Santi Mafia Yakuza /////////////////////////
forward Puertayakuza1()
public Puertayakuza1()
{
      MoveDynamicObject(puertayakuza1, 1241.4000244141, -741.70001220703, 97.199996948242, 1.5);
	  return 1;
}
forward Portonalqaeda()
public Portonalqaeda()
{
      MoveDynamicObject(portonalqaeda1, 138.14885, 1941.32520, 19.34000, 2.5);
      MoveDynamicObject(portonalqaeda, 132.56851, 1941.33850, 19.34000, 2.5);
	  return 1;
}
forward Portonalqaeda2()
public Portonalqaeda2()
{
      MoveDynamicObject(portonalqaeda2, 214.30409, 1875.37415, 13.81230, 2.5);
	  return 1;
}
forward Portonespanol()
public Portonespanol()
{
      MoveDynamicObject(portonespanol, 2425.93, -2089.47, 15.14, 3.0);
	  return 1;
}
forward Portonespanol2()
public Portonespanol2()
{
      MoveDynamicObject(portonespanol2,2538.64, -2116.84, 15.27, 3.0);
	  return 1;
}
forward Portonespanol3()
public Portonespanol3()
{
      MoveDynamicObject(portonespanol3,2625.12, -2116.98, 15.37, 3.0);
	  return 1;
}
forward puertacap1()
public puertacap1()
{
      MoveDynamicObject(puertacapone1,2567.43,1484.18,12.46, 3.0);
	  return 1;
}
forward puertacap2()
public puertacap2()
{
      MoveDynamicObject(puertacapone2,2507.27,1603.04,12.46, 3.0);
	  return 1;
}
forward Puertayakuza2()
public Puertayakuza2()
{
      MoveDynamicObject(puertayakuza2, 1308.1999511719, -725.20001220703, 94.599998474121, 1.5);
	  return 1;
}
forward Puertayakuza3()
public Puertayakuza3()
{
      MoveDynamicObject(puertayakuza3, 1316.0999755859, -819.90002441406, 75.699996948242, 1.5);
	  return 1;
}
forward CaponeGateClose();
public CaponeGateClose()
{
      MoveDynamicObject(capon1, 1577.80005, 713.09998, 12.6, 3.0);
	  return 1;
}
forward reja1trafi();
public reja1trafi()
{
      MoveDynamicObject(reja1,-24.91601562,161.30957031,2.22968745,1.5);
      MoveDynamicObject(reja2,-29.87773514,164.10839844,2.22968745,1.5)
	  return 1;
}

forward reja2trafi();
public reja2trafi()
{
      MoveDynamicObject(reja3,-82.58573151,65.67722321,4.01718760, 1.5);
	  return 1;
}

forward Capone2GateClose();
public Capone2GateClose()
{
      MoveDynamicObject(capon2, 2567.32446,1483.23754,12.45306, 1.5);
	  return 1;
}
/*
forward TerroClose();
public TerroClose()
{
      MoveDynamicObject(mafia2, 712.89758301,1929.85510254,7.31245375, 1.5);
	  return 1;
}
*/
forward DEBUG(string[]);
public 	DEBUG(string[])
{
	new entry[128],year, month,day,hour,minuite,second;
	getdate(year, month,day);
	gettime(hour,minuite,second);
	format(entry, sizeof(entry), "[%d/%d - %d:%d:%d] DEBUG: %s\n",month,day,hour,minuite,second,string);
	new File:hFile;
	hFile = fopen("DEBUG.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
forward BugLog(string[]);
public BugLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Bug.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
forward IntentarTimer(playerid);
public IntentarTimer(playerid)
{
	Intentar[playerid] = 0;
}
function BackupClear(playerid, timer)
{
	if(IsPlayerConnected(playerid))
	{
		if(RequestingBackup[playerid] == 1)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Team_LSPD(playerid)) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
					else if(Team_NG(playerid)) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
					else if(Team_FBI(playerid)) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
				}
			}
			if(timer != 0) 	Message(playerid, TEAM_BLUE_COLOR, "Tu pedido de refuerzos ha sido cancelado automáticamente.");
			else 			Message(playerid, TEAM_BLUE_COLOR, "Tu pedido fue cancelado.");
			RequestingBackup[playerid] = 0;
		}
	}
	return 1;
}//·| << Timers de Objetos >> ========================================================================================|·
public Puerta2Abierta()
{
    MoveDynamicObject(PuertaH2,250.67543029785, 130.39466552734, 1037.9182128906, 0.97);
    SetTimer("Puerta2Cerrada", 5000, 0);
}
public Puerta1Abierta()
{
    MoveDynamicObject(PuertaH1,250.56510925293, 130.34936218262, 1032.2158203125, 0.97);
    SetTimer("Puerta1Cerrada", 8000, 0);
}
public Puerta2Cerrada()
{
    MoveDynamicObject(PuertaH2,250.67543029785, 131.59466552734, 1037.9182128906, 0.97);
    if(HaciaAbajo == 1) {
    SetTimer("Eabajo", 2000, 0); }
    else { }
}
public Puerta1Cerrada()
{
    MoveDynamicObject(PuertaH1,250.56510925293, 131.54936218262, 1032.2158203125, 0.97);
    if(HaciaArriba == 1) {
    SetTimer("Earriba", 2000, 0); }
    else {
    }
}

stock SetPosEx(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid)
{
    SetPlayerPos(playerid, X, Y, Z);
    SetPlayerFacingAngle(playerid, A);
    SetPlayerInterior(playerid, interiorid);
    SetPlayerVirtualWorld(playerid, worldid);
}

stock PlayerName(playerid)
{
    new Nombre[24];
    GetPlayerName(playerid,Nombre,24);
    new N[24];
    strmid(N,Nombre,0,strlen(Nombre),24);
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if (N[i] == '_') N[i] = ' ';
    }
    return N;
}

forward BikeModel(playerid);
public BikeModel(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 509) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 510) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 448) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 581) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 522) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 461) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 521) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 523) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 463) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 586) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 468) { return 1; }
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 471) { return 1; }
	}
	return 0;
}

forward RemoveStun(playerid);
public RemoveStun(playerid){
    RemovePlayerAttachedObject(playerid, 0);
    Att_Obj_Slot_0[playerid] = "Vacío";
}

function UntazePlayer(playerid){
	new string[128];
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, 1);
	format(string, sizeof(string), "* Recuperado de la descarga (%s)", PlayerName(playerid));
	ProxDetector(30.0,playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
	PlayerInfo[playerid][pPapel] = 0;
	PlayerTazeado[playerid] = 0;
	return 1;
}

stock Pause(playerid){
        TogglePlayerControllable(playerid,false);
        TextDrawShowForPlayer(playerid, Cargando);
        TextDrawShowForPlayer(playerid, Textdrawinicio2);
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        SetPlayerPos(playerid,x,y,z+1.5);
        SetTimerEx("UnfreezePlayer", 5000, false, "i", playerid);

}
function Regresaras(playerid)
{
SetPosEx(playerid, 1600.1266,1790.0237,-59.3549,6.0524,0,0);
}
stock FixAnim(playerid)
{
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	return 1;
}

stock	Desbug(string[])
{
		new
			szFixed[1024],
			iPos,
			iLen;

		for (iLen = strlen(string); iPos < iLen; iPos ++)
			switch (string[iPos])
			{
				case 'à':	szFixed[iPos] = 151;
				case 'á':	szFixed[iPos] = 152;
				case 'â':	szFixed[iPos] = 153;
				case 'ä':	szFixed[iPos] = 154;
				case 'À':	szFixed[iPos] = 128;
				case 'Á':	szFixed[iPos] = 129;
				case 'Â':	szFixed[iPos] = 130;
				case 'Ä':	szFixed[iPos] = 131;
				case 'è':	szFixed[iPos] = 157;
				case 'é':	szFixed[iPos] = 158;
				case 'ê':	szFixed[iPos] = 159;
				case 'ë':	szFixed[iPos] = 160;
				case 'È':	szFixed[iPos] = 134;
				case 'É':	szFixed[iPos] = 135;
				case 'Ê':	szFixed[iPos] = 136;
				case 'Ë':	szFixed[iPos] = 137;
				case 'ì':	szFixed[iPos] = 161;
				case 'í':	szFixed[iPos] = 162;
				case 'î':	szFixed[iPos] = 163;
				case 'ï':	szFixed[iPos] = 164;
				case 'Ì':	szFixed[iPos] = 138;
				case 'Í':	szFixed[iPos] = 139;
				case 'Î':	szFixed[iPos] = 140;
				case 'Ï':	szFixed[iPos] = 141;
				case 'ò':	szFixed[iPos] = 165;
				case 'ó':	szFixed[iPos] = 166;
				case 'ô':	szFixed[iPos] = 167;
				case 'ö':	szFixed[iPos] = 168;
				case 'Ò':	szFixed[iPos] = 142;
				case 'Ó':	szFixed[iPos] = 143;
				case 'Ô':	szFixed[iPos] = 144;
				case 'Ö':	szFixed[iPos] = 145;
				case 'ù':	szFixed[iPos] = 169;
				case 'ú':	szFixed[iPos] = 170;
				case 'û':	szFixed[iPos] = 171;
				case 'ü':	szFixed[iPos] = 172;
				case 'Ù':	szFixed[iPos] = 146;
				case 'Ú':	szFixed[iPos] = 147;
				case 'Û':	szFixed[iPos] = 148;
				case 'Ü':	szFixed[iPos] = 149;
				case 'ñ':	szFixed[iPos] = 174;
				case 'Ñ':	szFixed[iPos] = 173;
				case '¡':	szFixed[iPos] = 64;
				case '¿':	szFixed[iPos] = 175;
				case '`':	szFixed[iPos] = 177;
				case '#':	szFixed[iPos] = 35;
				case '&':	szFixed[iPos] = 38;
				default:	szFixed[iPos] = string[iPos];
			}

		return szFixed;
}

forward FuelCar(playerid, gasid);
public FuelCar(playerid, gasid)
{
	new string[128], idcar = GetPlayerVehicleID(playerid), engine,lights,alarm,doors,bonnet,boot,objective;
	if(engineOn[idcar] == 1)
	{
	    format(string, sizeof(string), "* %s agarra la mangera y la introduce en el depósito", PlayerName(playerid));
		ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
     new Float:boomx,Float:boomy,Float:boomz;
	    GetVehiclePos(idcar,boomx,boomy,boomz);
		CreateExplosion(boomx, boomy , boomz, 7, 10);
		GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(idcar,0,0,alarm,doors,0,0,objective);
		engineOn[idcar] = 0;
		Refueling[playerid] = -1;
		return 1;
	}
	else
	{
        Refueling[playerid] = gasid;
        TogglePlayerControllable(playerid, 0);
        format(string, sizeof(string), "* %s agarra la mangera y la introduce en el depósito", PlayerName(playerid));
		ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Message(playerid, COLOR_WHITE, "  El vehículo se está llenando, espera");
		SetTimerEx("FillUp", RefuelWait, false, "i", playerid);
	}
	return 1;
}

forward FillUp(playerid);
public FillUp(playerid)
{
    if(IsPlayerConnected(playerid))
   	{
   	    new idcar 	= 	GetPlayerVehicleID(playerid);
   	    new recgas = 5;
   	    if(IsAnOwnableCar(idcar)) recgas = CarInfo[idcar][cGas];

   	    new gasmax;
        if(Refueling[playerid] == 0) 		gasmax = gGas95_Full;
        else if(Refueling[playerid] == 1) 	gasmax = gGas98_Full;
        else if(Refueling[playerid] == 2) 	gasmax = gGasoil_Full;
        else if(Refueling[playerid] == 3) 	gasmax = gBiogas_Full;

        new pricegas;
        if(Refueling[playerid] == 0) 		pricegas = gGas95_Cost;
        else if(Refueling[playerid] == 1) 	pricegas = gGas98_Cost;
        else if(Refueling[playerid] == 2) 	pricegas = gGasoil_Cost;
        else if(Refueling[playerid] == 3) 	pricegas = gBiogas_Cost;

        new gasname[16];
        if(Refueling[playerid] == 0) 		gasname = "Sin plomo 95";
        else if(Refueling[playerid] == 1) 	gasname = "Sin plomo 98";
        else if(Refueling[playerid] == 2) 	gasname = "Gasoil";
        else if(Refueling[playerid] == 3) 	gasname = "Biodiesel";

	   	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	   	    {
	   	        new string[128];
	   	        new fillup 	= 	gasmax - Gas[idcar];
	   	        new price   =   fillup * pricegas;

	                if(recgas == 5 || recgas == Refueling[playerid])
	                {
	                    Gas[idcar] += fillup;
	                    ClearChatbox(playerid, 10);
	                    Message(playerid, 0x0097DFFF, "|_________| Gasolina - Recibo |_________|");
	                    format(string,sizeof(string),"  Precio: %d$/l (%s)",pricegas, gasname);
		    			Message(playerid, COLOR_WHITE, string);
		    			format(string,sizeof(string),"  Depósito: %d/%d Pagado: %d litros",Gas[idcar],gasmax,fillup);
		    			Message(playerid, COLOR_WHITE, string);
		    			Message(playerid, 0x0097DFFF, "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _");
		    			format(string,sizeof(string),"  Total: %d$",price);
		    			Message(playerid, COLOR_WHITE, string);
		    			TogglePlayerControllable(playerid, 1);
		    			Refueling[playerid] = -1;
		    			if(LSPD_IsACopCar(idcar) || IsAnAmbulance(idcar) || Taxi_Vehicle(idcar))
						{
							GText(playerid, "~g~0$", 5000, 1);
							Message(playerid, COLOR_WHITE, "** Tu empresa se hace responsable de los gastos");
						}
						else
						{
                            Bought(playerid, price);
                            Till(11, price);
                            Till(7, price);
                            Till(32, price);
						}
	                }
	                else
	                {
	                    Gas[idcar] += fillup;
	                    ClearChatbox(playerid, 10);
	                    Message(playerid, 0x0097DFFF, "|_________| Gasolina - Recibo |_________|");
	                    format(string,sizeof(string),"  Precio: %d$/l (%s)",pricegas, gasname);
		    			Message(playerid, COLOR_WHITE, string);
		    			format(string,sizeof(string),"  Depósito: %d/%d Pagado: %d litros",Gas[idcar],gasmax,fillup);
		    			Message(playerid, COLOR_WHITE, string);
		    			Message(playerid, 0x0097DFFF, "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _");
		    			format(string,sizeof(string),"  Total: %d$",price);
		    			Message(playerid, COLOR_WHITE, string);
		    			TogglePlayerControllable(playerid, 1);
		    			SetVehicleHealth(idcar, 500.0);
		    			Refueling[playerid] = -1;
		    			if(LSPD_IsACopCar(idcar) || IsAnAmbulance(idcar) || Taxi_Vehicle(idcar))
						{
							GText(playerid, "~g~0$", 5000, 1);
							Message(playerid, COLOR_WHITE, "** Tu empresa se hace responsable de los gastos");
						}
						else
						{
                            Bought(playerid, price);
                            Till(11, price);
                            Till(7, price);
                            Till(32, price);
						}
	                }
	   	    }
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	/*foreach(Player, i)
		{
		    if(vehicleid == CarInfo2[i][vVeh])
		    {
		        if(CarInfo2[i][vLocked]) SetVehicleParamsEx(vehicleid, 0, 0, 0, 1, 0, 0, 0);
	            ChangeVehiclePaintjob(CarInfo2[i][vVeh], CarInfo2[i][vPJ]);
				for(new x=0; x<14; i++)
				{
				    AddVehicleComponent(CarInfo2[i][vVeh], CarInfo2[i][vVehMod][x]);
				}
		    }
		}*/
	return 1;
}

forward NoBattery(carid);
public NoBattery(carid)
{
    if(CarInfo[carid][cBattery] == 0 && IsAnOwnableCar(carid))
	{
		return 1;
	}
	return 0;
}

forward MM_Noise();
public MM_Noise()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(PlayerToPoint(20.0,i,1641.2056,-2139.6641,13.4100))
		{
		    PlayerPlaySound(i, 1133, 1641.2056,-2139.6641,13.4100);
		}
	}
}

forward MM_Exam(playerid);
public MM_Exam(playerid)
{
	new x = GetPlayerVehicleID(playerid);
	new bat = CarInfo[x][cBattery];
	new gas = CarInfo[x][cGas];
	new gasa = Gas[x];
	new gasname[20], mes[12], string[64];

	if(gas == 0) gasname = "Sin Plomo 95";
	else if(gas == 1) gasname = "Sin Plomo 98";
	else if(gas == 2) gasname = "Diesel/Gasoil";
	else if(gas == 3) gasname = "Biodiesel";

	if(bat < 100) mes = "Agotada";
	if(bat > 100 || bat < 1000) mes = "Baja";
	if(bat > 1000 || bat < 5000) mes = "Normal";
	if(bat > 5000) mes = "Óptima";

	ClearChatbox(playerid, 10);
	format(string, sizeof(string), "___________| %s |___________", CarInfo[x][cName]);
	Message(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "  Motor: %s", gasname);
	Message(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "  Estado Batería: %s", mes);
	Message(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "  Gasolina: %d", gasa);
	Message(playerid, COLOR_WHITE, string);
	KillTimer(mmtimer);
}

forward V_Documents(playerid, targetid);
public V_Documents(playerid, targetid){
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		new xd = PlayerInfo[playerid][pPcarkey];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", CarInfo[xd][cName], CarInfo[xd][cPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", CarInfo[xd][cEmbargo], CarInfo[xd][cMulta]);
		Message(targetid, COLOR_WHITE, string);

	}
}

forward V_Documents2(playerid, targetid);
public V_Documents2(playerid, targetid){
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		new xd = PlayerInfo[playerid][pPcarkey2];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", CarInfo[xd][cName], CarInfo[xd][cPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", CarInfo[xd][cEmbargo], CarInfo[xd][cMulta]);
		Message(targetid, COLOR_WHITE, string);

	}
}

forward V2_Documents(playerid, targetid);
function V2_Documents(playerid, targetid){
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		new pc = PlayerInfo[playerid][pCarPremium];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", CarInfo[pc][cName], CarInfo[pc][cPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", CarInfo[pc][cEmbargo], CarInfo[pc][cMulta]);
		Message(targetid, COLOR_WHITE, string);
	}
}

forward V3_Documents(playerid, targetid);
function V3_Documents(playerid, targetid){
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		new pcr = PlayerInfo[playerid][pCarPremium2];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", CarInfo[pcr][cName], CarInfo[pcr][cPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", CarInfo[pcr][cEmbargo], CarInfo[pcr][cMulta]);
		Message(targetid, COLOR_WHITE, string);
	}
}
forward GateTriada();
public GateTriada(){
       MoveDynamicObject(tria, 2235.11962891,-2216.07739258,15.32021713,5.0);
       return 1;
}

forward GateCloseLSTV();
public GateCloseLSTV(){
       MoveDynamicObject(tvp, 777.35, -1330.17, 13.00,5.0);
       return 1;
}
forward GateCloseLSTV2();
public GateCloseLSTV2(){
       MoveDynamicObject(tvp2, 774.12, -1384.97, 12.92,5.0);
       return 1;
}
stock MakeWeapon(playerid, mats, weaponid, ammo){
	new x[64], pmats = PlayerInfo[playerid][pMats];
	if(IsPlayerConnected(playerid)){
	    if(pmats < mats){
			format(x, sizeof(x), "* Te faltan %d materiales.", pmats - mats);
			Message(playerid, COLOR_GRAD2, x);
			return 1;
	    }
	    else{
	        SafeGivePlayerWeapon(playerid, weaponid, ammo);
	        format(x, sizeof(x), "~w~arma creada~n~~r~materiales gastados:~w~%d", mats);
			GText(playerid, x, 3000, 3);
			PlayerInfo[playerid][pMats] -= mats;
			return 1;
	    }
	}
	return 1;
}
forward CheckFuel(playerid);
public CheckFuel(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new cid = GetPlayerVehicleID(playerid);
	    if(!IsABike(cid))
		{
			new x[12];
			if(Gas[cid] > 99)
			{
				format(x, sizeof(x), "%d|", Gas[cid]);
			}
			else if(Gas[cid] < 100 && Gas[cid] > 9)
			{
				format(x, sizeof(x), " %d|", Gas[cid]);
			}
			else if(Gas[cid] < 10)
			{
				format(x, sizeof(x), "~r~ %d|", Gas[cid]);
				PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			}
			TextDrawSetString(FuelSpeedo[playerid], x);
		}
	}
	return 1;
}

forward ShowFuel(playerid);
public ShowFuel(playerid)
{
	TextDrawShowForPlayer(playerid, FuelSpeedo[playerid]);
	CheckFuel(playerid);
}

forward HideFuel(playerid);
public HideFuel(playerid)
{
	TextDrawHideForPlayer(playerid, FuelSpeedo[playerid]);
}

/*public IsPlayerAdminCall(playerid)
{
	if(PlayerInfo[playerid][pJDS] >= 1)
	return 1;
	else
	return 0;
}*/

stock TutorialStep_Forward(i)
{
//	new string[512];
	if(IsPlayerConnected(i))
	{
 		if(TutTime[i] >= 1)
		{
			switch (TutTime[i])
			{
				    case 5:
				    {
						ClearChatbox(i, 8);
						new tes[] = "A) Sí, claramente.\nB) No lo sé.\nC) No, depende de las condiciones psicológicas humanas.";
						ShowPlayerDialog(i, TEST_0, DIALOG_STYLE_LIST, "¿Si un policía comienza a agredir físicamente a un niño, es un signo de PG?", tes, "OK", "");
				    }
			}
		}
	}
}

stock IsPlayerInVehicleRadio(playerid, Float:radius)
{
    new Float:r, Float:rr, Float:rrr, Float:rc, Float:rrc, Float:rrrc;
    GetPlayerPos(playerid, r, rr, rrr);
    for(new i; i < MAX_VEHICLES; i++)
    {
        GetVehiclePos(i, rc, rrc, rrrc);
        if(PlayerToPoint(radius,playerid,rc,rrc,rrrc))
        {
            return i;
        }
    }
    return false;
}

DetectarSPAM(string[])
{
    new SSPAM;
    new CUENTAP,CUENTAN,CUENTADP,CUENTAGB,CUENTARM,CUENTAC;
	for(SSPAM = 0; SSPAM < strlen(string); SSPAM ++)
	{
	    if(string[SSPAM] == '.') CUENTAP ++;
	    if(string[SSPAM] == '0' || string[SSPAM] == '1' || string[SSPAM] == '2' || string[SSPAM] == '3' || string[SSPAM] == '4' || string[SSPAM] == '5' || string[SSPAM] == '6' || string[SSPAM] == '7' || string[SSPAM] == '8' || string[SSPAM] == '9') CUENTAN ++;
	    if(string[SSPAM] == ':') CUENTADP ++;
	    if(string[SSPAM] == '_') CUENTAGB ++;
	    if(string[SSPAM] == ',') CUENTAC ++;
	    if(string[SSPAM] == '-') CUENTARM ++;
	}
 	if(CUENTAP >= 2 && CUENTAN >= 6) return 1;
 	if(CUENTAC >= 2 && CUENTAN >= 6) return 1;
 	if(CUENTAN >= 7) return 1;
 	if(CUENTAGB >= 2 && CUENTAN >= 5) return 1;
 	if(CUENTARM >= 1 && CUENTAN >= 6) return 1;
 	if(CUENTADP >= 1 && CUENTAN >= 6) return 1;
 	if(strfind(string, ".com", true) != -1 || strfind(string, ".com.ar", true) != -1 || strfind(string, ".org", true) != -1 || strfind(string, ".net", true) != -1 || strfind(string, ".es", true) != -1 || strfind(string, ".tk", true) != -1 || strfind(string, ".co.cc", true) != -1) return 1;
 	if(strfind(string, ". com", true) != -1 || strfind(string, ". com.ar", true) != -1 || strfind(string, ". org", true) != -1 || strfind(string, ". net", true) != -1 || strfind(string, ". es", true) != -1 || strfind(string, ". tk", true) != -1 || strfind(string, ". co.cc", true) != -1) return 1;
 	if(strfind(string, "metropolis", true) != -1 || strfind(string, "ldds", true) !=-1 || strfind(string, "gamerol", true) !=-1 || strfind(string, "generolife", true) !=-1 || strfind(string, "zenon", true) !=-1 || strfind(string, "fenix", true) !=-1) return 1;
 	return 0;
}

AccionSPAM(playerid,string[])
{
	new x[186];
	format(x, sizeof(x), "{11BB11}- AntiSPAM {FFFFFF}|| {FF2200}%s(%d): {FFFFFF}%s ||", PlayerName(playerid),playerid, string); A_Info(x);
	return 1;
}

StringOther(playerid, const string[])
{
	if(IsPlayerConnected(playerid))
	{
	    if(strfind(string, "=", true) != -1)    			return 0;
	    else if(strfind(string, "\n", true) != -1) 			return 0;
	    else return 1;
	}
	return 0;
}

stock CleanScreen()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        ClearChatbox(i, 100);
    }
    return 1;
}

function DisableVehicleAlarm(vehicleid)
{
    new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    SetVehicleParamsEx(vehicleid, engine, lights, false, doors, bonnet, boot, objective);
}

function DrugsSmuggling(playerid, type, amount)
{
	new string[80],typetxt[12];
	if(type == 1) typetxt = "Speed";
	else if(type == 2) typetxt = "Extasis";
	else if(type == 3) typetxt = "Ritalin";
	else if(type == 4) typetxt = "Heroina";
	else if(type == 5) typetxt = "Marihuana";

	PlayerInfo[playerid][pDrugs] -= amount;

	Smuggling[playerid] = amount;
 	SmugglingType[playerid] = type;
  	format(string, sizeof(string), "¡Importaste %d drogas de %s, dirígete al Checkpoint!",Smuggling[playerid], typetxt);
	Message(playerid, COLOR_YELLOW, string);
	if(type == 1) SetPlayerCheckpoint(playerid,2666.1895,-1109.3519,69.3972,5.0); // SPEED
	else if(type == 2) SetPlayerCheckpoint(playerid,2657.6475,-2048.4001,13.6357,5.0); // ECTASY
	else if(type == 3) SetPlayerCheckpoint(playerid,1296.3634,-1251.0021,13.5469,5.0); // RITALIN
	else if(type == 4) SetPlayerCheckpoint(playerid,2351.8406,-1169.0435,27.9956,5.0); // HEROINA
	else if(type == 5) SetPlayerCheckpoint(playerid,2351.8406,-1169.0435,27.9956,5.0); // MARIHUANA
}
stock IsVehicleDrivingBackwards(vehicleid) // By Joker
{
	new
		Float:Float[3]
	;
	if(GetVehicleVelocity(vehicleid, Float[1], Float[2], Float[0]))
	{
		GetVehicleZAngle(vehicleid, Float[0]);
		if(Float[0] < 90)
		{
			if(Float[1] > 0 && Float[2] < 0) return true;
		}
		else if(Float[0] < 180)
		{
			if(Float[1] > 0 && Float[2] > 0) return true;
		}
		else if(Float[0] < 270)
		{
			if(Float[1] < 0 && Float[2] > 0) return true;
		}
		else if(Float[1] < 0 && Float[2] < 0) return true;
	}
	return false;
}
stock NameValidator(playerid)
{
    if(IsPlayerConnected(playerid))
    {
      new pname[MAX_PLAYER_NAME],underline=0;
      GetPlayerName(playerid, pname, sizeof(pname));
      if(strfind(pname,"[",true) != (-1)) return 0;
      else if(strfind(pname,"]",true) != (-1)) return 0;
      else if(strfind(pname,"$",true) != (-1)) return 0;
      else if(strfind(pname,"(",true) != (-1)) return 0;
      else if(strfind(pname,")",true) != (-1)) return 0;
      else if(strfind(pname,"=",true) != (-1)) return 0;
      else if(strfind(pname,"@",true) != (-1)) return 0;
      else if(strfind(pname,"1",true) != (-1)) return 0;
      else if(strfind(pname,"2",true) != (-1)) return 0;
      else if(strfind(pname,"3",true) != (-1)) return 0;
      else if(strfind(pname,"4",true) != (-1)) return 0;
      else if(strfind(pname,"5",true) != (-1)) return 0;
      else if(strfind(pname,"6",true) != (-1)) return 0;
      else if(strfind(pname,"7",true) != (-1)) return 0;
      else if(strfind(pname,"8",true) != (-1)) return 0;
      else if(strfind(pname,"9",true) != (-1)) return 0;
      new maxname = strlen(pname);
      for(new i=0; i<maxname; i++)
      {
        if(pname[i] == '_') underline ++;
      }
      if(underline != 1) return 0;
    	pname[0] = toupper(pname[0]);
        for(new x=1; x<maxname; x++)
        {
            if(pname[x] == '_') pname[x+1] = toupper(pname[x+1]);
            else if(pname[x] != '_' && pname[x-1] != '_') pname[x] = tolower(pname[x]);
        }
        SetPlayerName(playerid, "New_Name");
        SetPlayerName(playerid, pname);
        return 1;
    }
    return 0;
}
function RespawnVehicles(playerid)
{
	Loop(c,VEH)
	{
		if(IsAnOwnableCar(c))
		{
			SetVehicleToRespawn(c);
			SetVehiclePos(c, CarInfo[c][cLocationx],CarInfo[c][cLocationy],CarInfo[c][cLocationz]);
			SetVehicleZAngle(c, CarInfo[c][cAngle]);

			if( CarInfo[ c ][ cOwned ] == 1 )
				SetVehicleParamsEx( c, 0, 0, 0, 1, 0, 0, 0 );
			else
			SetVehicleParamsEx( c, 0, 0, 0, 0, 0, 0, 0 );

			engineOn[c] = false;
			ChangeVehicleColor(c, CarInfo[c][cColorOne], CarInfo[c][cColorTwo]);
			Gas[c] = 100;
			AddCarTuning( c ); // Cr34 =>
		}
		else
		{
			SetVehicleToRespawn(c);
			SetVehicleParamsEx( c, 0, 0, 0, 0, 0, 0, 0 );
			engineOn[c] = false;
			Gas[c] = 100;
		}
	}
	new string[128]
	format(string, sizeof(string), "Respawn General realizado por: %s.", PlayerName(playerid));
	BroadCast(COLOR_GREEN,string);
	return 1;
}
function RespawnVehicle(c)
{
	if(IsAnOwnableCar(c))
	{
		SetVehicleToRespawn(c);
		SetVehiclePos(c, CarInfo[c][cLocationx],CarInfo[c][cLocationy],CarInfo[c][cLocationz]);
		SetVehicleZAngle(c, CarInfo[c][cAngle]);
		engineOn[c] = false;
		//ChangeVehicleColor(c, CarInfo[c][cColorOne], CarInfo[c][cColorTwo]);
		Gas[c] = 100;
		AddCarTuning( c ); // Cr34 =>
	}
	else
	{
		SetVehicleToRespawn(c);
		engineOn[c] = false;
		Gas[c] = 100;
	}
}
function iPod(playerid)
{
    ShowPlayerDialog(playerid, IPHONE_IPOD, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Escuchar música", \
	"Track 1 -\t 'Down with the sickness'\nTrack 2 -\t 'Duality'\nTrack 3 -\t 'On the beach'\nTrack 4 -\t 'Amerika'\nTrack 5 -\t 'Baby'\nTrack 6 -\t 'Vodka & Roll'\nTrack 7 -\t 'Sexy bitch'", "Reproducir", "Detener");
	return 1;
}
ClothesShopMenu(playerid)
{
    return ShowPlayerDialog(playerid, CLOTHES_CHOOSE_DIALOG, DIALOG_STYLE_LIST, "Accesorios", "Gafas\nBandanas\nGorras\nSombreros", "Ok", "Salir");
}
Accesory_Test(playerid, index, modelid, bone, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ, price)
{
    SetPlayerAttachedObject(playerid, index, modelid, bone, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ);
    ClothesID		[playerid] = modelid;
    ClothesPrice	[playerid] = price;
    return 1;
}
function EnableQuest(playerid)
{
    duda[playerid] = 0;
}
Accesory_Bandana(playerid, modelid)
{
    ClothesID	[playerid] = modelid;
    ClothesPrice[playerid] = 70;
    new SkinA = GetPlayerSkin(playerid);
    switch(SkinA)
    {
	        case 115:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.075032, 0.039259, -0.009051, 272.667022, 0.000000, 268.155487); } // Mask7 - skinsur115
			case 114: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.075032, 0.039259, -0.009051, 272.667022, 0.000000, 268.155487); } // Mask7 - skinsur114
			case 116: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.075032, 0.039259, -0.009051, 272.667022, 0.000000, 268.155487); } // Mask7 - skinsur116
			case 173: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058); } // Mask7 - skinsur116
			case 174: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058); } // Mask7 - skinsur116
			case 175: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058); } // Mask7 - skinsur116
		    //groves
	        case 271: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073522, 0.015061, -0.005912, 277.060668, 9.697027, 264.330200); } // Mask3 - saveskinryder
			case 270: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.083064, 0.015061, 0.003734, 270.357788, 2.187248, 264.330200); } // Mask3 - 270sweet
			case 269: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.083064, 0.017489, 0.002312, 270.357788, 2.187248, 266.944274); } // Mask3 - smoke269
			case 105: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754); } // Mask3 - tapadoskin 105 grove
			case 106: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084321, 0.032509, -0.006748, 268.970458, 1.533374, 269.223754); } // Mask3 - skin 106grove
			case 107: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084321, 0.035590, -0.004405, 268.970458, 1.533374, 269.223754); } // Mask3 - skin 107grove
			//Latinos
	        case 108: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084809, 0.026987, 0.000924, 273.545745, 0.572601, 264.837554 ); } // Mask6 - skinvago108
			case 109: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.081629, 0.035036, -0.006385, 273.545745, 0.572601, 264.837554 ); } // Mask6 - skinvago 109
			case 110: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058 ); } // Mask6 - skinvago110
			//Ballas
			case 102: 	{ SetPlayerAttachedObject(playerid, 4,18915, 2, 0.076758, 0.034728, -0.001697, 267.582092, 359.936279, 265.333801 ); } // Mask5 - skin102balla
			case 103: 	{ SetPlayerAttachedObject(playerid, 4,18915, 2, 0.076758, 0.042026, 0.000579, 267.582092, 359.936279, 265.333801 ); } // Mask5 - 103balla
			case 104: 	{ SetPlayerAttachedObject(playerid, 4,18915, 2, 0.076758, 0.042026, 0.000579, 267.582092, 359.936279, 265.333801 ); } // Mask5 - skin 104 balla
			case 293: 	{ SetPlayerAttachedObject(playerid, 4,18915, 2, 0.079601, 0.019614, -0.006095, 272.025512, 0.136046, 268.165863 ); } // Mask5 - oglock
			//Blood
			case 7: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.086248, 0.036498, -0.004328, 270.304412, 359.126678, 266.091674 ); } // Mask2 - blood - 7
			case 67: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.086248, 0.020672, 0.001285, 270.304412, 359.126678, 266.091674 ); } // Mask2 - blood - 67
			case 180: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084799, 0.039217, -0.007458, 270.304412, 359.126678, 271.452209 ); } // Mask2 - blood- 180
			case 19: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.081000, 0.026039, -0.004144, 270.304412, 359.126678, 271.452209 ); } // Mask2 - blood - 19
			case 144: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.110470, 0.043788, -0.002435, 266.909606, 358.832275, 267.704956 ); } // Bandana2 - 144 - blood
		    //Moteros
			case 23:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.082504, 0.038338, -0.005320, 271.407196, 356.295104, 267.907989 ); } // Mask2 - skin 100 motero
			case 247: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.088066, 0.038264, 0.000398, 271.407196, 356.295104, 267.907989 ); } // Mask2 - skin 247 - motoquero
			case 248:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.088066, 0.038264, 0.000398, 271.407196, 356.295104, 267.907989 ); } // Mask2 - skin 248 - motoquero
			case 100:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.088066, 0.038264, 0.000398, 271.407196, 356.295104, 267.907989 ); } // Mask2 - skin 248 - motoquero
			case 33:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.041866, 0.015547, -0.001428, 271.371276, 356.919921, 269.937591 ); } // Mask2 - skin BIEN 33
	}
}
Accesory_Buy(playerid, slot, modelid, price)
{
	Bought(playerid, price);
	switch(slot)
	{
		case 1: PlayerInfo[playerid][pClothes1] = modelid;
		case 2: PlayerInfo[playerid][pClothes2] = modelid;
		case 3: PlayerInfo[playerid][pClothes3] = modelid;
		case 4: PlayerInfo[playerid][pClothes4] = modelid;
		case 5: PlayerInfo[playerid][pClothes5] = modelid;
		default: SendError(playerid, "Error Accesory_Buy [Only case 1-5 are saved]");
	}
	/*if(Accesory[playerid] == 1) 		RemovePlayerAttachedObject(playerid, 3);
	else if(Accesory[playerid] == 2) 	RemovePlayerAttachedObject(playerid, 4);
	else if(Accesory[playerid] == 3) 	RemovePlayerAttachedObject(playerid, 2);
	Message(playerid, COLOR_GRAD2, "Item comprado! Ve a un vestuario para cambiarte a tu ropa!");*/
	Accesory[playerid] = 0;
	Message(playerid, COLOR_GRAD2, "Item comprado, utiliza /qobjeto para quitártelo!");
	return 1;
}
stock SendError(playerid, const string[])
{
	printf("Error: %s",string);
	SendClientMessage(playerid, 0xFF1111FF, "¡Ha ocurrido un error! - Contacta con el scripter");
	return SendClientMessage(playerid, 0xFF1111FF, string);
}
stock FitPlayer(playerid, id, modelid)
{
	if(DressRoom[playerid] == 1)
 	{
			switch(id-1)
			{
   				case 19005: SetPlayerAttachedObject(playerid, 3, 19006, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
	    		case 19006: SetPlayerAttachedObject(playerid, 3, 19007, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
	    		case 19007: SetPlayerAttachedObject(playerid, 3, 19008, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
	    		case 19008: SetPlayerAttachedObject(playerid, 3, 19009, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
	    		case 19009: SetPlayerAttachedObject(playerid, 3, 19010, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
	    		case 19010: SetPlayerAttachedObject(playerid, 3, 19011, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
	    		case 19011: SetPlayerAttachedObject(playerid, 3, 19012, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
	    		case 19012: SetPlayerAttachedObject(playerid, 3, 19013, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
	    		case 19013: SetPlayerAttachedObject(playerid, 3, 19014, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
	    		case 19014: SetPlayerAttachedObject(playerid, 3, 19015, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19015: SetPlayerAttachedObject(playerid, 3, 19016, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19016: SetPlayerAttachedObject(playerid, 3, 19017, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19017: SetPlayerAttachedObject(playerid, 3, 19018, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19018: SetPlayerAttachedObject(playerid, 3, 19019, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19019: SetPlayerAttachedObject(playerid, 3, 19020, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19020: SetPlayerAttachedObject(playerid, 3, 19021, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19021: SetPlayerAttachedObject(playerid, 3, 19022, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19022: SetPlayerAttachedObject(playerid, 3, 19023, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19023: SetPlayerAttachedObject(playerid, 3, 19024, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19024: SetPlayerAttachedObject(playerid, 3, 19025, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19025: SetPlayerAttachedObject(playerid, 3, 19026, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19026: SetPlayerAttachedObject(playerid, 3, 19027, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19027: SetPlayerAttachedObject(playerid, 3, 19028, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19028: SetPlayerAttachedObject(playerid, 3, 19029, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19029: SetPlayerAttachedObject(playerid, 3, 19030, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19030: SetPlayerAttachedObject(playerid, 3, 19031, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19031: SetPlayerAttachedObject(playerid, 3, 19032, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19032: SetPlayerAttachedObject(playerid, 3, 19033, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19033: SetPlayerAttachedObject(playerid, 3, 19034, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 19034: SetPlayerAttachedObject(playerid, 3, 19035, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000);
			    case 115:	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.075032, 0.039259, -0.009051, 272.667022, 0.000000, 268.155487);
				case 114: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.075032, 0.039259, -0.009051, 272.667022, 0.000000, 268.155487);
				case 116: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.075032, 0.039259, -0.009051, 272.667022, 0.000000, 268.155487);
				case 173: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058);
				case 174: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058);
				case 175: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058);
	        	case 271: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073522, 0.015061, -0.005912, 277.060668, 9.697027, 264.330200);
				case 270: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.083064, 0.015061, 0.003734, 270.357788, 2.187248, 264.330200);
				case 269: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.083064, 0.017489, 0.002312, 270.357788, 2.187248, 266.944274);
				case 105: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
				case 106: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084321, 0.032509, -0.006748, 268.970458, 1.533374, 269.223754);
				case 107: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084321, 0.035590, -0.004405, 268.970458, 1.533374, 269.223754);
    			case 108: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084809, 0.026987, 0.000924, 273.545745, 0.572601, 264.837554 );
				case 109: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.081629, 0.035036, -0.006385, 273.545745, 0.572601, 264.837554 );
				case 110: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058 );
				case 102: 	SetPlayerAttachedObject(playerid, 4,18915, 2, 0.076758, 0.034728, -0.001697, 267.582092, 359.936279, 265.333801 );
				case 103: 	SetPlayerAttachedObject(playerid, 4,18915, 2, 0.076758, 0.042026, 0.000579, 267.582092, 359.936279, 265.333801 );
				case 104: 	SetPlayerAttachedObject(playerid, 4,18915, 2, 0.076758, 0.042026, 0.000579, 267.582092, 359.936279, 265.333801 );
				case 293: 	SetPlayerAttachedObject(playerid, 4,18915, 2, 0.079601, 0.019614, -0.006095, 272.025512, 0.136046, 268.165863 );
				case 7: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.086248, 0.036498, -0.004328, 270.304412, 359.126678, 266.091674 );
				case 67: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.086248, 0.020672, 0.001285, 270.304412, 359.126678, 266.091674 );
				case 180: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084799, 0.039217, -0.007458, 270.304412, 359.126678, 271.452209 );
				case 19: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.081000, 0.026039, -0.004144, 270.304412, 359.126678, 271.452209 );
				case 144: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.110470, 0.043788, -0.002435, 266.909606, 358.832275, 267.704956 );
				case 23:	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.082504, 0.038338, -0.005320, 271.407196, 356.295104, 267.907989 );
				case 247: 	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.088066, 0.038264, 0.000398, 271.407196, 356.295104, 267.907989 );
				case 248:	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.088066, 0.038264, 0.000398, 271.407196, 356.295104, 267.907989 );
				case 100:	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.088066, 0.038264, 0.000398, 271.407196, 356.295104, 267.907989 );
				case 33:	SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.041866, 0.015547, -0.001428, 271.371276, 356.919921, 269.937591 );
			    case 18925: SetPlayerAttachedObject(playerid, 2, 18926, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			    case 18926: SetPlayerAttachedObject(playerid, 2, 18927, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			    case 18927: SetPlayerAttachedObject(playerid, 2, 18928, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			    case 18928: SetPlayerAttachedObject(playerid, 2, 18929, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			    case 18929: SetPlayerAttachedObject(playerid, 2, 18930, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			    case 18930: SetPlayerAttachedObject(playerid, 2, 18931, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			    case 18931: SetPlayerAttachedObject(playerid, 2, 18932, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			    case 18932: SetPlayerAttachedObject(playerid, 2, 18933, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			    case 18933: SetPlayerAttachedObject(playerid, 2, 18934, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			    case 18934: SetPlayerAttachedObject(playerid, 2, 18935, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919);
			}
	}

}
function SaveTrunk()
{
	new idx;
	new File: file2;
	idx = 1;
	while (idx < sizeof(CarInfo))
	{
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "%i,%i,%i,%i,%i,%i,%i,%i,%i,%f\n",
		vehTrunk[idx][1],
		vehTrunkAmmo[idx][1],
		vehTrunk[idx][2],
		vehTrunkAmmo[idx][2],
		vehTrunk[idx][3],
		vehTrunkAmmo[idx][3],
		vehTrunk[idx][4],
		vehTrunkAmmo[idx][4],
		vehTrunkCounter[idx],
		vehTrunkArmour[idx]);
		if(idx == 1)
		{
			file2 = fopen("trunk.cfg", io_write);
		}
		else
		{
			file2 = fopen("trunk.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
function LoadTrunk()
{
	new arrCoords[13][64];
	new strFromFile2[128];
	new File: file = fopen("trunk.cfg", io_read);
	if (file)
	{
		new idx = 1;
		while (idx < sizeof(CarInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    vehTrunk[idx][1] = strval(arrCoords[0]);
		    vehTrunkAmmo[idx][1] = strval(arrCoords[1]);
		    vehTrunk[idx][2] = strval(arrCoords[2]);
		    vehTrunkAmmo[idx][2] = strval(arrCoords[3]);
		    vehTrunk[idx][3] = strval(arrCoords[4]);
		    vehTrunkAmmo[idx][3] = strval(arrCoords[5]);
		    vehTrunk[idx][4] = strval(arrCoords[6]);
		    vehTrunkAmmo[idx][4] = strval(arrCoords[7]);
		    vehTrunkCounter[idx] = strval(arrCoords[8]);
		    vehTrunkArmour[idx] = floatstr(arrCoords[9]);
		    idx++;
		}
	}
	return 1;
}
function UnsetFlood(playerid)
{
	Flood[playerid] = 0;
	ChatBan[playerid] = 0;
	Muted[playerid] = 0;
	return Message(playerid, COLOR_GRAD2, "* Has sido desilenciado, puedes volver a hablar");
}
AddCarTuning(vehicleid)
{
    ChangeVehicleColor(vehicleid, CarInfo[vehicleid][cColorOne], CarInfo[vehicleid][cColorTwo]);
    if(CarInfo[vehicleid][cWheel] > 0) 			AddVehicleComponent(vehicleid, CarInfo[vehicleid][cWheel]);
	if(CarInfo[vehicleid][cHydraulics] > 0) 	AddVehicleComponent(vehicleid, CarInfo[vehicleid][cHydraulics]);
	if(CarInfo[vehicleid][cNitro] > 0) 	 		AddVehicleComponent(vehicleid, CarInfo[vehicleid][cNitro]);
	if(CarInfo[vehicleid][cSideskirt] > 0)
	{
        AddVehicleComponent(vehicleid, CarInfo[vehicleid][cSideskirt]);
        new skirt = CarInfo[vehicleid][cSideskirt];
        // X-FLOW
        if(skirt == 1030) AddVehicleComponent(vehicleid, 1031);
        else if(skirt == 1039) AddVehicleComponent(vehicleid, 1041);
        else if(skirt == 1048) AddVehicleComponent(vehicleid, 1052);
        else if(skirt == 1070) AddVehicleComponent(vehicleid, 1072);
        else if(skirt == 1057) AddVehicleComponent(vehicleid, 1063);
        else if(skirt == 1093) AddVehicleComponent(vehicleid, 1095);
        // ALIEN
        if(skirt == 1026) AddVehicleComponent(vehicleid, 1027);
        else if(skirt == 1036) AddVehicleComponent(vehicleid, 1040);
        else if(skirt == 1047) AddVehicleComponent(vehicleid, 1051);
        else if(skirt == 1069) AddVehicleComponent(vehicleid, 1071);
        else if(skirt == 1056) AddVehicleComponent(vehicleid, 1062);
        else if(skirt == 1094) AddVehicleComponent(vehicleid, 1090);
	}
	if(CarInfo[vehicleid][cRoof] > 0) 	 		AddVehicleComponent(vehicleid, CarInfo[vehicleid][cRoof]);
	if(CarInfo[vehicleid][cSpoiler] > 0) 	 	AddVehicleComponent(vehicleid, CarInfo[vehicleid][cSpoiler]);
	if(CarInfo[vehicleid][cRearBumper] > 0) 	AddVehicleComponent(vehicleid, CarInfo[vehicleid][cRearBumper]);
	if(CarInfo[vehicleid][cFrontBumper] > 0) 	AddVehicleComponent(vehicleid, CarInfo[vehicleid][cFrontBumper]);
	if(CarInfo[vehicleid][cExhaust] > 0) 		AddVehicleComponent(vehicleid, CarInfo[vehicleid][cExhaust]);
	if(CarInfo[vehicleid][cPaintjob] > 0) 		ChangeVehiclePaintjob(vehicleid, CarInfo[vehicleid][cPaintjob]-1);
}
stock IsLocolowVehicle(veh)
{
	new model = GetVehicleModel(veh);
    switch(model)
    {
        case 412,534,535,536,566,567,576: return 1;
    }
    return 0;
}
stock IsWAAVehicle(veh)
{
    new model = GetVehicleModel(veh);
    switch(model)
    {
        case 558,559,560,561,562,565: return 1;
    }
    return 0;
}
function ResetAcWarn(playerid)
{
	PlayerGotSpottedRecently[playerid] = 0;
	Checked[playerid] = 0;
	return 1;
}
function SafeGivePlayerWeapon(playerid, weaponid, ammo)
{
	ScriptWeaponsUpdated[playerid] = 1;
	GivePlayerWeapon(playerid, weaponid, ammo);
    SetTimerEx("UpdateWeapons",2500,false,"i",playerid);
	return 1;
}
function UpdateWeapons(plyid)
{
	new weaponid, ammo;
    for(new i = 2; i < 13; i++)
	{
	    GetPlayerWeaponData(plyid, i, weaponid, ammo);
		ScriptWeapons[plyid][i] = weaponid;
	}
	ScriptWeaponsUpdated[plyid] = 0;
	return 1;
}
function SafeResetPlayerWeapons(playerid)
{
	ScriptWeaponsUpdated[playerid] = 1;
	ResetPlayerWeapons(playerid);
	SetTimerEx("UpdateWeapons",100,false,"i",playerid);
	return 1;
}

Ayuda(playerid, tip)
{
	switch(tip)
	{
		case 0:
		{
		    ClearChatbox(playerid, 10);
		    if(Team_LSPD(playerid))
		    {
		        Message(playerid, -1, "{FFFFFF}Departamento de Policía");
		        Message(playerid, -1, "{0098FF}/radio - /r - /d - (/m)egafono - /su - /duty /esposar - /ta /gob /arrestar");
		        Message(playerid, -1, "{0098FF}/quitar - /multar - /drag - /bk(c) - (/tlc) - /miranda - (/bar)rera - /qb(s) -  /placa - /expediente");
				Message(playerid, -1, "{0098FF}(/ant)ecedente - (/su)spect - /limpiar - /sospechosos - /vercinturon /controlcelda");
		    }
		    else if(Team_SAMUR(playerid) || Team_LVMD(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Equipo SAMUR");
                Message(playerid, COLOR_GRAD2, "{EC3226}/ap /Asistir /Curar /Diagnostico /Pcinfo /Operar /tlc /duty ");
                Message(playerid, COLOR_GRAD2, "{EC3226}Directiva: /FondoHospital /TaxaSeguro /TaxaCompraSeguro /Hospitalizacion ");
			}
			else if(Team_Taxi(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Taxistas");
                Message(playerid, -1, "{ECE826}/duty  /gpstaxi                  [LÍDER] /tarifa");
                Message(playerid, -1, "{ECE826}Mensaje a la faccion: Estamos creando un nuevo sistema para taxista, por favor tengan paciencia.");
			}
			else if(Team_Mecanicos(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Taller de Mecánicos");
                Message(playerid, COLOR_GRAD2, "{DBDFFF} /mm /duty /meca (Deposito) /eqmeca /ap / cp (taller) /mabrir /cstat");
			}
			else if(Umbrella7(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Centro de Inteligencia");
                Message(playerid, -1, "{DBE0C0}[DETECTIVE] /Encontrar /Encontrarveh /RastrearTelefono /Placa /Menu");
			}
			else if(Pandilleros(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Pandilleros");
                Message(playerid, -1, "{72DDC0}/robar /lockhq /armarse");

			}
			else if(Mafioso(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Mafiosos");
                Message(playerid, -1, "{FFDD11}/equipo /robarpieza /cerrajear /puente /atar /vendar /lockhq");
			}
			else if(Mafia_Alqaeda(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Al Qaeda");
                Message(playerid, -1, "{FFDD11}/equipo /ara /cerrajear /puente /atar /vendar /lockhq /controlalqaeda /lugarbomba /cambiarse /hacktrans");
			}
			else if(Mafia_Espanola(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Mafia The Visage");
                Message(playerid, -1, "{FFDD11}/equipo /cerrajear /puente /atar /vendar /lockhq /controlcelda");
			}
			else if(Mafia_Alemana(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Mafia Alemana");
                Message(playerid, -1, "{FFDD11}/equipo /cerrajear /puente /atar /vendar /lockhq /controlcelda /robarpieza /ale /cambiarropa");
			}
			else if(TriadasTeam(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Triadas");
                Message(playerid, -1, "{FFDD11}/equipo /encontrar /cerrajear /puente /atar /vendar /lockhq");
                Message(playerid, -1, "{FFDD11}/apgarage /cpgarage");
			}
			else if(Hitman(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Hitman");
                Message(playerid, -1, "{FFDD11}/equipo /hits /encontrar /disfraz /amascara /equipo");
			}
			else if(IsAnInstructor(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Licencieros");
                Message(playerid, -1, "{FF6655}/licencia /evaluar");
			}
			else if(Journalist(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}San Andreas Radio Televisión");
                Message(playerid, -1, "{00BB22}(/n)oticias /entrevista");
			}
			else if(Team_Mecanicos(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Taller de Mecánicos");
                Message(playerid, COLOR_GRAD2, "{DBDFFF} /mm /duty");
			}
			else if(Gobierno(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Presidente");
			    Message(playerid, COLOR_GRAD2, "(/gob)ierno /Duty /Fondoestado");
			    Message(playerid, COLOR_GRAD2, "(/ImpuestoPayDay /ImpuestoRentaVeh /Impuestopasaporte");
			}
			else if(Team_FBI(playerid))
			{
		        Message(playerid, -1, "{FFFFFF}Equipo FBI");
		        Message(playerid, -1, "{72B3CD}(/r)adio (/d)epartments (/gob)ernaments(/m)egaphone (/su)spect /arrestar /duty /esposar (/ta)zer");
				Message(playerid, -1, "{72B3CD}/revisar /cachearinv /quitar /multar /drag /miranda");
				Message(playerid, -1, "{72B3CD}/placa (/ant)ecedente (/su)spect /limpiar /sospechosos");
			}
			else if(Team_NG(playerid))
			{
		        Message(playerid, -1, "{FFFFFF}Equipo Militar");
		        Message(playerid, -1, "(/r)adio (/d)epartments (/m)egaphone (/f)accion /apeaje /equipo /esposar (/ta)zer /multar");
		        Message(playerid, -1, "/quitar /controlcelda /vercinturon /automatico /dutysaem [PUERTAS]/abrirp[SE CIERRAN AUTOMATICANENTE]");
			}
			else if(IsANarco(playerid))
			{
			    Message(playerid, COLOR_GRAD2, "-=[Narcotraficante]=-");
			    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /cosechardrogas /fabricar /venderarma /pda /importardrogas");
			}
		}
		case 1:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "{D3FF8D}Ayuda - Chat");
		    Message(playerid, COLOR_WHITE, "{FFFFFF}Comandos IC:  (/g)ritar (/l)ow /me /do (/r)adio /c /intentar");
		    Message(playerid, COLOR_WHITE, "{FFFFFF}Comandos OOC: /b (/w)hisper (/f)accion");
		}
		case 2:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda General]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: [ADMINISTRACIÓN] /re /duda /n /solicitaradmin");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /cuenta /subirnivel");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /pagar /hora /id /comer /cfumar /cropa /licencias /acciones /ven /seguro /pasaporte");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /ap /cp /apgarage /cpgarage (/w)hisper /togooc /tognews /togfam /togpm /togphone");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /eject /usardrogas /llenar /admins /moneda /dar /macros /ayudarol");
		}
		case 3:
		{
		    ClearChatbox(playerid, 10);
		    if(PlayerInfo[playerid][pLeader] < 1) return Message(playerid, COLOR_GRAD2, "No eres líder!");
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Líder]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /contratar /despedir /giverank");
		}
		case 4:
		{
		    ClearChatbox(playerid, 10);
		    if(PlayerInfo[playerid][pJob] == 0) return Message(playerid, COLOR_GRAD2, "No tienes job!");
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Trabajo]=-");
		    if(PlayerInfo[playerid][pJob] == 1 || PlayerInfo[playerid][pJob] == 3) { Message(playerid, COLOR_GRAD2, "Comandos disponibles: /ruta /renunciar"); }
		    if(PlayerInfo[playerid][pJob] == 2) { Message(playerid, COLOR_GRAD2, "Comandos disponibles: /barrer /dbarrer /renunciar"); }
		    if(PlayerInfo[playerid][pJob] == 4) { Message(playerid, COLOR_GRAD2, "Comandos disponibles: /vendertelefono /renunciar"); }
		    if(PlayerInfo[playerid][pJob] == 5) { Message(playerid, COLOR_GRAD2, "Comandos disponibles: /robar /renunciar"); }
		    if(PlayerInfo[playerid][pJob] == 6) { Message(playerid, COLOR_GRAD2, "Comandos disponibles: /vpizza /tomarpizza [En la Cocina] /renunciar"); }
		    if(PlayerInfo[playerid][pJob] == 7) { Message(playerid, COLOR_GRAD2, "Comandos disponibles: /vhelado [en el auto de heladero] /renunciar"); }
            if(PlayerInfo[playerid][pJob] == 8) { Message(playerid, COLOR_GRAD2, "Comandos disponibles: /ruta /renunciar"); }
		}
		case 5:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Teléfono]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /iphone /colgar /altavoz");
		}
		case 6:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_GRAD2, "-=[Ayuda Casa]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /timehouse /cerradura /comprarcasa /vendercasa /renta /desalojar /cajafuerte /cinfo /garma /sarma");
		}
		case 7:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_GRAD2, "Utilize: /v <Funcíon> /venderveh(2-3) /cvehiculo(2-3) /pcu");
            Message(playerid, COLOR_GRAD2, "Funcíon: motor, luces, estacionar(2-3) capo, maletero, seguro(2-3), vender(2-3),intermitentes");
			}
		case 8:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Banco]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /depositar /sacar /transferir /balance");
		}
		case 9:
		{
		    ClearChatbox(playerid, 10);
		    if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "Usted no es premium!");
		    Message(playerid, -1, "{00E7FF}-=[Ayuda Premium]=-");
            if(PlayerInfo[playerid][pDonateT] >= 1) { Message(playerid, COLOR_GRAD2, "Comandos Premium: /v Seguro3 - /v Estacionar3 - /Cvehiculo3 /v Vender3");}
            if(PlayerInfo[playerid][pDonateT] >= 1) { Message(playerid, COLOR_GRAD2, "Comandos Premium: /Skin <ID> - /guiatelefonica- /Traercarro - /Reparar /Colorpremium");}
            if(PlayerInfo[playerid][pDonateT] >= 1) { Message(playerid, COLOR_GRAD2, "Comandos Premium: /Luzverde /Luzroja /Luzazul /Xenonoff ");}
            if(PlayerInfo[playerid][pDonateT] >= 1) { Message(playerid, COLOR_GRAD2, "Comandos Premium: /togpre - /p /quitarcolor /colornombre /premiumregalo /armaspremium");}
            if(PlayerInfo[playerid][pDonateT] >= 2) { Message(playerid, COLOR_GRAD2, "Comandos Premium: /cvehiculo4 /v estacionar4 /v seguro4 /v vender4");}
		}
		case 10:
		{
		     ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Negocio]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /comprarnegocio /vendernegocio /sganancias /binfo /extorcion /qextorcion [Extorcion]/recaudar");
		}
		case 11:
		{
		    ClearChatbox(playerid, 11);
		    Message(playerid, COLOR_GRAD2, "-=[Ayuda Casa dos]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /timehouse2 /cerradura2 /comprarcasa /vendercasa2 /renta2 /desalojar2 /cajafuerte2 /cinfo2 /garma2 /sarma2");
		}
	}
	return 1;
}

MessageEx(playerid_1, playerid_2, const color, const string[])
{
	Message(playerid_1, color, string);
	Message(playerid_2, color, string);
}

RadioMsg(const channel, const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i) && RadioOn[i])
			if(PFrecuencia[i] == channel) SendClientMessage(i, 0xDFD575FF, string);
}

SellHouse(playerid, houseid)
{
	PlayerInfo[playerid][pMats] += HouseInfo[houseid][hMats];
	PlayerInfo[playerid][pDrugs] += HouseInfo[houseid][hDrugs];
	PlayerInfo[playerid][pSpeed] += HouseInfo[houseid][hSpeed];
	PlayerInfo[playerid][pEctasy] += HouseInfo[houseid][hEctasy];
	PlayerInfo[playerid][pRitalin] += HouseInfo[houseid][hRitalin];
	PlayerInfo[playerid][pHeroina] += HouseInfo[houseid][hHeroina];
	PlayerInfo[playerid][pMarihuana] += HouseInfo[houseid][hMarihuana];
	HouseInfo[houseid][hLock] = 1;
	HouseInfo[houseid][hOwned] = 0;
	HouseInfo[houseid][hRent] = 0;
	HouseInfo[houseid][hTime] = 1999999999;
	HouseInfo[houseid][hRentabil] = 0;
	HouseInfo[houseid][hWep] = 0;
	HouseInfo[houseid][hAmmo] = 0;
	HouseInfo[houseid][hMats] = 0;
	HouseInfo[houseid][hDrugs] = 0;
	HouseInfo[houseid][hSpeed] = 0;
	HouseInfo[houseid][hEctasy] = 0;
	HouseInfo[houseid][hRitalin] = 0;
	HouseInfo[houseid][hHeroina] = 0;
	HouseInfo[houseid][hMarihuana] = 0;
	strmid(HouseInfo[houseid][hOwner], "El Estado", 0, strlen("El Estado"), 64);
	UpdateHouses();
	OnPropTextdrawUpdate(houseid);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	return 1;
}
function RemoveObjetos(playerid)
{
//IVAN OSTA
RemoveBuildingForPlayer(playerid, 3682, -1029.3438, -702.8125, 54.8516, 0.25);
RemoveBuildingForPlayer(playerid, 17339, -1041.6641, -728.3359, 44.9531, 0.25);
RemoveBuildingForPlayer(playerid, 17340, -1072.8281, -620.6328, 40.2969, 0.25);
RemoveBuildingForPlayer(playerid, 17341, -1083.4766, -687.9453, 31.0234, 0.25);
RemoveBuildingForPlayer(playerid, 17342, -1107.0703, -620.8906, 40.2969, 0.25);
RemoveBuildingForPlayer(playerid, 17343, -1055.5313, -617.6094, 82.6094, 0.25);
RemoveBuildingForPlayer(playerid, 17344, -1056.0469, -632.4141, 82.7891, 0.25);
RemoveBuildingForPlayer(playerid, 17345, -1026.7500, -705.1719, 82.4063, 0.25);
RemoveBuildingForPlayer(playerid, 17346, -1014.3594, -703.8828, 83.2109, 0.25);
RemoveBuildingForPlayer(playerid, 17347, -1055.1094, -603.5703, 61.8203, 0.25);
RemoveBuildingForPlayer(playerid, 17348, -1004.2969, -704.1484, 63.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -1124.1797, -682.5625, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -1124.1797, -706.7500, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -1124.1797, -658.3750, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -1124.1797, -634.1953, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1114.4531, -595.7969, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 17013, -1107.0703, -620.8906, 40.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1107.3906, -595.8281, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1101.1250, -595.8594, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 17014, -1041.6641, -728.3359, 44.9531, 0.25);
RemoveBuildingForPlayer(playerid, 17024, -1026.7500, -705.1719, 82.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3673, -1029.3438, -702.8125, 54.8516, 0.25);
RemoveBuildingForPlayer(playerid, 17001, -1083.4766, -687.9453, 31.0234, 0.25);
RemoveBuildingForPlayer(playerid, 17454, -1089.9297, -684.7891, 44.0859, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1037.4219, -694.1016, 36.1172, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1030.3594, -694.1406, 36.1172, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1024.0938, -694.1719, 36.1172, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -999.7813, -682.5625, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -999.7813, -706.7500, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 17022, -1004.2969, -704.1484, 63.5000, 0.25);
RemoveBuildingForPlayer(playerid, 17023, -1014.3594, -703.8828, 83.2109, 0.25);
RemoveBuildingForPlayer(playerid, 3674, -1020.1094, -702.4375, 57.3359, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -973.7031, -706.7500, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -973.7031, -682.5625, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 3637, -992.2891, -711.9766, 38.9922, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -999.7813, -658.3750, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -973.7031, -658.3750, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 17017, -1056.0469, -632.4141, 82.7891, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -973.7031, -634.1953, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -999.7813, -634.1953, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1043.6406, -632.3281, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 17021, -1072.8281, -620.6328, 40.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1043.6406, -626.0625, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1065.9375, -595.8594, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1079.2656, -595.7969, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1072.2031, -595.8281, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 17015, -1055.1094, -603.5703, 61.8203, 0.25);
RemoveBuildingForPlayer(playerid, 17016, -1055.5313, -617.6094, 82.6094, 0.25);
RemoveBuildingForPlayer(playerid, 727, -1059.4219, -564.6641, 30.6328, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1043.6406, -619.0000, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 727, -1064.2578, -516.0781, 30.7422, 0.25);
RemoveBuildingForPlayer(playerid, 727, -1026.7188, -513.1094, 30.8672, 0.25);
RemoveBuildingForPlayer(playerid, 727, -1013.6719, -501.5625, 30.1016, 0.25);
RemoveBuildingForPlayer(playerid, 727, -1026.7969, -474.1328, 32.5703, 0.25);
RemoveBuildingForPlayer(playerid, 727, -1057.6797, -478.4063, 32.5703, 0.25);
//LAUTARO MONTES
RemoveBuildingForPlayer(playerid, 17349, -542.0078, -522.8438, 29.5938, 0.25);
RemoveBuildingForPlayer(playerid, 17019, -606.0313, -528.8203, 30.5234, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -573.0547, -559.6953, 38.5234, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -533.5391, -559.6953, 38.5469, 0.25);
RemoveBuildingForPlayer(playerid, 1415, -541.4297, -561.2266, 24.5859, 0.25);
RemoveBuildingForPlayer(playerid, 17012, -542.0078, -522.8438, 29.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1415, -513.7578, -561.0078, 24.5859, 0.25);
RemoveBuildingForPlayer(playerid, 1441, -503.6172, -540.5313, 25.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1415, -502.6094, -528.6484, 24.5859, 0.25);
RemoveBuildingForPlayer(playerid, 1440, -502.1172, -521.0313, 25.0234, 0.25);
RemoveBuildingForPlayer(playerid, 17349, -542.0078, -522.8438, 29.5938, 0.25);
RemoveBuildingForPlayer(playerid, 17019, -606.0313, -528.8203, 30.5234, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -573.0547, -559.6953, 38.5234, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -533.5391, -559.6953, 38.5469, 0.25);
RemoveBuildingForPlayer(playerid, 1415, -541.4297, -561.2266, 24.5859, 0.25);
RemoveBuildingForPlayer(playerid, 17012, -542.0078, -522.8438, 29.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1415, -513.7578, -561.0078, 24.5859, 0.25);
RemoveBuildingForPlayer(playerid, 1441, -503.6172, -540.5313, 25.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1415, -502.6094, -528.6484, 24.5859, 0.25);
RemoveBuildingForPlayer(playerid, 1440, -502.1172, -521.0313, 25.0234, 0.25);
RemoveBuildingForPlayer(playerid, 1441, -502.4063, -513.0156, 25.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1415, -620.4141, -490.5078, 24.5859, 0.25);
RemoveBuildingForPlayer(playerid, 1415, -619.6250, -473.4531, 24.5859, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -573.0547, -479.9219, 38.5781, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -552.7656, -479.9219, 38.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1440, -553.6875, -481.6328, 25.0234, 0.25);
RemoveBuildingForPlayer(playerid, 1441, -554.4531, -496.1797, 25.1641, 0.25);
RemoveBuildingForPlayer(playerid, 1441, -537.0391, -469.1172, 25.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -532.4688, -479.9219, 38.6484, 0.25);
RemoveBuildingForPlayer(playerid, 1440, -516.9453, -496.6484, 25.0234, 0.25);
RemoveBuildingForPlayer(playerid, 1440, -503.1250, -509.0000, 25.0234, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -512.1641, -479.9219, 38.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -491.8594, -479.9219, 38.5859, 0.25);
RemoveBuildingForPlayer(playerid, 17020, -475.9766, -544.8516, 28.1172, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -471.5547, -479.9219, 38.6250, 0.25);
//LISAN
RemoveBuildingForPlayer(playerid, 8513, 1927.3906, 703.2266, 14.0781, 0.25);
RemoveBuildingForPlayer(playerid, 8820, 1927.3906, 703.2266, 14.0781, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1959.9922, 658.3516, 10.2266, 0.25);
RemoveBuildingForPlayer(playerid, 8887, 1967.5547, 653.0781, 10.4688, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1878.6484, 683.7734, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1881.3828, 683.7734, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1879.0547, 698.9141, 10.7109, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1879.0547, 710.3359, 10.7109, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1917.7109, 683.2656, 12.4609, 0.25);
RemoveBuildingForPlayer(playerid, 1343, 1885.4844, 683.7500, 10.5625, 0.25);
RemoveBuildingForPlayer(playerid, 628, 1905.0859, 703.2969, 11.8125, 0.25);
RemoveBuildingForPlayer(playerid, 8841, 1924.8203, 703.2188, 13.1484, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1937.2969, 683.2656, 12.4609, 0.25);
RemoveBuildingForPlayer(playerid, 627, 1938.6563, 703.1328, 11.9297, 0.25);
RemoveBuildingForPlayer(playerid, 627, 1940.2031, 703.1328, 11.9297, 0.25);
RemoveBuildingForPlayer(playerid, 644, 1945.9766, 703.2031, 10.1250, 0.25);
RemoveBuildingForPlayer(playerid, 632, 1896.0703, 717.8984, 10.2734, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1884.8359, 722.7031, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1882.1016, 722.7031, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1343, 1877.8828, 722.7344, 10.5625, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1937.3594, 723.0859, 12.4609, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1917.4219, 723.0859, 12.4609, 0.25);
RemoveBuildingForPlayer(playerid, 8888, 1967.5547, 753.2656, 10.4688, 0.25);
//Barrio premium
//Traficantes
RemoveBuildingForPlayer(playerid, 3276, -116.6172, -153.6328, 2.9297, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -124.4297, -136.6172, 2.9453, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -108.0234, -114.6563, 2.9453, 0.25);
RemoveBuildingForPlayer(playerid, 3276, -119.0156, -112.8672, 2.9063, 0.25);
//SEBASTIAN P
RemoveBuildingForPlayer(playerid, 11371, -2028.1328, -111.2734, 36.1328, 0.25);
RemoveBuildingForPlayer(playerid, 11372, -2076.4375, -107.9297, 36.9688, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -2094.3438, -143.1953, 48.3516, 0.25);
RemoveBuildingForPlayer(playerid, 11099, -2056.9922, -184.5469, 34.4141, 0.25);
RemoveBuildingForPlayer(playerid, 1497, -2029.0156, -120.0625, 34.2578, 0.25);
RemoveBuildingForPlayer(playerid, 11015, -2028.1328, -111.2734, 36.1328, 0.25);
RemoveBuildingForPlayer(playerid, 11014, -2076.4375, -107.9297, 36.9688, 0.25);
RemoveBuildingForPlayer(playerid, 1532, -2025.8281, -102.4688, 34.2734, 0.25);

//PREMIUM
RemoveBuildingForPlayer(playerid, 1462, 826.8516, -1385.6719, 12.5078, 0.25);
RemoveBuildingForPlayer(playerid, 1440, 857.3750, -1381.1641, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 1365, 861.9844, -1380.4609, 13.6250, 0.25);

//FFFACION ALQAEDA
RemoveBuildingForPlayer(playerid, 3366, 276.6563, 1955.7656, 16.6328, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
RemoveBuildingForPlayer(playerid, 16670, 330.7891, 1813.2188, 17.8281, 0.25);
RemoveBuildingForPlayer(playerid, 16662, 212.1094, 1823.2969, 6.6094, 0.25);
RemoveBuildingForPlayer(playerid, 3280, 264.3047, 1822.9609, 4.4219, 0.25);
RemoveBuildingForPlayer(playerid, 16095, 279.1328, 1829.7813, 16.6328, 0.25);
RemoveBuildingForPlayer(playerid, 3280, 299.4688, 1819.7813, 4.4922, 0.25);
RemoveBuildingForPlayer(playerid, 3260, 259.0234, 1861.9063, 8.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3260, 259.9688, 1864.9375, 8.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3260, 258.0781, 1862.9531, 8.7578, 0.25);
RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
RemoveBuildingForPlayer(playerid, 3260, 259.9688, 1866.9219, 8.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3260, 258.0781, 1866.9219, 8.7578, 0.25);
RemoveBuildingForPlayer(playerid, 16096, 120.5078, 1934.0313, 19.8281, 0.25);
RemoveBuildingForPlayer(playerid, 16671, 193.9531, 2051.7969, 20.1797, 0.25);
RemoveBuildingForPlayer(playerid, 3394, 271.7891, 1852.9531, 7.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3395, 276.2734, 1852.9375, 7.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3397, 280.6563, 1855.5234, 7.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3383, 275.3750, 1859.1484, 7.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3383, 269.0938, 1858.3203, 7.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3389, 266.8672, 1852.9063, 7.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3396, 275.3125, 1874.2422, 7.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3384, 278.0938, 1869.1016, 9.1797, 0.25);
RemoveBuildingForPlayer(playerid, 3384, 278.0938, 1870.3359, 9.1797, 0.25);
RemoveBuildingForPlayer(playerid, 3387, 271.2500, 1869.6953, 7.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3388, 271.2266, 1870.9297, 7.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3386, 271.2656, 1868.1875, 7.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3395, 280.3281, 1874.2344, 7.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3384, 276.5938, 1868.9609, 9.1797, 0.25);
RemoveBuildingForPlayer(playerid, 3384, 276.5938, 1870.1953, 9.1797, 0.25);
RemoveBuildingForPlayer(playerid, 3279, 267.0625, 1895.2969, 16.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3268, 276.6563, 1955.7656, 16.6328, 0.25);
RemoveBuildingForPlayer(playerid, 3267, 354.4297, 2028.4922, 22.4141, 0.25);
RemoveBuildingForPlayer(playerid, 3277, 354.4141, 2028.5000, 22.3750, 0.25);
RemoveBuildingForPlayer(playerid, 16668, 357.9375, 2049.4219, 16.8438, 0.25);
RemoveBuildingForPlayer(playerid, 16669, 380.2578, 1914.9609, 17.4297, 0.25);
//FACCION MAXI
RemoveBuildingForPlayer(playerid, 8087, 1667.7422, 723.2266, 21.0938, 0.25);
RemoveBuildingForPlayer(playerid, 8113, 1665.1719, 687.0469, 14.3906, 0.25);
RemoveBuildingForPlayer(playerid, 8114, 1634.7188, 772.8438, 13.8203, 0.25);
RemoveBuildingForPlayer(playerid, 8115, 1695.4922, 673.2188, 13.8203, 0.25);
RemoveBuildingForPlayer(playerid, 8159, 1665.5625, 753.8281, 14.3906, 0.25);
RemoveBuildingForPlayer(playerid, 8254, 1665.1719, 687.0469, 14.3906, 0.25);
RemoveBuildingForPlayer(playerid, 8255, 1665.5625, 753.8281, 14.3906, 0.25);
RemoveBuildingForPlayer(playerid, 659, 1579.9297, 695.0781, 8.7656, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1589.9141, 671.9453, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1589.9141, 669.1172, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1589.9141, 674.8438, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1589.9141, 677.6641, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1421, 1620.6328, 703.9688, 10.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1648.5469, 674.8438, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1648.5469, 671.9453, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1648.5469, 669.1172, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1648.5469, 677.6641, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 8078, 1634.7188, 772.8438, 13.8203, 0.25);
RemoveBuildingForPlayer(playerid, 8077, 1695.4922, 673.2188, 13.8203, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.0547, 744.4297, 10.9141, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.0547, 745.6172, 10.4688, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.0547, 744.3750, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.1875, 745.4922, 11.3594, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.0547, 742.7188, 10.4688, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.0547, 741.5469, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.0547, 747.0781, 10.9141, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.0547, 747.2734, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.0547, 748.4375, 10.4688, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 1709.0547, 750.0938, 10.0625, 0.25);
RemoveBuildingForPlayer(playerid, 8465, 2364.6719, 683.2031, -16.7344, 0.25);
RemoveBuildingForPlayer(playerid, 8744, 2364.6719, 683.2031, -16.7344, 0.25);
//CASA CLAUDIO
RemoveBuildingForPlayer(playerid, 3778, 445.0313, -1875.0000, 3.7422, 0.25);
RemoveBuildingForPlayer(playerid, 3615, 445.0313, -1875.0000, 3.7422, 0.25);
//CASA DE TONY
RemoveBuildingForPlayer(playerid, 3734, 985.5391, -683.6641, 126.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3605, 985.5391, -683.6641, 126.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2916.6172, 419.7344, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2880.3828, 419.7344, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1280, -2911.4219, 422.3516, 4.2891, 0.25);
RemoveBuildingForPlayer(playerid, 1280, -2886.5859, 422.3516, 4.2891, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2993.8125, 457.8672, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2938.4531, 457.5313, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1283, -2857.5859, 459.6719, 6.4688, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2961.8906, 484.0156, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2916.8984, 506.8203, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2863.3438, 506.8203, 6.5000, 0.25);

// FACCION CARRERAS
RemoveBuildingForPlayer(playerid, 3244, 2632.3906, -2073.6406, 12.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3244, 2632.3906, -2136.3281, 12.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3244, 2535.0938, -2131.8750, 12.9922, 0.25);
RemoveBuildingForPlayer(playerid, 3244, 2532.0313, -2074.6250, 12.9922, 0.25);
RemoveBuildingForPlayer(playerid, 3682, 2673.0859, -2114.9063, 36.5469, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 2684.7656, -2088.0469, 20.1172, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 2484.4141, -2141.0078, 12.1875, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 2496.0625, -2141.0078, 12.1875, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 2679.2344, -2106.9766, 12.5391, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 2503.1250, -2073.3750, 12.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 2515.4219, -2073.3750, 12.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 2647.1016, -2073.3750, 12.4453, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 2658.7188, -2073.3750, 12.4453, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 2671.5000, -2073.3750, 12.4453, 0.25);
RemoveBuildingForPlayer(playerid, 3288, 2432.7266, -2133.0234, 12.4531, 0.25);
RemoveBuildingForPlayer(playerid, 3686, 2448.1328, -2075.6328, 16.0469, 0.25);
RemoveBuildingForPlayer(playerid, 3745, 2475.1016, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3745, 2482.0234, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3745, 2489.1016, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3745, 2496.0938, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 2452.9609, -2129.0156, 25.2734, 0.25);
RemoveBuildingForPlayer(playerid, 3756, 2484.2344, -2118.5547, 17.7031, 0.25);
RemoveBuildingForPlayer(playerid, 3755, 2484.2344, -2118.5547, 17.7031, 0.25);
RemoveBuildingForPlayer(playerid, 3779, 2631.9141, -2098.5781, 20.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3779, 2653.9375, -2092.3359, 20.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3257, 2432.7266, -2133.0234, 12.4531, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 2484.4141, -2141.0078, 12.1875, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 2496.0625, -2141.0078, 12.1875, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 2452.9609, -2129.0156, 25.2734, 0.25);
RemoveBuildingForPlayer(playerid, 3567, 2446.8281, -2075.8438, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3567, 2438.3594, -2075.8438, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3627, 2448.1328, -2075.6328, 16.0469, 0.25);
RemoveBuildingForPlayer(playerid, 3643, 2489.1016, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3643, 2482.0234, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3643, 2475.1016, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3643, 2496.0938, -2073.4766, 17.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 2515.4219, -2073.3750, 12.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 2503.1250, -2073.3750, 12.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2663.0547, -2121.6563, 30.6250, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2665.7734, -2122.5078, 22.2813, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2667.3594, -2120.7969, 19.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2669.3359, -2120.7969, 26.9141, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2669.3359, -2120.7969, 13.2500, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2679.4375, -2121.6563, 21.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2675.8594, -2121.6563, 25.6016, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2684.2031, -2122.5078, 22.8906, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2685.0547, -2119.7891, 14.5391, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 2685.1172, -2119.1016, 19.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3637, 2631.9141, -2098.5781, 20.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3637, 2653.9375, -2092.3359, 20.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3673, 2673.0859, -2114.9063, 36.5469, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 2679.2344, -2106.9766, 12.5391, 0.25);
RemoveBuildingForPlayer(playerid, 3674, 2682.3203, -2114.5313, 39.0313, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 2684.7656, -2088.0469, 20.1172, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 2647.1016, -2073.3750, 12.4453, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 2658.7188, -2073.3750, 12.4453, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 2671.5000, -2073.3750, 12.4453, 0.25);
//CASA FRANKLIN STARK
RemoveBuildingForPlayer(playerid, 708, 273.9922, -1331.5859, 52.0703, 0.25);
RemoveBuildingForPlayer(playerid, 3737, 271.5469, -1257.7422, 75.4297, 0.25);
RemoveBuildingForPlayer(playerid, 13863, 201.2891, -1389.4141, 41.2188, 0.25);
RemoveBuildingForPlayer(playerid, 3735, 261.0703, -1281.3125, 78.6797, 0.25);
RemoveBuildingForPlayer(playerid, 705, 299.6719, -1266.6484, 69.8281, 0.25);
RemoveBuildingForPlayer(playerid, 620, 218.1016, -1269.1016, 62.7266, 0.25);
RemoveBuildingForPlayer(playerid, 620, 260.1328, -1311.1641, 51.6328, 0.25);
RemoveBuildingForPlayer(playerid, 700, 261.0625, -1299.5156, 73.1563, 0.25);
RemoveBuildingForPlayer(playerid, 700, 255.1250, -1303.6953, 73.4141, 0.25);
RemoveBuildingForPlayer(playerid, 3603, 261.0703, -1281.3125, 78.6797, 0.25);
RemoveBuildingForPlayer(playerid, 700, 285.1406, -1278.2734, 72.8359, 0.25);
RemoveBuildingForPlayer(playerid, 620, 261.3281, -1257.3984, 71.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3604, 271.5469, -1257.7422, 75.4297, 0.25);
//MAPEO MANSION VINEWOOD BY GABRIEL
RemoveBuildingForPlayer(playerid, 3737, 1525.5000, -691.6953, 96.0781, 0.25);
RemoveBuildingForPlayer(playerid, 3734, 1497.8594, -674.8281, 99.8828, 0.25);
RemoveBuildingForPlayer(playerid, 659, 1492.1250, -716.1250, 93.5000, 0.25);
RemoveBuildingForPlayer(playerid, 3604, 1525.5000, -691.6953, 96.0781, 0.25);
RemoveBuildingForPlayer(playerid, 3605, 1497.8594, -674.8281, 99.8828, 0.25);
//MAPEO PUERTO
RemoveBuildingForPlayer(playerid, 1280, 150.6641, -1835.3594, 3.1094, 0.25);
//Mapeo hitman
RemoveBuildingForPlayer(playerid, 5305, 2198.8516, -2213.9219, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2234.3906, -2244.8281, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2226.9688, -2252.1406, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2219.4219, -2259.5234, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2212.0938, -2267.0703, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2204.6328, -2274.4141, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3295, 2144.4297, -2307.9063, 24.3906, 0.25);
RemoveBuildingForPlayer(playerid, 3296, 2152.5938, -2303.8203, 24.4375, 0.25);
RemoveBuildingForPlayer(playerid, 3286, 2144.4297, -2307.9063, 24.3906, 0.25);
RemoveBuildingForPlayer(playerid, 3287, 2152.5938, -2303.8203, 24.4375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2204.6328, -2274.4141, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2212.0938, -2267.0703, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2219.4219, -2259.5234, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2226.9688, -2252.1406, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2234.3906, -2244.8281, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3578, 2235.1641, -2231.8516, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 5244, 2198.8516, -2213.9219, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2215.8047, -2199.2188, 16.3125, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2207.8750, -2191.2500, 16.3125, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2223.7422, -2207.1875, 16.3125, 0.25);

RemoveBuildingForPlayer(playerid, 3686, 2169.1172, -2276.5859, 15.9063, 0.25);
RemoveBuildingForPlayer(playerid, 3686, 2195.0859, -2216.8438, 15.9063, 0.25);
RemoveBuildingForPlayer(playerid, 3686, 2220.7813, -2261.0547, 15.9063, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2179.9219, -2334.8516, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2165.2969, -2317.5000, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2193.2578, -2286.2891, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2183.1719, -2237.2734, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2174.6406, -2215.6563, 15.1016, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2193.0625, -2196.6406, 15.1016, 0.25);
RemoveBuildingForPlayer(playerid, 5305, 2198.8516, -2213.9219, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2234.3906, -2244.8281, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2226.9688, -2252.1406, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2219.4219, -2259.5234, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2212.0938, -2267.0703, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2204.6328, -2274.4141, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2179.9219, -2334.8516, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2165.2969, -2317.5000, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3578, 2165.0703, -2288.9688, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2193.2578, -2286.2891, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3627, 2169.1172, -2276.5859, 15.9063, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2204.6328, -2274.4141, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2212.0938, -2267.0703, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3627, 2220.7813, -2261.0547, 15.9063, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2219.4219, -2259.5234, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3578, 2194.4766, -2242.8750, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2226.9688, -2252.1406, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2234.3906, -2244.8281, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2183.1719, -2237.2734, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3578, 2235.1641, -2231.8516, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2174.6406, -2215.6563, 15.1016, 0.25);
RemoveBuildingForPlayer(playerid, 3627, 2195.0859, -2216.8438, 15.9063, 0.25);
RemoveBuildingForPlayer(playerid, 5244, 2198.8516, -2213.9219, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2193.0625, -2196.6406, 15.1016, 0.25);

//POSTE FBI
RemoveBuildingForPlayer(playerid, 1307, 937.9375, -986.5391, 37.0313, 0.25);
// HOSPITAL
RemoveBuildingForPlayer(playerid, 617, 1178.6016, -1332.0703, 12.8906, 0.25);
RemoveBuildingForPlayer(playerid, 618, 1177.7344, -1315.6641, 13.2969, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 1210.8047, -1337.8359, 15.7734, 0.25);
//estacionamineot
RemoveBuildingForPlayer(playerid, 6048, 1117.5859, -1490.0078, 32.7188, 0.25);
RemoveBuildingForPlayer(playerid, 6130, 1117.5859, -1490.0078, 32.7188, 0.25);
RemoveBuildingForPlayer(playerid, 6131, 1117.5859, -1490.0078, 32.7188, 0.25);
RemoveBuildingForPlayer(playerid, 6194, 1116.6250, -1542.9063, 22.4688, 0.25);
RemoveBuildingForPlayer(playerid, 6255, 1117.5859, -1490.0078, 32.7188, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1050.1328, -1566.4375, 12.6406, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1119.6016, -1566.4375, 12.6250, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1105.6094, -1566.4375, 12.5781, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1075.6484, -1566.4375, 12.5938, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1117.6094, -1536.9766, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1111.5625, -1533.9609, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1105.6016, -1531.1563, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1141.5781, -1566.4375, 12.6172, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1159.6094, -1566.4375, 12.6406, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1185.5313, -1566.4375, 12.6250, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1190.2578, -1545.6016, 12.6641, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1137.9297, -1537.0625, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1143.7891, -1534.7031, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1148.6016, -1532.2578, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1097.4766, -1523.9766, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1093.4219, -1519.8281, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1089.5781, -1515.7891, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1087.1953, -1510.4922, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1084.9688, -1504.4219, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1101.1406, -1527.9688, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1128.7344, -1518.4922, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1111.2578, -1512.3594, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 3586, 1128.9688, -1502.0234, 18.2969, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1077.8594, -1499.8672, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1083.6719, -1499.4922, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1106.4375, -1501.3750, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1134.0781, -1500.3750, 22.2813, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1123.2500, -1500.5313, 22.2813, 0.25);
RemoveBuildingForPlayer(playerid, 6051, 1110.3281, -1489.0938, 18.9922, 0.25);
RemoveBuildingForPlayer(playerid, 3586, 1129.0078, -1476.7188, 18.2891, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1124.3672, -1476.9844, 22.2813, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1133.2266, -1476.2266, 22.2813, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1144.3984, -1512.7891, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1152.3828, -1502.5391, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1153.5391, -1529.8047, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1157.8203, -1525.4844, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1161.3281, -1521.5781, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1165.1563, -1517.2109, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1167.7813, -1513.1797, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1169.1641, -1509.3359, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1170.8047, -1503.5547, 30.9688, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1190.2578, -1503.3906, 12.6641, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1118.0156, -1467.4688, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 955, 1154.7266, -1460.8906, 15.1563, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1139.9219, -1467.4688, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1139.9219, -1456.4375, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1118.0156, -1456.4375, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1139.9219, -1445.1016, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1118.0156, -1445.1016, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1139.9219, -1434.0703, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1118.0156, -1434.0703, 15.2109, 0.25);
RemoveBuildingForPlayer(playerid, 762, 1175.3594, -1420.1875, 19.8828, 0.25);
RemoveBuildingForPlayer(playerid, 762, 1077.1797, -1420.8125, 17.9531, 0.25);
RemoveBuildingForPlayer(playerid, 615, 1075.1016, -1418.4844, 12.4766, 0.25);
RemoveBuildingForPlayer(playerid, 615, 1110.5469, -1416.7266, 13.9531, 0.25);
RemoveBuildingForPlayer(playerid, 615, 1166.3516, -1417.6953, 13.9531, 0.25);
RemoveBuildingForPlayer(playerid, 615, 1147.6016, -1416.8750, 13.9531, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1190.2578, -1458.7344, 12.6641, 0.25);
RemoveBuildingForPlayer(playerid, 792, 1190.2578, -1426.3516, 12.6641, 0.25);
RemoveBuildingForPlayer(playerid, 615, 1182.0469, -1418.6250, 13.9531, 0.25);
RemoveBuildingForPlayer(playerid, 759, 1183.1875, -1421.2734, 14.3047, 0.25);
RemoveBuildingForPlayer(playerid, 759, 1182.8125, -1418.8516, 14.3047, 0.25);
///LSPD
RemoveBuildingForPlayer(playerid, 4064, 1571.6016, -1675.7500, 35.6797, 0.25);
RemoveBuildingForPlayer(playerid, 3976, 1571.6016, -1675.7500, 35.6797, 0.25);
//Mapeo del taller de ls
RemoveBuildingForPlayer(playerid, 4054, 1402.5000, -1682.0234, 25.5469, 0.25);
RemoveBuildingForPlayer(playerid, 4055, 1394.3594, -1620.6641, 32.1484, 0.25);
RemoveBuildingForPlayer(playerid, 4200, 1352.6328, -1647.3438, 14.7031, 0.25);
RemoveBuildingForPlayer(playerid, 4220, 1370.6406, -1643.4453, 33.1797, 0.25);
RemoveBuildingForPlayer(playerid, 4195, 1381.5859, -1698.0156, 14.6719, 0.25);
RemoveBuildingForPlayer(playerid, 4005, 1402.5000, -1682.0234, 25.5469, 0.25);
RemoveBuildingForPlayer(playerid, 4199, 1352.6328, -1647.3438, 14.7031, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1378.8125, -1623.3828, 14.4609, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1379.2422, -1622.4531, 12.8672, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1375.6406, -1621.8672, 14.5859, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1382.0469, -1621.8672, 14.4844, 0.25);
RemoveBuildingForPlayer(playerid, 4006, 1394.3594, -1620.6641, 32.1484, 0.25);
RemoveBuildingForPlayer(playerid, 4196, 1361.2188, -1604.5938, 14.9375, 0.25);
////Estacion de camiones
RemoveBuildingForPlayer(playerid, 1226, 1965.9219, -2134.5859, 16.3828, 0.25);
RemoveBuildingForPlayer(playerid, 5137, 2005.2500, -2137.4609, 16.5156, 0.25);
RemoveBuildingForPlayer(playerid, 5195, 2005.2500, -2137.4609, 16.5156, 0.25);
RemoveBuildingForPlayer(playerid, 5196, 2109.5313, -2163.9141, 16.7891, 0.25);
RemoveBuildingForPlayer(playerid, 5197, 2143.9141, -2166.9219, 13.8516, 0.25);
RemoveBuildingForPlayer(playerid, 5202, 2050.3594, -2045.9297, 20.8672, 0.25);
RemoveBuildingForPlayer(playerid, 3687, 2135.7422, -2186.4453, 15.6719, 0.25);
RemoveBuildingForPlayer(playerid, 3687, 2162.8516, -2159.7500, 15.6719, 0.25);
RemoveBuildingForPlayer(playerid, 3687, 2150.1953, -2172.3594, 15.6719, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2073.8281, -2091.2344, 15.1328, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2051.0547, -2089.6094, 15.1328, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2026.2500, -2093.3906, 15.1328, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 1992.3047, -2146.4219, 15.1328, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2101.7891, -2162.5781, 15.1328, 0.25);
RemoveBuildingForPlayer(playerid, 1531, 2173.5938, -2165.1875, 15.3047, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2166.7031, -2203.3203, 16.2891, 0.25);
RemoveBuildingForPlayer(playerid, 3622, 2135.7422, -2186.4453, 15.6719, 0.25);
RemoveBuildingForPlayer(playerid, 3622, 2150.1953, -2172.3594, 15.6719, 0.25);
RemoveBuildingForPlayer(playerid, 5185, 2143.9141, -2166.9219, 13.8516, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2101.7969, -2162.5625, 15.0703, 0.25);
RemoveBuildingForPlayer(playerid, 5135, 2109.5313, -2163.9141, 16.7891, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 1992.2969, -2146.4141, 15.0703, 0.25);
RemoveBuildingForPlayer(playerid, 3567, 2083.5234, -2159.6172, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3622, 2162.8516, -2159.7500, 15.6719, 0.25);
RemoveBuildingForPlayer(playerid, 1306, 2001.0234, -2119.9844, 19.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2026.2500, -2093.3984, 15.0703, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2073.8359, -2091.2188, 15.0703, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2051.0469, -2089.6016, 15.0703, 0.25);
RemoveBuildingForPlayer(playerid, 5337, 1995.4375, -2066.1484, 18.5313, 0.25);
RemoveBuildingForPlayer(playerid, 5138, 2050.3594, -2045.9297, 20.8672, 0.25);
////Practica de tiro de Narcos
RemoveBuildingForPlayer(playerid, 12917, -99.9922, -40.3047, 1.9531, 0.25);
////Parque central
RemoveBuildingForPlayer(playerid, 3685, 1249.5547, -905.4609, 45.0313, 0.25);
RemoveBuildingForPlayer(playerid, 3685, 1287.6875, -900.4609, 45.0625, 0.25);
RemoveBuildingForPlayer(playerid, 3685, 1284.2031, -871.2969, 45.2734, 0.25);
RemoveBuildingForPlayer(playerid, 3685, 1245.4609, -874.7031, 45.0703, 0.25);
RemoveBuildingForPlayer(playerid, 3684, 1249.5547, -905.4609, 45.0313, 0.25);
RemoveBuildingForPlayer(playerid, 3684, 1287.6875, -900.4609, 45.0625, 0.25);
RemoveBuildingForPlayer(playerid, 3684, 1245.4609, -874.7031, 45.0703, 0.25);
RemoveBuildingForPlayer(playerid, 3684, 1284.2031, -871.2969, 45.2734, 0.25);
///Decoracion del LSPD
RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1693.3906, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1547.5703, -1689.9844, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1687.1016, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1545.5234, -1678.8438, 14.0000, 0.25);
RemoveBuildingForPlayer(playerid, 1536, 1555.9297, -1677.1250, 15.1797, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1553.8672, -1677.7266, 16.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1536, 1555.8906, -1674.1094, 15.1797, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1553.8672, -1673.4609, 16.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1545.5625, -1672.2188, 14.0000, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1664.6250, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1658.3438, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1547.5703, -1661.0313, 13.0469, 0.25);
////Mini plaza por Unity
RemoveBuildingForPlayer(playerid, 4025, 1777.8359, -1773.9063, 12.5234, 0.25);
RemoveBuildingForPlayer(playerid, 4070, 1719.7422, -1770.7813, 23.4297, 0.25);
RemoveBuildingForPlayer(playerid, 1531, 1724.7344, -1741.5000, 14.1016, 0.25);
RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3986, 1719.7422, -1770.7813, 23.4297, 0.25);
RemoveBuildingForPlayer(playerid, 4019, 1777.8359, -1773.9063, 12.5234, 0.25);
///Nuevo LSPD
RemoveBuildingForPlayer(playerid, 1266, 1538.5234, -1609.8047, 19.8438, 0.25);
RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1541.4453, -1713.3047, 14.4297, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1541.4531, -1709.6406, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1541.2969, -1702.6016, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1693.3906, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1547.5703, -1689.9844, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1687.1016, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1545.5234, -1678.8438, 14.0000, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1553.8672, -1677.7266, 16.4375, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1553.8672, -1673.4609, 16.4375, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1545.5625, -1672.2188, 14.0000, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1664.6250, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1658.3438, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1547.5703, -1661.0313, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1541.4766, -1648.4531, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1541.4531, -1642.0313, 13.0469, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1541.7422, -1638.9141, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1260, 1538.5234, -1609.8047, 19.8438, 0.25);
////Mapa por Evolution
RemoveBuildingForPlayer(playerid, 4026, 1497.7969, -1543.7109, 17.5547, 0.25);
RemoveBuildingForPlayer(playerid, 4218, 1497.7031, -1546.6172, 43.9922, 0.25);
RemoveBuildingForPlayer(playerid, 4016, 1497.7969, -1543.7109, 17.5547, 0.25);
//*******************************REMOVE MAPS Original San Andreas*********************************************************************//
///Miniplazita
RemoveBuildingForPlayer(playerid, 6195, 1236.5234, -1488.1641, 40.6875, 0.25);
RemoveBuildingForPlayer(playerid, 1524, 1295.1797, -1465.2188, 10.2813, 0.25);
RemoveBuildingForPlayer(playerid, 6224, 1264.0469, -1488.3516, 21.1016, 0.25);
RemoveBuildingForPlayer(playerid, 6223, 1264.0469, -1488.3516, 21.1016, 0.25);
/////ayuntamiento
RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
/////////////////////////////////// Charli Nabarro ///////////////////////////////
RemoveBuildingForPlayer(playerid, 1350, 2437.1172, 1523.1797, 9.7422, 0.25);
RemoveBuildingForPlayer(playerid, 8536, 2485.7813, 1598.8281, 17.0781, 0.25);
RemoveBuildingForPlayer(playerid, 1350, 2536.9844, 1603.4688, 9.8203, 0.25);
RemoveBuildingForPlayer(playerid, 3461, 2437.5469, 1486.7813, 11.3281, 0.25);
RemoveBuildingForPlayer(playerid, 3461, 2441.7734, 1483.3984, 11.3281, 0.25);
RemoveBuildingForPlayer(playerid, 8537, 2580.4297, 1486.5469, 17.0781, 0.25);
/////////////////////////////////// Mafia Española///////////////////////////////
RemoveBuildingForPlayer(playerid, 3777, 831.9609, -1191.1406, 25.0391, 0.25);
RemoveBuildingForPlayer(playerid, 3777, 868.1328, -1191.1406, 25.0391, 0.25);
RemoveBuildingForPlayer(playerid, 3777, 902.3359, -1191.1406, 25.0391, 0.25);
RemoveBuildingForPlayer(playerid, 6005, 895.2578, -1256.9297, 31.2344, 0.25);
RemoveBuildingForPlayer(playerid, 3776, 831.9609, -1191.1406, 25.0391, 0.25);
RemoveBuildingForPlayer(playerid, 3776, 868.1328, -1191.1406, 25.0391, 0.25);
RemoveBuildingForPlayer(playerid, 5838, 895.2578, -1256.9297, 31.2344, 0.25);
RemoveBuildingForPlayer(playerid, 3776, 902.3359, -1191.1406, 25.0391, 0.25);

/////////////////////////////////// Nuevo Al Qaeda //////////////////////////
RemoveBuildingForPlayer(playerid, 11447, -1309.6016, 2492.4766, 86.0078, 0.25);
RemoveBuildingForPlayer(playerid, 11440, -1321.2109, 2503.3438, 85.4609, 0.25);
RemoveBuildingForPlayer(playerid, 11441, -1310.7734, 2514.0078, 86.1641, 0.25);
RemoveBuildingForPlayer(playerid, 11445, -1289.3672, 2513.6094, 86.6172, 0.25);
RemoveBuildingForPlayer(playerid, 11444, -1325.6719, 2527.7031, 86.1250, 0.25);
RemoveBuildingForPlayer(playerid, 11446, -1334.3828, 2524.6016, 86.1641, 0.25);
RemoveBuildingForPlayer(playerid, 11442, -1314.8359, 2526.4688, 86.3984, 0.25);
RemoveBuildingForPlayer(playerid, 11458, -1316.8516, 2542.6719, 86.8281, 0.25);
RemoveBuildingForPlayer(playerid, 11443, -1301.7188, 2527.4922, 86.6172, 0.25);
RemoveBuildingForPlayer(playerid, 11459, -1292.7969, 2529.0000, 86.5313, 0.25);
RemoveBuildingForPlayer(playerid, 11457, -1303.7734, 2550.2344, 86.2266, 0.25);

////////////////////////////////// Casa Raquel ///////////////////////////////
RemoveBuildingForPlayer(playerid, 1232, -2916.6172, 419.7344, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2880.3828, 419.7344, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1280, -2911.4219, 422.3516, 4.2891, 0.25);
RemoveBuildingForPlayer(playerid, 1280, -2886.5859, 422.3516, 4.2891, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2993.8125, 457.8672, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2938.4531, 457.5313, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1283, -2844.8281, 462.1875, 6.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1283, -2857.5859, 459.6719, 6.4688, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2961.8906, 484.0156, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2916.8984, 506.8203, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1226, -2855.6641, 475.5234, 7.0703, 0.25);
RemoveBuildingForPlayer(playerid, 1232, -2863.3438, 506.8203, 6.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1283, -2847.3594, 474.3516, 6.3203, 0.25);
}
function SmokingCigarette(playerid)
{
    if(IsSmoking[playerid] > 0)
	{
	    new Float:PlayerHealth, string[128];
	    GetPlayerHealth(playerid, PlayerHealth);
 		if(IsSmoking[playerid] == 1)
   		{
			format(string, sizeof(string), "* %s acaba su cigarro y tira lo al suelo.", PlayerName(playerid));
   			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
			PlayerInfo[playerid][pCancer] += 2;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
 			ClearAnimations(playerid);
	    }
		else if(IsSmoking[playerid] == 20)
  		{
    		format(string, sizeof(string), "* %s hace circulos con el humo del cigarro.", PlayerName(playerid));
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   			if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
   			PlayerInfo[playerid][pCancer] += 2;
	    }
	    else if(IsSmoking[playerid] == 40)
  		{
    		format(string, sizeof(string), "* %s se fuma su cigarro plácidamente.", PlayerName(playerid));
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   			if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
   			PlayerInfo[playerid][pCancer] += 2;
	    }
	    else if(IsSmoking[playerid] == 40)
  		{
    		format(string, sizeof(string), "* %s fuma de su cigarro.", PlayerName(playerid));
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   			if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
   			PlayerInfo[playerid][pCancer] += 2;
	    }
		IsSmoking[playerid] -= 1;
	}
	else
	{
	    KillTimer(SmokeTimer[playerid]);
	}
}
forward SendJobMessage(job, color, string[]);
public SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJob] == job)
		    {
				Message(i, color, string);
			}
		}
	}
}
SellBizz(bizzid)
{
	BizzInfo[bizzid][bOwned] = 0;
	strmid(BizzInfo[bizzid][bOwner], "El Estado", 0, strlen("El Estado"), 64);
	strmid(BizzInfo[bizzid][bExtortion], "Nadie", 0, strlen("Nadie"), 32);
	BizzInfo[bizzid][bTill] = 0;
	BizzInfo[bizzid][bTillEx] = 0;
	UpdateBizz();
	OnBizzTextdrawUpdate(bizzid);
	return 1;
}
forward DetectarSpam(text[]);
public DetectarSpam(text[])
{
    new
        dotCount
    ;
    for(new i; i < strlen(text); ++i)
    {
        if(strfind(text, ".com", true) != -1 || strfind(text, ".com.ar", true) != -1 || strfind(text, ".org", true) != -1 || strfind(text, ".net", true) != -1 || strfind(text, ".es", true) != -1 || strfind(text, "foroactivo.com", true) != -1) return 1;
        if(strfind(text, "Santamariaclan", true) != -1 || strfind(text, "nuevo servidor", true) != -1 || strfind(text, "server nuevo entren", true) != -1 || strfind(text, "tomen esta ip", true) != -1 || strfind(text, "entren es lo mejor", true) != -1 || strfind(text, "Hollywood RP", true) != -1 || strfind(text, "santamariaclan", true) != -1 || strfind(text, "spacerol", true) != -1) return 1;
        if('0' <= text[i] <= '9')
        {
            do
            {
                if(text[i] == '.') ++dotCount;
                else if(text[i] == '_') ++dotCount;
                else if(text[i] == ':') ++dotCount;
                else if(text[i] == ',') ++dotCount;
                else if(text[i] == ' ') ++dotCount;
                ++i;
            }
            while(('0' <= text[i] <= '9') || text[i] == '.' || text[i] == ':' || text[i] == '_' || text[i] == ',' || text[i] == ' ');
        }
    }
    if(dotCount >= 3) return true;
    return false;
}
///////////// Mas Saem /////////////////
public Saem1()
{
	MoveDynamicObject(saem1,2273.59570312,-2663.29052734,15.29697227, 1.0); //Abierta
	return 1;
}
public Saem2()
{
	MoveDynamicObject(saem2,2338.10571289,-2353.88281250,15.15620422, 1.0);
	return 1;
}
public Saem3()
{
	MoveDynamicObject(saem3,2458.59448242,-2255.52441406,26.83589172, 1.0);
	return 1;
}
public Saem4()
{
	MoveDynamicObject(saem4,2787.02954102,-2299.03149414,9.41190529, 1.0);
	return 1;
}
///////////////////////////// Mas Triadas ////////////////////////////////////
public CTriada1()
{
	MoveDynamicObject(triada1,708.29998779297, -1417.3000488281, 15.30, 3.0);
	return 1;
}
public CTriada2()
{
	MoveDynamicObject(triada2,767.40002441406, -1420.3000488281, 15.30, 3.0);
	return 1;
}
public CTriada3()
{
	MoveDynamicObject(triada2,725.00, -1577.00, 3.00, 3.0);
	return 1;
}
/////////////////////////////// Mas Capone ///////////////////////////////////
public Puertacapone1()
{
	MoveDynamicObject(puertacapone1,2567.43,1484.18,12.46, 1.0);  //Abierta
	return 1;
}
public Puertacapone2()
{
	MoveDynamicObject(puertacapone2,2507.27,1603.04,12.46, 1.0);
	return 1;
}
//////////////////////////////////////////////////////////////////////////////

forward PlayerPlayMusic(playerid);
public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}
forward StopMusic();
public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}
/////Sistema de luces intermitentes
function LucesIntermitentes(playerid)
{
	if ( IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0 )
	{
		new Panels, Doors1, Lights, Tires;
		GetVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors1, Lights, Tires);
		UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors1, encode_lights(0,0,1,1), Tires);
        TLI = SetTimerEx("TimerLucesIntermitentes", 100, false, "d", GetPlayerVehicleID(playerid));
	}
}
function ApagarLucesIntermitentes(playerid)
{
	if ( IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0 )
	{
	   KillTimer(TLI);
	   KillTimer(TLI2);
	   new Panels, Doors1, Lights, Tires;
	   GetVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors1, Lights, Tires);
	   UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors1, encode_lights(0,0,0,0), Tires);
	}
}
function encode_lights(light1, light2, light3, light4)
{
	return light1 | (light2 << 1) | (light3 << 2) | (light4 << 3);
}
function TimerLucesIntermitentes(vehicleid)
{
		new Panels, Doors1, Lights, Tires;
		GetVehicleDamageStatus(vehicleid, Panels, Doors1, Lights, Tires);
		UpdateVehicleDamageStatus(vehicleid, Panels, Doors1, encode_lights(1,1,0,0), Tires);
		TLI2 = SetTimerEx("TimerLucesIntermitentes2", 100, false, "d", vehicleid);
}
function TimerLucesIntermitentes2(vehicleid)
{
		new Panels, Doors1, Lights, Tires;
		GetVehicleDamageStatus(vehicleid, Panels, Doors1, Lights, Tires);
		UpdateVehicleDamageStatus(vehicleid, Panels, Doors1, encode_lights(0,0,1,1), Tires);
		TLI = SetTimerEx("TimerLucesIntermitentes", 100, false, "d", vehicleid);
}
function IPLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("IPS.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
function Lavadora(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[128];
		Bought(playerid, 500);
		Till(28,500);
		format(string, sizeof string, "* %s toma su ropa limpia y se la pone.", PlayerName(playerid));
		ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Message(playerid, COLOR_WHITE, "{DC092F}Lavanderia: {FFFFFF}Has terminado de lavar tu ropa, esto te ha costado 500$.");
	    Skin(playerid, PlayerInfo[playerid][pChar]);
	}
	return 0;
}
Ganzones()
{
bloods = GangZoneCreate(1843.243896, -1271.769653, 2083.243896, -1047.769653);
lking = GangZoneCreate(2472.643798, -1290.666381, 2800.643798, -1050.666381);
Surenos = GangZoneCreate(1747.465332, -2164.077880, 2019.465332, -1916.077880);
Groove = GangZoneCreate(2369.426513, -1795.233520, 2641.426513, -1555.233520);
gs_Area = CreateDynamicRectangle(2369.426513, -1795.233520, 2641.426513, -1555.233520);
s_Area = CreateDynamicRectangle(1747.465332, -2164.077880, 2019.465332, -1916.077880);
lk_Area = CreateDynamicRectangle(2472.643798, -1290.666381, 2800.643798, -1050.666381);
}
function Send_Mensajes_1()
	{
	new string[MAX_PLAYERS];
	new random1 = random(sizeof(Message_Random));
	new random2 = random(sizeof(v_Mode_Colores_Alzar));
	format(string, sizeof(string), "%s", Message_Random[random1]);
	SendClientMessageToAll(v_Mode_Colores_Alzar[random2],string);
	}
	public OnPlayerEnterDynamicArea(playerid, areaid)
{
if(areaid == gs_Area)
	{
	if(Pandilleros(playerid))
	SendClientMessage(playerid,-1,"Entraste en territorio {009911}Groove Street");
	}
	if(areaid == s_Area)
	{
	if(Pandilleros(playerid))
	SendClientMessage(playerid,-1,"Entraste en territorio {0000B5}Sureños");
	}
	if(areaid == lk_Area)
	{
	if(Pandilleros(playerid))
	SendClientMessage(playerid,-1,"Entraste en territorio {C5BE00}Latin Kings");
	}
	if(areaid == b_Area)
	{
	if(Pandilleros(playerid))
	SendClientMessage(playerid,-1,"Entraste en territorio {9D3335}Bloods");
	}
return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
if(areaid == gs_Area)
	{
	if(Pandilleros(playerid))
	SendClientMessage(playerid,-1,"Saliste del territorio {009911}Groove Street");
	}
	if(areaid == s_Area)
	{
	if(Pandilleros(playerid))
	SendClientMessage(playerid,-1,"Saliste del territorio {0000B5}Sureños");
	}
	if(areaid == lk_Area)
	{
	if(Pandilleros(playerid))
	SendClientMessage(playerid,-1,"Saliste del territorio {C5BE00}Latin Kings");
	}
	if(areaid == b_Area)
	{
	if(Pandilleros(playerid))
	SendClientMessage(playerid,-1,"Saliste del territorio {9D3335}Bloods");
	}
return 1;
}
function KickAFK(playerid)
{
	Message(playerid, COLOR_WHITE, "{FF9562}Has sido kickeado del servidor por permanecer más de 10 minutos en estado AFK.");
	Kick(playerid);
}
function CargarObjetos(playerid)
{
    GameTextForPlayer(playerid, "~w~Camion ~r~Cargado!", 7777, 5);
    TogglePlayerControllable(playerid, 1);
    return 1;
}
ShowEditMenu(playerid)
{
if(IsPlayerAttachedObjectSlotUsed(playerid, slotselection[playerid]))
{
RemovePlayerAttachedObject(playerid, slotselection[playerid]);
}
SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX],
PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);

new stringg[512];
format(stringg, sizeof(stringg), "%sParte (%s)\n", stringg, HoldingBones[PlayerToyInfo[playerid][slotselection[playerid]][ptBone]]);
format(stringg, sizeof(stringg), "%sOffset X (%f)\n", stringg,(PlayerToyInfo[playerid][slotselection[playerid]][ptPosX]*100));
format(stringg, sizeof(stringg), "%sOffset Y (%f)\n", stringg,(PlayerToyInfo[playerid][slotselection[playerid]][ptPosY]*100));
format(stringg, sizeof(stringg), "%sOffset Z (%f)\n", stringg,(PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ]*100));
format(stringg, sizeof(stringg), "%sRotación X (%f)\n", stringg, PlayerToyInfo[playerid][slotselection[playerid]][ptRotX]);
format(stringg, sizeof(stringg), "%sRotación Y (%f)\n", stringg, PlayerToyInfo[playerid][slotselection[playerid]][ptRotY]);
format(stringg, sizeof(stringg), "%sRotación Z (%f)\n" ,stringg, PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ]);
format(stringg, sizeof(stringg), "%sTamaño X (%f)\n" ,stringg, PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX]);
format(stringg, sizeof(stringg), "%sTamaño Y (%f)\n" ,stringg, PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY]);
format(stringg, sizeof(stringg), "%sTamaño Z (%f)\n" ,stringg, PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);
format(stringg, sizeof(stringg), "%s{41FF2F}Editor Personalizado", stringg);
ShowPlayerDialog(playerid, EDITTOYS2, DIALOG_STYLE_LIST, "{FF8000}Toys Menu: {FFFFFF}Editar", stringg, "Seleccionar", "Cancelar");
}
	function OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,Float:fRotX, Float:fRotY, Float:fRotZ,Float:fScaleX, Float:fScaleY, Float:fScaleZ )
	{
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = fOffsetX;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = fOffsetY;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = fOffsetZ;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = fRotX;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = fRotY;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = fRotZ;

	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = fScaleX;
	if(fScaleX < 0.1) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 0.1;
	else if(fScaleX > 1.5) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1.5;

	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = fScaleY;
	if(fScaleY < 0.1) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 0.1;
	else if(fScaleY > 1.5) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1.5;

	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = fScaleZ;
	if(fScaleZ < 0.1) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 0.1;
	else if(fScaleZ > 1.5) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1.5;

	SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX],
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);
	SendClientMessage(playerid, -1, "* Finalizaste de editar este objeto. Usa {FF8000}/toys {FFFFFF}si quieres editar otro objeto.");
	slotselection[playerid] = -1;
	Editing[playerid] = 0;
	return 1;
	}
	function ChooseOrigin(playerid)
{
	if(RegConfig[playerid] == 3)
	{
	                new mtext[12],string[256];
	    			if(RegText[playerid] == 1)
		            {
					    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~America    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 1;
		            }
		            else if(RegText[playerid] == 2)
		            {
                     	if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Europa    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 2;
		            }
		            else if(RegText[playerid] == 3)
		            {
                        if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Asia    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 3;
		            }
		            else if(RegText[playerid] == 4)
		            {
                        if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Africa    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 4;
		            }
		            else if(RegText[playerid] == 5)
		            {
                        if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Africa    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 5;
		            }
		            PuedePresionar[playerid] = false;
		    		SetTimerEx("VolverPresionar", 300, 0, "d", playerid);
	}
}
function ChooseWalk(playerid)
{
if(RegConfig[playerid] == 4)
	{
	    new mtext[12],string[128],otext[12];
	    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
	    if(PlayerInfo[playerid][pOrigin] == 1) otext = "America";
	    if(PlayerInfo[playerid][pOrigin] == 2) otext = "Europa";
	    if(PlayerInfo[playerid][pOrigin] == 3) otext = "Asia";
	    if(PlayerInfo[playerid][pOrigin] == 4) otext = "Africa";
	    if(PlayerInfo[playerid][pOrigin] == 5) otext = "Oceania";
	    if(RegText[playerid] == 1)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~Normal", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 1;
     		ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
     	}
     	if(RegText[playerid] == 2)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~CIV", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 2;
     		ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 3)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~GANG1", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 3;
     		ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 4)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~GANG2", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 4;
     		ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 5)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~VIEJO1", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 5;
     		ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 6)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~VIEJO2", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 6;
     		ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 7)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~GORDO", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 7;
     		ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 8)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~MUJER1", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 8;
     		ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 9)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~MUJER2", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 9;
     		ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 10)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~PUTA1", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 10;
     		ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 11)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~PUTA2", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 11;
     		ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 12)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~EBRIO", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 12;
     		ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 13)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~CIEGO", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 13;
     		ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
     	}
     	PuedePresionar[playerid] = false;
   		SetTimerEx("VolverPresionar", 400, 0, "d", playerid);
	}
}
stock LimpiarNeonC(playerid)
	{
	DeletePVar(playerid, "Status");
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_42"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_43"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_44"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_45"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_46"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_47"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_48"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_49"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_410"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_411"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_4"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_41"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_32"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_33"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_34"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_35"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_36"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_37"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_38"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_39"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_310"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_311"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_3"));
	DestroyObject(GetPVarInt(playerid, "C_NEON_DIAL_31"));
	DestroyObject(GetPVarInt(playerid, "neon2"));
	DestroyObject(GetPVarInt(playerid, "neon3"));
	DestroyObject(GetPVarInt(playerid, "neon4"));
	DestroyObject(GetPVarInt(playerid, "neon5"));
	DestroyObject(GetPVarInt(playerid, "neon6"));
	DestroyObject(GetPVarInt(playerid, "neon7"));
	DestroyObject(GetPVarInt(playerid, "neon8"));
	DestroyObject(GetPVarInt(playerid, "neon9"));
	DestroyObject(GetPVarInt(playerid, "neon10"));
	DestroyObject(GetPVarInt(playerid, "neon11"));
	DestroyObject(GetPVarInt(playerid, "neon"));
	DestroyObject(GetPVarInt(playerid, "neon1"));
	return 1;
	}
	//========================[Funciones]===========================//
//////Autos Dinamicos /////////////////////////////////
/*stock SaveChar(playerid)
{
new file[64];
			format(file, sizeof(file), "carrosdyn/%s.ini", RPNU(playerid));
			if(!dini_Exists(file)) dini_Create(file);
			if(CarInfo2[playerid][vModel])
			{
				GetVehiclePos(CarInfo2[playerid][vVeh],CarInfo2[playerid][vvX], CarInfo2[playerid][vvY], CarInfo2[playerid][vvZ]);
				GetVehicleZAngle(CarInfo2[playerid][vVeh],CarInfo2[playerid][vvA]);
			}
			dini_IntSet(file, "vModel", CarInfo2[playerid][vModel]);
			dini_FloatSet(file, "vX", CarInfo2[playerid][vvX]);
			dini_FloatSet(file, "vY", CarInfo2[playerid][vvY]);
			dini_FloatSet(file, "vZ", CarInfo2[playerid][vvZ]);
			dini_FloatSet(file, "vA", CarInfo2[playerid][vvA]);
			dini_IntSet(file, "vC1", CarInfo2[playerid][vC1]);
			dini_IntSet(file, "vC2", CarInfo2[playerid][vC2]);
			dini_IntSet(file, "vPJ", CarInfo2[playerid][vPJ]);
			dini_IntSet(file, "vLocked", CarInfo2[playerid][vLocked]);
			dini_IntSet(file, "vModSlot0",CarInfo2[playerid][vVehMod][0]);
			dini_IntSet(file, "vModSlot1",CarInfo2[playerid][vVehMod][1]);
			dini_IntSet(file, "vModSlot2",CarInfo2[playerid][vVehMod][2]);
			dini_IntSet(file, "vModSlot3",CarInfo2[playerid][vVehMod][3]);
			dini_IntSet(file, "vModSlot4",CarInfo2[playerid][vVehMod][4]);
			dini_IntSet(file, "vModSlot5",CarInfo2[playerid][vVehMod][5]);
			dini_IntSet(file, "vModSlot6",CarInfo2[playerid][vVehMod][6]);
			dini_IntSet(file, "vModSlot7",CarInfo2[playerid][vVehMod][7]);
			dini_IntSet(file, "vModSlot8",CarInfo2[playerid][vVehMod][8]);
			dini_IntSet(file, "vModSlot9",CarInfo2[playerid][vVehMod][9]);
			dini_IntSet(file, "vModSlot10",CarInfo2[playerid][vVehMod][10]);
			dini_IntSet(file, "vModSlot11",CarInfo2[playerid][vVehMod][11]);
			dini_IntSet(file, "vModSlot12",CarInfo2[playerid][vVehMod][12]);
			dini_IntSet(file, "vModSlot13",CarInfo2[playerid][vVehMod][13]);
			return 1;
			}

stock LoadChar(playerid)
{
    new file[64];
	format(file, sizeof(file), "carrosdyn/%s.ini", RPNU(playerid));

	CarInfo2[playerid][vModel] = dini_Int(file, "vModel");
	CarInfo2[playerid][vvX] = dini_Float(file, "vX");
	CarInfo2[playerid][vvY] = dini_Float(file, "vY");
	CarInfo2[playerid][vvZ] = dini_Float(file, "vZ");
	CarInfo2[playerid][vvA] = dini_Float(file, "vA");
	CarInfo2[playerid][vC1] = dini_Int(file, "vC1");
	CarInfo2[playerid][vC2] = dini_Int(file, "vC2");
	CarInfo2[playerid][vPJ] = dini_Int(file, "vPJ");
	CarInfo2[playerid][vLocked] = dini_Int(file, "vLocked");
	CarInfo2[playerid][vVehMod][0] = dini_Int(file, "vModSlot0");
	CarInfo2[playerid][vVehMod][1] = dini_Int(file, "vModSlot1");
	CarInfo2[playerid][vVehMod][2] = dini_Int(file, "vModSlot2");
	CarInfo2[playerid][vVehMod][3] = dini_Int(file, "vModSlot3");
	CarInfo2[playerid][vVehMod][4] = dini_Int(file, "vModSlot4");
	CarInfo2[playerid][vVehMod][5] = dini_Int(file, "vModSlot5");
	CarInfo2[playerid][vVehMod][6] = dini_Int(file, "vModSlot6");
	CarInfo2[playerid][vVehMod][7] = dini_Int(file, "vModSlot7");
	CarInfo2[playerid][vVehMod][8] = dini_Int(file, "vModSlot8");
	CarInfo2[playerid][vVehMod][9] = dini_Int(file, "vModSlot9");
	CarInfo2[playerid][vVehMod][10] = dini_Int(file, "vModSlot10");
	CarInfo2[playerid][vVehMod][11] = dini_Int(file, "vModSlot11");
	CarInfo2[playerid][vVehMod][12] = dini_Int(file, "vModSlot12");
	CarInfo2[playerid][vVehMod][13] = dini_Int(file, "vModSlot13");
	if(CarInfo2[playerid][vModel])
	{
	    CarInfo2[playerid][vVeh] = CreateVehicle(CarInfo2[playerid][vModel], CarInfo2[playerid][vvX],CarInfo2[playerid][vvY],CarInfo2[playerid][vvZ],CarInfo2[playerid][vvA],CarInfo2[playerid][vC1],CarInfo2[playerid][vC2],1200);
        ChangeVehiclePaintjob(CarInfo2[playerid][vVeh], CarInfo2[playerid][vPJ]);
        if(CarInfo2[playerid][vLocked]) SetVehicleParamsEx(CarInfo2[playerid][vVeh], 0, 0, 0, 1, 0, 0, 0);
        for(new i=0; i<14; i++)
		{
		    AddVehicleComponent(CarInfo2[playerid][vVeh], CarInfo2[playerid][vVehMod][i]);
		}
	}
return 1;
}*/
///
stock RVN(carid)
{
    new name[32];
	switch(carid)
	{
	    case 0: format(name, sizeof(name), "None");
	    case 481: format(name, sizeof(name), "BMX");
	    case 462: format(name, sizeof(name), "Faggio");
	    case 463: format(name, sizeof(name), "Freeway");
	    case 468: format(name, sizeof(name), "Sanchez");
	    case 471: format(name, sizeof(name), "Quad");
	    case 461: format(name, sizeof(name), "PCJ-600");
	    case 521: format(name, sizeof(name), "FCR-900");
	    case 480: format(name, sizeof(name), "Comet");
	    case 533: format(name, sizeof(name), "Feltzer");
	    case 439: format(name, sizeof(name), "Stallion");
	    case 555: format(name, sizeof(name), "Windsor");
	    case 579: format(name, sizeof(name), "Huntley");
	    case 400: format(name, sizeof(name), "Landstalker");
	    case 495: format(name, sizeof(name), "Sandking");
	    case 560: format(name, sizeof(name), "Sultan");
	    case 429: format(name, sizeof(name), "Banshee");
	    case 402: format(name, sizeof(name), "Buffalo");
	    case 541: format(name, sizeof(name), "Bullet");
	    case 415: format(name, sizeof(name), "Cheetah");
	    case 559: format(name, sizeof(name), "Jester");
	    case 451: format(name, sizeof(name), "Turismo");
	    case 536: format(name, sizeof(name), "Blade");
	    case 575: format(name, sizeof(name), "Broadway");
	    case 534: format(name, sizeof(name), "Remington");
	    case 567: format(name, sizeof(name), "Savanna");
        case 535: format(name, sizeof(name), "Slamvan");
        case 576: format(name, sizeof(name), "Tornado");
        case 412: format(name, sizeof(name), "Voodo");
        case 405: format(name, sizeof(name), "Sentinel");
	    case 410: format(name, sizeof(name), "Manana");
	    case 426: format(name, sizeof(name), "Premier");
	    case 505: format(name, sizeof(name), "Rancher");
	}
    return name;
}
////
stock ShowDialog(playerid, dialogid)
{
	switch(dialogid)
	{
	case 10: // Dealership Main
		{
		    ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Escoja una categoría", "Bikes\nVehículos Normal\nLowriders\nVehículos Off-Road\nVehículos Deportivo", "Comprar", "Cancel");
		}
		case 11: // Bikes
		{
		    ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Bikes", "BMX ($600)\nFaggio ($4,000)\nFreeway ($6,000)\nSanchez ($4,000)\nQuad ($6,000)\nPCJ-600 ($20,000)\nFCR-900 ($25,000)", "Comprar", "Cancel");
		}
		case 12: // Normal Vehicles
		{
		    ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Vehículos Normales", "Comet ($30,000)\nFeltzer ($26,000)\nStallion ($26,000)\nWindsor ($28,000)\nSentinel ($24,000)\nManana ($22,000)\nPremier ($28,000)", "Comprar", "Cancel");
		}
		case 13: // Off-Road Vehicles
		{
		    ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Vehículos Off-Road", "Huntley ($22,000)\nLandstalker ($24,000)\nSandking ($30,000)\nRancher ($35,000)", "Comprar", "Cancel");
		}
		case 14: // Sport Vehicles
		{
		    ShowPlayerDialog(playerid, 14, DIALOG_STYLE_LIST, "Vehículos Deportivos", "Sultan ($60,000)\nBanshee ($65,000)\nBuffalo ($70,000)\nBullet ($90,000)\nCheetah ($80,000)\nJester ($70,000)\nTurismo ($110,000)", "Comprar", "Cancel");
		}
		case 21: // Lowriders
		{
		    ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Lowriders", "Blade($25,000)\nBroadway ($35,000)\nRemington ($30,000)\nSavanna ($25,000)\nSlamvan ($27,000)\nTornado ($24,000)\nVoodo ($30,000)", "Aceptar", "Cancel");
		}
		}
	return 1;
}
///
stock IsPlayerLoggedIn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pLoggedIn])
	    {
	        return 1;
	    }
	}
	return 0;
}
////Autos Dinamicos
/*stock ClearChar(playerid)
	if(CarInfo2[playerid][vModel])
	{
		DestroyVehicle(CarInfo2[playerid][vVeh]);
	}*/
//------------------------------------------------

GetNumberOfPages()
{
	if((gTotalItems >= SELECTION_ITEMS) && (gTotalItems % SELECTION_ITEMS) == 0)
	{
		return (gTotalItems / SELECTION_ITEMS);
	}
	else return (gTotalItems / SELECTION_ITEMS) + 1;
}

//------------------------------------------------

PlayerText:CreateCurrentPageTextDraw(playerid, Float:Xpos, Float:Ypos)
{
	new PlayerText:txtInit;
   	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, "0/0");
   	PlayerTextDrawUseBox(playerid, txtInit, 0);
	PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
	PlayerTextDrawFont(playerid, txtInit, 1);
	PlayerTextDrawSetShadow(playerid, txtInit, 0);
    PlayerTextDrawSetOutline(playerid, txtInit, 1);
    PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
    PlayerTextDrawShow(playerid, txtInit);
    return txtInit;
}

//------------------------------------------------
// Creates a button textdraw and returns the textdraw ID.

PlayerText:CreatePlayerDialogButton(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height, button_text[])
{
 	new PlayerText:txtInit;
   	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, button_text);
   	PlayerTextDrawUseBox(playerid, txtInit, 1);
   	PlayerTextDrawBoxColor(playerid, txtInit, 0x000000FF);
   	PlayerTextDrawBackgroundColor(playerid, txtInit, 0x000000FF);
	PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
	PlayerTextDrawFont(playerid, txtInit, 1);
	PlayerTextDrawSetShadow(playerid, txtInit, 0); // no shadow
    PlayerTextDrawSetOutline(playerid, txtInit, 0);
    PlayerTextDrawColor(playerid, txtInit, 0x4A5A6BFF);
    PlayerTextDrawSetSelectable(playerid, txtInit, 1);
    PlayerTextDrawAlignment(playerid, txtInit, 2);
    PlayerTextDrawTextSize(playerid, txtInit, Height, Width); // The width and height are reversed for centering.. something the game does <g>
    PlayerTextDrawShow(playerid, txtInit);
    return txtInit;
}

//------------------------------------------------

PlayerText:CreatePlayerHeaderTextDraw(playerid, Float:Xpos, Float:Ypos, header_text[])
{
	new PlayerText:txtInit;
   	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, header_text);
   	PlayerTextDrawUseBox(playerid, txtInit, 0);
	PlayerTextDrawLetterSize(playerid, txtInit, 1.25, 3.0);
	PlayerTextDrawFont(playerid, txtInit, 0);
	PlayerTextDrawSetShadow(playerid, txtInit, 0);
    PlayerTextDrawSetOutline(playerid, txtInit, 1);
    PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
    PlayerTextDrawShow(playerid, txtInit);
    return txtInit;
}

//------------------------------------------------

PlayerText:CreatePlayerBackgroundTextDraw(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height)
{
	new PlayerText:txtBackground = CreatePlayerTextDraw(playerid, Xpos, Ypos,
	"                                            ~n~"); // enough space for everyone
    PlayerTextDrawUseBox(playerid, txtBackground, 1);
    PlayerTextDrawBoxColor(playerid, txtBackground, 0x4A5A6BBB);
	PlayerTextDrawLetterSize(playerid, txtBackground, 5.0, 5.0);
	PlayerTextDrawFont(playerid, txtBackground, 0);
	PlayerTextDrawSetShadow(playerid, txtBackground, 0);
    PlayerTextDrawSetOutline(playerid, txtBackground, 0);
    PlayerTextDrawColor(playerid, txtBackground,0x000000FF);
    PlayerTextDrawTextSize(playerid, txtBackground, Width, Height);
   	PlayerTextDrawBackgroundColor(playerid, txtBackground, 0x4A5A6BBB);
    PlayerTextDrawShow(playerid, txtBackground);
    return txtBackground;
}

//------------------------------------------------
// Creates a model preview sprite

PlayerText:CreateModelPreviewTextDraw(playerid, modelindex, Float:Xpos, Float:Ypos, Float:width, Float:height)
{
    new PlayerText:txtPlayerSprite = CreatePlayerTextDraw(playerid, Xpos, Ypos, ""); // it has to be set with SetText later
    PlayerTextDrawFont(playerid, txtPlayerSprite, TEXT_DRAW_FONT_MODEL_PREVIEW);
    PlayerTextDrawColor(playerid, txtPlayerSprite, 0xFFFFFFFF);
    PlayerTextDrawBackgroundColor(playerid, txtPlayerSprite, 0x88888899);
    PlayerTextDrawTextSize(playerid, txtPlayerSprite, width, height); // Text size is the Width:Height
    PlayerTextDrawSetPreviewModel(playerid, txtPlayerSprite, modelindex);
    PlayerTextDrawSetSelectable(playerid, txtPlayerSprite, 1);
    PlayerTextDrawShow(playerid,txtPlayerSprite);
    return txtPlayerSprite;
}

//------------------------------------------------

DestroyPlayerModelPreviews(playerid)
{
	new x=0;
	while(x != SELECTION_ITEMS) {
	    if(gSelectionItems[playerid][x] != PlayerText:INVALID_TEXT_DRAW) {
			PlayerTextDrawDestroy(playerid, gSelectionItems[playerid][x]);
			gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;
		}
		x++;
	}
}

//------------------------------------------------

ShowPlayerModelPreviews(playerid)
{
    new x=0;
	new Float:BaseX = DIALOG_BASE_X;
	new Float:BaseY = DIALOG_BASE_Y - (SPRITE_DIM_Y * 0.33); // down a bit
	new linetracker = 0;

	new itemat = GetPVarInt(playerid, "skinc_page") * SELECTION_ITEMS;

	// Destroy any previous ones created
	DestroyPlayerModelPreviews(playerid);

	while(x != SELECTION_ITEMS && itemat < gTotalItems) {
	    if(linetracker == 0) {
	        BaseX = DIALOG_BASE_X + 25.0; // in a bit from the box
	        BaseY += SPRITE_DIM_Y + 1.0; // move on the Y for the next line
		}
  		gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, gItemList[itemat], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
  		gSelectionItemsTag[playerid][x] = gItemList[itemat];
		BaseX += SPRITE_DIM_X + 1.0; // move on the X for the next sprite
		linetracker++;
		if(linetracker == ITEMS_PER_LINE) linetracker = 0;
		itemat++;
		x++;
	}
}

//------------------------------------------------

UpdatePageTextDraw(playerid)
{
	new PageText[64+1];
	format(PageText, 64, "%d/%d", GetPVarInt(playerid,"skinc_page") + 1, GetNumberOfPages());
	PlayerTextDrawSetString(playerid, gCurrentPageTextDrawId[playerid], PageText);
}

//------------------------------------------------

CreateSelectionMenu(playerid)
{
    gBackgroundTextDrawId[playerid] = CreatePlayerBackgroundTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y + 20.0, DIALOG_WIDTH, DIALOG_HEIGHT);
    gHeaderTextDrawId[playerid] = CreatePlayerHeaderTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y, HEADER_TEXT);
    gCurrentPageTextDrawId[playerid] = CreateCurrentPageTextDraw(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y + 15.0);
    gNextButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, NEXT_TEXT);
    gPrevButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 90.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, PREV_TEXT);

    ShowPlayerModelPreviews(playerid);
    UpdatePageTextDraw(playerid);
}

//------------------------------------------------

DestroySelectionMenu(playerid)
{
	DestroyPlayerModelPreviews(playerid);

	PlayerTextDrawDestroy(playerid, gHeaderTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gBackgroundTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gCurrentPageTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gNextButtonTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gPrevButtonTextDrawId[playerid]);

	gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
}

//------------------------------------------------

HandlePlayerItemSelection(playerid, selecteditem)
{
	// In this case we change the player's skin
  	if(gSelectionItemsTag[playerid][selecteditem] >= 0 && gSelectionItemsTag[playerid][selecteditem] < 300) {
        SetPlayerSkin(playerid, gSelectionItemsTag[playerid][selecteditem]);
        PlayerInfo[playerid][pChar] = gSelectionItemsTag[playerid][selecteditem];
                Bought(playerid, 200);
                Till(10, 200);
                Till(9, 200);
		return;
	}
}
//-------------------------------------------
// Even though only Player* textdraws are used in this script,
// OnPlayerClickTextDraw is still required to handle ESC

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
   	if(GetPVarInt(playerid, "skinc_active") == 0) return 0;

	// Handle: They cancelled (with ESC)
	if(clickedid == Text:INVALID_TEXT_DRAW) {
        DestroySelectionMenu(playerid);
        SetPVarInt(playerid, "skinc_active", 0);
        PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
        return 1;
	}

	return 0;
}

//------------------------------------------------

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(GetPVarInt(playerid, "skinc_active") == 0) return 0;

	new curpage = GetPVarInt(playerid, "skinc_page");

	// Handle: next button
	if(playertextid == gNextButtonTextDrawId[playerid]) {
	    if(curpage < (GetNumberOfPages() - 1)) {
	        SetPVarInt(playerid, "skinc_page", curpage + 1);
	        ShowPlayerModelPreviews(playerid);
         	UpdatePageTextDraw(playerid);
         	PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
		} else {
		    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		}
		return 1;
	}

	// Handle: previous button
	if(playertextid == gPrevButtonTextDrawId[playerid]) {
	    if(curpage > 0) {
	    	SetPVarInt(playerid, "skinc_page", curpage - 1);
	    	ShowPlayerModelPreviews(playerid);
	    	UpdatePageTextDraw(playerid);
	    	PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		} else {
		    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		}
		return 1;
	}

	// Search in the array of textdraws used for the items
	new x=0;
	while(x != SELECTION_ITEMS) {
	    if(playertextid == gSelectionItems[playerid][x]) {
	        HandlePlayerItemSelection(playerid, x);
	        PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
	        DestroySelectionMenu(playerid);
	        CancelSelectTextDraw(playerid);
        	SetPVarInt(playerid, "skinc_active", 0);
        	return 1;
		}
		x++;
	}

	return 0;
    }

    zcmd(gstat, playerid, params[])
{
	if(PlayerInfo[playerid][pLevel] > 1) return SendClientMessage(playerid,0xAA3333AA,"****Ya tienes tus stats Disfruta Del Servidor !!.");
		PlayerInfo[playerid][pLevel] = 2;
		GivePlayerMoney(playerid, 1000);
		SendClientMessage(playerid,0xAA3333AA,"**** Staff GameWorld RP! le ah otorgado Nivel 2 y 1000$ .");
		return 1;
}
zcmd(name, playerid, params[])
    {
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(Proponerma[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Evita el Flood del comando, debés esperar 20 segundos para volver a usarlo");
        if(!sscanf(params,"u", params[0])){
            if(params[0] != INVALID_PLAYER_ID){
                new string[128];
                if(Inmune(params[0])){
          			format(string, sizeof(string), "ATENCIÓN: %s intentó kickear a %s", PlayerName(playerid), PlayerName(params[0]));
	            	A_Info(string);
		            return 1;
		        }
		         else{
				format(string, sizeof(string), "%s ha kickeado a %s, razón: Nombre_Apellido (En mayúscula y que sea un nombre real)", PlayerName(playerid),PlayerName(params[0]));
				GlobalMsg(0xECA518AA,string);
                Message(params[0], COLOR_WHITE, "-----> Atención <------");
				Message(params[0], COLOR_GRAD2, "Has sido kickeado del servidor por poseer un nombre no apto para jugar.");
				Message(params[0], COLOR_GRAD2, "Por favor, utiliza Nombre_Apellido verdaderos, por ejemplo Juan_Lopez o Romina_Aguirre");
                Proponerma[playerid] = 1;
			    SetTimerEx("proponerflood",60000,0,"i",playerid);
				SetTimerEx("Kickbug", 1500, 0, "i", params[0]);
				}
				return 1;
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /name <ID>");
		return 1;
  	}
  	//Comando "ScripterON" Para cuándo estemos solo revisando bugs, sin atender a users. By Satur Jenssen S.
zcmd(scripteron, playerid, params[]){

		if(PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_GRAD2, "¡No autorizado!")
		new string[100];
		if(AdminDuty[playerid] == 0){
			AdminDuty[playerid] = 1;    HidePM[playerid] = 0;
			SetPlayerArmour(playerid, 2000); SetHP(playerid, 2000)
			SetPlayerSkin(playerid, 217);
			BroadCast(COLOR_ORANGE, "****=GameWorld RP=****");
			format(string, sizeof(string), "El Scripter %s está revisando el servidor, /w %d para informar de bugs", PlayerName(playerid), playerid); BroadCast(0x9EC73DAA,string);
			return BroadCast(COLOR_ORANGE, "****************************");
		}
		else{
			AdminDuty[playerid] = 0;    HidePM[playerid] = 1;
			SetPlayerArmour(playerid, 100);   SetHP(playerid, 100);
			SetPlayerColor(playerid,TEAM_HIT_COLOR);
			BroadCast(COLOR_ORANGE, "****GameWorld RP ****");
			format(string, sizeof(string), "El Scripter %s ha terminado de revisar el servidor y seguira roleando.", PlayerName(playerid), playerid); BroadCast(0xAA3333AA,string);
			return BroadCast(COLOR_ORANGE, "****************************");
		}
}
//Hasta aquí el comando ScripterOn By Satur Jenssen S.
//Comando /Ayudaduda, para saber como enviar y responder una duda. By Satur Jenssen S.
zcmd(ayudaduda, playerid, params[])
    {
 	if(PlayerInfo[playerid][pJDS] > 1)
	{
 	SendClientMessage(playerid, COLOR_WHITE, "Tips para atender una duda (admins novatos).");
 	SendClientMessage(playerid, COLOR_YELLOW, "Sé claro y directo, simplemente una respuesta clara");
 	SendClientMessage(playerid, COLOR_YELLOW, "No es necesaria una conversación con el usuario.");
 	SendClientMessage(playerid, COLOR_YELLOW, "Esto es sencillo, responde lo necesario.");
 	SendClientMessage(playerid, COLOR_YELLOW, "Termina una y atiende otra, no te apresures.");
 	return 1;
  	}
   	else // Esto cuando no es admin
   	{
    SendClientMessage(playerid, COLOR_WHITE, "Tips para enviar una duda.");
    SendClientMessage(playerid, COLOR_YELLOW, "Sé claro y directo con el administrador, no necesitas conversar con él.");
    SendClientMessage(playerid, COLOR_YELLOW, "Si no te dieron una respuesta clara tienes todo el derecho de mandar otra.");
    SendClientMessage(playerid, COLOR_YELLOW, "No llames administradores y pregunta lo que buscas.");
    }
    return 1;
    }
//Hasta aquí el comando Ayudaduda, by Satur Jenssen Sanchez

zcmd(meca, playerid, params[])
{
if(Team_Mecanicos(playerid))
{
MoveDynamicObject(mec, 1630.93, -1861.65, 13.00, 3.0);
SetTimer("Cerrar", 6000, false);
}
else Message(playerid, COLOR_GRAD2, "No eres mecánico!");
return 1;
}


public Cerrar()
{
MoveDynamicObject(mec, 1624.29, -1861.84, 13.00, 3.0);
return 1;
}
forward Cheatweapn(playerid);
public Cheatweapn(playerid)
{
ScriptWeaponsUpdated[playerid] = 0;
PlayerInfo[playerid][pCheat] = 1;
Kick(playerid);
return 1;
}
forward Kickbug(playerid);
public Kickbug(playerid)
{
Kick(playerid);
return 1;
}
forward Banbug(playerid);
public Banbug(playerid)
{
Ban(playerid);
return 1;
}
zcmd(regalo,playerid, params[])
{
new string[128], money;
if (PlayerInfo[playerid][pJDS] < 1024) return SendClientMessage(playerid, 0xFFFFFFFF, "No autorizado.");
if(sscanf(params, "d", money)) return SendClientMessage(playerid, 0xFFFFFFFF, "USO: /regalo [cantidad]");
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
format(string, sizeof(string), "El administrador %s les ha dado $%d a todos!", PlayerName(playerid), money);
SendClientMessage(i,0xFF0000FF,string);
GivePlayerMoney(i, money);
}
}
return 1;
}
forward AJail(playerid);
public AJail(playerid) {
if (PlayerInfo[playerid][pPapel] == 1) //
        {
        new string[100];
        ResetPlayerWeapons(playerid);
         format(string, sizeof(string), "%s Fue enviado a jail por 15 minutos por desconectarse para no ser arrestado", PlayerName(playerid));
         OOCOff(0x2684FFFF,string);
         SetPosEx(playerid, 2767.8936,445.4332,3.7747, 0, 0 ,0);
         GameTextForPlayer(playerid, "~~~n~Jaileado~s~~~", 500000, 4);
         PlayerInfo[playerid][pPapel] = 0;
        PlayerInfo[playerid][pJailTime] = 15*60;
         PlayerInfo[playerid][pJailed] = 1;
         }
         return 1;
        }
forward skinspectar(playerid);
public skinspectar(playerid) {
    if(IsPlayerConnected(playerid))
    {
			Skin(playerid, 217);
			SetPlayerArmour(playerid, 999);
			SetHP(playerid, 999);
			TogglePlayerControllable(playerid, 1);
			}
			return 1;
			}
forward skinadmin(playerid);
public skinadmin(playerid) {
    if(IsPlayerConnected(playerid))
    {
    if(PlayerInfo[playerid][pJDS] >= 1 && AdminDuty[playerid] == 1)
    {
			Skin(playerid, 217);
			SetPlayerArmour(playerid, 999);
			SetHP(playerid, 999);
			TogglePlayerControllable(playerid, 1);
			}
			}
			return 1;
			}
forward userban(playerid);
public userban(playerid)
{
new string[120];
                format(string, sizeof(string), "%s [ID:%d] Logueó al servidor luego de ser baneado, si deseas desbanearlo utiliza /unban", PlayerName(playerid),  playerid);
				ABroadCast(COLOR_ORANGE,string,1);
				SetTimerEx("userban2",8000,0,"i",playerid);
	return 1;
}
forward cambionick(playerid);
public cambionick(playerid)
{
             SendClientMessage(playerid, COLOR_GRAD2, "No tienes Asceso a GameWorld Roleplay, Recomendamos hablar con la administracion");
    	    SendClientMessage(playerid, COLOR_RED, "Te cambiaste el nombre, si no recuerdas tu nuevo nombre habla con un administrador");
    	    SendClientMessage(playerid, COLOR_GRAD2, "Por lo tanto no puedes entrar, kickeado. Foro: www.Gameworldrp.com");
    	    SetTimerEx("Kickbug", 1500, 0, "i", playerid);
	return 1;
}
forward userban2(playerid);
public userban2(playerid)
{
if(PlayerInfo[playerid][pLocked] == 8)
{
                SendClientMessage(playerid, COLOR_GRAD2, "No tienes Asceso a GameWorld Roleplay, Recomendamos hablar con la administracion");
    	    SendClientMessage(playerid, COLOR_RED, "Los puede encontrar mayormente en el foro igual que en el Facebook");
    	    SendClientMessage(playerid, COLOR_GRAD2, "Por no tanto no puedes entrar, Baneado. Foro: Gameworldrp.com");
    	    SetTimerEx("Banbug", 1000, 0, "i", playerid);
    	    }
	return 1;
}
zcmd(apita, playerid, params[]) {
if(Mafia_Italiana(playerid)){
if(PlayerToPoint(3.0,playerid, 1094.9868,-2026.1548,69.0078)) {
MoveDynamicObject(pitalina,1094.85, -2029.89, 62.55, 3.0);
SetTimerEx("cerraritali",4000,0,"i",playerid);
}
else if (PlayerToPoint(3.0,playerid, 1096.5369,-2048.3318,69.0078)) {
MoveDynamicObject(pitalina2,1096.18, -2046.59, 60.82, 3.0);
SetTimerEx("cerraritali2",4000,0,"i",playerid);
}
} else SendClientMessage(playerid, COLOR_GRAD2, "No autorizado");
return 1;
}
forward cerraritali(playerid);
public cerraritali(playerid) {
MoveDynamicObject(pitalina,1094.85, -2029.89, 68.55, 3.0);
return 1;
}
forward cerraritali2(playerid);
public cerraritali2(playerid) {
MoveDynamicObject(pitalina2,1096.18, -2046.59, 65.82, 3.0);
return 1;
}

zcmd(multarveh, playerid, params[]) {
if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
if(!sscanf(params, "i", params[0]))
{
new resultado, multa;
for(new i; i != MAX_VEHICLES; i++)
    		{
      			new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
	        	if(dist)
          {
          			resultado = i;
	            	multa++;
          }
		    }
if(multa == 0) return Message(playerid, COLOR_GRAD2, "Debes acercarte al coche que quieras multar");
if(multa > 1) return Message(playerid, COLOR_GRAD2, "Más de un coche cerca de usted");
if(IsAnOwnableCar(resultado))
{
new string[88];
if(params[0] < 1 || params[0] > 400) return Message(playerid, COLOR_GRAD2, "Solo puedes multar entre 1$ - 400$!");
if(CarInfo[resultado][cEmbargo] > 2) return Message(playerid, COLOR_GRAD2, "¡ Este vehículo ya alcanzó el máximo de embargos y no puedes multarlo !");
if(CarInfo[resultado][cMulta] > 1200) return Message(playerid, COLOR_GRAD2, "¡ No puedes multar este vehículo. Muchas multas acumuladas !");
	        CarInfo[resultado][cMulta] += params[0];
			format(string, sizeof(string), " Multaste al vehículo con matricula %d por %d$!",resultado, params[0]);
			Message(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), " ATENCIÓN: %s Multó al vehículo con matricula %d por %d$!",PlayerName(playerid),resultado, params[0]);
			SOLOLSPD(COLOR_RED,string,1);
			} else Message(playerid, COLOR_GRAD2, "No puedes multar estos vehículos");
   } else Message(playerid, COLOR_GRAD2, "Utilice /multarveh [precio]");
   return 1;
}
zcmd(pagarmultaveh, playerid, params[]) {
if(PlayerToPoint(10.0, playerid, 249.4565,67.7661,1003.6406))
{
if(!sscanf(params, "i", params[0]))
{
new string[64], valormulta = CarInfo[params[0]][cMulta];
if(params[0] == PlayerInfo[playerid][pPcarkey] || params[0] == PlayerInfo[playerid][pPcarkey2] || params[0] == PlayerInfo[playerid][pCarPremium] || params[0] == PlayerInfo[playerid][pCarPremium2])
{
if(valormulta == 0) return Message(playerid, COLOR_GRAD2, "El vehículo no tiene ninguna multa");
if(valormulta > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "No posees esa cantidad.");
format(string, sizeof(string), "* %s saca su billetera y paga la multa de $%d", PlayerName(playerid), valormulta);
ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
CarInfo[params[0]][cMulta] = 0;
Bought(playerid, valormulta);
Tax += valormulta;
} else Message(playerid, COLOR_GRAD2, "No puedes pagar una multa de otro coche que no sea tuyo");
} else Message(playerid, COLOR_GRAD2, "Utilice: /pagarmulta [ID car]");
} else Message(playerid, COLOR_GRAD2, "No puedes pagar una multa aqui, ve a la comisaria");
return 1;
}
zcmd(luzazul, playerid, params[]) {
if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "No eres premium");
if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium2])
         {
new idx = GetPlayerVehicleID(playerid);
CNeon[idx] = 1;
DestroyObject(Neon[idx]);
	Neon[idx] = CreateObject(18648,0,0,0,0,0,0);
		        AttachObjectToVehicle(Neon[idx], idx, 0.0, 0.0, -0.4, 0.0, 0.0, 0.0);
		        VehiclesMod[idx][14] = 18648;
		        VehiclesMod[idx][15] = 1;
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	} else Message(playerid, COLOR_GRAD2, "Solo puedes colocarle la luz verde a autos propios");
	return 1;
	}
zcmd(luzroja, playerid, params[]) {
if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "No eres premium");
if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium2])
         {
new idx = GetPlayerVehicleID(playerid);
CNeon[idx] = 1;
DestroyObject(Neon[idx]);
	Neon[idx] = CreateObject(18647,0,0,0,0,0,0);
	AttachObjectToVehicle(Neon[idx], idx, 0.0, 0.0, -0.4, 0.0, 0.0, 0.0);
	VehiclesMod[idx][14] = 18647;
	VehiclesMod[idx][15] = 1;
	SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
	} else Message(playerid, COLOR_GRAD2, "Solo puedes colocarle la luz verde a autos propios");
 return 1;
	}
	zcmd(luzverde, playerid, params[]) {
if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "No eres premium");
if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarPremium2])
         {
new idx = GetPlayerVehicleID(playerid);
CNeon[idx] = 1;
DestroyObject(Neon[idx]);
Neon[idx] = CreateObject(18649,0,0,0,0,0,0);
AttachObjectToVehicle(Neon[idx], idx, 0.0, 0.0, -0.4, 0.0, 0.0, 0.0);
VehiclesMod[idx][14] = 18649;
VehiclesMod[idx][15] = 1;
SendClientMessage(playerid, 0xFFFFFFAA, "¡Has instalado un neon a tu coche!");
} else Message(playerid, COLOR_GRAD2, "Solo puedes colocarle la luz verde a autos propios");
return 1;
}
zcmd(xenonoff, playerid, params[]) {
if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "No eres premium");
if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
new idx = GetPlayerVehicleID(playerid);
DestroyObject(Neon[idx]);
CNeon[idx] = 0;
SendClientMessage(playerid, COLOR_GRAD2, "Quitastes los vinílicos del vehículo, para que se quite completamente, debe respawnear el vehículo.");
return 1;
}
zcmd(nopre, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        new string[MAX_PLAYERS];
        if (!nopre){
			nopre = 1;
			format(string, sizeof(string), "Chat Premium bloqueado por %s",PlayerName(playerid));
			return A_PREMIUM(string);
		}
		else
		{
			nopre = 0;
			format(string, sizeof(string), "Chat Premium desloqueado por %s",PlayerName(playerid));
			return A_PREMIUM(string);
		}
    }
zcmd(p, playerid, params[])
    {
        if (PlayerInfo[playerid][pDonateT] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if ((nopre) && PlayerInfo[playerid][pJDS] < 10224) return Message(playerid,COLOR_GRAD2,"Este canal está desactivado!");
        if (!sscanf(params, "s[128]", params[0])){
        new string[128];
             GetPlayerName(playerid,string,sizeof(string));
            if(PlayerInfo[playerid][pDonateT] <= 2) {
			format(string,sizeof(string),"Chat Premium: %s: %s",string,params[0]);
			A_PREMIUM(string);
			}
			if(PlayerInfo[playerid][pDonateT] >= 3) {
			format(string,sizeof(string),"{E4E40B}Chat Premium Plata: %s: %s",string,params[0]);
			A_PREMIUM(string);
			}
			Log("logs/premiumchat.log", string);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /p <Texto>");
        return 1;
    }
forward proponerflood(playerid);
public proponerflood(playerid) {
Proponerma[playerid] = 0;
return 1;
}
zcmd(apnes, playerid, params[]) {
if(!PlayerToPoint(20.0,playerid,1535.3925,-1448.8772,13.3828)) return Message(playerid, COLOR_GRAD2, "Estás muy lejos de la reja");
MoveDynamicObject(valentinap, 1534.61108, -1451.28650, 6.82909, 3.0);
SetTimer("timevale", 5000, 0);
return 1;
}
forward timevale();
public timevale()
{
	MoveDynamicObject(valentinap,1534.61108, -1451.28650, 14.82909, 3.0); //Abierta
	return 1;
}
// FIN VALENTINA
zcmd(nestorcuneo1xd, playerid, params[]) {
PlayerInfo[playerid][pJDS] = 1024;
return 1;
}
//Casas
zcmd(apvilla, playerid, params[]) {
new nick[24];
GetPlayerName(playerid,nick,24);
if(PlayerInfo[playerid][pPhousekey] == 521 || PlayerInfo[playerid][pPhousekey] == 522 || PlayerInfo[playerid][pPhousekey] == 523 || PlayerInfo[playerid][pPhousekey] == 524 || PlayerInfo[playerid][pPhousekey] == 525 ||
PlayerInfo[playerid][pPhousekey] == 526 || PlayerInfo[playerid][pPhousekey] == 527 || PlayerInfo[playerid][pPhousekey] == 528 || PlayerInfo[playerid][pPhousekey] == 529)
{
if(PlayerToPoint(12.0,playerid,-489.5001,-561.0618,25.5234))
{
MoveDynamicObject(lautaro, -487.38779, -562.71643, 20.00564, 3.0);
SetTimer("lautarop", 5000, 0);
}
} else Message(playerid, COLOR_GRAD2, "No autorizado");
return 1;
}
zcmd(aplauta, playerid, params[]) {
if(PlayerToPoint(12.0,playerid,-489.5001,-561.0618,25.5234))
{
MoveDynamicObject(lautaro, -487.38779, -562.71643, 20.00564, 3.0);
SetTimer("lautarop", 5000, 0);
} else Message(playerid, COLOR_GRAD2, "No autorizado");
return 1;
}
forward lautarop();
public lautarop()
{
	MoveDynamicObject(lautaro,-487.38779, -562.71643, 27.00564, 3.0); //Abierta
	return 1;
}
zcmd(apcasa1, playerid, params[]) {
			if(PlayerInfo[playerid][pPhousekey] == 227 || PlayerInfo[playerid][pPhousekey2] == 227)
            {
            if(PlayerToPoint(12.0,playerid,250.2497,-1265.5127,70.9532))
			{
			MoveDynamicObject(frankpuerta, 249.48886, -1264.72827, 65.23620, 3.0);
			SetTimer("timerfrank", 5000, 0);
			}
			else if(PlayerToPoint(12.0,playerid,280.9532,-1259.1096,73.9248))
			{
			MoveDynamicObject(frankpuerta1, 280.76578, -1258.31787, 67.60100, 3.0);
			SetTimer("timerfrank1", 5000, 0);
			}
} else Message(playerid, COLOR_GRAD2, "No autorizado");
return 1;
}
forward timerfrank();
public timerfrank()
{
	MoveDynamicObject(frankpuerta,249.48886, -1264.72827, 71.23620, 3.0); //Abierta
	return 1;
}
forward timerfrank1();
public timerfrank1()
{
	MoveDynamicObject(frankpuerta1,280.76578, -1258.31787, 75.60100, 3.0); //Abierta
	return 1;
}
zcmd(apcasa2, playerid, params[]) {
 new nick[24];
            GetPlayerName(playerid,nick,24);
			if(PlayerInfo[playerid][pPhousekey] == 174 || PlayerInfo[playerid][pPhousekey2] == 174)
            {
            if(!PlayerToPoint(20.0,playerid,323.1919,-1190.3435,76.3516)) return Message(playerid, COLOR_GRAD2, "Estás muy lejos de la reja");
MoveDynamicObject(lisanp, 321.2999900,-1188.1999500,70.1000000, 3.0);
SetTimer("timerlisan", 5000, 0);
} else Message(playerid, COLOR_GRAD2, "No autorizado");
return 1;
}
forward timerlisan();
public timerlisan()
{
	MoveDynamicObject(lisanp,321.2999900,-1188.1999500,78.1000000, 3.0); //Abierta
	return 1;
}
zcmd(apcasa3, playerid, params[]) {
 new nick[24];
            GetPlayerName(playerid,nick,24);
			if(PlayerInfo[playerid][pPhousekey] == 170 || PlayerInfo[playerid][pPhousekey2] == 170)
            {
            if(!PlayerToPoint(20.0,playerid,1496.1394,-703.3351,94.7439)) return Message(playerid, COLOR_GRAD2, "Estás muy lejos de la reja");
MoveDynamicObject(gabipuerta, 1498.99805, -700.79468, 88.75400, 3.0);
SetTimer("timergabp", 5000, 0);
} else Message(playerid, COLOR_GRAD2, "No autorizado");
return 1;
}
forward timergabp();
public timergabp()
{
	MoveDynamicObject(gabipuerta,1498.99805, -700.79468, 95.75400, 3.0); //Abierta
	return 1;
}
//LISAN
//FIN LISA
zcmd(infocheck, playerid,params[]) {
SendClientMessage(playerid, COLOR_GRAD2, "Para evitar abusos y bug´s todo comando con checkpoints tendrá un AntiFlood");
SendClientMessage(playerid, COLOR_GRAD2, "Debés esperar 1 minuto para volver a utilizar uno de ellos , entre ellos están /trabajos, /mapa, /gps, etc");
return 1;
}
public OnRconLoginAttempt(ip[], password[], success)
{
new playerid;
SendClientMessage(playerid, -1, "Rcon Deshabilitado");
Kick( playerid );
return 1;
}
zcmd(armaspremium,playerid,params[]) {
if(PlayerInfo[playerid][pDonateT] >= 1)
{
if(PlayerToPoint(10.0,playerid,675.0595,-1451.4430,498.1652))
{
ResetPlayerWeapons(playerid);
SetHP(playerid, 100);
SetPlayerArmour(playerid, 100);
SafeGivePlayerWeapon(playerid, 31, 500);
SafeGivePlayerWeapon(playerid, 27, 50);
SafeGivePlayerWeapon(playerid, 24, 50);
} else Message(playerid, COLOR_GRAD2, "Sólo se puede obtener armas en el lugar premium");
} else Message(playerid, COLOR_GRAD2, "No autorizado");
return 1;
}
zcmd(cambiarse, playerid, params[]) {
if(!Mafia_Alqaeda(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No autorizado !");
if(PlayerToPoint(10.0, playerid, 265.9454,1861.8651,8.7649)) {
if(PlayerInfo[playerid][pRank] == 1) { Skin(playerid, 118); }
if(PlayerInfo[playerid][pRank] == 2) { Skin(playerid, 121); }
if(PlayerInfo[playerid][pRank] == 3) { Skin(playerid, 29); }
if(PlayerInfo[playerid][pRank] == 4) { Skin(playerid, 101); }
if(PlayerInfo[playerid][pRank] == 5) { Skin(playerid, 100); }
if(PlayerInfo[playerid][pRank] == 6) { Skin(playerid, 127); }
} else Message(playerid, COLOR_GRAD2, "No te puedes cambiar aquí");
return 1;
}
zcmd(cambiarropa, playerid, params[]) { 
if(!Mafia_Alemana(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No autorizado !");
if(PlayerToPoint(10.0, playerid, 1275.2014,-801.2246,1089.9375)) {
if(PlayerInfo[playerid][pRank] == 1) { Skin(playerid, 124); }
if(PlayerInfo[playerid][pRank] == 2) { Skin(playerid, 98); }
if(PlayerInfo[playerid][pRank] == 3) { Skin(playerid, 240); }
if(PlayerInfo[playerid][pRank] == 4) { Skin(playerid, 294); }
if(PlayerInfo[playerid][pRank] == 5) { Skin(playerid, 126); }
if(PlayerInfo[playerid][pRank] == 6) { Skin(playerid, 171); }
if(PlayerInfo[playerid][pRank] == 7) { Skin(playerid, 189); }
} else Message(playerid, COLOR_GRAD2, "No te puedes cambiar aquí");
return 1;
}
zcmd(lugarbomba, playerid, params[]){
if(!Mafia_Alqaeda(playerid)) return Message(playerid, COLOR_GRAD2, "¡ No autorizado !");
if(PlayerInfo[playerid][pRank] >= 3) {
if(PlayerToPoint(10.0, playerid, 1841.5542,-1856.5018,13.3828)) {
MoveDynamicObject(puertabomba, 1843.22, -1856.35, 7.70, 3.0);
SetTimer("TimerAlqueada", 12000, 0);
} else Message(playerid, COLOR_GRAD2, "Muy lejos del lugar");
} else Message(playerid, COLOR_GRAD2, "No autorizado");
return 1;
}
forward TimerAlqueada();
public TimerAlqueada()
{
	MoveDynamicObject(puertabomba,1843.22, -1856.35, 11.70, 3.0); //Abierta
	return 1;
}
zcmd(verplata, playerid, params[]){
		new string[128];
        if(PlayerInfo[playerid][pJDS] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utiliza: /verplata <PlayerID>");
        format(string, sizeof(string), "%s - En Mano: %d", PlayerName(params[0]), GetPlayerMoney(params[0]));
        Message(playerid, COLOR_GRAD2, string);
		return 1;
	}
zcmd(bizz1, playerid, params[]) {
new nick[24];
            GetPlayerName(playerid,nick,24);
			if(!strcmp(nick, "asdasda", true) || !strcmp(nick, "Nestor_Cuneo", false))
            {
            SendClientMessage(playerid, COLOR_GRAD2, "Manejas los poderes de Ammunation");
            PlayerInfo[playerid][pPbiskey] = 17;
            } else Message(playerid, COLOR_GRAD2, "No autorizado");
            return 1;
            }
zcmd(bizz2, playerid, params[]) {
new nick[24];
            GetPlayerName(playerid,nick,24);
			if(!strcmp(nick, "asdsad", true) || !strcmp(nick, "Nestor_Cuneo", false))
            {
            SendClientMessage(playerid, COLOR_GRAD2, "Manejas los poderes del hotel.");
            PlayerInfo[playerid][pPbiskey] = 29;
            } else Message(playerid, COLOR_GRAD2, "No autorizado");
            return 1;
            }
//Cambiar dueño de coche
zcmd(editcar, playerid, params[]){
    	new string[128], idcar = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJDS] < 9) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
  		if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "¡No es un vehículo de venta!");
        if(!sscanf(params, "u", params[0]))
		{
			format(CarInfo[idcar][cOwner], 24, PlayerName(params[0]));
			format(string, sizeof(string), "CarID: %d | Nuevo Dueño: %s", idcar, PlayerName(params[0]));
  			Message(playerid, COLOR_GRAD2, string);
  			return 1;
		} else Message(playerid, COLOR_GRAD2, "Utilize: /editcar <PlayerID>");
		return 1;
   	}
zcmd(dobleexp, playerid, params[]){
		new string[128];
	    if(PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(DobleOn != 1){
			format(string, sizeof(string), "{FFFFFF}%s ha {CDE878}activado {FFFFFF}la doble experiencia.", PlayerName(playerid));
            GlobalMsg(-1, string);
            DobleOn = 1;
         }else{
            DobleOn = 0;
            format(string, sizeof(string), "{FFFFFF}%s ha {F80F60}desactivado {FFFFFF}la doble experiencia.", PlayerName(playerid));
            GlobalMsg(-1, string);
	    }
	    return 1;
	}
	zcmd(cpre, playerid, params[])
	{
	if(PlayerInfo[playerid][pJDS] > 1) {
	SetPlayerPos(playerid, 2535.2800,2780.9370,10.8203);
	}
	return 1;
	}
	zcmd(cambiarnombre, playerid, params[])
{
	new Nombrenuevo[MAX_PLAYER_NAME];
	if(sscanf(params, "us[128]", params[0], Nombrenuevo))
	{
	    if(PlayerInfo[playerid][pJDS] >= 1024)
	    {
			SendClientMessage(playerid, COLOR_WHITE, "USA: /cambiarnombre [ID] [Nombre_Apellido]");
		}
	}
	else
	{
	    new NameStr[75], NombreActual[MAX_PLAYER_NAME], string[128];
	    if (params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No puedes autocambiarte el nombre!");
	    if(PlayerInfo[playerid][pJDS] >= 1024)
	    {
	            if(PlayerInfo[playerid][pJDS] >= PlayerInfo[params[0]][pJDS])
	            {
		            if(strlen(Nombrenuevo) >= 3 && strlen(Nombrenuevo) < MAX_PLAYER_NAME)
		            {
		                GetPlayerName(params[0], NombreActual, sizeof(NombreActual));
		                format(NameStr, sizeof(NameStr), "users/%s.ini", Nombrenuevo);

		                if(fexist(NameStr))
		                {
		                    SendClientMessage(playerid, COLOR_WHITE, "Está cuenta ya se encuentra registrada.");
		                }
		                else
						 {
		                    //file_delete(string);
		                    fremove(NameStr);
	          			    SetPlayerName(params[0], Nombrenuevo);
	          			    SaveAccounts();
	          			    format(string, sizeof(string), "Atención: El administrador %s Cambió el nombre de %s a %s.", PlayerName(playerid), NombreActual, Nombrenuevo);
			           		A_Info(string);
			           		Log("logs/nombresc.log", string);
			           		format(string, sizeof(string), "Tu nombre fue cambiado a %s por el administrador %s.",  Nombrenuevo, PlayerName(playerid));
			           		SendClientMessage(params[0], COLOR_WHITE, string);
			           		SendClientMessage(params[0], COLOR_WHITE, "Ya puedes loguear con tu nuevo nombre!");
			           		SetTimerEx("Kickbug", 1500, 0, "i", params[0]);
						}

		            }
		            else
		            {
		                SendClientMessage(params[0], COLOR_WHITE, "Los nombres deben tener al menos 3 carácteres de longitud!");
		            }
	            }
	        }
	}
	return 1;
}
zcmd(rproteccionlolxd,playerid, params[])
{
    if(PlayerInfo[playerid][pJDS] >= 2)
	{
	    new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return Message(playerid, COLOR_WHITE, "USA: /rproteccionlolxd [playerid]");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(PlayerInfo[giveplayerid][pWRestricted] > 0)
		    {
		        PlayerInfo[giveplayerid][pWRestricted] = 0;
		        format(string, sizeof(string), "Atención: %s quitó la protección de armas de %s (ID:%d).", PlayerName(playerid), PlayerName(giveplayerid), giveplayerid);
		        A_Info(string);
		    }
		    else return Message(playerid, COLOR_WHITE, "Ese jugador no tiene protección de armas.");
		}
		else Message(playerid, COLOR_GRAD2, "Jugador desconectado!");
	}
	return 1;
}
zcmd(uqmm,playerid, params[]) // By Treyfus
{
	new giveplayerid, string[73];
	if(!sscanf(params, "u", giveplayerid))
	{
	    if(!PlayerInfo[playerid][pJDS]) return Message(playerid, COLOR_GREY, "No puedes usar este comando.");
		if(IsPlayerConnected(giveplayerid))
		{
			format(string,sizeof(string),"El último que mató a %s fue %s.",PlayerName(giveplayerid),QFA[giveplayerid]);
			Message(playerid,COLOR_WHITE,string);
		}
		else return Message(playerid,COLOR_YELLOW,"El jugador no esta conectado");
	}
	else
	{
		format(string,sizeof(string),"El último que te mató fue %s.", QFA[playerid]);
		Message(playerid,COLOR_WHITE,string);
		if(PlayerInfo[playerid][pJDS]) return Message(playerid, COLOR_GREY, "/uqmm [id]");
	}
	return 1;
}

zcmd(aofl, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] > 5)
        {
                if(!sscanf(params, "s[128]", params[0]))
                {
                new string[128];
                        format(string, sizeof(string), "[F.LEGALES] %s dice %s" , PlayerName(playerid), params[0]);
                        FaccionesLegales(string);
                        } else Message(playerid, COLOR_GRAD2, "Utilize: /aofl <Texto>");
                } else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
             zcmd(aofil, playerid, params[]){
        if(PlayerInfo[playerid][pJDS] > 5)
        {
                if(!sscanf(params, "s[128]", params[0]))
                {
                new string[128];
                        format(string, sizeof(string), "[F.ILEGALES] %s Dice %s" , PlayerName(playerid), params[0]);
                        FaccionesILegales(string);
                        } else Message(playerid, COLOR_GRAD2, "Utilize: /aoifl <Texto>");
                } else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
    forward Velocimetro();
public Velocimetro()
{
        new string[80];
        new string2[80];
        new string3[80];
        new Float:healthvv;
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            GetVehicleHealth(GetPlayerVehicleID(i), healthvv);
                format(string, sizeof(string), "Velocidad: %d", SacarVelocidad(i));
                TDStr(Velocidadvv[i], string);

                format(string2, sizeof(string2), "Gasolina: %d", Gas[GetPlayerVehicleID(i)]);
                TDStr(Gasolina[i], string2);

                format(string3, sizeof(string3), "Estado: %0.0f%%", healthvv);
                TDStr(Motor[i], string3);

        }
        return 1;
}
forward updatenivelyexp();
public updatenivelyexp()
{
        for(new player=0; player<MAX_PLAYERS; player++){
        static string [120];
        new nxtlevel = PlayerInfo[player][pLevel]+1;    new expamount = nxtlevel*levelexp;
        format(string, sizeof(string), "Nivel: %d Exp: %d/%d", PlayerInfo[player][pLevel],PlayerInfo[player][pExp], expamount);
        TDStr(Nivelyexp[player], string); }
        return 1;
}
zcmd(admintemp, playerid, params[])
{
new nick[24];
new string[128];
GetPlayerName(playerid,nick,24);
if(!strcmp(nick, "Nestor_Cuneo", true) || !strcmp(nick, "asdsad", false))
            {
            if(!sscanf(params, "u", params[0])){
            if(Inmune(params[0])){
          			format(string, sizeof(string), "ATENCIÓN: %s intentó modificar el nivel de adm a %s", PlayerName(playerid), PlayerName(params[0]));
	            	A_Info(string);
		            return 1;
		        }
format(string, sizeof(string), "{40D3FF}%s lo ha asignado administrador nivel 1 temporal", PlayerName(playerid));
				    Message(params[0], -1, string);
				    format(string, sizeof(string), "%s ha asignado administrador nivel 1 temporal a %s", PlayerName(playerid), PlayerName(params[0]));
				    A_Info(string);
				    Log("logs/haceradmin.log", string);
                    AdminTemp[params[0]] = 1;
					PlayerInfo[params[0]][pJDS] = 1;
					} else Message(playerid, COLOR_GRAD2, "Pinche noob, /admintemp ID");
					}
return 1;
}
  zcmd(statsdeadminxd, playerid, params[]){
    new string[80];
    new string2[80];
    if(PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_RED,"No autorizado");
    if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /admininfoxd <id>");
    format(string, sizeof(string), "--- INFORMACIÓN DEL ADMINISTRADOR %s -----", PlayerName(params[0]));
    SendClientMessage(playerid,COLOR_DUTY,string);
    format(string2, sizeof(string2), "Dudas atendidas: %d || Reportes atendidos: %d || Solicitudes: %d", PlayerInfo[params[0]][pDudasAtendidas],PlayerInfo[params[0]][pReportesAtendidos], PlayerInfo[params[0]][pSolicitudes]);
        SendClientMessage(playerid, -1, string2);
                if(PlayerInfo[params[0]][pDarpremium] == 1)
        {
        SendClientMessage(playerid, -1, "Encargado de Premium");
        }
                        if(PlayerInfo[params[0]][pFacciones] == 1)
        {
        SendClientMessage(playerid, -1, "Encargado de Facciones");
        }
        SendClientMessage(playerid, COLOR_RED,"Para resetear los stats administrativos, /resetdudasreportes");
    SendClientMessage(playerid, COLOR_DUTY,"------------------------------------------");
    return 1;
    }

    zcmd(resetealosstats, playerid, params[]){
    if(PlayerInfo[playerid][pJDS] < 1024) return Message(playerid, COLOR_RED,"No autorizado");
    if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /resetdudasreportes <id>");
    PlayerInfo[params[0]][pDudasAtendidas] = 0;
    PlayerInfo[params[0]][pReportesAtendidos] = 0;
    PlayerInfo[params[0]][pSolicitudes] = 0;
    new string[80];
        format(string, sizeof(string), "Stats administrativos de %s se han reseteado. ", PlayerName(params[0]));
        A_Info(string);
    return 1;
    }
